call mtr.add_suppression("Unsafe statement written to the binary log using statement format since BINLOG_FORMAT = STATEMENT");
CREATE USER IF NOT EXISTS 'root'@'127.0.0.1';
CREATE USER IF NOT EXISTS 'root'@'::1';
GRANT ALL ON *.* TO 'root'@'127.0.0.1', 'root'@'::1' WITH GRANT OPTION;
DROP USER 'root'@'::1';
DROP USER 'root'@'127.0.0.1';
call mtr.add_suppression("Unsafe statement written to the binary log using statement format since BINLOG_FORMAT = STATEMENT");
CREATE USER IF NOT EXISTS 'root'@'127.0.0.1';
CREATE USER IF NOT EXISTS 'root'@'::1';
GRANT ALL ON *.* TO 'root'@'127.0.0.1', 'root'@'::1' WITH GRANT OPTION;
SHOW GLOBAL STATUS LIKE 'Threads_connected';
SHOW /*!50002 FULL*/ TABLES;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!80000 SET SESSION information_schema_stats_expiry=0 */;
SET SESSION NET_READ_TIMEOUT= 86400, SESSION NET_WRITE_TIMEOUT= 86400;
SHOW VARIABLES LIKE 'gtid_mode';
SELECT LOGFILE_GROUP_NAME, FILE_NAME, TOTAL_EXTENTS, INITIAL_SIZE, ENGINE, EXTRA FROM INFORMATION_SCHEMA.FILES WHERE ENGINE = 'ndbcluster' AND FILE_TYPE = 'UNDO LOG' AND FILE_NAME IS NOT NULL AND LOGFILE_GROUP_NAME IS NOT NULL AND LOGFILE_GROUP_NAME IN (SELECT DISTINCT LOGFILE_GROUP_NAME FROM INFORMATION_SCHEMA.FILES WHERE ENGINE = 'ndbcluster' AND FILE_TYPE = 'DATAFILE' AND TABLESPACE_NAME IN (SELECT DISTINCT TABLESPACE_NAME FROM INFORMATION_SCHEMA.PARTITIONS WHERE TABLE_SCHEMA IN ('test'))) GROUP BY LOGFILE_GROUP_NAME, FILE_NAME, ENGINE, TOTAL_EXTENTS, INITIAL_SIZE ORDER BY LOGFILE_GROUP_NAME;
SELECT DISTINCT TABLESPACE_NAME, FILE_NAME, LOGFILE_GROUP_NAME, EXTENT_SIZE, INITIAL_SIZE, ENGINE FROM INFORMATION_SCHEMA.FILES WHERE FILE_TYPE = 'DATAFILE' AND TABLESPACE_NAME IN (SELECT DISTINCT TABLESPACE_NAME FROM INFORMATION_SCHEMA.PARTITIONS WHERE TABLE_SCHEMA IN ('test')) ORDER BY TABLESPACE_NAME, LOGFILE_GROUP_NAME;
SHOW VARIABLES LIKE 'ndbinfo\_version';
show tables;
UNLOCK TABLES;
show databases;
SELECT current_user();
SELECT user();
CREATE USER 'testuser'@'127.0.0.1' IDENTIFIED BY <secret>;
GRANT ALL ON test.* TO testuser@'127.0.0.1';
SHOW GRANTS FOR testuser@'127.0.0.1';
SELECT USER();
SELECT current_user();
SHOW PROCESSLIST;
REVOKE ALL ON test.* FROM testuser@'127.0.0.1';
RENAME USER testuser@'127.0.0.1' to testuser1@'127.0.0.1';
SET PASSWORD FOR `testuser1`@`127.0.0.1`=<secret>;
SELECT USER();
DROP USER testuser1@'127.0.0.1';
SET @nip= inet_aton('127.0.0.1');
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT INTO t1 VALUES (@nip,@nip,@nip,@nip,@nip,@nip);
SELECT inet_ntoa(c1) FROM t1;
SELECT inet_ntoa(CAST(c1 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c2) FROM t1;
SELECT inet_ntoa(CAST(c2 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c3) FROM t1;
SHOW WARNINGS;
SELECT inet_ntoa(CAST(c3 AS UNSIGNED)) FROM t1;
SHOW WARNINGS;
SELECT inet_ntoa(c4) FROM t1;
SELECT inet_ntoa(CAST(c4 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c5) FROM t1;
SELECT inet_ntoa(CAST(c5 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c6) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT @nip;
SELECT inet_ntoa(@nip);
SET @nip6= inet6_aton('127.0.0.1');
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT IGNORE INTO t1 VALUES (@nip6,@nip6,@nip6,@nip6,@nip6,@nip6);
SHOW WARNINGS;
SELECT inet6_ntoa(c1) FROM t1;
SELECT inet6_ntoa(CAST(c1 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c2) FROM t1;
SHOW WARNINGS;
SELECT inet6_ntoa(CAST(c2 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c3) FROM t1;
SELECT inet6_ntoa(CAST(c3 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c4) FROM t1;
SHOW WARNINGS;
SELECT inet6_ntoa(CAST(c4 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c5) FROM t1;
SHOW WARNINGS;
SELECT inet6_ntoa(CAST(c5 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c6) FROM t1;
SHOW WARNINGS;
SELECT inet6_ntoa(CAST(c6 AS BINARY(16))) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT inet6_ntoa(@nip6);
SHOW /*!50002 FULL*/ TABLES;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!80000 SET SESSION information_schema_stats_expiry=0 */;
SET SESSION NET_READ_TIMEOUT= 86400, SESSION NET_WRITE_TIMEOUT= 86400;
SHOW VARIABLES LIKE 'gtid_mode';
SELECT LOGFILE_GROUP_NAME, FILE_NAME, TOTAL_EXTENTS, INITIAL_SIZE, ENGINE, EXTRA FROM INFORMATION_SCHEMA.FILES WHERE ENGINE = 'ndbcluster' AND FILE_TYPE = 'UNDO LOG' AND FILE_NAME IS NOT NULL AND LOGFILE_GROUP_NAME IS NOT NULL AND LOGFILE_GROUP_NAME IN (SELECT DISTINCT LOGFILE_GROUP_NAME FROM INFORMATION_SCHEMA.FILES WHERE ENGINE = 'ndbcluster' AND FILE_TYPE = 'DATAFILE' AND TABLESPACE_NAME IN (SELECT DISTINCT TABLESPACE_NAME FROM INFORMATION_SCHEMA.PARTITIONS WHERE TABLE_SCHEMA IN ('test'))) GROUP BY LOGFILE_GROUP_NAME, FILE_NAME, ENGINE, TOTAL_EXTENTS, INITIAL_SIZE ORDER BY LOGFILE_GROUP_NAME;
SELECT DISTINCT TABLESPACE_NAME, FILE_NAME, LOGFILE_GROUP_NAME, EXTENT_SIZE, INITIAL_SIZE, ENGINE FROM INFORMATION_SCHEMA.FILES WHERE FILE_TYPE = 'DATAFILE' AND TABLESPACE_NAME IN (SELECT DISTINCT TABLESPACE_NAME FROM INFORMATION_SCHEMA.PARTITIONS WHERE TABLE_SCHEMA IN ('test')) ORDER BY TABLESPACE_NAME, LOGFILE_GROUP_NAME;
SHOW VARIABLES LIKE 'ndbinfo\_version';
show tables;
UNLOCK TABLES;
show databases;
SELECT current_user();
SELECT user();
CREATE USER 'testuser'@'0:0:0:0:0:ffff:127.0.0.1' IDENTIFIED BY <secret>;
GRANT ALL ON test.* TO testuser@'0:0:0:0:0:FFFF:127.0.0.1';
SHOW GRANTS FOR testuser@'0:0:0:0:0:FFFF:127.0.0.1';
SELECT USER();
SELECT current_user();
SHOW PROCESSLIST;
REVOKE ALL ON test.* FROM testuser@'0:0:0:0:0:FFFF:127.0.0.1';
RENAME USER testuser@'0:0:0:0:0:FFFF:127.0.0.1' to testuser1@'0:0:0:0:0:FFFF:127.0.0.1';
SET PASSWORD FOR `testuser1`@`0:0:0:0:0:ffff:127.0.0.1`=<secret>;
SELECT USER();
DROP USER testuser1@'0:0:0:0:0:FFFF:127.0.0.1';
SET @nip= inet_aton('0:0:0:0:0:FFFF:127.0.0.1');
SHOW WARNINGS;
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT INTO t1 VALUES (@nip,@nip,@nip,@nip,@nip,@nip);
SELECT inet_ntoa(c1) FROM t1;
SELECT inet_ntoa(CAST(c1 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c2) FROM t1;
SELECT inet_ntoa(CAST(c2 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c3) FROM t1;
SELECT inet_ntoa(CAST(c3 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c4) FROM t1;
SELECT inet_ntoa(CAST(c4 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c5) FROM t1;
SELECT inet_ntoa(CAST(c5 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c6) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT @nip;
SELECT inet_ntoa(@nip);
SET @nip6= inet6_aton('0:0:0:0:0:FFFF:127.0.0.1');
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT IGNORE INTO t1 VALUES (@nip6,@nip6,@nip6,@nip6,@nip6,@nip6);
SHOW WARNINGS;
SELECT inet6_ntoa(c1) FROM t1;
SELECT inet6_ntoa(CAST(c1 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c2) FROM t1;
SHOW WARNINGS;
SELECT inet6_ntoa(CAST(c2 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c3) FROM t1;
SELECT inet6_ntoa(CAST(c3 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c4) FROM t1;
SHOW WARNINGS;
SELECT inet6_ntoa(CAST(c4 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c5) FROM t1;
SHOW WARNINGS;
SELECT inet6_ntoa(CAST(c5 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c6) FROM t1;
SHOW WARNINGS;
SELECT inet6_ntoa(CAST(c6 AS BINARY(16))) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT inet6_ntoa(@nip6);
SHOW /*!50002 FULL*/ TABLES;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!80000 SET SESSION information_schema_stats_expiry=0 */;
SET SESSION NET_READ_TIMEOUT= 86400, SESSION NET_WRITE_TIMEOUT= 86400;
SHOW VARIABLES LIKE 'gtid_mode';
SELECT LOGFILE_GROUP_NAME, FILE_NAME, TOTAL_EXTENTS, INITIAL_SIZE, ENGINE, EXTRA FROM INFORMATION_SCHEMA.FILES WHERE ENGINE = 'ndbcluster' AND FILE_TYPE = 'UNDO LOG' AND FILE_NAME IS NOT NULL AND LOGFILE_GROUP_NAME IS NOT NULL AND LOGFILE_GROUP_NAME IN (SELECT DISTINCT LOGFILE_GROUP_NAME FROM INFORMATION_SCHEMA.FILES WHERE ENGINE = 'ndbcluster' AND FILE_TYPE = 'DATAFILE' AND TABLESPACE_NAME IN (SELECT DISTINCT TABLESPACE_NAME FROM INFORMATION_SCHEMA.PARTITIONS WHERE TABLE_SCHEMA IN ('test'))) GROUP BY LOGFILE_GROUP_NAME, FILE_NAME, ENGINE, TOTAL_EXTENTS, INITIAL_SIZE ORDER BY LOGFILE_GROUP_NAME;
SELECT DISTINCT TABLESPACE_NAME, FILE_NAME, LOGFILE_GROUP_NAME, EXTENT_SIZE, INITIAL_SIZE, ENGINE FROM INFORMATION_SCHEMA.FILES WHERE FILE_TYPE = 'DATAFILE' AND TABLESPACE_NAME IN (SELECT DISTINCT TABLESPACE_NAME FROM INFORMATION_SCHEMA.PARTITIONS WHERE TABLE_SCHEMA IN ('test')) ORDER BY TABLESPACE_NAME, LOGFILE_GROUP_NAME;
SHOW VARIABLES LIKE 'ndbinfo\_version';
show tables;
UNLOCK TABLES;
show databases;
SELECT current_user();
SELECT user();
CREATE USER 'testuser'@'0000:0000:0000:0000:0000:ffff:127.0.0.1' IDENTIFIED BY <secret>;
GRANT ALL ON test.* TO testuser@'0000:0000:0000:0000:0000:FFFF:127.0.0.1';
SHOW GRANTS FOR testuser@'0000:0000:0000:0000:0000:FFFF:127.0.0.1';
SELECT USER();
SELECT current_user();
SHOW PROCESSLIST;
REVOKE ALL ON test.* FROM testuser@'0000:0000:0000:0000:0000:FFFF:127.0.0.1';
RENAME USER testuser@'0000:0000:0000:0000:0000:FFFF:127.0.0.1' to testuser1@'0000:0000:0000:0000:0000:FFFF:127.0.0.1';
SET PASSWORD FOR `testuser1`@`0000:0000:0000:0000:0000:ffff:127.0.0.1`=<secret>;
SELECT USER();
DROP USER testuser1@'0000:0000:0000:0000:0000:FFFF:127.0.0.1';
SET @nip= inet_aton('0000:0000:0000:0000:0000:FFFF:127.0.0.1');
SHOW WARNINGS;
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT INTO t1 VALUES (@nip,@nip,@nip,@nip,@nip,@nip);
SELECT inet_ntoa(c1) FROM t1;
SELECT inet_ntoa(CAST(c1 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c2) FROM t1;
SELECT inet_ntoa(CAST(c2 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c3) FROM t1;
SELECT inet_ntoa(CAST(c3 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c4) FROM t1;
SELECT inet_ntoa(CAST(c4 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c5) FROM t1;
SELECT inet_ntoa(CAST(c5 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c6) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT @nip;
SELECT inet_ntoa(@nip);
SET @nip6= inet6_aton('0000:0000:0000:0000:0000:FFFF:127.0.0.1');
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT IGNORE INTO t1 VALUES (@nip6,@nip6,@nip6,@nip6,@nip6,@nip6);
SHOW WARNINGS;
SELECT inet6_ntoa(c1) FROM t1;
SELECT inet6_ntoa(CAST(c1 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c2) FROM t1;
SHOW WARNINGS;
SELECT inet6_ntoa(CAST(c2 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c3) FROM t1;
SELECT inet6_ntoa(CAST(c3 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c4) FROM t1;
SHOW WARNINGS;
SELECT inet6_ntoa(CAST(c4 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c5) FROM t1;
SHOW WARNINGS;
SELECT inet6_ntoa(CAST(c5 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c6) FROM t1;
SHOW WARNINGS;
SELECT inet6_ntoa(CAST(c6 AS BINARY(16))) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT inet6_ntoa(@nip6);
SHOW /*!50002 FULL*/ TABLES;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!80000 SET SESSION information_schema_stats_expiry=0 */;
SET SESSION NET_READ_TIMEOUT= 86400, SESSION NET_WRITE_TIMEOUT= 86400;
SHOW VARIABLES LIKE 'gtid_mode';
SELECT LOGFILE_GROUP_NAME, FILE_NAME, TOTAL_EXTENTS, INITIAL_SIZE, ENGINE, EXTRA FROM INFORMATION_SCHEMA.FILES WHERE ENGINE = 'ndbcluster' AND FILE_TYPE = 'UNDO LOG' AND FILE_NAME IS NOT NULL AND LOGFILE_GROUP_NAME IS NOT NULL AND LOGFILE_GROUP_NAME IN (SELECT DISTINCT LOGFILE_GROUP_NAME FROM INFORMATION_SCHEMA.FILES WHERE ENGINE = 'ndbcluster' AND FILE_TYPE = 'DATAFILE' AND TABLESPACE_NAME IN (SELECT DISTINCT TABLESPACE_NAME FROM INFORMATION_SCHEMA.PARTITIONS WHERE TABLE_SCHEMA IN ('test'))) GROUP BY LOGFILE_GROUP_NAME, FILE_NAME, ENGINE, TOTAL_EXTENTS, INITIAL_SIZE ORDER BY LOGFILE_GROUP_NAME;
SELECT DISTINCT TABLESPACE_NAME, FILE_NAME, LOGFILE_GROUP_NAME, EXTENT_SIZE, INITIAL_SIZE, ENGINE FROM INFORMATION_SCHEMA.FILES WHERE FILE_TYPE = 'DATAFILE' AND TABLESPACE_NAME IN (SELECT DISTINCT TABLESPACE_NAME FROM INFORMATION_SCHEMA.PARTITIONS WHERE TABLE_SCHEMA IN ('test')) ORDER BY TABLESPACE_NAME, LOGFILE_GROUP_NAME;
SHOW VARIABLES LIKE 'ndbinfo\_version';
show tables;
UNLOCK TABLES;
show databases;
SELECT current_user();
SELECT user();
CREATE USER 'testuser'@'0:0000:0000:0:0000:ffff:127.0.0.1' IDENTIFIED BY <secret>;
GRANT ALL ON test.* TO testuser@'0:0000:0000:0:0000:FFFF:127.0.0.1';
SHOW GRANTS FOR testuser@'0:0000:0000:0:0000:FFFF:127.0.0.1';
SELECT USER();
SELECT current_user();
SHOW PROCESSLIST;
REVOKE ALL ON test.* FROM testuser@'0:0000:0000:0:0000:FFFF:127.0.0.1';
RENAME USER testuser@'0:0000:0000:0:0000:FFFF:127.0.0.1' to testuser1@'0:0000:0000:0:0000:FFFF:127.0.0.1';
SET PASSWORD FOR `testuser1`@`0:0000:0000:0:0000:ffff:127.0.0.1`=<secret>;
SELECT USER();
DROP USER testuser1@'0:0000:0000:0:0000:FFFF:127.0.0.1';
SET @nip= inet_aton('0:0000:0000:0:0000:FFFF:127.0.0.1');
SHOW WARNINGS;
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT INTO t1 VALUES (@nip,@nip,@nip,@nip,@nip,@nip);
SELECT inet_ntoa(c1) FROM t1;
SELECT inet_ntoa(CAST(c1 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c2) FROM t1;
SELECT inet_ntoa(CAST(c2 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c3) FROM t1;
SELECT inet_ntoa(CAST(c3 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c4) FROM t1;
SELECT inet_ntoa(CAST(c4 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c5) FROM t1;
SELECT inet_ntoa(CAST(c5 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c6) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT @nip;
SELECT inet_ntoa(@nip);
SET @nip6= inet6_aton('0:0000:0000:0:0000:FFFF:127.0.0.1');
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT IGNORE INTO t1 VALUES (@nip6,@nip6,@nip6,@nip6,@nip6,@nip6);
SHOW WARNINGS;
SELECT inet6_ntoa(c1) FROM t1;
SELECT inet6_ntoa(CAST(c1 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c2) FROM t1;
SHOW WARNINGS;
SELECT inet6_ntoa(CAST(c2 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c3) FROM t1;
SELECT inet6_ntoa(CAST(c3 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c4) FROM t1;
SHOW WARNINGS;
SELECT inet6_ntoa(CAST(c4 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c5) FROM t1;
SHOW WARNINGS;
SELECT inet6_ntoa(CAST(c5 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c6) FROM t1;
SHOW WARNINGS;
SELECT inet6_ntoa(CAST(c6 AS BINARY(16))) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT inet6_ntoa(@nip6);
SHOW /*!50002 FULL*/ TABLES;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!80000 SET SESSION information_schema_stats_expiry=0 */;
SET SESSION NET_READ_TIMEOUT= 86400, SESSION NET_WRITE_TIMEOUT= 86400;
SHOW VARIABLES LIKE 'gtid_mode';
SELECT LOGFILE_GROUP_NAME, FILE_NAME, TOTAL_EXTENTS, INITIAL_SIZE, ENGINE, EXTRA FROM INFORMATION_SCHEMA.FILES WHERE ENGINE = 'ndbcluster' AND FILE_TYPE = 'UNDO LOG' AND FILE_NAME IS NOT NULL AND LOGFILE_GROUP_NAME IS NOT NULL AND LOGFILE_GROUP_NAME IN (SELECT DISTINCT LOGFILE_GROUP_NAME FROM INFORMATION_SCHEMA.FILES WHERE ENGINE = 'ndbcluster' AND FILE_TYPE = 'DATAFILE' AND TABLESPACE_NAME IN (SELECT DISTINCT TABLESPACE_NAME FROM INFORMATION_SCHEMA.PARTITIONS WHERE TABLE_SCHEMA IN ('test'))) GROUP BY LOGFILE_GROUP_NAME, FILE_NAME, ENGINE, TOTAL_EXTENTS, INITIAL_SIZE ORDER BY LOGFILE_GROUP_NAME;
SELECT DISTINCT TABLESPACE_NAME, FILE_NAME, LOGFILE_GROUP_NAME, EXTENT_SIZE, INITIAL_SIZE, ENGINE FROM INFORMATION_SCHEMA.FILES WHERE FILE_TYPE = 'DATAFILE' AND TABLESPACE_NAME IN (SELECT DISTINCT TABLESPACE_NAME FROM INFORMATION_SCHEMA.PARTITIONS WHERE TABLE_SCHEMA IN ('test')) ORDER BY TABLESPACE_NAME, LOGFILE_GROUP_NAME;
SHOW VARIABLES LIKE 'ndbinfo\_version';
show tables;
UNLOCK TABLES;
show databases;
SELECT current_user();
SELECT user();
CREATE USER 'testuser'@'0::0000:ffff:127.0.0.1' IDENTIFIED BY <secret>;
GRANT ALL ON test.* TO testuser@'0::0000:FFFF:127.0.0.1';
SHOW GRANTS FOR testuser@'0::0000:FFFF:127.0.0.1';
SELECT USER();
SELECT current_user();
SHOW PROCESSLIST;
REVOKE ALL ON test.* FROM testuser@'0::0000:FFFF:127.0.0.1';
RENAME USER testuser@'0::0000:FFFF:127.0.0.1' to testuser1@'0::0000:FFFF:127.0.0.1';
SET PASSWORD FOR `testuser1`@`0::0000:ffff:127.0.0.1`=<secret>;
SELECT USER();
DROP USER testuser1@'0::0000:FFFF:127.0.0.1';
SET @nip= inet_aton('0::0000:FFFF:127.0.0.1');
SHOW WARNINGS;
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT INTO t1 VALUES (@nip,@nip,@nip,@nip,@nip,@nip);
SELECT inet_ntoa(c1) FROM t1;
SELECT inet_ntoa(CAST(c1 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c2) FROM t1;
SELECT inet_ntoa(CAST(c2 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c3) FROM t1;
SELECT inet_ntoa(CAST(c3 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c4) FROM t1;
SELECT inet_ntoa(CAST(c4 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c5) FROM t1;
SELECT inet_ntoa(CAST(c5 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c6) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT @nip;
SELECT inet_ntoa(@nip);
SET @nip6= inet6_aton('0::0000:FFFF:127.0.0.1');
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT IGNORE INTO t1 VALUES (@nip6,@nip6,@nip6,@nip6,@nip6,@nip6);
SHOW WARNINGS;
SELECT inet6_ntoa(c1) FROM t1;
SELECT inet6_ntoa(CAST(c1 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c2) FROM t1;
SHOW WARNINGS;
SELECT inet6_ntoa(CAST(c2 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c3) FROM t1;
SELECT inet6_ntoa(CAST(c3 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c4) FROM t1;
SHOW WARNINGS;
SELECT inet6_ntoa(CAST(c4 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c5) FROM t1;
SHOW WARNINGS;
SELECT inet6_ntoa(CAST(c5 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c6) FROM t1;
SHOW WARNINGS;
SELECT inet6_ntoa(CAST(c6 AS BINARY(16))) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT inet6_ntoa(@nip6);
SET @nip= inet_aton('0:0:0:0:0:FFFF:127.0.0.1/96');
SHOW WARNINGS;
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT INTO t1 VALUES (@nip,@nip,@nip,@nip,@nip,@nip);
SELECT inet_ntoa(c1) FROM t1;
SELECT inet_ntoa(CAST(c1 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c2) FROM t1;
SELECT inet_ntoa(CAST(c2 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c3) FROM t1;
SELECT inet_ntoa(CAST(c3 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c4) FROM t1;
SELECT inet_ntoa(CAST(c4 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c5) FROM t1;
SELECT inet_ntoa(CAST(c5 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c6) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT @nip;
SELECT inet_ntoa(@nip);
SET @nip6= inet6_aton('0:0:0:0:0:FFFF:127.0.0.1/96');
SHOW WARNINGS;
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT IGNORE INTO t1 VALUES (@nip6,@nip6,@nip6,@nip6,@nip6,@nip6);
SELECT inet6_ntoa(c1) FROM t1;
SELECT inet6_ntoa(CAST(c1 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c2) FROM t1;
SELECT inet6_ntoa(CAST(c2 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c3) FROM t1;
SELECT inet6_ntoa(CAST(c3 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c4) FROM t1;
SELECT inet6_ntoa(CAST(c4 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c5) FROM t1;
SELECT inet6_ntoa(CAST(c5 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c6) FROM t1;
SELECT inet6_ntoa(CAST(c6 AS BINARY(16))) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT inet6_ntoa(@nip6);
SHOW /*!50002 FULL*/ TABLES;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!80000 SET SESSION information_schema_stats_expiry=0 */;
SET SESSION NET_READ_TIMEOUT= 86400, SESSION NET_WRITE_TIMEOUT= 86400;
SHOW VARIABLES LIKE 'gtid_mode';
SELECT LOGFILE_GROUP_NAME, FILE_NAME, TOTAL_EXTENTS, INITIAL_SIZE, ENGINE, EXTRA FROM INFORMATION_SCHEMA.FILES WHERE ENGINE = 'ndbcluster' AND FILE_TYPE = 'UNDO LOG' AND FILE_NAME IS NOT NULL AND LOGFILE_GROUP_NAME IS NOT NULL AND LOGFILE_GROUP_NAME IN (SELECT DISTINCT LOGFILE_GROUP_NAME FROM INFORMATION_SCHEMA.FILES WHERE ENGINE = 'ndbcluster' AND FILE_TYPE = 'DATAFILE' AND TABLESPACE_NAME IN (SELECT DISTINCT TABLESPACE_NAME FROM INFORMATION_SCHEMA.PARTITIONS WHERE TABLE_SCHEMA IN ('test'))) GROUP BY LOGFILE_GROUP_NAME, FILE_NAME, ENGINE, TOTAL_EXTENTS, INITIAL_SIZE ORDER BY LOGFILE_GROUP_NAME;
SELECT DISTINCT TABLESPACE_NAME, FILE_NAME, LOGFILE_GROUP_NAME, EXTENT_SIZE, INITIAL_SIZE, ENGINE FROM INFORMATION_SCHEMA.FILES WHERE FILE_TYPE = 'DATAFILE' AND TABLESPACE_NAME IN (SELECT DISTINCT TABLESPACE_NAME FROM INFORMATION_SCHEMA.PARTITIONS WHERE TABLE_SCHEMA IN ('test')) ORDER BY TABLESPACE_NAME, LOGFILE_GROUP_NAME;
SHOW VARIABLES LIKE 'ndbinfo\_version';
show tables;
UNLOCK TABLES;
show databases;
SELECT current_user();
SELECT user();
CREATE USER 'testuser'@'::ffff:127.0.0.1' IDENTIFIED BY <secret>;
GRANT ALL ON test.* TO testuser@'::FFFF:127.0.0.1';
SHOW GRANTS FOR testuser@'::FFFF:127.0.0.1';
SELECT USER();
SELECT current_user();
SHOW PROCESSLIST;
REVOKE ALL ON test.* FROM testuser@'::FFFF:127.0.0.1';
RENAME USER testuser@'::FFFF:127.0.0.1' to testuser1@'::FFFF:127.0.0.1';
SET PASSWORD FOR `testuser1`@`::ffff:127.0.0.1`=<secret>;
SELECT USER();
DROP USER testuser1@'::FFFF:127.0.0.1';
SET @nip= inet_aton('::FFFF:127.0.0.1/96');
SHOW WARNINGS;
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT INTO t1 VALUES (@nip,@nip,@nip,@nip,@nip,@nip);
SELECT inet_ntoa(c1) FROM t1;
SELECT inet_ntoa(CAST(c1 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c2) FROM t1;
SELECT inet_ntoa(CAST(c2 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c3) FROM t1;
SELECT inet_ntoa(CAST(c3 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c4) FROM t1;
SELECT inet_ntoa(CAST(c4 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c5) FROM t1;
SELECT inet_ntoa(CAST(c5 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c6) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT @nip;
SELECT inet_ntoa(@nip);
SET @nip6= inet6_aton('::FFFF:127.0.0.1/96');
SHOW WARNINGS;
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT IGNORE INTO t1 VALUES (@nip6,@nip6,@nip6,@nip6,@nip6,@nip6);
SELECT inet6_ntoa(c1) FROM t1;
SELECT inet6_ntoa(CAST(c1 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c2) FROM t1;
SELECT inet6_ntoa(CAST(c2 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c3) FROM t1;
SELECT inet6_ntoa(CAST(c3 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c4) FROM t1;
SELECT inet6_ntoa(CAST(c4 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c5) FROM t1;
SELECT inet6_ntoa(CAST(c5 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c6) FROM t1;
SELECT inet6_ntoa(CAST(c6 AS BINARY(16))) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT inet6_ntoa(@nip6);
DROP USER 'root'@'::1';
DROP USER 'root'@'127.0.0.1';
SHOW GLOBAL STATUS LIKE 'Threads_connected';
SELECT 1 <= 1;
SET GLOBAL log_output = "FILE";
SET GLOBAL general_log_file = "/home/stephanie/Dokumente/a/AST/AST24-SQL-dialects-comparison/temp_mysql/check-warnings.log"
/home/stephanie/mysql-server/build/runtime_output_directory/mysqld, Version: 8.0.36 (Source distribution). started with:
Tcp port: 13000  Unix socket: /home/stephanie/mysql-server/build/mysql-test/var/tmp/mysqld.1.sock
Time                 Id Command    Argument;
SET GLOBAL general_log = 'ON';
call mtr.add_suppression("Unsafe statement written to the binary log using statement format since BINLOG_FORMAT = STATEMENT");
CREATE USER IF NOT EXISTS 'root'@'127.0.0.1';
CREATE USER IF NOT EXISTS 'root'@'::1';
GRANT ALL ON *.* TO 'root'@'127.0.0.1', 'root'@'::1' WITH GRANT OPTION;
DROP USER 'root'@'::1';
DROP USER 'root'@'127.0.0.1';
call mtr.add_suppression("Unsafe statement written to the binary log using statement format since BINLOG_FORMAT = STATEMENT");
CREATE USER IF NOT EXISTS 'root'@'127.0.0.1';
CREATE USER IF NOT EXISTS 'root'@'::1';
GRANT ALL ON *.* TO 'root'@'127.0.0.1', 'root'@'::1' WITH GRANT OPTION;
SHOW GLOBAL STATUS LIKE 'Threads_connected';
SHOW /*!50002 FULL*/ TABLES;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!80000 SET SESSION information_schema_stats_expiry=0 */;
SET SESSION NET_READ_TIMEOUT= 86400, SESSION NET_WRITE_TIMEOUT= 86400;
SHOW VARIABLES LIKE 'gtid_mode';
SELECT LOGFILE_GROUP_NAME, FILE_NAME, TOTAL_EXTENTS, INITIAL_SIZE, ENGINE, EXTRA FROM INFORMATION_SCHEMA.FILES WHERE ENGINE = 'ndbcluster' AND FILE_TYPE = 'UNDO LOG' AND FILE_NAME IS NOT NULL AND LOGFILE_GROUP_NAME IS NOT NULL AND LOGFILE_GROUP_NAME IN (SELECT DISTINCT LOGFILE_GROUP_NAME FROM INFORMATION_SCHEMA.FILES WHERE ENGINE = 'ndbcluster' AND FILE_TYPE = 'DATAFILE' AND TABLESPACE_NAME IN (SELECT DISTINCT TABLESPACE_NAME FROM INFORMATION_SCHEMA.PARTITIONS WHERE TABLE_SCHEMA IN ('test'))) GROUP BY LOGFILE_GROUP_NAME, FILE_NAME, ENGINE, TOTAL_EXTENTS, INITIAL_SIZE ORDER BY LOGFILE_GROUP_NAME;
SELECT DISTINCT TABLESPACE_NAME, FILE_NAME, LOGFILE_GROUP_NAME, EXTENT_SIZE, INITIAL_SIZE, ENGINE FROM INFORMATION_SCHEMA.FILES WHERE FILE_TYPE = 'DATAFILE' AND TABLESPACE_NAME IN (SELECT DISTINCT TABLESPACE_NAME FROM INFORMATION_SCHEMA.PARTITIONS WHERE TABLE_SCHEMA IN ('test')) ORDER BY TABLESPACE_NAME, LOGFILE_GROUP_NAME;
SHOW VARIABLES LIKE 'ndbinfo\_version';
show tables;
UNLOCK TABLES;
show databases;
SELECT current_user();
SELECT user();
CREATE USER 'testuser'@'127.0.0.1' IDENTIFIED BY <secret>;
GRANT ALL ON test.* TO testuser@'127.0.0.1';
SHOW GRANTS FOR testuser@'127.0.0.1';
SELECT USER();
SELECT current_user();
SHOW PROCESSLIST;
REVOKE ALL ON test.* FROM testuser@'127.0.0.1';
RENAME USER testuser@'127.0.0.1' to testuser1@'127.0.0.1';
SET PASSWORD FOR `testuser1`@`127.0.0.1`=<secret>;
SELECT USER();
DROP USER testuser1@'127.0.0.1';
SET @nip= inet_aton('127.0.0.1');
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT INTO t1 VALUES (@nip,@nip,@nip,@nip,@nip,@nip);
SELECT inet_ntoa(c1) FROM t1;
SELECT inet_ntoa(CAST(c1 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c2) FROM t1;
SELECT inet_ntoa(CAST(c2 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c3) FROM t1;
SHOW WARNINGS;
SELECT inet_ntoa(CAST(c3 AS UNSIGNED)) FROM t1;
SHOW WARNINGS;
SELECT inet_ntoa(c4) FROM t1;
SELECT inet_ntoa(CAST(c4 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c5) FROM t1;
SELECT inet_ntoa(CAST(c5 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c6) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT @nip;
SELECT inet_ntoa(@nip);
SET @nip6= inet6_aton('127.0.0.1');
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT IGNORE INTO t1 VALUES (@nip6,@nip6,@nip6,@nip6,@nip6,@nip6);
SHOW WARNINGS;
SELECT inet6_ntoa(c1) FROM t1;
SELECT inet6_ntoa(CAST(c1 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c2) FROM t1;
SHOW WARNINGS;
SELECT inet6_ntoa(CAST(c2 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c3) FROM t1;
SELECT inet6_ntoa(CAST(c3 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c4) FROM t1;
SHOW WARNINGS;
SELECT inet6_ntoa(CAST(c4 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c5) FROM t1;
SHOW WARNINGS;
SELECT inet6_ntoa(CAST(c5 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c6) FROM t1;
SHOW WARNINGS;
SELECT inet6_ntoa(CAST(c6 AS BINARY(16))) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT inet6_ntoa(@nip6);
SHOW /*!50002 FULL*/ TABLES;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!80000 SET SESSION information_schema_stats_expiry=0 */;
SET SESSION NET_READ_TIMEOUT= 86400, SESSION NET_WRITE_TIMEOUT= 86400;
SHOW VARIABLES LIKE 'gtid_mode';
SELECT LOGFILE_GROUP_NAME, FILE_NAME, TOTAL_EXTENTS, INITIAL_SIZE, ENGINE, EXTRA FROM INFORMATION_SCHEMA.FILES WHERE ENGINE = 'ndbcluster' AND FILE_TYPE = 'UNDO LOG' AND FILE_NAME IS NOT NULL AND LOGFILE_GROUP_NAME IS NOT NULL AND LOGFILE_GROUP_NAME IN (SELECT DISTINCT LOGFILE_GROUP_NAME FROM INFORMATION_SCHEMA.FILES WHERE ENGINE = 'ndbcluster' AND FILE_TYPE = 'DATAFILE' AND TABLESPACE_NAME IN (SELECT DISTINCT TABLESPACE_NAME FROM INFORMATION_SCHEMA.PARTITIONS WHERE TABLE_SCHEMA IN ('test'))) GROUP BY LOGFILE_GROUP_NAME, FILE_NAME, ENGINE, TOTAL_EXTENTS, INITIAL_SIZE ORDER BY LOGFILE_GROUP_NAME;
SELECT DISTINCT TABLESPACE_NAME, FILE_NAME, LOGFILE_GROUP_NAME, EXTENT_SIZE, INITIAL_SIZE, ENGINE FROM INFORMATION_SCHEMA.FILES WHERE FILE_TYPE = 'DATAFILE' AND TABLESPACE_NAME IN (SELECT DISTINCT TABLESPACE_NAME FROM INFORMATION_SCHEMA.PARTITIONS WHERE TABLE_SCHEMA IN ('test')) ORDER BY TABLESPACE_NAME, LOGFILE_GROUP_NAME;
SHOW VARIABLES LIKE 'ndbinfo\_version';
show tables;
UNLOCK TABLES;
show databases;
SELECT current_user();
SELECT user();
CREATE USER 'testuser'@'0:0:0:0:0:ffff:127.0.0.1' IDENTIFIED BY <secret>;
GRANT ALL ON test.* TO testuser@'0:0:0:0:0:FFFF:127.0.0.1';
SHOW GRANTS FOR testuser@'0:0:0:0:0:FFFF:127.0.0.1';
SELECT USER();
SELECT current_user();
SHOW PROCESSLIST;
REVOKE ALL ON test.* FROM testuser@'0:0:0:0:0:FFFF:127.0.0.1';
RENAME USER testuser@'0:0:0:0:0:FFFF:127.0.0.1' to testuser1@'0:0:0:0:0:FFFF:127.0.0.1';
SET PASSWORD FOR `testuser1`@`0:0:0:0:0:ffff:127.0.0.1`=<secret>;
SELECT USER();
DROP USER testuser1@'0:0:0:0:0:FFFF:127.0.0.1';
SET @nip= inet_aton('0:0:0:0:0:FFFF:127.0.0.1');
SHOW WARNINGS;
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT INTO t1 VALUES (@nip,@nip,@nip,@nip,@nip,@nip);
SELECT inet_ntoa(c1) FROM t1;
SELECT inet_ntoa(CAST(c1 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c2) FROM t1;
SELECT inet_ntoa(CAST(c2 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c3) FROM t1;
SELECT inet_ntoa(CAST(c3 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c4) FROM t1;
SELECT inet_ntoa(CAST(c4 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c5) FROM t1;
SELECT inet_ntoa(CAST(c5 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c6) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT @nip;
SELECT inet_ntoa(@nip);
SET @nip6= inet6_aton('0:0:0:0:0:FFFF:127.0.0.1');
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT IGNORE INTO t1 VALUES (@nip6,@nip6,@nip6,@nip6,@nip6,@nip6);
SHOW WARNINGS;
SELECT inet6_ntoa(c1) FROM t1;
SELECT inet6_ntoa(CAST(c1 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c2) FROM t1;
SHOW WARNINGS;
SELECT inet6_ntoa(CAST(c2 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c3) FROM t1;
SELECT inet6_ntoa(CAST(c3 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c4) FROM t1;
SHOW WARNINGS;
SELECT inet6_ntoa(CAST(c4 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c5) FROM t1;
SHOW WARNINGS;
SELECT inet6_ntoa(CAST(c5 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c6) FROM t1;
SHOW WARNINGS;
SELECT inet6_ntoa(CAST(c6 AS BINARY(16))) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT inet6_ntoa(@nip6);
SHOW /*!50002 FULL*/ TABLES;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!80000 SET SESSION information_schema_stats_expiry=0 */;
SET SESSION NET_READ_TIMEOUT= 86400, SESSION NET_WRITE_TIMEOUT= 86400;
SHOW VARIABLES LIKE 'gtid_mode';
SELECT LOGFILE_GROUP_NAME, FILE_NAME, TOTAL_EXTENTS, INITIAL_SIZE, ENGINE, EXTRA FROM INFORMATION_SCHEMA.FILES WHERE ENGINE = 'ndbcluster' AND FILE_TYPE = 'UNDO LOG' AND FILE_NAME IS NOT NULL AND LOGFILE_GROUP_NAME IS NOT NULL AND LOGFILE_GROUP_NAME IN (SELECT DISTINCT LOGFILE_GROUP_NAME FROM INFORMATION_SCHEMA.FILES WHERE ENGINE = 'ndbcluster' AND FILE_TYPE = 'DATAFILE' AND TABLESPACE_NAME IN (SELECT DISTINCT TABLESPACE_NAME FROM INFORMATION_SCHEMA.PARTITIONS WHERE TABLE_SCHEMA IN ('test'))) GROUP BY LOGFILE_GROUP_NAME, FILE_NAME, ENGINE, TOTAL_EXTENTS, INITIAL_SIZE ORDER BY LOGFILE_GROUP_NAME;
SELECT DISTINCT TABLESPACE_NAME, FILE_NAME, LOGFILE_GROUP_NAME, EXTENT_SIZE, INITIAL_SIZE, ENGINE FROM INFORMATION_SCHEMA.FILES WHERE FILE_TYPE = 'DATAFILE' AND TABLESPACE_NAME IN (SELECT DISTINCT TABLESPACE_NAME FROM INFORMATION_SCHEMA.PARTITIONS WHERE TABLE_SCHEMA IN ('test')) ORDER BY TABLESPACE_NAME, LOGFILE_GROUP_NAME;
SHOW VARIABLES LIKE 'ndbinfo\_version';
show tables;
UNLOCK TABLES;
show databases;
SELECT current_user();
SELECT user();
CREATE USER 'testuser'@'0000:0000:0000:0000:0000:ffff:127.0.0.1' IDENTIFIED BY <secret>;
GRANT ALL ON test.* TO testuser@'0000:0000:0000:0000:0000:FFFF:127.0.0.1';
SHOW GRANTS FOR testuser@'0000:0000:0000:0000:0000:FFFF:127.0.0.1';
SELECT USER();
SELECT current_user();
SHOW PROCESSLIST;
REVOKE ALL ON test.* FROM testuser@'0000:0000:0000:0000:0000:FFFF:127.0.0.1';
RENAME USER testuser@'0000:0000:0000:0000:0000:FFFF:127.0.0.1' to testuser1@'0000:0000:0000:0000:0000:FFFF:127.0.0.1';
SET PASSWORD FOR `testuser1`@`0000:0000:0000:0000:0000:ffff:127.0.0.1`=<secret>;
SELECT USER();
DROP USER testuser1@'0000:0000:0000:0000:0000:FFFF:127.0.0.1';
SET @nip= inet_aton('0000:0000:0000:0000:0000:FFFF:127.0.0.1');
SHOW WARNINGS;
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT INTO t1 VALUES (@nip,@nip,@nip,@nip,@nip,@nip);
SELECT inet_ntoa(c1) FROM t1;
SELECT inet_ntoa(CAST(c1 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c2) FROM t1;
SELECT inet_ntoa(CAST(c2 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c3) FROM t1;
SELECT inet_ntoa(CAST(c3 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c4) FROM t1;
SELECT inet_ntoa(CAST(c4 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c5) FROM t1;
SELECT inet_ntoa(CAST(c5 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c6) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT @nip;
SELECT inet_ntoa(@nip);
SET @nip6= inet6_aton('0000:0000:0000:0000:0000:FFFF:127.0.0.1');
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT IGNORE INTO t1 VALUES (@nip6,@nip6,@nip6,@nip6,@nip6,@nip6);
SHOW WARNINGS;
SELECT inet6_ntoa(c1) FROM t1;
SELECT inet6_ntoa(CAST(c1 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c2) FROM t1;
SHOW WARNINGS;
SELECT inet6_ntoa(CAST(c2 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c3) FROM t1;
SELECT inet6_ntoa(CAST(c3 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c4) FROM t1;
SHOW WARNINGS;
SELECT inet6_ntoa(CAST(c4 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c5) FROM t1;
SHOW WARNINGS;
SELECT inet6_ntoa(CAST(c5 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c6) FROM t1;
SHOW WARNINGS;
SELECT inet6_ntoa(CAST(c6 AS BINARY(16))) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT inet6_ntoa(@nip6);
SHOW /*!50002 FULL*/ TABLES;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!80000 SET SESSION information_schema_stats_expiry=0 */;
SET SESSION NET_READ_TIMEOUT= 86400, SESSION NET_WRITE_TIMEOUT= 86400;
SHOW VARIABLES LIKE 'gtid_mode';
SELECT LOGFILE_GROUP_NAME, FILE_NAME, TOTAL_EXTENTS, INITIAL_SIZE, ENGINE, EXTRA FROM INFORMATION_SCHEMA.FILES WHERE ENGINE = 'ndbcluster' AND FILE_TYPE = 'UNDO LOG' AND FILE_NAME IS NOT NULL AND LOGFILE_GROUP_NAME IS NOT NULL AND LOGFILE_GROUP_NAME IN (SELECT DISTINCT LOGFILE_GROUP_NAME FROM INFORMATION_SCHEMA.FILES WHERE ENGINE = 'ndbcluster' AND FILE_TYPE = 'DATAFILE' AND TABLESPACE_NAME IN (SELECT DISTINCT TABLESPACE_NAME FROM INFORMATION_SCHEMA.PARTITIONS WHERE TABLE_SCHEMA IN ('test'))) GROUP BY LOGFILE_GROUP_NAME, FILE_NAME, ENGINE, TOTAL_EXTENTS, INITIAL_SIZE ORDER BY LOGFILE_GROUP_NAME;
SELECT DISTINCT TABLESPACE_NAME, FILE_NAME, LOGFILE_GROUP_NAME, EXTENT_SIZE, INITIAL_SIZE, ENGINE FROM INFORMATION_SCHEMA.FILES WHERE FILE_TYPE = 'DATAFILE' AND TABLESPACE_NAME IN (SELECT DISTINCT TABLESPACE_NAME FROM INFORMATION_SCHEMA.PARTITIONS WHERE TABLE_SCHEMA IN ('test')) ORDER BY TABLESPACE_NAME, LOGFILE_GROUP_NAME;
SHOW VARIABLES LIKE 'ndbinfo\_version';
show tables;
UNLOCK TABLES;
show databases;
SELECT current_user();
SELECT user();
CREATE USER 'testuser'@'0:0000:0000:0:0000:ffff:127.0.0.1' IDENTIFIED BY <secret>;
GRANT ALL ON test.* TO testuser@'0:0000:0000:0:0000:FFFF:127.0.0.1';
SHOW GRANTS FOR testuser@'0:0000:0000:0:0000:FFFF:127.0.0.1';
SELECT USER();
SELECT current_user();
SHOW PROCESSLIST;
REVOKE ALL ON test.* FROM testuser@'0:0000:0000:0:0000:FFFF:127.0.0.1';
RENAME USER testuser@'0:0000:0000:0:0000:FFFF:127.0.0.1' to testuser1@'0:0000:0000:0:0000:FFFF:127.0.0.1';
SET PASSWORD FOR `testuser1`@`0:0000:0000:0:0000:ffff:127.0.0.1`=<secret>;
SELECT USER();
DROP USER testuser1@'0:0000:0000:0:0000:FFFF:127.0.0.1';
SET @nip= inet_aton('0:0000:0000:0:0000:FFFF:127.0.0.1');
SHOW WARNINGS;
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT INTO t1 VALUES (@nip,@nip,@nip,@nip,@nip,@nip);
SELECT inet_ntoa(c1) FROM t1;
SELECT inet_ntoa(CAST(c1 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c2) FROM t1;
SELECT inet_ntoa(CAST(c2 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c3) FROM t1;
SELECT inet_ntoa(CAST(c3 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c4) FROM t1;
SELECT inet_ntoa(CAST(c4 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c5) FROM t1;
SELECT inet_ntoa(CAST(c5 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c6) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT @nip;
SELECT inet_ntoa(@nip);
SET @nip6= inet6_aton('0:0000:0000:0:0000:FFFF:127.0.0.1');
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT IGNORE INTO t1 VALUES (@nip6,@nip6,@nip6,@nip6,@nip6,@nip6);
SHOW WARNINGS;
SELECT inet6_ntoa(c1) FROM t1;
SELECT inet6_ntoa(CAST(c1 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c2) FROM t1;
SHOW WARNINGS;
SELECT inet6_ntoa(CAST(c2 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c3) FROM t1;
SELECT inet6_ntoa(CAST(c3 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c4) FROM t1;
SHOW WARNINGS;
SELECT inet6_ntoa(CAST(c4 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c5) FROM t1;
SHOW WARNINGS;
SELECT inet6_ntoa(CAST(c5 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c6) FROM t1;
SHOW WARNINGS;
SELECT inet6_ntoa(CAST(c6 AS BINARY(16))) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT inet6_ntoa(@nip6);
SHOW /*!50002 FULL*/ TABLES;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!80000 SET SESSION information_schema_stats_expiry=0 */;
SET SESSION NET_READ_TIMEOUT= 86400, SESSION NET_WRITE_TIMEOUT= 86400;
SHOW VARIABLES LIKE 'gtid_mode';
SELECT LOGFILE_GROUP_NAME, FILE_NAME, TOTAL_EXTENTS, INITIAL_SIZE, ENGINE, EXTRA FROM INFORMATION_SCHEMA.FILES WHERE ENGINE = 'ndbcluster' AND FILE_TYPE = 'UNDO LOG' AND FILE_NAME IS NOT NULL AND LOGFILE_GROUP_NAME IS NOT NULL AND LOGFILE_GROUP_NAME IN (SELECT DISTINCT LOGFILE_GROUP_NAME FROM INFORMATION_SCHEMA.FILES WHERE ENGINE = 'ndbcluster' AND FILE_TYPE = 'DATAFILE' AND TABLESPACE_NAME IN (SELECT DISTINCT TABLESPACE_NAME FROM INFORMATION_SCHEMA.PARTITIONS WHERE TABLE_SCHEMA IN ('test'))) GROUP BY LOGFILE_GROUP_NAME, FILE_NAME, ENGINE, TOTAL_EXTENTS, INITIAL_SIZE ORDER BY LOGFILE_GROUP_NAME;
SELECT DISTINCT TABLESPACE_NAME, FILE_NAME, LOGFILE_GROUP_NAME, EXTENT_SIZE, INITIAL_SIZE, ENGINE FROM INFORMATION_SCHEMA.FILES WHERE FILE_TYPE = 'DATAFILE' AND TABLESPACE_NAME IN (SELECT DISTINCT TABLESPACE_NAME FROM INFORMATION_SCHEMA.PARTITIONS WHERE TABLE_SCHEMA IN ('test')) ORDER BY TABLESPACE_NAME, LOGFILE_GROUP_NAME;
SHOW VARIABLES LIKE 'ndbinfo\_version';
show tables;
UNLOCK TABLES;
show databases;
SELECT current_user();
SELECT user();
CREATE USER 'testuser'@'0::0000:ffff:127.0.0.1' IDENTIFIED BY <secret>;
GRANT ALL ON test.* TO testuser@'0::0000:FFFF:127.0.0.1';
SHOW GRANTS FOR testuser@'0::0000:FFFF:127.0.0.1';
SELECT USER();
SELECT current_user();
SHOW PROCESSLIST;
REVOKE ALL ON test.* FROM testuser@'0::0000:FFFF:127.0.0.1';
RENAME USER testuser@'0::0000:FFFF:127.0.0.1' to testuser1@'0::0000:FFFF:127.0.0.1';
SET PASSWORD FOR `testuser1`@`0::0000:ffff:127.0.0.1`=<secret>;
SELECT USER();
DROP USER testuser1@'0::0000:FFFF:127.0.0.1';
SET @nip= inet_aton('0::0000:FFFF:127.0.0.1');
SHOW WARNINGS;
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT INTO t1 VALUES (@nip,@nip,@nip,@nip,@nip,@nip);
SELECT inet_ntoa(c1) FROM t1;
SELECT inet_ntoa(CAST(c1 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c2) FROM t1;
SELECT inet_ntoa(CAST(c2 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c3) FROM t1;
SELECT inet_ntoa(CAST(c3 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c4) FROM t1;
SELECT inet_ntoa(CAST(c4 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c5) FROM t1;
SELECT inet_ntoa(CAST(c5 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c6) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT @nip;
SELECT inet_ntoa(@nip);
SET @nip6= inet6_aton('0::0000:FFFF:127.0.0.1');
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT IGNORE INTO t1 VALUES (@nip6,@nip6,@nip6,@nip6,@nip6,@nip6);
SHOW WARNINGS;
SELECT inet6_ntoa(c1) FROM t1;
SELECT inet6_ntoa(CAST(c1 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c2) FROM t1;
SHOW WARNINGS;
SELECT inet6_ntoa(CAST(c2 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c3) FROM t1;
SELECT inet6_ntoa(CAST(c3 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c4) FROM t1;
SHOW WARNINGS;
SELECT inet6_ntoa(CAST(c4 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c5) FROM t1;
SHOW WARNINGS;
SELECT inet6_ntoa(CAST(c5 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c6) FROM t1;
SHOW WARNINGS;
SELECT inet6_ntoa(CAST(c6 AS BINARY(16))) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT inet6_ntoa(@nip6);
SET @nip= inet_aton('0:0:0:0:0:FFFF:127.0.0.1/96');
SHOW WARNINGS;
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT INTO t1 VALUES (@nip,@nip,@nip,@nip,@nip,@nip);
SELECT inet_ntoa(c1) FROM t1;
SELECT inet_ntoa(CAST(c1 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c2) FROM t1;
SELECT inet_ntoa(CAST(c2 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c3) FROM t1;
SELECT inet_ntoa(CAST(c3 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c4) FROM t1;
SELECT inet_ntoa(CAST(c4 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c5) FROM t1;
SELECT inet_ntoa(CAST(c5 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c6) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT @nip;
SELECT inet_ntoa(@nip);
SET @nip6= inet6_aton('0:0:0:0:0:FFFF:127.0.0.1/96');
SHOW WARNINGS;
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT IGNORE INTO t1 VALUES (@nip6,@nip6,@nip6,@nip6,@nip6,@nip6);
SELECT inet6_ntoa(c1) FROM t1;
SELECT inet6_ntoa(CAST(c1 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c2) FROM t1;
SELECT inet6_ntoa(CAST(c2 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c3) FROM t1;
SELECT inet6_ntoa(CAST(c3 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c4) FROM t1;
SELECT inet6_ntoa(CAST(c4 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c5) FROM t1;
SELECT inet6_ntoa(CAST(c5 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c6) FROM t1;
SELECT inet6_ntoa(CAST(c6 AS BINARY(16))) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT inet6_ntoa(@nip6);
SHOW /*!50002 FULL*/ TABLES;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!80000 SET SESSION information_schema_stats_expiry=0 */;
SET SESSION NET_READ_TIMEOUT= 86400, SESSION NET_WRITE_TIMEOUT= 86400;
SHOW VARIABLES LIKE 'gtid_mode';
SELECT LOGFILE_GROUP_NAME, FILE_NAME, TOTAL_EXTENTS, INITIAL_SIZE, ENGINE, EXTRA FROM INFORMATION_SCHEMA.FILES WHERE ENGINE = 'ndbcluster' AND FILE_TYPE = 'UNDO LOG' AND FILE_NAME IS NOT NULL AND LOGFILE_GROUP_NAME IS NOT NULL AND LOGFILE_GROUP_NAME IN (SELECT DISTINCT LOGFILE_GROUP_NAME FROM INFORMATION_SCHEMA.FILES WHERE ENGINE = 'ndbcluster' AND FILE_TYPE = 'DATAFILE' AND TABLESPACE_NAME IN (SELECT DISTINCT TABLESPACE_NAME FROM INFORMATION_SCHEMA.PARTITIONS WHERE TABLE_SCHEMA IN ('test'))) GROUP BY LOGFILE_GROUP_NAME, FILE_NAME, ENGINE, TOTAL_EXTENTS, INITIAL_SIZE ORDER BY LOGFILE_GROUP_NAME;
SELECT DISTINCT TABLESPACE_NAME, FILE_NAME, LOGFILE_GROUP_NAME, EXTENT_SIZE, INITIAL_SIZE, ENGINE FROM INFORMATION_SCHEMA.FILES WHERE FILE_TYPE = 'DATAFILE' AND TABLESPACE_NAME IN (SELECT DISTINCT TABLESPACE_NAME FROM INFORMATION_SCHEMA.PARTITIONS WHERE TABLE_SCHEMA IN ('test')) ORDER BY TABLESPACE_NAME, LOGFILE_GROUP_NAME;
SHOW VARIABLES LIKE 'ndbinfo\_version';
show tables;
UNLOCK TABLES;
show databases;
SELECT current_user();
SELECT user();
CREATE USER 'testuser'@'::ffff:127.0.0.1' IDENTIFIED BY <secret>;
GRANT ALL ON test.* TO testuser@'::FFFF:127.0.0.1';
SHOW GRANTS FOR testuser@'::FFFF:127.0.0.1';
SELECT USER();
SELECT current_user();
SHOW PROCESSLIST;
REVOKE ALL ON test.* FROM testuser@'::FFFF:127.0.0.1';
RENAME USER testuser@'::FFFF:127.0.0.1' to testuser1@'::FFFF:127.0.0.1';
SET PASSWORD FOR `testuser1`@`::ffff:127.0.0.1`=<secret>;
SELECT USER();
DROP USER testuser1@'::FFFF:127.0.0.1';
SET @nip= inet_aton('::FFFF:127.0.0.1/96');
SHOW WARNINGS;
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT INTO t1 VALUES (@nip,@nip,@nip,@nip,@nip,@nip);
SELECT inet_ntoa(c1) FROM t1;
SELECT inet_ntoa(CAST(c1 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c2) FROM t1;
SELECT inet_ntoa(CAST(c2 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c3) FROM t1;
SELECT inet_ntoa(CAST(c3 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c4) FROM t1;
SELECT inet_ntoa(CAST(c4 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c5) FROM t1;
SELECT inet_ntoa(CAST(c5 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c6) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT @nip;
SELECT inet_ntoa(@nip);
SET @nip6= inet6_aton('::FFFF:127.0.0.1/96');
SHOW WARNINGS;
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT IGNORE INTO t1 VALUES (@nip6,@nip6,@nip6,@nip6,@nip6,@nip6);
SELECT inet6_ntoa(c1) FROM t1;
SELECT inet6_ntoa(CAST(c1 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c2) FROM t1;
SELECT inet6_ntoa(CAST(c2 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c3) FROM t1;
SELECT inet6_ntoa(CAST(c3 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c4) FROM t1;
SELECT inet6_ntoa(CAST(c4 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c5) FROM t1;
SELECT inet6_ntoa(CAST(c5 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c6) FROM t1;
SELECT inet6_ntoa(CAST(c6 AS BINARY(16))) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT inet6_ntoa(@nip6);
DROP USER 'root'@'::1';
DROP USER 'root'@'127.0.0.1';
SHOW GLOBAL STATUS LIKE 'Threads_connected';
SELECT 1 <= 1;
SET GLOBAL log_output = "FILE";
SET GLOBAL general_log_file = "/home/stephanie/Dokumente/a/AST/AST24-SQL-dialects-comparison/temp_mysql/check-warnings.log"
/home/stephanie/mysql-server/build/runtime_output_directory/mysqld, Version: 8.0.36 (Source distribution). started with:
Tcp port: 13000  Unix socket: /home/stephanie/mysql-server/build/mysql-test/var/tmp/mysqld.1.sock
Time                 Id Command    Argument;
SET GLOBAL general_log = 'ON';
call mtr.add_suppression("Unsafe statement written to the binary log using statement format since BINLOG_FORMAT = STATEMENT");
CREATE USER IF NOT EXISTS 'root'@'127.0.0.1';
CREATE USER IF NOT EXISTS 'root'@'::1';
GRANT ALL ON *.* TO 'root'@'127.0.0.1', 'root'@'::1' WITH GRANT OPTION;
DROP USER 'root'@'::1';
DROP USER 'root'@'127.0.0.1';
call mtr.add_suppression("Unsafe statement written to the binary log using statement format since BINLOG_FORMAT = STATEMENT");
CREATE USER IF NOT EXISTS 'root'@'127.0.0.1';
CREATE USER IF NOT EXISTS 'root'@'::1';
GRANT ALL ON *.* TO 'root'@'127.0.0.1', 'root'@'::1' WITH GRANT OPTION;
SHOW GLOBAL STATUS LIKE 'Threads_connected';
SHOW /*!50002 FULL*/ TABLES;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!80000 SET SESSION information_schema_stats_expiry=0 */;
SET SESSION NET_READ_TIMEOUT= 86400, SESSION NET_WRITE_TIMEOUT= 86400;
SHOW VARIABLES LIKE 'gtid_mode';
SELECT LOGFILE_GROUP_NAME, FILE_NAME, TOTAL_EXTENTS, INITIAL_SIZE, ENGINE, EXTRA FROM INFORMATION_SCHEMA.FILES WHERE ENGINE = 'ndbcluster' AND FILE_TYPE = 'UNDO LOG' AND FILE_NAME IS NOT NULL AND LOGFILE_GROUP_NAME IS NOT NULL AND LOGFILE_GROUP_NAME IN (SELECT DISTINCT LOGFILE_GROUP_NAME FROM INFORMATION_SCHEMA.FILES WHERE ENGINE = 'ndbcluster' AND FILE_TYPE = 'DATAFILE' AND TABLESPACE_NAME IN (SELECT DISTINCT TABLESPACE_NAME FROM INFORMATION_SCHEMA.PARTITIONS WHERE TABLE_SCHEMA IN ('test'))) GROUP BY LOGFILE_GROUP_NAME, FILE_NAME, ENGINE, TOTAL_EXTENTS, INITIAL_SIZE ORDER BY LOGFILE_GROUP_NAME;
SELECT DISTINCT TABLESPACE_NAME, FILE_NAME, LOGFILE_GROUP_NAME, EXTENT_SIZE, INITIAL_SIZE, ENGINE FROM INFORMATION_SCHEMA.FILES WHERE FILE_TYPE = 'DATAFILE' AND TABLESPACE_NAME IN (SELECT DISTINCT TABLESPACE_NAME FROM INFORMATION_SCHEMA.PARTITIONS WHERE TABLE_SCHEMA IN ('test')) ORDER BY TABLESPACE_NAME, LOGFILE_GROUP_NAME;
SHOW VARIABLES LIKE 'ndbinfo\_version';
show tables;
UNLOCK TABLES;
show databases;
SELECT current_user();
SELECT user();
CREATE USER 'testuser'@'127.0.0.1' IDENTIFIED BY <secret>;
GRANT ALL ON test.* TO testuser@'127.0.0.1';
SHOW GRANTS FOR testuser@'127.0.0.1';
SELECT USER();
SELECT current_user();
SHOW PROCESSLIST;
REVOKE ALL ON test.* FROM testuser@'127.0.0.1';
RENAME USER testuser@'127.0.0.1' to testuser1@'127.0.0.1';
SET PASSWORD FOR `testuser1`@`127.0.0.1`=<secret>;
SELECT USER();
DROP USER testuser1@'127.0.0.1';
SET @nip= inet_aton('127.0.0.1');
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT INTO t1 VALUES (@nip,@nip,@nip,@nip,@nip,@nip);
SELECT inet_ntoa(c1) FROM t1;
SELECT inet_ntoa(CAST(c1 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c2) FROM t1;
SELECT inet_ntoa(CAST(c2 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c3) FROM t1;
SHOW WARNINGS;
SELECT inet_ntoa(CAST(c3 AS UNSIGNED)) FROM t1;
SHOW WARNINGS;
SELECT inet_ntoa(c4) FROM t1;
SELECT inet_ntoa(CAST(c4 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c5) FROM t1;
SELECT inet_ntoa(CAST(c5 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c6) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT @nip;
SELECT inet_ntoa(@nip);
SET @nip6= inet6_aton('127.0.0.1');
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT IGNORE INTO t1 VALUES (@nip6,@nip6,@nip6,@nip6,@nip6,@nip6);
SHOW WARNINGS;
SELECT inet6_ntoa(c1) FROM t1;
SELECT inet6_ntoa(CAST(c1 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c2) FROM t1;
SHOW WARNINGS;
SELECT inet6_ntoa(CAST(c2 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c3) FROM t1;
SELECT inet6_ntoa(CAST(c3 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c4) FROM t1;
SHOW WARNINGS;
SELECT inet6_ntoa(CAST(c4 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c5) FROM t1;
SHOW WARNINGS;
SELECT inet6_ntoa(CAST(c5 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c6) FROM t1;
SHOW WARNINGS;
SELECT inet6_ntoa(CAST(c6 AS BINARY(16))) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT inet6_ntoa(@nip6);
SHOW /*!50002 FULL*/ TABLES;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!80000 SET SESSION information_schema_stats_expiry=0 */;
SET SESSION NET_READ_TIMEOUT= 86400, SESSION NET_WRITE_TIMEOUT= 86400;
SHOW VARIABLES LIKE 'gtid_mode';
SELECT LOGFILE_GROUP_NAME, FILE_NAME, TOTAL_EXTENTS, INITIAL_SIZE, ENGINE, EXTRA FROM INFORMATION_SCHEMA.FILES WHERE ENGINE = 'ndbcluster' AND FILE_TYPE = 'UNDO LOG' AND FILE_NAME IS NOT NULL AND LOGFILE_GROUP_NAME IS NOT NULL AND LOGFILE_GROUP_NAME IN (SELECT DISTINCT LOGFILE_GROUP_NAME FROM INFORMATION_SCHEMA.FILES WHERE ENGINE = 'ndbcluster' AND FILE_TYPE = 'DATAFILE' AND TABLESPACE_NAME IN (SELECT DISTINCT TABLESPACE_NAME FROM INFORMATION_SCHEMA.PARTITIONS WHERE TABLE_SCHEMA IN ('test'))) GROUP BY LOGFILE_GROUP_NAME, FILE_NAME, ENGINE, TOTAL_EXTENTS, INITIAL_SIZE ORDER BY LOGFILE_GROUP_NAME;
SELECT DISTINCT TABLESPACE_NAME, FILE_NAME, LOGFILE_GROUP_NAME, EXTENT_SIZE, INITIAL_SIZE, ENGINE FROM INFORMATION_SCHEMA.FILES WHERE FILE_TYPE = 'DATAFILE' AND TABLESPACE_NAME IN (SELECT DISTINCT TABLESPACE_NAME FROM INFORMATION_SCHEMA.PARTITIONS WHERE TABLE_SCHEMA IN ('test')) ORDER BY TABLESPACE_NAME, LOGFILE_GROUP_NAME;
SHOW VARIABLES LIKE 'ndbinfo\_version';
show tables;
UNLOCK TABLES;
show databases;
SELECT current_user();
SELECT user();
CREATE USER 'testuser'@'0:0:0:0:0:ffff:127.0.0.1' IDENTIFIED BY <secret>;
GRANT ALL ON test.* TO testuser@'0:0:0:0:0:FFFF:127.0.0.1';
SHOW GRANTS FOR testuser@'0:0:0:0:0:FFFF:127.0.0.1';
SELECT USER();
SELECT current_user();
SHOW PROCESSLIST;
REVOKE ALL ON test.* FROM testuser@'0:0:0:0:0:FFFF:127.0.0.1';
RENAME USER testuser@'0:0:0:0:0:FFFF:127.0.0.1' to testuser1@'0:0:0:0:0:FFFF:127.0.0.1';
SET PASSWORD FOR `testuser1`@`0:0:0:0:0:ffff:127.0.0.1`=<secret>;
SELECT USER();
DROP USER testuser1@'0:0:0:0:0:FFFF:127.0.0.1';
SET @nip= inet_aton('0:0:0:0:0:FFFF:127.0.0.1');
SHOW WARNINGS;
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT INTO t1 VALUES (@nip,@nip,@nip,@nip,@nip,@nip);
SELECT inet_ntoa(c1) FROM t1;
SELECT inet_ntoa(CAST(c1 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c2) FROM t1;
SELECT inet_ntoa(CAST(c2 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c3) FROM t1;
SELECT inet_ntoa(CAST(c3 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c4) FROM t1;
SELECT inet_ntoa(CAST(c4 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c5) FROM t1;
SELECT inet_ntoa(CAST(c5 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c6) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT @nip;
SELECT inet_ntoa(@nip);
SET @nip6= inet6_aton('0:0:0:0:0:FFFF:127.0.0.1');
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT IGNORE INTO t1 VALUES (@nip6,@nip6,@nip6,@nip6,@nip6,@nip6);
SHOW WARNINGS;
SELECT inet6_ntoa(c1) FROM t1;
SELECT inet6_ntoa(CAST(c1 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c2) FROM t1;
SHOW WARNINGS;
SELECT inet6_ntoa(CAST(c2 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c3) FROM t1;
SELECT inet6_ntoa(CAST(c3 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c4) FROM t1;
SHOW WARNINGS;
SELECT inet6_ntoa(CAST(c4 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c5) FROM t1;
SHOW WARNINGS;
SELECT inet6_ntoa(CAST(c5 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c6) FROM t1;
SHOW WARNINGS;
SELECT inet6_ntoa(CAST(c6 AS BINARY(16))) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT inet6_ntoa(@nip6);
SHOW /*!50002 FULL*/ TABLES;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!80000 SET SESSION information_schema_stats_expiry=0 */;
SET SESSION NET_READ_TIMEOUT= 86400, SESSION NET_WRITE_TIMEOUT= 86400;
SHOW VARIABLES LIKE 'gtid_mode';
SELECT LOGFILE_GROUP_NAME, FILE_NAME, TOTAL_EXTENTS, INITIAL_SIZE, ENGINE, EXTRA FROM INFORMATION_SCHEMA.FILES WHERE ENGINE = 'ndbcluster' AND FILE_TYPE = 'UNDO LOG' AND FILE_NAME IS NOT NULL AND LOGFILE_GROUP_NAME IS NOT NULL AND LOGFILE_GROUP_NAME IN (SELECT DISTINCT LOGFILE_GROUP_NAME FROM INFORMATION_SCHEMA.FILES WHERE ENGINE = 'ndbcluster' AND FILE_TYPE = 'DATAFILE' AND TABLESPACE_NAME IN (SELECT DISTINCT TABLESPACE_NAME FROM INFORMATION_SCHEMA.PARTITIONS WHERE TABLE_SCHEMA IN ('test'))) GROUP BY LOGFILE_GROUP_NAME, FILE_NAME, ENGINE, TOTAL_EXTENTS, INITIAL_SIZE ORDER BY LOGFILE_GROUP_NAME;
SELECT DISTINCT TABLESPACE_NAME, FILE_NAME, LOGFILE_GROUP_NAME, EXTENT_SIZE, INITIAL_SIZE, ENGINE FROM INFORMATION_SCHEMA.FILES WHERE FILE_TYPE = 'DATAFILE' AND TABLESPACE_NAME IN (SELECT DISTINCT TABLESPACE_NAME FROM INFORMATION_SCHEMA.PARTITIONS WHERE TABLE_SCHEMA IN ('test')) ORDER BY TABLESPACE_NAME, LOGFILE_GROUP_NAME;
SHOW VARIABLES LIKE 'ndbinfo\_version';
show tables;
UNLOCK TABLES;
show databases;
SELECT current_user();
SELECT user();
CREATE USER 'testuser'@'0000:0000:0000:0000:0000:ffff:127.0.0.1' IDENTIFIED BY <secret>;
GRANT ALL ON test.* TO testuser@'0000:0000:0000:0000:0000:FFFF:127.0.0.1';
SHOW GRANTS FOR testuser@'0000:0000:0000:0000:0000:FFFF:127.0.0.1';
SELECT USER();
SELECT current_user();
SHOW PROCESSLIST;
REVOKE ALL ON test.* FROM testuser@'0000:0000:0000:0000:0000:FFFF:127.0.0.1';
RENAME USER testuser@'0000:0000:0000:0000:0000:FFFF:127.0.0.1' to testuser1@'0000:0000:0000:0000:0000:FFFF:127.0.0.1';
SET PASSWORD FOR `testuser1`@`0000:0000:0000:0000:0000:ffff:127.0.0.1`=<secret>;
SELECT USER();
DROP USER testuser1@'0000:0000:0000:0000:0000:FFFF:127.0.0.1';
SET @nip= inet_aton('0000:0000:0000:0000:0000:FFFF:127.0.0.1');
SHOW WARNINGS;
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT INTO t1 VALUES (@nip,@nip,@nip,@nip,@nip,@nip);
SELECT inet_ntoa(c1) FROM t1;
SELECT inet_ntoa(CAST(c1 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c2) FROM t1;
SELECT inet_ntoa(CAST(c2 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c3) FROM t1;
SELECT inet_ntoa(CAST(c3 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c4) FROM t1;
SELECT inet_ntoa(CAST(c4 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c5) FROM t1;
SELECT inet_ntoa(CAST(c5 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c6) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT @nip;
SELECT inet_ntoa(@nip);
SET @nip6= inet6_aton('0000:0000:0000:0000:0000:FFFF:127.0.0.1');
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT IGNORE INTO t1 VALUES (@nip6,@nip6,@nip6,@nip6,@nip6,@nip6);
SHOW WARNINGS;
SELECT inet6_ntoa(c1) FROM t1;
SELECT inet6_ntoa(CAST(c1 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c2) FROM t1;
SHOW WARNINGS;
SELECT inet6_ntoa(CAST(c2 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c3) FROM t1;
SELECT inet6_ntoa(CAST(c3 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c4) FROM t1;
SHOW WARNINGS;
SELECT inet6_ntoa(CAST(c4 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c5) FROM t1;
SHOW WARNINGS;
SELECT inet6_ntoa(CAST(c5 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c6) FROM t1;
SHOW WARNINGS;
SELECT inet6_ntoa(CAST(c6 AS BINARY(16))) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT inet6_ntoa(@nip6);
SHOW /*!50002 FULL*/ TABLES;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!80000 SET SESSION information_schema_stats_expiry=0 */;
SET SESSION NET_READ_TIMEOUT= 86400, SESSION NET_WRITE_TIMEOUT= 86400;
SHOW VARIABLES LIKE 'gtid_mode';
SELECT LOGFILE_GROUP_NAME, FILE_NAME, TOTAL_EXTENTS, INITIAL_SIZE, ENGINE, EXTRA FROM INFORMATION_SCHEMA.FILES WHERE ENGINE = 'ndbcluster' AND FILE_TYPE = 'UNDO LOG' AND FILE_NAME IS NOT NULL AND LOGFILE_GROUP_NAME IS NOT NULL AND LOGFILE_GROUP_NAME IN (SELECT DISTINCT LOGFILE_GROUP_NAME FROM INFORMATION_SCHEMA.FILES WHERE ENGINE = 'ndbcluster' AND FILE_TYPE = 'DATAFILE' AND TABLESPACE_NAME IN (SELECT DISTINCT TABLESPACE_NAME FROM INFORMATION_SCHEMA.PARTITIONS WHERE TABLE_SCHEMA IN ('test'))) GROUP BY LOGFILE_GROUP_NAME, FILE_NAME, ENGINE, TOTAL_EXTENTS, INITIAL_SIZE ORDER BY LOGFILE_GROUP_NAME;
SELECT DISTINCT TABLESPACE_NAME, FILE_NAME, LOGFILE_GROUP_NAME, EXTENT_SIZE, INITIAL_SIZE, ENGINE FROM INFORMATION_SCHEMA.FILES WHERE FILE_TYPE = 'DATAFILE' AND TABLESPACE_NAME IN (SELECT DISTINCT TABLESPACE_NAME FROM INFORMATION_SCHEMA.PARTITIONS WHERE TABLE_SCHEMA IN ('test')) ORDER BY TABLESPACE_NAME, LOGFILE_GROUP_NAME;
SHOW VARIABLES LIKE 'ndbinfo\_version';
show tables;
UNLOCK TABLES;
show databases;
SELECT current_user();
SELECT user();
CREATE USER 'testuser'@'0:0000:0000:0:0000:ffff:127.0.0.1' IDENTIFIED BY <secret>;
GRANT ALL ON test.* TO testuser@'0:0000:0000:0:0000:FFFF:127.0.0.1';
SHOW GRANTS FOR testuser@'0:0000:0000:0:0000:FFFF:127.0.0.1';
SELECT USER();
SELECT current_user();
SHOW PROCESSLIST;
REVOKE ALL ON test.* FROM testuser@'0:0000:0000:0:0000:FFFF:127.0.0.1';
RENAME USER testuser@'0:0000:0000:0:0000:FFFF:127.0.0.1' to testuser1@'0:0000:0000:0:0000:FFFF:127.0.0.1';
SET PASSWORD FOR `testuser1`@`0:0000:0000:0:0000:ffff:127.0.0.1`=<secret>;
SELECT USER();
DROP USER testuser1@'0:0000:0000:0:0000:FFFF:127.0.0.1';
SET @nip= inet_aton('0:0000:0000:0:0000:FFFF:127.0.0.1');
SHOW WARNINGS;
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT INTO t1 VALUES (@nip,@nip,@nip,@nip,@nip,@nip);
SELECT inet_ntoa(c1) FROM t1;
SELECT inet_ntoa(CAST(c1 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c2) FROM t1;
SELECT inet_ntoa(CAST(c2 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c3) FROM t1;
SELECT inet_ntoa(CAST(c3 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c4) FROM t1;
SELECT inet_ntoa(CAST(c4 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c5) FROM t1;
SELECT inet_ntoa(CAST(c5 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c6) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT @nip;
SELECT inet_ntoa(@nip);
SET @nip6= inet6_aton('0:0000:0000:0:0000:FFFF:127.0.0.1');
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT IGNORE INTO t1 VALUES (@nip6,@nip6,@nip6,@nip6,@nip6,@nip6);
SHOW WARNINGS;
SELECT inet6_ntoa(c1) FROM t1;
SELECT inet6_ntoa(CAST(c1 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c2) FROM t1;
SHOW WARNINGS;
SELECT inet6_ntoa(CAST(c2 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c3) FROM t1;
SELECT inet6_ntoa(CAST(c3 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c4) FROM t1;
SHOW WARNINGS;
SELECT inet6_ntoa(CAST(c4 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c5) FROM t1;
SHOW WARNINGS;
SELECT inet6_ntoa(CAST(c5 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c6) FROM t1;
SHOW WARNINGS;
SELECT inet6_ntoa(CAST(c6 AS BINARY(16))) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT inet6_ntoa(@nip6);
SHOW /*!50002 FULL*/ TABLES;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!80000 SET SESSION information_schema_stats_expiry=0 */;
SET SESSION NET_READ_TIMEOUT= 86400, SESSION NET_WRITE_TIMEOUT= 86400;
SHOW VARIABLES LIKE 'gtid_mode';
SELECT LOGFILE_GROUP_NAME, FILE_NAME, TOTAL_EXTENTS, INITIAL_SIZE, ENGINE, EXTRA FROM INFORMATION_SCHEMA.FILES WHERE ENGINE = 'ndbcluster' AND FILE_TYPE = 'UNDO LOG' AND FILE_NAME IS NOT NULL AND LOGFILE_GROUP_NAME IS NOT NULL AND LOGFILE_GROUP_NAME IN (SELECT DISTINCT LOGFILE_GROUP_NAME FROM INFORMATION_SCHEMA.FILES WHERE ENGINE = 'ndbcluster' AND FILE_TYPE = 'DATAFILE' AND TABLESPACE_NAME IN (SELECT DISTINCT TABLESPACE_NAME FROM INFORMATION_SCHEMA.PARTITIONS WHERE TABLE_SCHEMA IN ('test'))) GROUP BY LOGFILE_GROUP_NAME, FILE_NAME, ENGINE, TOTAL_EXTENTS, INITIAL_SIZE ORDER BY LOGFILE_GROUP_NAME;
SELECT DISTINCT TABLESPACE_NAME, FILE_NAME, LOGFILE_GROUP_NAME, EXTENT_SIZE, INITIAL_SIZE, ENGINE FROM INFORMATION_SCHEMA.FILES WHERE FILE_TYPE = 'DATAFILE' AND TABLESPACE_NAME IN (SELECT DISTINCT TABLESPACE_NAME FROM INFORMATION_SCHEMA.PARTITIONS WHERE TABLE_SCHEMA IN ('test')) ORDER BY TABLESPACE_NAME, LOGFILE_GROUP_NAME;
SHOW VARIABLES LIKE 'ndbinfo\_version';
show tables;
UNLOCK TABLES;
show databases;
SELECT current_user();
SELECT user();
CREATE USER 'testuser'@'0::0000:ffff:127.0.0.1' IDENTIFIED BY <secret>;
GRANT ALL ON test.* TO testuser@'0::0000:FFFF:127.0.0.1';
SHOW GRANTS FOR testuser@'0::0000:FFFF:127.0.0.1';
SELECT USER();
SELECT current_user();
SHOW PROCESSLIST;
REVOKE ALL ON test.* FROM testuser@'0::0000:FFFF:127.0.0.1';
RENAME USER testuser@'0::0000:FFFF:127.0.0.1' to testuser1@'0::0000:FFFF:127.0.0.1';
SET PASSWORD FOR `testuser1`@`0::0000:ffff:127.0.0.1`=<secret>;
SELECT USER();
DROP USER testuser1@'0::0000:FFFF:127.0.0.1';
SET @nip= inet_aton('0::0000:FFFF:127.0.0.1');
SHOW WARNINGS;
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT INTO t1 VALUES (@nip,@nip,@nip,@nip,@nip,@nip);
SELECT inet_ntoa(c1) FROM t1;
SELECT inet_ntoa(CAST(c1 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c2) FROM t1;
SELECT inet_ntoa(CAST(c2 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c3) FROM t1;
SELECT inet_ntoa(CAST(c3 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c4) FROM t1;
SELECT inet_ntoa(CAST(c4 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c5) FROM t1;
SELECT inet_ntoa(CAST(c5 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c6) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT @nip;
SELECT inet_ntoa(@nip);
SET @nip6= inet6_aton('0::0000:FFFF:127.0.0.1');
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT IGNORE INTO t1 VALUES (@nip6,@nip6,@nip6,@nip6,@nip6,@nip6);
SHOW WARNINGS;
SELECT inet6_ntoa(c1) FROM t1;
SELECT inet6_ntoa(CAST(c1 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c2) FROM t1;
SHOW WARNINGS;
SELECT inet6_ntoa(CAST(c2 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c3) FROM t1;
SELECT inet6_ntoa(CAST(c3 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c4) FROM t1;
SHOW WARNINGS;
SELECT inet6_ntoa(CAST(c4 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c5) FROM t1;
SHOW WARNINGS;
SELECT inet6_ntoa(CAST(c5 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c6) FROM t1;
SHOW WARNINGS;
SELECT inet6_ntoa(CAST(c6 AS BINARY(16))) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT inet6_ntoa(@nip6);
SET @nip= inet_aton('0:0:0:0:0:FFFF:127.0.0.1/96');
SHOW WARNINGS;
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT INTO t1 VALUES (@nip,@nip,@nip,@nip,@nip,@nip);
SELECT inet_ntoa(c1) FROM t1;
SELECT inet_ntoa(CAST(c1 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c2) FROM t1;
SELECT inet_ntoa(CAST(c2 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c3) FROM t1;
SELECT inet_ntoa(CAST(c3 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c4) FROM t1;
SELECT inet_ntoa(CAST(c4 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c5) FROM t1;
SELECT inet_ntoa(CAST(c5 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c6) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT @nip;
SELECT inet_ntoa(@nip);
SET @nip6= inet6_aton('0:0:0:0:0:FFFF:127.0.0.1/96');
SHOW WARNINGS;
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT IGNORE INTO t1 VALUES (@nip6,@nip6,@nip6,@nip6,@nip6,@nip6);
SELECT inet6_ntoa(c1) FROM t1;
SELECT inet6_ntoa(CAST(c1 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c2) FROM t1;
SELECT inet6_ntoa(CAST(c2 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c3) FROM t1;
SELECT inet6_ntoa(CAST(c3 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c4) FROM t1;
SELECT inet6_ntoa(CAST(c4 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c5) FROM t1;
SELECT inet6_ntoa(CAST(c5 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c6) FROM t1;
SELECT inet6_ntoa(CAST(c6 AS BINARY(16))) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT inet6_ntoa(@nip6);
SHOW /*!50002 FULL*/ TABLES;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!80000 SET SESSION information_schema_stats_expiry=0 */;
SET SESSION NET_READ_TIMEOUT= 86400, SESSION NET_WRITE_TIMEOUT= 86400;
SHOW VARIABLES LIKE 'gtid_mode';
SELECT LOGFILE_GROUP_NAME, FILE_NAME, TOTAL_EXTENTS, INITIAL_SIZE, ENGINE, EXTRA FROM INFORMATION_SCHEMA.FILES WHERE ENGINE = 'ndbcluster' AND FILE_TYPE = 'UNDO LOG' AND FILE_NAME IS NOT NULL AND LOGFILE_GROUP_NAME IS NOT NULL AND LOGFILE_GROUP_NAME IN (SELECT DISTINCT LOGFILE_GROUP_NAME FROM INFORMATION_SCHEMA.FILES WHERE ENGINE = 'ndbcluster' AND FILE_TYPE = 'DATAFILE' AND TABLESPACE_NAME IN (SELECT DISTINCT TABLESPACE_NAME FROM INFORMATION_SCHEMA.PARTITIONS WHERE TABLE_SCHEMA IN ('test'))) GROUP BY LOGFILE_GROUP_NAME, FILE_NAME, ENGINE, TOTAL_EXTENTS, INITIAL_SIZE ORDER BY LOGFILE_GROUP_NAME;
SELECT DISTINCT TABLESPACE_NAME, FILE_NAME, LOGFILE_GROUP_NAME, EXTENT_SIZE, INITIAL_SIZE, ENGINE FROM INFORMATION_SCHEMA.FILES WHERE FILE_TYPE = 'DATAFILE' AND TABLESPACE_NAME IN (SELECT DISTINCT TABLESPACE_NAME FROM INFORMATION_SCHEMA.PARTITIONS WHERE TABLE_SCHEMA IN ('test')) ORDER BY TABLESPACE_NAME, LOGFILE_GROUP_NAME;
SHOW VARIABLES LIKE 'ndbinfo\_version';
show tables;
UNLOCK TABLES;
show databases;
SELECT current_user();
SELECT user();
CREATE USER 'testuser'@'::ffff:127.0.0.1' IDENTIFIED BY <secret>;
GRANT ALL ON test.* TO testuser@'::FFFF:127.0.0.1';
SHOW GRANTS FOR testuser@'::FFFF:127.0.0.1';
SELECT USER();
SELECT current_user();
SHOW PROCESSLIST;
REVOKE ALL ON test.* FROM testuser@'::FFFF:127.0.0.1';
RENAME USER testuser@'::FFFF:127.0.0.1' to testuser1@'::FFFF:127.0.0.1';
SET PASSWORD FOR `testuser1`@`::ffff:127.0.0.1`=<secret>;
SELECT USER();
DROP USER testuser1@'::FFFF:127.0.0.1';
SET @nip= inet_aton('::FFFF:127.0.0.1/96');
SHOW WARNINGS;
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT INTO t1 VALUES (@nip,@nip,@nip,@nip,@nip,@nip);
SELECT inet_ntoa(c1) FROM t1;
SELECT inet_ntoa(CAST(c1 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c2) FROM t1;
SELECT inet_ntoa(CAST(c2 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c3) FROM t1;
SELECT inet_ntoa(CAST(c3 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c4) FROM t1;
SELECT inet_ntoa(CAST(c4 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c5) FROM t1;
SELECT inet_ntoa(CAST(c5 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c6) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT @nip;
SELECT inet_ntoa(@nip);
SET @nip6= inet6_aton('::FFFF:127.0.0.1/96');
SHOW WARNINGS;
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT IGNORE INTO t1 VALUES (@nip6,@nip6,@nip6,@nip6,@nip6,@nip6);
SELECT inet6_ntoa(c1) FROM t1;
SELECT inet6_ntoa(CAST(c1 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c2) FROM t1;
SELECT inet6_ntoa(CAST(c2 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c3) FROM t1;
SELECT inet6_ntoa(CAST(c3 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c4) FROM t1;
SELECT inet6_ntoa(CAST(c4 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c5) FROM t1;
SELECT inet6_ntoa(CAST(c5 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c6) FROM t1;
SELECT inet6_ntoa(CAST(c6 AS BINARY(16))) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT inet6_ntoa(@nip6);
DROP USER 'root'@'::1';
DROP USER 'root'@'127.0.0.1';
SHOW GLOBAL STATUS LIKE 'Threads_connected';
SELECT 1 <= 1;
SET GLOBAL log_output = "FILE";;