Guest DBMS identified: postgres
-----------
QUERY:
--
-- ADVISORY LOCKS
--

SELECT oid AS datoid FROM pg_database WHERE datname = current_database() \gset

BEGIN;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:


SELECT
	pg_advisory_xact_lock(1), pg_advisory_xact_lock_shared(2),
	pg_advisory_xact_lock(1, 1), pg_advisory_xact_lock_shared(2, 2);
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:


SELECT locktype, classid, objid, objsubid, mode, granted
	FROM pg_locks WHERE locktype = 'advisory' AND database = :datoid
	ORDER BY classid, objid, objsubid;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:



-- pg_advisory_unlock_all() shouldn/* REPLACED */ ''t release xact locks
SELECT pg_advisory_unlock_all();
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:


SELECT count(*) FROM pg_locks WHERE locktype = 'advisory' AND database = :datoid;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:



-- can/* REPLACED */ ''t unlock xact locks
SELECT
	pg_advisory_unlock(1), pg_advisory_unlock_shared(2),
	pg_advisory_unlock(1, 1), pg_advisory_unlock_shared(2, 2);
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:



-- automatically release xact locks at commit
COMMIT;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:


SELECT count(*) FROM pg_locks WHERE locktype = 'advisory' AND database = :datoid;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:



BEGIN;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:


-- holding both session and xact locks on the same objects, xact first
SELECT
	pg_advisory_xact_lock(1), pg_advisory_xact_lock_shared(2),
	pg_advisory_xact_lock(1, 1), pg_advisory_xact_lock_shared(2, 2);
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:


SELECT locktype, classid, objid, objsubid, mode, granted
	FROM pg_locks WHERE locktype = 'advisory' AND database = :datoid
	ORDER BY classid, objid, objsubid;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:


SELECT
	pg_advisory_lock(1), pg_advisory_lock_shared(2),
	pg_advisory_lock(1, 1), pg_advisory_lock_shared(2, 2);
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:


ROLLBACK;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:


SELECT locktype, classid, objid, objsubid, mode, granted
	FROM pg_locks WHERE locktype = 'advisory' AND database = :datoid
	ORDER BY classid, objid, objsubid;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:



-- unlocking session locks
SELECT
	pg_advisory_unlock(1), pg_advisory_unlock(1),
	pg_advisory_unlock_shared(2), pg_advisory_unlock_shared(2),
	pg_advisory_unlock(1, 1), pg_advisory_unlock(1, 1),
	pg_advisory_unlock_shared(2, 2), pg_advisory_unlock_shared(2, 2);
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:


SELECT count(*) FROM pg_locks WHERE locktype = 'advisory' AND database = :datoid;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:



BEGIN;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:


-- holding both session and xact locks on the same objects, session first
SELECT
	pg_advisory_lock(1), pg_advisory_lock_shared(2),
	pg_advisory_lock(1, 1), pg_advisory_lock_shared(2, 2);
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:


SELECT locktype, classid, objid, objsubid, mode, granted
	FROM pg_locks WHERE locktype = 'advisory' AND database = :datoid
	ORDER BY classid, objid, objsubid;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:


SELECT
	pg_advisory_xact_lock(1), pg_advisory_xact_lock_shared(2),
	pg_advisory_xact_lock(1, 1), pg_advisory_xact_lock_shared(2, 2);
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:


ROLLBACK;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:


SELECT locktype, classid, objid, objsubid, mode, granted
	FROM pg_locks WHERE locktype = 'advisory' AND database = :datoid
	ORDER BY classid, objid, objsubid;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:



-- releasing all session locks
SELECT pg_advisory_unlock_all();
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:


SELECT count(*) FROM pg_locks WHERE locktype = 'advisory' AND database = :datoid;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:



BEGIN;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:


-- grabbing txn locks multiple times

SELECT
	pg_advisory_xact_lock(1), pg_advisory_xact_lock(1),
	pg_advisory_xact_lock_shared(2), pg_advisory_xact_lock_shared(2),
	pg_advisory_xact_lock(1, 1), pg_advisory_xact_lock(1, 1),
	pg_advisory_xact_lock_shared(2, 2), pg_advisory_xact_lock_shared(2, 2);
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:


SELECT locktype, classid, objid, objsubid, mode, granted
	FROM pg_locks WHERE locktype = 'advisory' AND database = :datoid
	ORDER BY classid, objid, objsubid;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:


COMMIT;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:


SELECT count(*) FROM pg_locks WHERE locktype = 'advisory' AND database = :datoid;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:


-- grabbing session locks multiple times

SELECT
	pg_advisory_lock(1), pg_advisory_lock(1),
	pg_advisory_lock_shared(2), pg_advisory_lock_shared(2),
	pg_advisory_lock(1, 1), pg_advisory_lock(1, 1),
	pg_advisory_lock_shared(2, 2), pg_advisory_lock_shared(2, 2);
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:


SELECT locktype, classid, objid, objsubid, mode, granted
	FROM pg_locks WHERE locktype = 'advisory' AND database = :datoid
	ORDER BY classid, objid, objsubid;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:


SELECT
	pg_advisory_unlock(1), pg_advisory_unlock(1),
	pg_advisory_unlock_shared(2), pg_advisory_unlock_shared(2),
	pg_advisory_unlock(1, 1), pg_advisory_unlock(1, 1),
	pg_advisory_unlock_shared(2, 2), pg_advisory_unlock_shared(2, 2);
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:


SELECT count(*) FROM pg_locks WHERE locktype = 'advisory' AND database = :datoid;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:


-- .. and releasing them all at once

SELECT
	pg_advisory_lock(1), pg_advisory_lock(1),
	pg_advisory_lock_shared(2), pg_advisory_lock_shared(2),
	pg_advisory_lock(1, 1), pg_advisory_lock(1, 1),
	pg_advisory_lock_shared(2, 2), pg_advisory_lock_shared(2, 2);
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:


SELECT locktype, classid, objid, objsubid, mode, granted
	FROM pg_locks WHERE locktype = 'advisory' AND database = :datoid
	ORDER BY classid, objid, objsubid;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:


SELECT pg_advisory_unlock_all();
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:


SELECT count(*) FROM pg_locks WHERE locktype = 'advisory' AND database = :datoid;
RESULT: [duckdb: SAME, mysql: SAME]
=========================================
Summary for test case advisory_lock/test.sql of postgres
=========================================

=================
Results for duckdb
SAME: 24 queries, which is 64.86%
DIFFERENT: 0 queries, which is 0.00%
ERROR: 13 queries, which is 35.14%

=================
Results for mysql
SAME: 25 queries, which is 67.57%
DIFFERENT: 0 queries, which is 0.00%
ERROR: 12 queries, which is 32.43%
