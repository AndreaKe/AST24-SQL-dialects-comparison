
-----------
QUERY:
--
-- AGGREGATES
--

-- directory paths are passed to us in environment variables
-- \getenv abs_srcdir PG_ABS_SRCDIR

-- avoid bit-exact output here because operations may not be bit-exact.
SET extra_float_digits = 0;
RESULT:
	ERROR - (1193, "Unknown system variable 'extra_float_digits'")

-----------
QUERY:


-- prepare some test data
CREATE TABLE aggtest (
	a 			int2,
	b			float4
);
RESULT:
	[]

-----------
QUERY:


-- \set filename /* REPLACED */ PG_ABS_SRCDIR '/data/agg.data'
COPY aggtest FROM /* REPLACED */ PG_ABS_SRCDIR '/data/agg.data';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'COPY aggtest FROM /* REPLACED */  '/home/keuscha/Documents/FS2024/AST/project/AS' at line 2")

-----------
QUERY:


ANALYZE aggtest;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'aggtest' at line 1")

-----------
QUERY:



SELECT avg(four) AS avg_1 FROM onek;
RESULT:
	ERROR - (1146, "Table 'test.onek' doesn't exist")

-----------
QUERY:


SELECT avg(a) AS avg_32 FROM aggtest WHERE a < 100;
RESULT:
	((None,),)

-----------
QUERY:


SELECT any_value(v) FROM (VALUES (1), (2), (3)) AS v (v);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(1), (2), (3)) AS v (v)' at line 1")

-----------
QUERY:

SELECT any_value(v) FROM (VALUES (NULL)) AS v (v);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(NULL)) AS v (v)' at line 1")

-----------
QUERY:

SELECT any_value(v) FROM (VALUES (NULL), (1), (2)) AS v (v);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(NULL), (1), (2)) AS v (v)' at line 1")

-----------
QUERY:

SELECT any_value(v) FROM (VALUES (array['hello', 'world'])) AS v (v);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(array['hello', 'world'])) AS v (v)' at line 1")

-----------
QUERY:


-- In 7.1, avg(float4) is computed using float8 arithmetic.
-- Round the result to 3 digits to avoid platform-specific results.

SELECT avg(b)::numeric(10,3) AS avg_107_943 FROM aggtest;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::numeric(10,3) AS avg_107_943 FROM aggtest' at line 4")

-----------
QUERY:


SELECT avg(gpa) AS avg_3_4 FROM ONLY student;
RESULT:
	ERROR - (1146, "Table 'test.ONLY' doesn't exist")

-----------
QUERY:



SELECT sum(four) AS sum_1500 FROM onek;
RESULT:
	ERROR - (1146, "Table 'test.onek' doesn't exist")

-----------
QUERY:

SELECT sum(a) AS sum_198 FROM aggtest;
RESULT:
	((None,),)

-----------
QUERY:

SELECT sum(b) AS avg_431_773 FROM aggtest;
RESULT:
	((None,),)

-----------
QUERY:

SELECT sum(gpa) AS avg_6_8 FROM ONLY student;
RESULT:
	ERROR - (1146, "Table 'test.ONLY' doesn't exist")

-----------
QUERY:


SELECT max(four) AS max_3 FROM onek;
RESULT:
	ERROR - (1146, "Table 'test.onek' doesn't exist")

-----------
QUERY:

SELECT max(a) AS max_100 FROM aggtest;
RESULT:
	((None,),)

-----------
QUERY:

SELECT max(aggtest.b) AS max_324_78 FROM aggtest;
RESULT:
	((None,),)

-----------
QUERY:

SELECT max(student.gpa) AS max_3_7 FROM student;
RESULT:
	ERROR - (1146, "Table 'test.student' doesn't exist")

-----------
QUERY:


SELECT stddev_pop(b) FROM aggtest;
RESULT:
	((None,),)

-----------
QUERY:

SELECT stddev_samp(b) FROM aggtest;
RESULT:
	((None,),)

-----------
QUERY:

SELECT var_pop(b) FROM aggtest;
RESULT:
	((None,),)

-----------
QUERY:

SELECT var_samp(b) FROM aggtest;
RESULT:
	((None,),)

-----------
QUERY:


SELECT stddev_pop(b::numeric) FROM aggtest;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::numeric) FROM aggtest' at line 1")

-----------
QUERY:

SELECT stddev_samp(b::numeric) FROM aggtest;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::numeric) FROM aggtest' at line 1")

-----------
QUERY:

SELECT var_pop(b::numeric) FROM aggtest;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::numeric) FROM aggtest' at line 1")

-----------
QUERY:

SELECT var_samp(b::numeric) FROM aggtest;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::numeric) FROM aggtest' at line 1")

-----------
QUERY:


-- population variance is defined for a single tuple, sample variance
-- is not
SELECT var_pop(1.0::float8), var_samp(2.0::float8);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::float8), var_samp(2.0::float8)' at line 3")

-----------
QUERY:

SELECT stddev_pop(3.0::float8), stddev_samp(4.0::float8);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::float8), stddev_samp(4.0::float8)' at line 1")

-----------
QUERY:

SELECT var_pop('inf'::float8), var_samp('inf'::float8);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::float8), var_samp('inf'::float8)' at line 1")

-----------
QUERY:

SELECT stddev_pop('inf'::float8), stddev_samp('inf'::float8);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::float8), stddev_samp('inf'::float8)' at line 1")

-----------
QUERY:

SELECT var_pop('nan'::float8), var_samp('nan'::float8);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::float8), var_samp('nan'::float8)' at line 1")

-----------
QUERY:

SELECT stddev_pop('nan'::float8), stddev_samp('nan'::float8);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::float8), stddev_samp('nan'::float8)' at line 1")

-----------
QUERY:

SELECT var_pop(1.0::float4), var_samp(2.0::float4);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::float4), var_samp(2.0::float4)' at line 1")

-----------
QUERY:

SELECT stddev_pop(3.0::float4), stddev_samp(4.0::float4);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::float4), stddev_samp(4.0::float4)' at line 1")

-----------
QUERY:

SELECT var_pop('inf'::float4), var_samp('inf'::float4);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::float4), var_samp('inf'::float4)' at line 1")

-----------
QUERY:

SELECT stddev_pop('inf'::float4), stddev_samp('inf'::float4);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::float4), stddev_samp('inf'::float4)' at line 1")

-----------
QUERY:

SELECT var_pop('nan'::float4), var_samp('nan'::float4);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::float4), var_samp('nan'::float4)' at line 1")

-----------
QUERY:

SELECT stddev_pop('nan'::float4), stddev_samp('nan'::float4);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::float4), stddev_samp('nan'::float4)' at line 1")

-----------
QUERY:

SELECT var_pop(1.0::numeric), var_samp(2.0::numeric);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::numeric), var_samp(2.0::numeric)' at line 1")

-----------
QUERY:

SELECT stddev_pop(3.0::numeric), stddev_samp(4.0::numeric);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::numeric), stddev_samp(4.0::numeric)' at line 1")

-----------
QUERY:

SELECT var_pop('inf'::numeric), var_samp('inf'::numeric);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::numeric), var_samp('inf'::numeric)' at line 1")

-----------
QUERY:

SELECT stddev_pop('inf'::numeric), stddev_samp('inf'::numeric);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::numeric), stddev_samp('inf'::numeric)' at line 1")

-----------
QUERY:

SELECT var_pop('nan'::numeric), var_samp('nan'::numeric);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::numeric), var_samp('nan'::numeric)' at line 1")

-----------
QUERY:

SELECT stddev_pop('nan'::numeric), stddev_samp('nan'::numeric);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::numeric), stddev_samp('nan'::numeric)' at line 1")

-----------
QUERY:


-- verify correct results for null and NaN inputs
select sum(null::int4) from generate_series(1,3);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::int4) from generate_series(1,3)' at line 2")

-----------
QUERY:

select sum(null::int8) from generate_series(1,3);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::int8) from generate_series(1,3)' at line 1")

-----------
QUERY:

select sum(null::numeric) from generate_series(1,3);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::numeric) from generate_series(1,3)' at line 1")

-----------
QUERY:

select sum(null::float8) from generate_series(1,3);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::float8) from generate_series(1,3)' at line 1")

-----------
QUERY:

select avg(null::int4) from generate_series(1,3);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::int4) from generate_series(1,3)' at line 1")

-----------
QUERY:

select avg(null::int8) from generate_series(1,3);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::int8) from generate_series(1,3)' at line 1")

-----------
QUERY:

select avg(null::numeric) from generate_series(1,3);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::numeric) from generate_series(1,3)' at line 1")

-----------
QUERY:

select avg(null::float8) from generate_series(1,3);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::float8) from generate_series(1,3)' at line 1")

-----------
QUERY:

select sum('NaN'::numeric) from generate_series(1,3);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::numeric) from generate_series(1,3)' at line 1")

-----------
QUERY:

select avg('NaN'::numeric) from generate_series(1,3);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::numeric) from generate_series(1,3)' at line 1")

-----------
QUERY:


-- verify correct results for infinite inputs
SELECT sum(x::float8), avg(x::float8), var_pop(x::float8)
FROM (VALUES ('1'), ('infinity')) v(x);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::float8), avg(x::float8), var_pop(x::float8)\nFROM (VALUES ('1'), ('infinity')) ' at line 2")

-----------
QUERY:

SELECT sum(x::float8), avg(x::float8), var_pop(x::float8)
FROM (VALUES ('infinity'), ('1')) v(x);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::float8), avg(x::float8), var_pop(x::float8)\nFROM (VALUES ('infinity'), ('1')) ' at line 1")

-----------
QUERY:

SELECT sum(x::float8), avg(x::float8), var_pop(x::float8)
FROM (VALUES ('infinity'), ('infinity')) v(x);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::float8), avg(x::float8), var_pop(x::float8)\nFROM (VALUES ('infinity'), ('infin' at line 1")

-----------
QUERY:

SELECT sum(x::float8), avg(x::float8), var_pop(x::float8)
FROM (VALUES ('-infinity'), ('infinity')) v(x);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::float8), avg(x::float8), var_pop(x::float8)\nFROM (VALUES ('-infinity'), ('infi' at line 1")

-----------
QUERY:

SELECT sum(x::float8), avg(x::float8), var_pop(x::float8)
FROM (VALUES ('-infinity'), ('-infinity')) v(x);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::float8), avg(x::float8), var_pop(x::float8)\nFROM (VALUES ('-infinity'), ('-inf' at line 1")

-----------
QUERY:

SELECT sum(x::numeric), avg(x::numeric), var_pop(x::numeric)
FROM (VALUES ('1'), ('infinity')) v(x);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::numeric), avg(x::numeric), var_pop(x::numeric)\nFROM (VALUES ('1'), ('infinity'' at line 1")

-----------
QUERY:

SELECT sum(x::numeric), avg(x::numeric), var_pop(x::numeric)
FROM (VALUES ('infinity'), ('1')) v(x);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::numeric), avg(x::numeric), var_pop(x::numeric)\nFROM (VALUES ('infinity'), ('1'' at line 1")

-----------
QUERY:

SELECT sum(x::numeric), avg(x::numeric), var_pop(x::numeric)
FROM (VALUES ('infinity'), ('infinity')) v(x);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::numeric), avg(x::numeric), var_pop(x::numeric)\nFROM (VALUES ('infinity'), ('in' at line 1")

-----------
QUERY:

SELECT sum(x::numeric), avg(x::numeric), var_pop(x::numeric)
FROM (VALUES ('-infinity'), ('infinity')) v(x);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::numeric), avg(x::numeric), var_pop(x::numeric)\nFROM (VALUES ('-infinity'), ('i' at line 1")

-----------
QUERY:

SELECT sum(x::numeric), avg(x::numeric), var_pop(x::numeric)
FROM (VALUES ('-infinity'), ('-infinity')) v(x);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::numeric), avg(x::numeric), var_pop(x::numeric)\nFROM (VALUES ('-infinity'), ('-' at line 1")

-----------
QUERY:


-- test accuracy with a large input offset
SELECT avg(x::float8), var_pop(x::float8)
FROM (VALUES (100000003), (100000004), (100000006), (100000007)) v(x);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::float8), var_pop(x::float8)\nFROM (VALUES (100000003), (100000004), (100000006)' at line 2")

-----------
QUERY:

SELECT avg(x::float8), var_pop(x::float8)
FROM (VALUES (7000000000005), (7000000000007)) v(x);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::float8), var_pop(x::float8)\nFROM (VALUES (7000000000005), (7000000000007)) v(x' at line 1")

-----------
QUERY:


-- SQL2003 binary aggregates
SELECT regr_count(b, a) FROM aggtest;
RESULT:
	ERROR - (1305, 'FUNCTION test.regr_count does not exist')

-----------
QUERY:

SELECT regr_sxx(b, a) FROM aggtest;
RESULT:
	ERROR - (1305, 'FUNCTION test.regr_sxx does not exist')

-----------
QUERY:

SELECT regr_syy(b, a) FROM aggtest;
RESULT:
	ERROR - (1305, 'FUNCTION test.regr_syy does not exist')

-----------
QUERY:

SELECT regr_sxy(b, a) FROM aggtest;
RESULT:
	ERROR - (1305, 'FUNCTION test.regr_sxy does not exist')

-----------
QUERY:

SELECT regr_avgx(b, a), regr_avgy(b, a) FROM aggtest;
RESULT:
	ERROR - (1305, 'FUNCTION test.regr_avgx does not exist')

-----------
QUERY:

SELECT regr_r2(b, a) FROM aggtest;
RESULT:
	ERROR - (1305, 'FUNCTION test.regr_r2 does not exist')

-----------
QUERY:

SELECT regr_slope(b, a), regr_intercept(b, a) FROM aggtest;
RESULT:
	ERROR - (1305, 'FUNCTION test.regr_slope does not exist')

-----------
QUERY:

SELECT covar_pop(b, a), covar_samp(b, a) FROM aggtest;
RESULT:
	ERROR - (1305, 'FUNCTION test.covar_pop does not exist')

-----------
QUERY:

SELECT corr(b, a) FROM aggtest;
RESULT:
	ERROR - (1305, 'FUNCTION test.corr does not exist')

-----------
QUERY:


-- check single-tuple behavior
SELECT covar_pop(1::float8,2::float8), covar_samp(3::float8,4::float8);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::float8,2::float8), covar_samp(3::float8,4::float8)' at line 2")

-----------
QUERY:

SELECT covar_pop(1::float8,'inf'::float8), covar_samp(3::float8,'inf'::float8);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::float8,'inf'::float8), covar_samp(3::float8,'inf'::float8)' at line 1")

-----------
QUERY:

SELECT covar_pop(1::float8,'nan'::float8), covar_samp(3::float8,'nan'::float8);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::float8,'nan'::float8), covar_samp(3::float8,'nan'::float8)' at line 1")

-----------
QUERY:


-- test accum and combine functions directly
CREATE TABLE regr_test (x float8, y float8);
RESULT:
	[]

-----------
QUERY:

INSERT INTO regr_test VALUES (10,150),(20,250),(30,350),(80,540),(100,200);
RESULT:
	[]

-----------
QUERY:

SELECT count(*), sum(x), regr_sxx(y,x), sum(y),regr_syy(y,x), regr_sxy(y,x)
FROM regr_test WHERE x IN (10,20,30,80);
RESULT:
	ERROR - (1305, 'FUNCTION test.regr_sxx does not exist')

-----------
QUERY:

SELECT count(*), sum(x), regr_sxx(y,x), sum(y),regr_syy(y,x), regr_sxy(y,x)
FROM regr_test;
RESULT:
	ERROR - (1305, 'FUNCTION test.regr_sxx does not exist')

-----------
QUERY:

SELECT float8_accum('{4,140,2900}'::float8[], 100);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::float8[], 100)' at line 1")

-----------
QUERY:

SELECT float8_regr_accum('{4,140,2900,1290,83075,15050}'::float8[], 200, 100);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::float8[], 200, 100)' at line 1")

-----------
QUERY:

SELECT count(*), sum(x), regr_sxx(y,x), sum(y),regr_syy(y,x), regr_sxy(y,x)
FROM regr_test WHERE x IN (10,20,30);
RESULT:
	ERROR - (1305, 'FUNCTION test.regr_sxx does not exist')

-----------
QUERY:

SELECT count(*), sum(x), regr_sxx(y,x), sum(y),regr_syy(y,x), regr_sxy(y,x)
FROM regr_test WHERE x IN (80,100);
RESULT:
	ERROR - (1305, 'FUNCTION test.regr_sxx does not exist')

-----------
QUERY:

SELECT float8_combine('{3,60,200}'::float8[], '{0,0,0}'::float8[]);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::float8[], '{0,0,0}'::float8[])' at line 1")

-----------
QUERY:

SELECT float8_combine('{0,0,0}'::float8[], '{2,180,200}'::float8[]);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::float8[], '{2,180,200}'::float8[])' at line 1")

-----------
QUERY:

SELECT float8_combine('{3,60,200}'::float8[], '{2,180,200}'::float8[]);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::float8[], '{2,180,200}'::float8[])' at line 1")

-----------
QUERY:

SELECT float8_regr_combine('{3,60,200,750,20000,2000}'::float8[],
                           '{0,0,0,0,0,0}'::float8[]);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::float8[],\n                           '{0,0,0,0,0,0}'::float8[])' at line 1")

-----------
QUERY:

SELECT float8_regr_combine('{0,0,0,0,0,0}'::float8[],
                           '{2,180,200,740,57800,-3400}'::float8[]);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::float8[],\n                           '{2,180,200,740,57800,-3400}'::float8[])' at line 1")

-----------
QUERY:

SELECT float8_regr_combine('{3,60,200,750,20000,2000}'::float8[],
                           '{2,180,200,740,57800,-3400}'::float8[]);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::float8[],\n                           '{2,180,200,740,57800,-3400}'::float8[])' at line 1")

-----------
QUERY:

DROP TABLE regr_test;
RESULT:
	[]

-----------
QUERY:


-- test count, distinct
SELECT count(four) AS cnt_1000 FROM onek;
RESULT:
	ERROR - (1146, "Table 'test.onek' doesn't exist")

-----------
QUERY:

SELECT count(DISTINCT four) AS cnt_4 FROM onek;
RESULT:
	ERROR - (1146, "Table 'test.onek' doesn't exist")

-----------
QUERY:


select ten, count(*), sum(four) from onek
group by ten order by ten;
RESULT:
	ERROR - (1146, "Table 'test.onek' doesn't exist")

-----------
QUERY:


select ten, count(four), sum(DISTINCT four) from onek
group by ten order by ten;
RESULT:
	ERROR - (1146, "Table 'test.onek' doesn't exist")

-----------
QUERY:


-- user-defined aggregates
SELECT newavg(four) AS avg_1 FROM onek;
RESULT:
	ERROR - (1146, "Table 'test.onek' doesn't exist")

-----------
QUERY:

SELECT newsum(four) AS sum_1500 FROM onek;
RESULT:
	ERROR - (1146, "Table 'test.onek' doesn't exist")

-----------
QUERY:

SELECT newcnt(four) AS cnt_1000 FROM onek;
RESULT:
	ERROR - (1146, "Table 'test.onek' doesn't exist")

-----------
QUERY:

SELECT newcnt(*) AS cnt_1000 FROM onek;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '*) AS cnt_1000 FROM onek' at line 1")

-----------
QUERY:

SELECT oldcnt(*) AS cnt_1000 FROM onek;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '*) AS cnt_1000 FROM onek' at line 1")

-----------
QUERY:

SELECT sum2(q1,q2) FROM int8_tbl;
RESULT:
	ERROR - (1146, "Table 'test.int8_tbl' doesn't exist")

-----------
QUERY:


-- test for outer-level aggregates

-- this should work
select ten, sum(distinct four) from onek a
group by ten
having exists (select 1 from onek b where sum(distinct a.four) = b.four);
RESULT:
	ERROR - (1146, "Table 'test.onek' doesn't exist")

-----------
QUERY:


-- this should fail because subquery has an agg of its own in WHERE
select ten, sum(distinct four) from onek a
group by ten
having exists (select 1 from onek b
               where sum(distinct a.four + b.four) = b.four);
RESULT:
	ERROR - (1146, "Table 'test.onek' doesn't exist")

-----------
QUERY:


-- Test handling of sublinks within outer-level aggregates.
-- Per bug report from Daniel Grace.
select
  (select max((select i.unique2 from tenk1 i where i.unique1 = o.unique1)))
from tenk1 o;
RESULT:
	ERROR - (1146, "Table 'test.tenk1' doesn't exist")

-----------
QUERY:


-- Test handling of Params within aggregate arguments in hashed aggregation.
-- Per bug report from Jeevan Chalke.
explain (verbose, costs off)
select s1, s2, sm
from generate_series(1, 3) s1,
     lateral (select s2, sum(s1 + s2) sm
              from generate_series(1, 3) s2 group by s2) ss
order by 1, 2;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'verbose, costs off)\nselect s1, s2, sm\nfrom generate_series(1, 3) s1,\n     latera' at line 3")

-----------
QUERY:

select s1, s2, sm
from generate_series(1, 3) s1,
     lateral (select s2, sum(s1 + s2) sm
              from generate_series(1, 3) s2 group by s2) ss
order by 1, 2;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(1, 3) s1,\n     lateral (select s2, sum(s1 + s2) sm\n              from generate_' at line 2")

-----------
QUERY:


explain (verbose, costs off)
select array(select sum(x+y) s
            from generate_series(1,3) y group by y order by s)
  from generate_series(1,3) x;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'verbose, costs off)\nselect array(select sum(x+y) s\n            from generate_ser' at line 1")

-----------
QUERY:

select array(select sum(x+y) s
            from generate_series(1,3) y group by y order by s)
  from generate_series(1,3) x;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(select sum(x+y) s\n            from generate_series(1,3) y group by y order by s' at line 1")

-----------
QUERY:


--
-- test for bitwise integer aggregates
--
CREATE TEMPORARY TABLE bitwise_test(
  i2 INT2,
  i4 INT4,
  i8 INT8,
  i INTEGER,
  x INT2,
  y BIT(4)
);
RESULT:
	[]

-----------
QUERY:


-- empty case
SELECT
  BIT_AND(i2) AS "?",
  BIT_OR(i4)  AS "?",
  BIT_XOR(i8) AS "?"
FROM bitwise_test;
RESULT:
	((18446744073709551615, 0, 0),)

-----------
QUERY:


COPY bitwise_test FROM STDIN NULL 'null';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'COPY bitwise_test FROM STDIN NULL 'null'' at line 1")

-----------
QUERY:

1	1	1	1	1	B0101
3	3	3	null	2	B0100
7	7	7	3	4	B1100
-- \.

SELECT
  BIT_AND(i2) AS "1",
  BIT_AND(i4) AS "1",
  BIT_AND(i8) AS "1",
  BIT_AND(i)  AS "?",
  BIT_AND(x)  AS "0",
  BIT_AND(y)  AS "0100",

  BIT_OR(i2)  AS "7",
  BIT_OR(i4)  AS "7",
  BIT_OR(i8)  AS "7",
  BIT_OR(i)   AS "?",
  BIT_OR(x)   AS "7",
  BIT_OR(y)   AS "1101",

  BIT_XOR(i2) AS "5",
  BIT_XOR(i4) AS "5",
  BIT_XOR(i8) AS "5",
  BIT_XOR(i)  AS "?",
  BIT_XOR(x)  AS "7",
  BIT_XOR(y)  AS "1101"
FROM bitwise_test;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '1\t1\t1\t1\t1\tB0101\n3\t3\t3\tnull\t2\tB0100\n7\t7\t7\t3\t4\tB1100\n-- \\.\n\nSELECT\n  BIT_AND(i2) A' at line 1")

-----------
QUERY:


--
-- test boolean aggregates
--
-- first test all possible transition and final states

SELECT
  -- boolean and transitions
  -- null because strict
  booland_statefunc(NULL, NULL)  IS NULL AS "t",
  booland_statefunc(TRUE, NULL)  IS NULL AS "t",
  booland_statefunc(FALSE, NULL) IS NULL AS "t",
  booland_statefunc(NULL, TRUE)  IS NULL AS "t",
  booland_statefunc(NULL, FALSE) IS NULL AS "t",
  -- and actual computations
  booland_statefunc(TRUE, TRUE) AS "t",
  NOT booland_statefunc(TRUE, FALSE) AS "t",
  NOT booland_statefunc(FALSE, TRUE) AS "t",
  NOT booland_statefunc(FALSE, FALSE) AS "t";
RESULT:
	ERROR - (1305, 'FUNCTION test.booland_statefunc does not exist')

-----------
QUERY:


SELECT
  -- boolean or transitions
  -- null because strict
  boolor_statefunc(NULL, NULL)  IS NULL AS "t",
  boolor_statefunc(TRUE, NULL)  IS NULL AS "t",
  boolor_statefunc(FALSE, NULL) IS NULL AS "t",
  boolor_statefunc(NULL, TRUE)  IS NULL AS "t",
  boolor_statefunc(NULL, FALSE) IS NULL AS "t",
  -- actual computations
  boolor_statefunc(TRUE, TRUE) AS "t",
  boolor_statefunc(TRUE, FALSE) AS "t",
  boolor_statefunc(FALSE, TRUE) AS "t",
  NOT boolor_statefunc(FALSE, FALSE) AS "t";
RESULT:
	ERROR - (1305, 'FUNCTION test.boolor_statefunc does not exist')

-----------
QUERY:


CREATE TEMPORARY TABLE bool_test(
  b1 BOOL,
  b2 BOOL,
  b3 BOOL,
  b4 BOOL);
RESULT:
	[]

-----------
QUERY:


-- empty case
SELECT
  BOOL_AND(b1)   AS "n",
  BOOL_OR(b3)    AS "n"
FROM bool_test;
RESULT:
	ERROR - (1305, 'FUNCTION test.BOOL_AND does not exist')

-----------
QUERY:


COPY bool_test FROM STDIN NULL 'null';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'COPY bool_test FROM STDIN NULL 'null'' at line 1")

-----------
QUERY:

TRUE	null	FALSE	null
FALSE	TRUE	null	null
null	TRUE	FALSE	null
-- \.

SELECT
  BOOL_AND(b1)     AS "f",
  BOOL_AND(b2)     AS "t",
  BOOL_AND(b3)     AS "f",
  BOOL_AND(b4)     AS "n",
  BOOL_AND(NOT b2) AS "f",
  BOOL_AND(NOT b3) AS "t"
FROM bool_test;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'TRUE\tnull\tFALSE\tnull\nFALSE\tTRUE\tnull\tnull\nnull\tTRUE\tFALSE\tnull\n-- \\.\n\nSELECT\n  B' at line 1")

-----------
QUERY:


SELECT
  EVERY(b1)     AS "f",
  EVERY(b2)     AS "t",
  EVERY(b3)     AS "f",
  EVERY(b4)     AS "n",
  EVERY(NOT b2) AS "f",
  EVERY(NOT b3) AS "t"
FROM bool_test;
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(b1)     AS "f",\n  EVERY(b2)     AS "t",\n  EVERY(b3)     AS "f",\n  EVERY(b4)    \' at line 2')

-----------
QUERY:


SELECT
  BOOL_OR(b1)      AS "t",
  BOOL_OR(b2)      AS "t",
  BOOL_OR(b3)      AS "f",
  BOOL_OR(b4)      AS "n",
  BOOL_OR(NOT b2)  AS "f",
  BOOL_OR(NOT b3)  AS "t"
FROM bool_test;
RESULT:
	ERROR - (1305, 'FUNCTION test.BOOL_OR does not exist')

-----------
QUERY:


--
-- Test cases that should be optimized into indexscans instead of
-- the generic aggregate implementation.
--

-- Basic cases
explain (costs off)
  select min(unique1) from tenk1;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'costs off)\n  select min(unique1) from tenk1' at line 7")

-----------
QUERY:

select min(unique1) from tenk1;
RESULT:
	ERROR - (1146, "Table 'test.tenk1' doesn't exist")

-----------
QUERY:

explain (costs off)
  select max(unique1) from tenk1;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'costs off)\n  select max(unique1) from tenk1' at line 1")

-----------
QUERY:

select max(unique1) from tenk1;
RESULT:
	ERROR - (1146, "Table 'test.tenk1' doesn't exist")

-----------
QUERY:

explain (costs off)
  select max(unique1) from tenk1 where unique1 < 42;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'costs off)\n  select max(unique1) from tenk1 where unique1 < 42' at line 1")

-----------
QUERY:

select max(unique1) from tenk1 where unique1 < 42;
RESULT:
	ERROR - (1146, "Table 'test.tenk1' doesn't exist")

-----------
QUERY:

explain (costs off)
  select max(unique1) from tenk1 where unique1 > 42;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'costs off)\n  select max(unique1) from tenk1 where unique1 > 42' at line 1")

-----------
QUERY:

select max(unique1) from tenk1 where unique1 > 42;
RESULT:
	ERROR - (1146, "Table 'test.tenk1' doesn't exist")

-----------
QUERY:


-- the planner may choose a generic aggregate here if parallel query is
-- enabled, since that plan will be parallel safe and the /* REPLACED */ ''optimized/* REPLACED */ ''
-- plan, which has almost identical cost, will not be.  we want to test
-- the optimized plan, so temporarily disable parallel query.
begin;
RESULT:
	[]

-----------
QUERY:

set local max_parallel_workers_per_gather = 0;
RESULT:
	ERROR - (1193, "Unknown system variable 'max_parallel_workers_per_gather'")

-----------
QUERY:

explain (costs off)
  select max(unique1) from tenk1 where unique1 > 42000;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'costs off)\n  select max(unique1) from tenk1 where unique1 > 42000' at line 1")

-----------
QUERY:

select max(unique1) from tenk1 where unique1 > 42000;
RESULT:
	ERROR - (1146, "Table 'test.tenk1' doesn't exist")

-----------
QUERY:

rollback;
RESULT:
	[]

-----------
QUERY:


-- multi-column index (uses tenk1_thous_tenthous)
explain (costs off)
  select max(tenthous) from tenk1 where thousand = 33;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'costs off)\n  select max(tenthous) from tenk1 where thousand = 33' at line 2")

-----------
QUERY:

select max(tenthous) from tenk1 where thousand = 33;
RESULT:
	ERROR - (1146, "Table 'test.tenk1' doesn't exist")

-----------
QUERY:

explain (costs off)
  select min(tenthous) from tenk1 where thousand = 33;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'costs off)\n  select min(tenthous) from tenk1 where thousand = 33' at line 1")

-----------
QUERY:

select min(tenthous) from tenk1 where thousand = 33;
RESULT:
	ERROR - (1146, "Table 'test.tenk1' doesn't exist")

-----------
QUERY:


-- check parameter propagation into an indexscan subquery
explain (costs off)
  select f1, (select min(unique1) from tenk1 where unique1 > f1) AS gt
    from int4_tbl;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'costs off)\n  select f1, (select min(unique1) from tenk1 where unique1 > f1) AS g' at line 2")

-----------
QUERY:

select f1, (select min(unique1) from tenk1 where unique1 > f1) AS gt
  from int4_tbl;
RESULT:
	ERROR - (1146, "Table 'test.int4_tbl' doesn't exist")

-----------
QUERY:


-- check some cases that were handled incorrectly in 8.3.0
explain (costs off)
  select distinct max(unique2) from tenk1;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'costs off)\n  select distinct max(unique2) from tenk1' at line 2")

-----------
QUERY:

select distinct max(unique2) from tenk1;
RESULT:
	ERROR - (1146, "Table 'test.tenk1' doesn't exist")

-----------
QUERY:

explain (costs off)
  select max(unique2) from tenk1 order by 1;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'costs off)\n  select max(unique2) from tenk1 order by 1' at line 1")

-----------
QUERY:

select max(unique2) from tenk1 order by 1;
RESULT:
	ERROR - (1146, "Table 'test.tenk1' doesn't exist")

-----------
QUERY:

explain (costs off)
  select max(unique2) from tenk1 order by max(unique2);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'costs off)\n  select max(unique2) from tenk1 order by max(unique2)' at line 1")

-----------
QUERY:

select max(unique2) from tenk1 order by max(unique2);
RESULT:
	ERROR - (1146, "Table 'test.tenk1' doesn't exist")

-----------
QUERY:

explain (costs off)
  select max(unique2) from tenk1 order by max(unique2)+1;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'costs off)\n  select max(unique2) from tenk1 order by max(unique2)+1' at line 1")

-----------
QUERY:

select max(unique2) from tenk1 order by max(unique2)+1;
RESULT:
	ERROR - (1146, "Table 'test.tenk1' doesn't exist")

-----------
QUERY:

explain (costs off)
  select max(unique2), generate_series(1,3) as g from tenk1 order by g desc;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'costs off)\n  select max(unique2), generate_series(1,3) as g from tenk1 order by ' at line 1")

-----------
QUERY:

select max(unique2), generate_series(1,3) as g from tenk1 order by g desc;
RESULT:
	ERROR - (1146, "Table 'test.tenk1' doesn't exist")

-----------
QUERY:


-- interesting corner case: constant gets optimized into a seqscan
explain (costs off)
  select max(100) from tenk1;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'costs off)\n  select max(100) from tenk1' at line 2")

-----------
QUERY:

select max(100) from tenk1;
RESULT:
	ERROR - (1146, "Table 'test.tenk1' doesn't exist")

-----------
QUERY:


-- try it on an inheritance tree
create table minmaxtest(f1 int);
RESULT:
	[]

-----------
QUERY:

create table minmaxtest1() inherits (minmaxtest);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ') inherits (minmaxtest)' at line 1")

-----------
QUERY:

create table minmaxtest2() inherits (minmaxtest);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ') inherits (minmaxtest)' at line 1")

-----------
QUERY:

create table minmaxtest3() inherits (minmaxtest);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ') inherits (minmaxtest)' at line 1")

-----------
QUERY:

create index minmaxtesti on minmaxtest(f1);
RESULT:
	[]

-----------
QUERY:

create index minmaxtest1i on minmaxtest1(f1);
RESULT:
	ERROR - (1146, "Table 'test.minmaxtest1' doesn't exist")

-----------
QUERY:

create index minmaxtest2i on minmaxtest2(f1 desc);
RESULT:
	ERROR - (1146, "Table 'test.minmaxtest2' doesn't exist")

-----------
QUERY:

create index minmaxtest3i on minmaxtest3(f1) where f1 is not null;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'where f1 is not null' at line 1")

-----------
QUERY:


insert into minmaxtest values(11), (12);
RESULT:
	[]

-----------
QUERY:

insert into minmaxtest1 values(13), (14);
RESULT:
	ERROR - (1146, "Table 'test.minmaxtest1' doesn't exist")

-----------
QUERY:

insert into minmaxtest2 values(15), (16);
RESULT:
	ERROR - (1146, "Table 'test.minmaxtest2' doesn't exist")

-----------
QUERY:

insert into minmaxtest3 values(17), (18);
RESULT:
	ERROR - (1146, "Table 'test.minmaxtest3' doesn't exist")

-----------
QUERY:


explain (costs off)
  select min(f1), max(f1) from minmaxtest;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'costs off)\n  select min(f1), max(f1) from minmaxtest' at line 1")

-----------
QUERY:

select min(f1), max(f1) from minmaxtest;
RESULT:
	((11, 12),)

-----------
QUERY:


-- DISTINCT doesn/* REPLACED */ ''t do anything useful here, but it shouldn/* REPLACED */ ''t fail
explain (costs off)
  select distinct min(f1), max(f1) from minmaxtest;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'costs off)\n  select distinct min(f1), max(f1) from minmaxtest' at line 2")

-----------
QUERY:

select distinct min(f1), max(f1) from minmaxtest;
RESULT:
	((11, 12),)

-----------
QUERY:


drop table minmaxtest cascade;
RESULT:
	[]

-----------
QUERY:


-- check for correct detection of nested-aggregate errors
select max(min(unique1)) from tenk1;
RESULT:
	ERROR - (1146, "Table 'test.tenk1' doesn't exist")

-----------
QUERY:

select (select max(min(unique1)) from int8_tbl) from tenk1;
RESULT:
	ERROR - (1146, "Table 'test.tenk1' doesn't exist")

-----------
QUERY:

select avg((select avg(a1.col1 order by (select avg(a2.col2) from tenk1 a3))
            from tenk1 a1(col1)))
from tenk1 a2(col2);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'order by (select avg(a2.col2) from tenk1 a3))\n            from tenk1 a1(col1)))\n' at line 1")

-----------
QUERY:


--
-- Test removal of redundant GROUP BY columns
--

create temp table t1 (a int, b int, c int, d int, primary key (a, b));
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'temp table t1 (a int, b int, c int, d int, primary key (a, b))' at line 5")

-----------
QUERY:

create temp table t2 (x int, y int, z int, primary key (x, y));
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'temp table t2 (x int, y int, z int, primary key (x, y))' at line 1")

-----------
QUERY:

create temp table t3 (a int, b int, c int, primary key(a, b) deferrable);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'temp table t3 (a int, b int, c int, primary key(a, b) deferrable)' at line 1")

-----------
QUERY:


-- Non-primary-key columns can be removed from GROUP BY
explain (costs off) select * from t1 group by a,b,c,d;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'costs off) select * from t1 group by a,b,c,d' at line 2")

-----------
QUERY:


-- No removal can happen if the complete PK is not present in GROUP BY
explain (costs off) select a,c from t1 group by a,c,d;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'costs off) select a,c from t1 group by a,c,d' at line 2")

-----------
QUERY:


-- Test removal across multiple relations
explain (costs off) select *
from t1 inner join t2 on t1.a = t2.x and t1.b = t2.y
group by t1.a,t1.b,t1.c,t1.d,t2.x,t2.y,t2.z;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'costs off) select *\nfrom t1 inner join t2 on t1.a = t2.x and t1.b = t2.y\ngroup b' at line 2")

-----------
QUERY:


-- Test case where t1 can be optimized but not t2
explain (costs off) select t1.*,t2.x,t2.z
from t1 inner join t2 on t1.a = t2.x and t1.b = t2.y
group by t1.a,t1.b,t1.c,t1.d,t2.x,t2.z;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'costs off) select t1.*,t2.x,t2.z\nfrom t1 inner join t2 on t1.a = t2.x and t1.b =' at line 2")

-----------
QUERY:


-- Cannot optimize when PK is deferrable
explain (costs off) select * from t3 group by a,b,c;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'costs off) select * from t3 group by a,b,c' at line 2")

-----------
QUERY:


create temp table t1c () inherits (t1);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'temp table t1c () inherits (t1)' at line 1")

-----------
QUERY:


-- Ensure we don/* REPLACED */ ''t remove any columns when t1 has a child table
explain (costs off) select * from t1 group by a,b,c,d;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'costs off) select * from t1 group by a,b,c,d' at line 2")

-----------
QUERY:


-- Okay to remove columns if we/* REPLACED */ ''re only querying the parent.
explain (costs off) select * from only t1 group by a,b,c,d;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'costs off) select * from only t1 group by a,b,c,d' at line 2")

-----------
QUERY:


create temp table p_t1 (
  a int,
  b int,
  c int,
  d int,
  primary key(a,b)
) partition by list(a);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'temp table p_t1 (\n  a int,\n  b int,\n  c int,\n  d int,\n  primary key(a,b)\n) parti' at line 1")

-----------
QUERY:

create temp table p_t1_1 partition of p_t1 for values in(1);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'temp table p_t1_1 partition of p_t1 for values in(1)' at line 1")

-----------
QUERY:

create temp table p_t1_2 partition of p_t1 for values in(2);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'temp table p_t1_2 partition of p_t1 for values in(2)' at line 1")

-----------
QUERY:


-- Ensure we can remove non-PK columns for partitioned tables.
explain (costs off) select * from p_t1 group by a,b,c,d;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'costs off) select * from p_t1 group by a,b,c,d' at line 2")

-----------
QUERY:


drop table t1 cascade;
RESULT:
	ERROR - (1051, "Unknown table 'test.t1'")

-----------
QUERY:

drop table t2;
RESULT:
	ERROR - (1051, "Unknown table 'test.t2'")

-----------
QUERY:

drop table t3;
RESULT:
	ERROR - (1051, "Unknown table 'test.t3'")

-----------
QUERY:

drop table p_t1;
RESULT:
	ERROR - (1051, "Unknown table 'test.p_t1'")

-----------
QUERY:


--
-- Test GROUP BY matching of join columns that are type-coerced due to USING
--

create temp table t1(f1 int, f2 int);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'temp table t1(f1 int, f2 int)' at line 5")

-----------
QUERY:

create temp table t2(f1 bigint, f2 oid);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'temp table t2(f1 bigint, f2 oid)' at line 1")

-----------
QUERY:


select f1 from t1 left join t2 using (f1) group by f1;
RESULT:
	ERROR - (1146, "Table 'test.t1' doesn't exist")

-----------
QUERY:

select f1 from t1 left join t2 using (f1) group by t1.f1;
RESULT:
	ERROR - (1146, "Table 'test.t1' doesn't exist")

-----------
QUERY:

select t1.f1 from t1 left join t2 using (f1) group by t1.f1;
RESULT:
	ERROR - (1146, "Table 'test.t1' doesn't exist")

-----------
QUERY:

-- only this one should fail:
select t1.f1 from t1 left join t2 using (f1) group by f1;
RESULT:
	ERROR - (1146, "Table 'test.t1' doesn't exist")

-----------
QUERY:


-- check case where we have to inject nullingrels into coerced join alias
select f1, count(*) from
t1 x(x0,x1) left join (t1 left join t2 using(f1)) on (x0 = 0)
group by f1;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(x0,x1) left join (t1 left join t2 using(f1)) on (x0 = 0)\ngroup by f1' at line 3")

-----------
QUERY:


-- same, for a RelabelType coercion
select f2, count(*) from
t1 x(x0,x1) left join (t1 left join t2 using(f2)) on (x0 = 0)
group by f2;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(x0,x1) left join (t1 left join t2 using(f2)) on (x0 = 0)\ngroup by f2' at line 3")

-----------
QUERY:


drop table t1, t2;
RESULT:
	ERROR - (1051, "Unknown table 'test.t1,test.t2'")

-----------
QUERY:


--
-- Test planner/* REPLACED */ ''s selection of pathkeys for ORDER BY aggregates
--

-- Ensure we order by four.  This suits the most aggregate functions.
explain (costs off)
select sum(two order by two),max(four order by four), min(four order by four)
from tenk1;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'costs off)\nselect sum(two order by two),max(four order by four), min(four order ' at line 6")

-----------
QUERY:


-- Ensure we order by two.  It/* REPLACED */ ''s a tie between ordering by two and four but
-- we tiebreak on the aggregate/* REPLACED */ ''s position.
explain (costs off)
select
  sum(two order by two), max(four order by four),
  min(four order by four), max(two order by two)
from tenk1;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'costs off)\nselect\n  sum(two order by two), max(four order by four),\n  min(four o' at line 3")

-----------
QUERY:


-- Similar to above, but tiebreak on ordering by four
explain (costs off)
select
  max(four order by four), sum(two order by two),
  min(four order by four), max(two order by two)
from tenk1;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'costs off)\nselect\n  max(four order by four), sum(two order by two),\n  min(four o' at line 2")

-----------
QUERY:


-- Ensure this one orders by ten since there are 3 aggregates that require ten
-- vs two that suit two and four.
explain (costs off)
select
  max(four order by four), sum(two order by two),
  min(four order by four), max(two order by two),
  sum(ten order by ten), min(ten order by ten), max(ten order by ten)
from tenk1;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'costs off)\nselect\n  max(four order by four), sum(two order by two),\n  min(four o' at line 3")

-----------
QUERY:


-- Try a case involving a GROUP BY clause where the GROUP BY column is also
-- part of an aggregate/* REPLACED */ ''s ORDER BY clause.  We want a sort order that works
-- for the GROUP BY along with the first and the last aggregate.
explain (costs off)
select
  sum(unique1 order by ten, two), sum(unique1 order by four),
  sum(unique1 order by two, four)
from tenk1
group by ten;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'costs off)\nselect\n  sum(unique1 order by ten, two), sum(unique1 order by four),\n' at line 4")

-----------
QUERY:


-- Ensure that we never choose to provide presorted input to an Aggref with
-- a volatile function in the ORDER BY / DISTINCT clause.  We want to ensure
-- these sorts are performed individually rather than at the query level.
explain (costs off)
select
  sum(unique1 order by two), sum(unique1 order by four),
  sum(unique1 order by four, two), sum(unique1 order by two, random()),
  sum(unique1 order by two, random(), random() + 1)
from tenk1
group by ten;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'costs off)\nselect\n  sum(unique1 order by two), sum(unique1 order by four),\n  sum' at line 4")

-----------
QUERY:


-- Ensure consecutive NULLs are properly treated as distinct from each other
select array_agg(distinct val)
from (select null as val from generate_series(1, 2));
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'distinct val)\nfrom (select null as val from generate_series(1, 2))' at line 2")

-----------
QUERY:


-- Ensure no ordering is requested when enable_presorted_aggregate is off
set enable_presorted_aggregate to off;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'to off' at line 2")

-----------
QUERY:

explain (costs off)
select sum(two order by two) from tenk1;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'costs off)\nselect sum(two order by two) from tenk1' at line 1")

-----------
QUERY:

reset enable_presorted_aggregate;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'enable_presorted_aggregate' at line 1")

-----------
QUERY:


--
-- Test combinations of DISTINCT and/or ORDER BY
--

select array_agg(a order by b)
  from (values (1,4),(2,3),(3,1),(4,2)) v(a,b);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'order by b)\n  from (values (1,4),(2,3),(3,1),(4,2)) v(a,b)' at line 5")

-----------
QUERY:

select array_agg(a order by a)
  from (values (1,4),(2,3),(3,1),(4,2)) v(a,b);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'order by a)\n  from (values (1,4),(2,3),(3,1),(4,2)) v(a,b)' at line 1")

-----------
QUERY:

select array_agg(a order by a desc)
  from (values (1,4),(2,3),(3,1),(4,2)) v(a,b);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'order by a desc)\n  from (values (1,4),(2,3),(3,1),(4,2)) v(a,b)' at line 1")

-----------
QUERY:

select array_agg(b order by a desc)
  from (values (1,4),(2,3),(3,1),(4,2)) v(a,b);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'order by a desc)\n  from (values (1,4),(2,3),(3,1),(4,2)) v(a,b)' at line 1")

-----------
QUERY:


select array_agg(distinct a)
  from (values (1),(2),(1),(3),(null),(2)) v(a);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'distinct a)\n  from (values (1),(2),(1),(3),(null),(2)) v(a)' at line 1")

-----------
QUERY:

select array_agg(distinct a order by a)
  from (values (1),(2),(1),(3),(null),(2)) v(a);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'distinct a order by a)\n  from (values (1),(2),(1),(3),(null),(2)) v(a)' at line 1")

-----------
QUERY:

select array_agg(distinct a order by a desc)
  from (values (1),(2),(1),(3),(null),(2)) v(a);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'distinct a order by a desc)\n  from (values (1),(2),(1),(3),(null),(2)) v(a)' at line 1")

-----------
QUERY:

select array_agg(distinct a order by a desc nulls last)
  from (values (1),(2),(1),(3),(null),(2)) v(a);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'distinct a order by a desc nulls last)\n  from (values (1),(2),(1),(3),(null),(2)' at line 1")

-----------
QUERY:


-- multi-arg aggs, strict/nonstrict, distinct/order by

select aggfstr(a,b,c)
  from (values (1,3,'foo'),(0,null,null),(2,2,'bar'),(3,1,'baz')) v(a,b,c);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(1,3,'foo'),(0,null,null),(2,2,'bar'),(3,1,'baz')) v(a,b,c)' at line 4")

-----------
QUERY:

select aggfns(a,b,c)
  from (values (1,3,'foo'),(0,null,null),(2,2,'bar'),(3,1,'baz')) v(a,b,c);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(1,3,'foo'),(0,null,null),(2,2,'bar'),(3,1,'baz')) v(a,b,c)' at line 2")

-----------
QUERY:


select aggfstr(distinct a,b,c)
  from (values (1,3,'foo'),(0,null,null),(2,2,'bar'),(3,1,'baz')) v(a,b,c),
       generate_series(1,3) i;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'distinct a,b,c)\n  from (values (1,3,'foo'),(0,null,null),(2,2,'bar'),(3,1,'baz')' at line 1")

-----------
QUERY:

select aggfns(distinct a,b,c)
  from (values (1,3,'foo'),(0,null,null),(2,2,'bar'),(3,1,'baz')) v(a,b,c),
       generate_series(1,3) i;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'distinct a,b,c)\n  from (values (1,3,'foo'),(0,null,null),(2,2,'bar'),(3,1,'baz')' at line 1")

-----------
QUERY:


select aggfstr(distinct a,b,c order by b)
  from (values (1,3,'foo'),(0,null,null),(2,2,'bar'),(3,1,'baz')) v(a,b,c),
       generate_series(1,3) i;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'distinct a,b,c order by b)\n  from (values (1,3,'foo'),(0,null,null),(2,2,'bar'),' at line 1")

-----------
QUERY:

select aggfns(distinct a,b,c order by b)
  from (values (1,3,'foo'),(0,null,null),(2,2,'bar'),(3,1,'baz')) v(a,b,c),
       generate_series(1,3) i;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'distinct a,b,c order by b)\n  from (values (1,3,'foo'),(0,null,null),(2,2,'bar'),' at line 1")

-----------
QUERY:


-- test specific code paths

select aggfns(distinct a,a,c order by c using ~<~,a)
  from (values (1,3,'foo'),(0,null,null),(2,2,'bar'),(3,1,'baz')) v(a,b,c),
       generate_series(1,2) i;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'distinct a,a,c order by c using ~<~,a)\n  from (values (1,3,'foo'),(0,null,null),' at line 3")

-----------
QUERY:

select aggfns(distinct a,a,c order by c using ~<~)
  from (values (1,3,'foo'),(0,null,null),(2,2,'bar'),(3,1,'baz')) v(a,b,c),
       generate_series(1,2) i;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'distinct a,a,c order by c using ~<~)\n  from (values (1,3,'foo'),(0,null,null),(2' at line 1")

-----------
QUERY:

select aggfns(distinct a,a,c order by a)
  from (values (1,3,'foo'),(0,null,null),(2,2,'bar'),(3,1,'baz')) v(a,b,c),
       generate_series(1,2) i;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'distinct a,a,c order by a)\n  from (values (1,3,'foo'),(0,null,null),(2,2,'bar'),' at line 1")

-----------
QUERY:

select aggfns(distinct a,b,c order by a,c using ~<~,b)
  from (values (1,3,'foo'),(0,null,null),(2,2,'bar'),(3,1,'baz')) v(a,b,c),
       generate_series(1,2) i;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'distinct a,b,c order by a,c using ~<~,b)\n  from (values (1,3,'foo'),(0,null,null' at line 1")

-----------
QUERY:


-- test a more complex permutation that has previous caused issues
select
    string_agg(distinct 'a', ','),
    sum((
        select sum(1)
        from (values(1)) b(id)
        where a.id = b.id
)) from unnest(array[1]) a(id);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'distinct 'a', ','),\n    sum((\n        select sum(1)\n        from (values(1)) b(i' at line 3")

-----------
QUERY:


-- check node I/O via view creation and usage, also deparsing logic

create view agg_view1 as
  select aggfns(a,b,c)
    from (values (1,3,'foo'),(0,null,null),(2,2,'bar'),(3,1,'baz')) v(a,b,c);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(1,3,'foo'),(0,null,null),(2,2,'bar'),(3,1,'baz')) v(a,b,c)' at line 5")

-----------
QUERY:


select * from agg_view1;
RESULT:
	ERROR - (1146, "Table 'test.agg_view1' doesn't exist")

-----------
QUERY:

select pg_get_viewdef('agg_view1'::regclass);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::regclass)' at line 1")

-----------
QUERY:


create or replace view agg_view1 as
  select aggfns(distinct a,b,c)
    from (values (1,3,'foo'),(0,null,null),(2,2,'bar'),(3,1,'baz')) v(a,b,c),
         generate_series(1,3) i;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'distinct a,b,c)\n    from (values (1,3,'foo'),(0,null,null),(2,2,'bar'),(3,1,'baz' at line 2")

-----------
QUERY:


select * from agg_view1;
RESULT:
	ERROR - (1146, "Table 'test.agg_view1' doesn't exist")

-----------
QUERY:

select pg_get_viewdef('agg_view1'::regclass);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::regclass)' at line 1")

-----------
QUERY:


create or replace view agg_view1 as
  select aggfns(distinct a,b,c order by b)
    from (values (1,3,'foo'),(0,null,null),(2,2,'bar'),(3,1,'baz')) v(a,b,c),
         generate_series(1,3) i;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'distinct a,b,c order by b)\n    from (values (1,3,'foo'),(0,null,null),(2,2,'bar'' at line 2")

-----------
QUERY:


select * from agg_view1;
RESULT:
	ERROR - (1146, "Table 'test.agg_view1' doesn't exist")

-----------
QUERY:

select pg_get_viewdef('agg_view1'::regclass);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::regclass)' at line 1")

-----------
QUERY:


create or replace view agg_view1 as
  select aggfns(a,b,c order by b+1)
    from (values (1,3,'foo'),(0,null,null),(2,2,'bar'),(3,1,'baz')) v(a,b,c);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'order by b+1)\n    from (values (1,3,'foo'),(0,null,null),(2,2,'bar'),(3,1,'baz')' at line 2")

-----------
QUERY:


select * from agg_view1;
RESULT:
	ERROR - (1146, "Table 'test.agg_view1' doesn't exist")

-----------
QUERY:

select pg_get_viewdef('agg_view1'::regclass);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::regclass)' at line 1")

-----------
QUERY:


create or replace view agg_view1 as
  select aggfns(a,a,c order by b)
    from (values (1,3,'foo'),(0,null,null),(2,2,'bar'),(3,1,'baz')) v(a,b,c);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'order by b)\n    from (values (1,3,'foo'),(0,null,null),(2,2,'bar'),(3,1,'baz')) ' at line 2")

-----------
QUERY:


select * from agg_view1;
RESULT:
	ERROR - (1146, "Table 'test.agg_view1' doesn't exist")

-----------
QUERY:

select pg_get_viewdef('agg_view1'::regclass);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::regclass)' at line 1")

-----------
QUERY:


create or replace view agg_view1 as
  select aggfns(a,b,c order by c using ~<~)
    from (values (1,3,'foo'),(0,null,null),(2,2,'bar'),(3,1,'baz')) v(a,b,c);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'order by c using ~<~)\n    from (values (1,3,'foo'),(0,null,null),(2,2,'bar'),(3,' at line 2")

-----------
QUERY:


select * from agg_view1;
RESULT:
	ERROR - (1146, "Table 'test.agg_view1' doesn't exist")

-----------
QUERY:

select pg_get_viewdef('agg_view1'::regclass);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::regclass)' at line 1")

-----------
QUERY:


create or replace view agg_view1 as
  select aggfns(distinct a,b,c order by a,c using ~<~,b)
    from (values (1,3,'foo'),(0,null,null),(2,2,'bar'),(3,1,'baz')) v(a,b,c),
         generate_series(1,2) i;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'distinct a,b,c order by a,c using ~<~,b)\n    from (values (1,3,'foo'),(0,null,nu' at line 2")

-----------
QUERY:


select * from agg_view1;
RESULT:
	ERROR - (1146, "Table 'test.agg_view1' doesn't exist")

-----------
QUERY:

select pg_get_viewdef('agg_view1'::regclass);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::regclass)' at line 1")

-----------
QUERY:


drop view agg_view1;
RESULT:
	ERROR - (1051, "Unknown table 'test.agg_view1'")

-----------
QUERY:


-- incorrect DISTINCT usage errors

select aggfns(distinct a,b,c order by i)
  from (values (1,1,'foo')) v(a,b,c), generate_series(1,2) i;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'distinct a,b,c order by i)\n  from (values (1,1,'foo')) v(a,b,c), generate_series' at line 3")

-----------
QUERY:

select aggfns(distinct a,b,c order by a,b+1)
  from (values (1,1,'foo')) v(a,b,c), generate_series(1,2) i;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'distinct a,b,c order by a,b+1)\n  from (values (1,1,'foo')) v(a,b,c), generate_se' at line 1")

-----------
QUERY:

select aggfns(distinct a,b,c order by a,b,i,c)
  from (values (1,1,'foo')) v(a,b,c), generate_series(1,2) i;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'distinct a,b,c order by a,b,i,c)\n  from (values (1,1,'foo')) v(a,b,c), generate_' at line 1")

-----------
QUERY:

select aggfns(distinct a,a,c order by a,b)
  from (values (1,1,'foo')) v(a,b,c), generate_series(1,2) i;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'distinct a,a,c order by a,b)\n  from (values (1,1,'foo')) v(a,b,c), generate_seri' at line 1")

-----------
QUERY:


-- string_agg tests
select string_agg(a,',') from (values('aaaa'),('bbbb'),('cccc')) g(a);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '('aaaa'),('bbbb'),('cccc')) g(a)' at line 2")

-----------
QUERY:

select string_agg(a,',') from (values('aaaa'),(null),('bbbb'),('cccc')) g(a);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '('aaaa'),(null),('bbbb'),('cccc')) g(a)' at line 1")

-----------
QUERY:

select string_agg(a,'AB') from (values(null),(null),('bbbb'),('cccc')) g(a);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(null),(null),('bbbb'),('cccc')) g(a)' at line 1")

-----------
QUERY:

select string_agg(a,',') from (values(null),(null)) g(a);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(null),(null)) g(a)' at line 1")

-----------
QUERY:


-- check some implicit casting cases, as per bug #5564
select string_agg(distinct f1, ',' order by f1) from varchar_tbl;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'distinct f1, ',' order by f1) from varchar_tbl' at line 2")

-----------
QUERY:
  -- ok
select string_agg(distinct f1::text, ',' order by f1) from varchar_tbl;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'distinct f1::text, ',' order by f1) from varchar_tbl' at line 2")

-----------
QUERY:
  -- not ok
select string_agg(distinct f1, ',' order by f1::text) from varchar_tbl;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'distinct f1, ',' order by f1::text) from varchar_tbl' at line 2")

-----------
QUERY:
  -- not ok
select string_agg(distinct f1::text, ',' order by f1::text) from varchar_tbl;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'distinct f1::text, ',' order by f1::text) from varchar_tbl' at line 2")

-----------
QUERY:
  -- ok

-- string_agg bytea tests
create table bytea_test_table(v bytea);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'bytea)' at line 4")

-----------
QUERY:


select string_agg(v, '') from bytea_test_table;
RESULT:
	ERROR - (1146, "Table 'test.bytea_test_table' doesn't exist")

-----------
QUERY:


insert into bytea_test_table values(decode('ff','hex'));
RESULT:
	ERROR - (1146, "Table 'test.bytea_test_table' doesn't exist")

-----------
QUERY:


insert into bytea_test_table values(decode('aa','hex'));
RESULT:
	ERROR - (1146, "Table 'test.bytea_test_table' doesn't exist")

-----------
QUERY:


drop table bytea_test_table;
RESULT:
	ERROR - (1051, "Unknown table 'test.bytea_test_table'")

-----------
QUERY:


-- Test parallel string_agg and array_agg
create table pagg_test (x int, y int);
RESULT:
	[]

-----------
QUERY:

insert into pagg_test
select (case x % 4 when 1 then null else x end), x % 10
from generate_series(1,5000) x;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(1,5000) x' at line 3")

-----------
QUERY:


set parallel_setup_cost TO 0;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'TO 0' at line 1")

-----------
QUERY:

set parallel_tuple_cost TO 0;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'TO 0' at line 1")

-----------
QUERY:

set parallel_leader_participation TO 0;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'TO 0' at line 1")

-----------
QUERY:

set min_parallel_table_scan_size = 0;
RESULT:
	ERROR - (1193, "Unknown system variable 'min_parallel_table_scan_size'")

-----------
QUERY:

set bytea_output = 'escape';
RESULT:
	ERROR - (1193, "Unknown system variable 'bytea_output'")

-----------
QUERY:

set max_parallel_workers_per_gather = 2;
RESULT:
	ERROR - (1193, "Unknown system variable 'max_parallel_workers_per_gather'")

-----------
QUERY:


-- create a view as we otherwise have to repeat this query a few times.
create view v_pagg_test AS
select
	y,
	min(t) AS tmin,max(t) AS tmax,count(distinct t) AS tndistinct,
	min(b) AS bmin,max(b) AS bmax,count(distinct b) AS bndistinct,
	min(a) AS amin,max(a) AS amax,count(distinct a) AS andistinct,
	min(aa) AS aamin,max(aa) AS aamax,count(distinct aa) AS aandistinct
from (
	select
		y,
		unnest(regexp_split_to_array(a1.t, ','))::int AS t,
		unnest(regexp_split_to_array(a1.b::text, ',')) AS b,
		unnest(a1.a) AS a,
		unnest(a1.aa) AS aa
	from (
		select
			y,
			string_agg(x::text, ',') AS t,
			string_agg(x::text::bytea, ',') AS b,
			array_agg(x) AS a,
			array_agg(ARRAY[x]) AS aa
		from pagg_test
		group by y
	) a1
) a2
group by y;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::int AS t,\n\t\tunnest(regexp_split_to_array(a1.b::text, ',')) AS b,\n\t\tunnest(a1.a' at line 12")

-----------
QUERY:


-- Ensure results are correct.
select * from v_pagg_test order by y;
RESULT:
	ERROR - (1146, "Table 'test.v_pagg_test' doesn't exist")

-----------
QUERY:


-- Ensure parallel aggregation is actually being used.
explain (costs off) select * from v_pagg_test order by y;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'costs off) select * from v_pagg_test order by y' at line 2")

-----------
QUERY:


set max_parallel_workers_per_gather = 0;
RESULT:
	ERROR - (1193, "Unknown system variable 'max_parallel_workers_per_gather'")

-----------
QUERY:


-- Ensure results are the same without parallel aggregation.
select * from v_pagg_test order by y;
RESULT:
	ERROR - (1146, "Table 'test.v_pagg_test' doesn't exist")

-----------
QUERY:


-- Clean up
reset max_parallel_workers_per_gather;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'max_parallel_workers_per_gather' at line 2")

-----------
QUERY:

reset bytea_output;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'bytea_output' at line 1")

-----------
QUERY:

reset min_parallel_table_scan_size;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'min_parallel_table_scan_size' at line 1")

-----------
QUERY:

reset parallel_leader_participation;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'parallel_leader_participation' at line 1")

-----------
QUERY:

reset parallel_tuple_cost;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'parallel_tuple_cost' at line 1")

-----------
QUERY:

reset parallel_setup_cost;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'parallel_setup_cost' at line 1")

-----------
QUERY:


drop view v_pagg_test;
RESULT:
	ERROR - (1051, "Unknown table 'test.v_pagg_test'")

-----------
QUERY:

drop table pagg_test;
RESULT:
	[]

-----------
QUERY:


-- FILTER tests

select min(unique1) filter (where unique1 > 100) from tenk1;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(where unique1 > 100) from tenk1' at line 3")

-----------
QUERY:


select sum(1/ten) filter (where ten > 0) from tenk1;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(where ten > 0) from tenk1' at line 1")

-----------
QUERY:


select ten, sum(distinct four) filter (where four::text ~ '123') from onek a
group by ten;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(where four::text ~ '123') from onek a\ngroup by ten' at line 1")

-----------
QUERY:


select ten, sum(distinct four) filter (where four > 10) from onek a
group by ten
having exists (select 1 from onek b where sum(distinct a.four) = b.four);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(where four > 10) from onek a\ngroup by ten\nhaving exists (select 1 from onek b w' at line 1")

-----------
QUERY:


select max(foo COLLATE "C") filter (where (bar collate "POSIX") > '0')
from (values ('a', 'b')) AS v(foo,bar);
RESULT:
	ERROR - (1273, "Unknown collation: 'C'")

-----------
QUERY:


select any_value(v) filter (where v > 2) from (values (1), (2), (3)) as v (v);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(where v > 2) from (values (1), (2), (3)) as v (v)' at line 1")

-----------
QUERY:


-- outer reference in FILTER (PostgreSQL extension)
select (select count(*)
        from (values (1)) t0(inner_c))
from (values (2),(3)) t1(outer_c);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(1)) t0(inner_c))\nfrom (values (2),(3)) t1(outer_c)' at line 3")

-----------
QUERY:
 -- inner query is aggregation query
select (select count(*) filter (where outer_c <> 0)
        from (values (1)) t0(inner_c))
from (values (2),(3)) t1(outer_c);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(where outer_c <> 0)\n        from (values (1)) t0(inner_c))\nfrom (values (2),(3)' at line 2")

-----------
QUERY:
 -- outer query is aggregation query
select (select count(inner_c) filter (where outer_c <> 0)
        from (values (1)) t0(inner_c))
from (values (2),(3)) t1(outer_c);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(where outer_c <> 0)\n        from (values (1)) t0(inner_c))\nfrom (values (2),(3)' at line 2")

-----------
QUERY:
 -- inner query is aggregation query
select
  (select max((select i.unique2 from tenk1 i where i.unique1 = o.unique1))
     filter (where o.unique1 < 10))
from tenk1 o;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(where o.unique1 < 10))\nfrom tenk1 o' at line 4")

-----------
QUERY:
					-- outer query is aggregation query

-- subquery in FILTER clause (PostgreSQL extension)
select sum(unique1) FILTER (WHERE
  unique1 IN (SELECT unique1 FROM onek where unique1 < 100)) FROM tenk1;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(WHERE\n  unique1 IN (SELECT unique1 FROM onek where unique1 < 100)) FROM tenk1' at line 4")

-----------
QUERY:


-- exercise lots of aggregate parts with FILTER
select aggfns(distinct a,b,c order by a,c using ~<~,b) filter (where a > 1)
    from (values (1,3,'foo'),(0,null,null),(2,2,'bar'),(3,1,'baz')) v(a,b,c),
    generate_series(1,2) i;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'distinct a,b,c order by a,c using ~<~,b) filter (where a > 1)\n    from (values (' at line 2")

-----------
QUERY:


-- check handling of bare boolean Var in FILTER
select max(0) filter (where b1) from bool_test;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(where b1) from bool_test' at line 2")

-----------
QUERY:

select (select max(0) filter (where b1)) from bool_test;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(where b1)) from bool_test' at line 1")

-----------
QUERY:


-- check for correct detection of nested-aggregate errors in FILTER
select max(unique1) filter (where sum(ten) > 0) from tenk1;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(where sum(ten) > 0) from tenk1' at line 2")

-----------
QUERY:

select (select max(unique1) filter (where sum(ten) > 0) from int8_tbl) from tenk1;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(where sum(ten) > 0) from int8_tbl) from tenk1' at line 1")

-----------
QUERY:

select max(unique1) filter (where bool_or(ten > 0)) from tenk1;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(where bool_or(ten > 0)) from tenk1' at line 1")

-----------
QUERY:

select (select max(unique1) filter (where bool_or(ten > 0)) from int8_tbl) from tenk1;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(where bool_or(ten > 0)) from int8_tbl) from tenk1' at line 1")

-----------
QUERY:



-- ordered-set aggregates

select p, percentile_cont(p) within group (order by x::float8)
from generate_series(1,5) x,
     (values (0::float8),(0.1),(0.25),(0.4),(0.5),(0.6),(0.75),(0.9),(1)) v(p)
group by p order by p;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(order by x::float8)\nfrom generate_series(1,5) x,\n     (values (0::float8),(0.1)' at line 3")

-----------
QUERY:


select p, percentile_cont(p order by p) within group (order by x)  -- error
from generate_series(1,5) x,
     (values (0::float8),(0.1),(0.25),(0.4),(0.5),(0.6),(0.75),(0.9),(1)) v(p)
group by p order by p;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'order by p) within group (order by x)  -- error\nfrom generate_series(1,5) x,\n   ' at line 1")

-----------
QUERY:


select p, sum() within group (order by x::float8)  -- error
from generate_series(1,5) x,
     (values (0::float8),(0.1),(0.25),(0.4),(0.5),(0.6),(0.75),(0.9),(1)) v(p)
group by p order by p;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ') within group (order by x::float8)  -- error\nfrom generate_series(1,5) x,\n     ' at line 1")

-----------
QUERY:


select p, percentile_cont(p,p)  -- error
from generate_series(1,5) x,
     (values (0::float8),(0.1),(0.25),(0.4),(0.5),(0.6),(0.75),(0.9),(1)) v(p)
group by p order by p;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(1,5) x,\n     (values (0::float8),(0.1),(0.25),(0.4),(0.5),(0.6),(0.75),(0.9),(1' at line 2")

-----------
QUERY:


select percentile_cont(0.5) within group (order by b) from aggtest;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(order by b) from aggtest' at line 1")

-----------
QUERY:

select percentile_cont(0.5) within group (order by b), sum(b) from aggtest;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(order by b), sum(b) from aggtest' at line 1")

-----------
QUERY:

select percentile_cont(0.5) within group (order by thousand) from tenk1;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(order by thousand) from tenk1' at line 1")

-----------
QUERY:

select percentile_disc(0.5) within group (order by thousand) from tenk1;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(order by thousand) from tenk1' at line 1")

-----------
QUERY:

select rank(3) within group (order by x)
from (values (1),(1),(2),(2),(3),(3),(4)) v(x);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '3) within group (order by x)\nfrom (values (1),(1),(2),(2),(3),(3),(4)) v(x)' at line 1")

-----------
QUERY:

select cume_dist(3) within group (order by x)
from (values (1),(1),(2),(2),(3),(3),(4)) v(x);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '3) within group (order by x)\nfrom (values (1),(1),(2),(2),(3),(3),(4)) v(x)' at line 1")

-----------
QUERY:

select percent_rank(3) within group (order by x)
from (values (1),(1),(2),(2),(3),(3),(4),(5)) v(x);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '3) within group (order by x)\nfrom (values (1),(1),(2),(2),(3),(3),(4),(5)) v(x)' at line 1")

-----------
QUERY:

select dense_rank(3) within group (order by x)
from (values (1),(1),(2),(2),(3),(3),(4)) v(x);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '3) within group (order by x)\nfrom (values (1),(1),(2),(2),(3),(3),(4)) v(x)' at line 1")

-----------
QUERY:


select percentile_disc(array[0,0.1,0.25,0.5,0.75,0.9,1]) within group (order by thousand)
from tenk1;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '[0,0.1,0.25,0.5,0.75,0.9,1]) within group (order by thousand)\nfrom tenk1' at line 1")

-----------
QUERY:

select percentile_cont(array[0,0.25,0.5,0.75,1]) within group (order by thousand)
from tenk1;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '[0,0.25,0.5,0.75,1]) within group (order by thousand)\nfrom tenk1' at line 1")

-----------
QUERY:

select percentile_disc(array[[null,1,0.5],[0.75,0.25,null]]) within group (order by thousand)
from tenk1;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '[[null,1,0.5],[0.75,0.25,null]]) within group (order by thousand)\nfrom tenk1' at line 1")

-----------
QUERY:

select percentile_cont(array[0,1,0.25,0.75,0.5,1,0.3,0.32,0.35,0.38,0.4]) within group (order by x)
from generate_series(1,6) x;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '[0,1,0.25,0.75,0.5,1,0.3,0.32,0.35,0.38,0.4]) within group (order by x)\nfrom gen' at line 1")

-----------
QUERY:


select ten, mode() within group (order by string4) from tenk1 group by ten;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '() within group (order by string4) from tenk1 group by ten' at line 1")

-----------
QUERY:


select percentile_disc(array[0.25,0.5,0.75]) within group (order by x)
from unnest('{fred,jim,fred,jack,jill,fred,jill,jim,jim,sheila,jim,sheila}'::text[]) u(x);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '[0.25,0.5,0.75]) within group (order by x)\nfrom unnest('{fred,jim,fred,jack,jill' at line 1")

-----------
QUERY:


-- check collation propagates up in suitable cases:
select pg_collation_for(percentile_disc(1) within group (order by x collate "POSIX"))
  from (values ('fred'),('jim')) v(x);
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'group (order by x collate "POSIX"))\n  from (values (\'fred\'),(\'jim\')) v(x)\' at line 2')

-----------
QUERY:


-- ordered-set aggs created with CREATE AGGREGATE
select test_rank(3) within group (order by x)
from (values (1),(1),(2),(2),(3),(3),(4)) v(x);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(order by x)\nfrom (values (1),(1),(2),(2),(3),(3),(4)) v(x)' at line 2")

-----------
QUERY:

select test_percentile_disc(0.5) within group (order by thousand) from tenk1;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(order by thousand) from tenk1' at line 1")

-----------
QUERY:


-- ordered-set aggs can/* REPLACED */ ''t use ungrouped vars in direct args:
select rank(x) within group (order by x) from generate_series(1,5) x;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'x) within group (order by x) from generate_series(1,5) x' at line 2")

-----------
QUERY:


-- outer-level agg can/* REPLACED */ ''t use a grouped arg of a lower level, either:
select array(select percentile_disc(a) within group (order by x)
               from (values (0.3),(0.7)) v(a) group by a)
  from generate_series(1,5) g(x);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(select percentile_disc(a) within group (order by x)\n               from (values' at line 2")

-----------
QUERY:


-- agg in the direct args is a grouping violation, too:
select rank(sum(x)) within group (order by x) from generate_series(1,5) x;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'sum(x)) within group (order by x) from generate_series(1,5) x' at line 2")

-----------
QUERY:


-- hypothetical-set type unification and argument-count failures:
select rank(3) within group (order by x) from (values ('fred'),('jim')) v(x);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '3) within group (order by x) from (values ('fred'),('jim')) v(x)' at line 2")

-----------
QUERY:

select rank(3) within group (order by stringu1,stringu2) from tenk1;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '3) within group (order by stringu1,stringu2) from tenk1' at line 1")

-----------
QUERY:

select rank('fred') within group (order by x) from generate_series(1,5) x;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ''fred') within group (order by x) from generate_series(1,5) x' at line 1")

-----------
QUERY:

select rank('adam'::text collate "C") within group (order by x collate "POSIX")
  from (values ('fred'),('jim')) v(x);
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'\'adam\'::text collate "C") within group (order by x collate "POSIX")\n  from (valu\' at line 1')

-----------
QUERY:

-- hypothetical-set type unification successes:
select rank('adam'::varchar) within group (order by x) from (values ('fred'),('jim')) v(x);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ''adam'::varchar) within group (order by x) from (values ('fred'),('jim')) v(x)' at line 2")

-----------
QUERY:

select rank('3') within group (order by x) from generate_series(1,5) x;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ''3') within group (order by x) from generate_series(1,5) x' at line 1")

-----------
QUERY:


-- divide by zero check
select percent_rank(0) within group (order by x) from generate_series(1,0) x;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '0) within group (order by x) from generate_series(1,0) x' at line 2")

-----------
QUERY:


-- deparse and multiple features:
create view aggordview1 as
select ten,
       percentile_disc(0.5) within group (order by thousand) as p50,
       percentile_disc(0.5) within group (order by thousand) filter (where hundred=1) as px,
       rank(5,'AZZZZ',50) within group (order by hundred, string4 desc, hundred)
  from tenk1
 group by ten order by ten;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(order by thousand) as p50,\n       percentile_disc(0.5) within group (order by t' at line 4")

-----------
QUERY:


select pg_get_viewdef('aggordview1');
RESULT:
	ERROR - (1305, 'FUNCTION test.pg_get_viewdef does not exist')

-----------
QUERY:

select * from aggordview1 order by ten;
RESULT:
	ERROR - (1146, "Table 'test.aggordview1' doesn't exist")

-----------
QUERY:

drop view aggordview1;
RESULT:
	ERROR - (1051, "Unknown table 'test.aggordview1'")

-----------
QUERY:


-- variadic aggregates
select least_agg(q1,q2) from int8_tbl;
RESULT:
	ERROR - (1146, "Table 'test.int8_tbl' doesn't exist")

-----------
QUERY:

select least_agg(variadic array[q1,q2]) from int8_tbl;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '[q1,q2]) from int8_tbl' at line 1")

-----------
QUERY:


select cleast_agg(q1,q2) from int8_tbl;
RESULT:
	ERROR - (1146, "Table 'test.int8_tbl' doesn't exist")

-----------
QUERY:

select cleast_agg(4.5,f1) from int4_tbl;
RESULT:
	ERROR - (1146, "Table 'test.int4_tbl' doesn't exist")

-----------
QUERY:

select cleast_agg(variadic array[4.5,f1]) from int4_tbl;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '[4.5,f1]) from int4_tbl' at line 1")

-----------
QUERY:

select pg_typeof(cleast_agg(variadic array[4.5,f1])) from int4_tbl;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '[4.5,f1])) from int4_tbl' at line 1")

-----------
QUERY:


-- test aggregates with common transition functions share the same states
begin work;
RESULT:
	[]

-----------
QUERY:


create type avg_state as (total bigint, count bigint);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'type avg_state as (total bigint, count bigint)' at line 1")

-----------
QUERY:


create or replace function avg_transfn(state avg_state, n int) returns avg_state as
$$
declare new_state avg_state;
begin
	raise notice 'avg_transfn called with %', n;
	if state is null then
		if n is not null then
			new_state.total := n;
			new_state.count := 1;
			return new_state;
		end if;
		return null;
	elsif n is not null then
		state.total := state.total + n;
		state.count := state.count + 1;
		return state;
	end if;

	return null;
end
$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'function avg_transfn(state avg_state, n int) returns avg_state as\n$$\ndeclare new' at line 1")

-----------
QUERY:


create function avg_finalfn(state avg_state) returns int4 as
$$
begin
	if state is null then
		return NULL;
	else
		return state.total / state.count;
	end if;
end
$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'avg_state) returns int4 as\n$$\nbegin\n\tif state is null then\n\t\treturn NULL;\n\telse\n' at line 1")

-----------
QUERY:


create function sum_finalfn(state avg_state) returns int4 as
$$
begin
	if state is null then
		return NULL;
	else
		return state.total;
	end if;
end
$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'avg_state) returns int4 as\n$$\nbegin\n\tif state is null then\n\t\treturn NULL;\n\telse\n' at line 1")

-----------
QUERY:


create aggregate my_avg(int4)
(
   stype = avg_state,
   sfunc = avg_transfn,
   finalfunc = avg_finalfn
);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'my_avg(int4)\n(\n   stype = avg_state,\n   sfunc = avg_transfn,\n   finalfunc = avg_' at line 1")

-----------
QUERY:


create aggregate my_sum(int4)
(
   stype = avg_state,
   sfunc = avg_transfn,
   finalfunc = sum_finalfn
);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'my_sum(int4)\n(\n   stype = avg_state,\n   sfunc = avg_transfn,\n   finalfunc = sum_' at line 1")

-----------
QUERY:


-- aggregate state should be shared as aggs are the same.
select my_avg(one),my_avg(one) from (values(1),(3)) t(one);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(1),(3)) t(one)' at line 2")

-----------
QUERY:


-- aggregate state should be shared as transfn is the same for both aggs.
select my_avg(one),my_sum(one) from (values(1),(3)) t(one);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(1),(3)) t(one)' at line 2")

-----------
QUERY:


-- same as previous one, but with DISTINCT, which requires sorting the input.
select my_avg(distinct one),my_sum(distinct one) from (values(1),(3),(1)) t(one);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'distinct one),my_sum(distinct one) from (values(1),(3),(1)) t(one)' at line 2")

-----------
QUERY:


-- shouldn/* REPLACED */ ''t share states due to the distinctness not matching.
select my_avg(distinct one),my_sum(one) from (values(1),(3)) t(one);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'distinct one),my_sum(one) from (values(1),(3)) t(one)' at line 2")

-----------
QUERY:


-- shouldn/* REPLACED */ ''t share states due to the filter clause not matching.
select my_avg(one) filter (where one > 1),my_sum(one) from (values(1),(3)) t(one);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(where one > 1),my_sum(one) from (values(1),(3)) t(one)' at line 2")

-----------
QUERY:


-- this should not share the state due to different input columns.
select my_avg(one),my_sum(two) from (values(1,2),(3,4)) t(one,two);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(1,2),(3,4)) t(one,two)' at line 2")

-----------
QUERY:


-- exercise cases where OSAs share state
select
  percentile_cont(0.5) within group (order by a),
  percentile_disc(0.5) within group (order by a)
from (values(1::float8),(3),(5),(7)) t(a);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(order by a),\n  percentile_disc(0.5) within group (order by a)\nfrom (values(1::f' at line 3")

-----------
QUERY:


select
  percentile_cont(0.25) within group (order by a),
  percentile_disc(0.5) within group (order by a)
from (values(1::float8),(3),(5),(7)) t(a);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(order by a),\n  percentile_disc(0.5) within group (order by a)\nfrom (values(1::f' at line 2")

-----------
QUERY:


-- these can/* REPLACED */ ''t share state currently
select
  rank(4) within group (order by a),
  dense_rank(4) within group (order by a)
from (values(1),(3),(5),(7)) t(a);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '4) within group (order by a),\n  dense_rank(4) within group (order by a)\nfrom (va' at line 3")

-----------
QUERY:


-- test that aggs with the same sfunc and initcond share the same agg state
create aggregate my_sum_init(int4)
(
   stype = avg_state,
   sfunc = avg_transfn,
   finalfunc = sum_finalfn,
   initcond = '(10,0)'
);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'my_sum_init(int4)\n(\n   stype = avg_state,\n   sfunc = avg_transfn,\n   finalfunc =' at line 2")

-----------
QUERY:


create aggregate my_avg_init(int4)
(
   stype = avg_state,
   sfunc = avg_transfn,
   finalfunc = avg_finalfn,
   initcond = '(10,0)'
);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'my_avg_init(int4)\n(\n   stype = avg_state,\n   sfunc = avg_transfn,\n   finalfunc =' at line 1")

-----------
QUERY:


create aggregate my_avg_init2(int4)
(
   stype = avg_state,
   sfunc = avg_transfn,
   finalfunc = avg_finalfn,
   initcond = '(4,0)'
);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'my_avg_init2(int4)\n(\n   stype = avg_state,\n   sfunc = avg_transfn,\n   finalfunc ' at line 1")

-----------
QUERY:


-- state should be shared if INITCONDs are matching
select my_sum_init(one),my_avg_init(one) from (values(1),(3)) t(one);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(1),(3)) t(one)' at line 2")

-----------
QUERY:


-- Varying INITCONDs should cause the states not to be shared.
select my_sum_init(one),my_avg_init2(one) from (values(1),(3)) t(one);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(1),(3)) t(one)' at line 2")

-----------
QUERY:


rollback;
RESULT:
	[]

-----------
QUERY:


-- test aggregate state sharing to ensure it works if one aggregate has a
-- finalfn and the other one has none.
begin work;
RESULT:
	[]

-----------
QUERY:


create or replace function sum_transfn(state int4, n int4) returns int4 as
$$
declare new_state int4;
begin
	raise notice 'sum_transfn called with %', n;
	if state is null then
		if n is not null then
			new_state := n;
			return new_state;
		end if;
		return null;
	elsif n is not null then
		state := state + n;
		return state;
	end if;

	return null;
end
$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'function sum_transfn(state int4, n int4) returns int4 as\n$$\ndeclare new_state in' at line 1")

-----------
QUERY:


create function halfsum_finalfn(state int4) returns int4 as
$$
begin
	if state is null then
		return NULL;
	else
		return state / 2;
	end if;
end
$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'as\n$$\nbegin\n\tif state is null then\n\t\treturn NULL;\n\telse\n\t\treturn state / 2;\n\tend' at line 1")

-----------
QUERY:


create aggregate my_sum(int4)
(
   stype = int4,
   sfunc = sum_transfn
);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'my_sum(int4)\n(\n   stype = int4,\n   sfunc = sum_transfn\n)' at line 1")

-----------
QUERY:


create aggregate my_half_sum(int4)
(
   stype = int4,
   sfunc = sum_transfn,
   finalfunc = halfsum_finalfn
);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'my_half_sum(int4)\n(\n   stype = int4,\n   sfunc = sum_transfn,\n   finalfunc = half' at line 1")

-----------
QUERY:


-- Agg state should be shared even though my_sum has no finalfn
select my_sum(one),my_half_sum(one) from (values(1),(2),(3),(4)) t(one);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(1),(2),(3),(4)) t(one)' at line 2")

-----------
QUERY:


rollback;
RESULT:
	[]

-----------
QUERY:



-- test that the aggregate transition logic correctly handles
-- transition / combine functions returning NULL

-- First test the case of a normal transition function returning NULL
BEGIN;
RESULT:
	[]

-----------
QUERY:

CREATE FUNCTION balkifnull(int8, int4)
RETURNS int8
STRICT
LANGUAGE plpgsql AS $$
BEGIN
    IF $1 IS NULL THEN
       RAISE 'erroneously called with NULL argument';
    END IF;
    RETURN NULL;
END$$;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'int8, int4)\nRETURNS int8\nSTRICT\nLANGUAGE plpgsql AS $$\nBEGIN\n    IF $1 IS NULL T' at line 1")

-----------
QUERY:


CREATE AGGREGATE balk(int4)
(
    SFUNC = balkifnull(int8, int4),
    STYPE = int8,
    PARALLEL = SAFE,
    INITCOND = '0'
);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'balk(int4)\n(\n    SFUNC = balkifnull(int8, int4),\n    STYPE = int8,\n    PARALLEL ' at line 1")

-----------
QUERY:


SELECT balk(hundred) FROM tenk1;
RESULT:
	ERROR - (1146, "Table 'test.tenk1' doesn't exist")

-----------
QUERY:


ROLLBACK;
RESULT:
	[]

-----------
QUERY:


-- GROUP BY optimization by reordering GROUP BY clauses
CREATE TABLE btg AS SELECT
  i % 10 AS x,
  i % 10 AS y,
  'abc' || i % 10 AS z,
  i AS w
FROM generate_series(1, 100) AS i;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(1, 100) AS i' at line 7")

-----------
QUERY:

CREATE INDEX btg_x_y_idx ON btg(x, y);
RESULT:
	ERROR - (1146, "Table 'test.btg' doesn't exist")

-----------
QUERY:

ANALYZE btg;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'btg' at line 1")

-----------
QUERY:


SET enable_hashagg = off;
RESULT:
	ERROR - (1193, "Unknown system variable 'enable_hashagg'")

-----------
QUERY:

SET enable_seqscan = off;
RESULT:
	ERROR - (1193, "Unknown system variable 'enable_seqscan'")

-----------
QUERY:


-- Utilize the ordering of index scan to avoid a Sort operation
EXPLAIN (COSTS OFF)
SELECT count(*) FROM btg GROUP BY y, x;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'COSTS OFF)\nSELECT count(*) FROM btg GROUP BY y, x' at line 2")

-----------
QUERY:


-- Engage incremental sort
EXPLAIN (COSTS OFF)
SELECT count(*) FROM btg GROUP BY z, y, w, x;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'COSTS OFF)\nSELECT count(*) FROM btg GROUP BY z, y, w, x' at line 2")

-----------
QUERY:


-- Utilize the ordering of subquery scan to avoid a Sort operation
EXPLAIN (COSTS OFF) SELECT count(*)
FROM (SELECT * FROM btg ORDER BY x, y, w, z) AS q1
GROUP BY w, x, z, y;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'COSTS OFF) SELECT count(*)\nFROM (SELECT * FROM btg ORDER BY x, y, w, z) AS q1\nGR' at line 2")

-----------
QUERY:


-- Utilize the ordering of merge join to avoid a full Sort operation
SET enable_hashjoin = off;
RESULT:
	ERROR - (1193, "Unknown system variable 'enable_hashjoin'")

-----------
QUERY:

SET enable_nestloop = off;
RESULT:
	ERROR - (1193, "Unknown system variable 'enable_nestloop'")

-----------
QUERY:

EXPLAIN (COSTS OFF)
SELECT count(*)
  FROM btg t1 JOIN btg t2 ON t1.z = t2.z AND t1.w = t2.w AND t1.x = t2.x
  GROUP BY t1.x, t1.y, t1.z, t1.w;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'COSTS OFF)\nSELECT count(*)\n  FROM btg t1 JOIN btg t2 ON t1.z = t2.z AND t1.w = t' at line 1")

-----------
QUERY:

RESET enable_nestloop;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'enable_nestloop' at line 1")

-----------
QUERY:

RESET enable_hashjoin;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'enable_hashjoin' at line 1")

-----------
QUERY:


-- Should work with and without GROUP-BY optimization
EXPLAIN (COSTS OFF)
SELECT count(*) FROM btg GROUP BY w, x, z, y ORDER BY y, x, z, w;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'COSTS OFF)\nSELECT count(*) FROM btg GROUP BY w, x, z, y ORDER BY y, x, z, w' at line 2")

-----------
QUERY:


-- Utilize incremental sort to make the ORDER BY rule a bit cheaper
EXPLAIN (COSTS OFF)
SELECT count(*) FROM btg GROUP BY w, x, y, z ORDER BY x*x, z;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'COSTS OFF)\nSELECT count(*) FROM btg GROUP BY w, x, y, z ORDER BY x*x, z' at line 2")

-----------
QUERY:


-- Test the case where the number of incoming subtree path keys is more than
-- the number of grouping keys.
CREATE INDEX btg_y_x_w_idx ON btg(y, x, w);
RESULT:
	ERROR - (1146, "Table 'test.btg' doesn't exist")

-----------
QUERY:

EXPLAIN (VERBOSE, COSTS OFF)
SELECT y, x, array_agg(distinct w)
  FROM btg WHERE y < 0 GROUP BY x, y;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'VERBOSE, COSTS OFF)\nSELECT y, x, array_agg(distinct w)\n  FROM btg WHERE y < 0 GR' at line 1")

-----------
QUERY:


-- Ensure that we do not select the aggregate pathkeys instead of the grouping
-- pathkeys
CREATE TABLE group_agg_pk AS SELECT
  i % 10 AS x,
  i % 2 AS y,
  i % 2 AS z,
  2 AS w,
  i % 10 AS f
FROM generate_series(1,100) AS i;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(1,100) AS i' at line 9")

-----------
QUERY:

ANALYZE group_agg_pk;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'group_agg_pk' at line 1")

-----------
QUERY:

SET enable_nestloop = off;
RESULT:
	ERROR - (1193, "Unknown system variable 'enable_nestloop'")

-----------
QUERY:

SET enable_hashjoin = off;
RESULT:
	ERROR - (1193, "Unknown system variable 'enable_hashjoin'")

-----------
QUERY:


EXPLAIN (COSTS OFF)
SELECT avg(c1.f ORDER BY c1.x, c1.y)
FROM group_agg_pk c1 JOIN group_agg_pk c2 ON c1.x = c2.x
GROUP BY c1.w, c1.z;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'COSTS OFF)\nSELECT avg(c1.f ORDER BY c1.x, c1.y)\nFROM group_agg_pk c1 JOIN group_' at line 1")

-----------
QUERY:

SELECT avg(c1.f ORDER BY c1.x, c1.y)
FROM group_agg_pk c1 JOIN group_agg_pk c2 ON c1.x = c2.x
GROUP BY c1.w, c1.z;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'ORDER BY c1.x, c1.y)\nFROM group_agg_pk c1 JOIN group_agg_pk c2 ON c1.x = c2.x\nGR' at line 1")

-----------
QUERY:


RESET enable_nestloop;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'enable_nestloop' at line 1")

-----------
QUERY:

RESET enable_hashjoin;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'enable_hashjoin' at line 1")

-----------
QUERY:

DROP TABLE group_agg_pk;
RESULT:
	ERROR - (1051, "Unknown table 'test.group_agg_pk'")

-----------
QUERY:


-- Test the case where the the ordering of scan matches the ordering within the
-- aggregate but cannot be found in the group-by list
CREATE TABLE agg_sort_order (c1 int PRIMARY KEY, c2 int);
RESULT:
	[]

-----------
QUERY:

CREATE UNIQUE INDEX agg_sort_order_c2_idx ON agg_sort_order(c2);
RESULT:
	[]

-----------
QUERY:

INSERT INTO agg_sort_order SELECT i, i FROM generate_series(1,100)i;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(1,100)i' at line 1")

-----------
QUERY:

ANALYZE agg_sort_order;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'agg_sort_order' at line 1")

-----------
QUERY:


EXPLAIN (COSTS OFF)
SELECT array_agg(c1 ORDER BY c2),c2
FROM agg_sort_order WHERE c2 < 100 GROUP BY c1 ORDER BY 2;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'COSTS OFF)\nSELECT array_agg(c1 ORDER BY c2),c2\nFROM agg_sort_order WHERE c2 < 10' at line 1")

-----------
QUERY:


DROP TABLE agg_sort_order CASCADE;
RESULT:
	[]

-----------
QUERY:


DROP TABLE btg;
RESULT:
	ERROR - (1051, "Unknown table 'test.btg'")

-----------
QUERY:


RESET enable_hashagg;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'enable_hashagg' at line 1")

-----------
QUERY:

RESET enable_seqscan;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'enable_seqscan' at line 1")

-----------
QUERY:


-- Secondly test the case of a parallel aggregate combiner function
-- returning NULL. For that use normal transition function, but a
-- combiner function returning NULL.
BEGIN;
RESULT:
	[]

-----------
QUERY:

CREATE FUNCTION balkifnull(int8, int8)
RETURNS int8
PARALLEL SAFE
STRICT
LANGUAGE plpgsql AS $$
BEGIN
    IF $1 IS NULL THEN
       RAISE 'erroneously called with NULL argument';
    END IF;
    RETURN NULL;
END$$;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'int8, int8)\nRETURNS int8\nPARALLEL SAFE\nSTRICT\nLANGUAGE plpgsql AS $$\nBEGIN\n    I' at line 1")

-----------
QUERY:


CREATE AGGREGATE balk(int4)
(
    SFUNC = int4_sum(int8, int4),
    STYPE = int8,
    COMBINEFUNC = balkifnull(int8, int8),
    PARALLEL = SAFE,
    INITCOND = '0'
);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'balk(int4)\n(\n    SFUNC = int4_sum(int8, int4),\n    STYPE = int8,\n    COMBINEFUNC' at line 1")

-----------
QUERY:


-- force use of parallelism
ALTER TABLE tenk1 set (parallel_workers = 4);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'set (parallel_workers = 4)' at line 2")

-----------
QUERY:

SET LOCAL parallel_setup_cost=0;
RESULT:
	ERROR - (1193, "Unknown system variable 'parallel_setup_cost'")

-----------
QUERY:

SET LOCAL max_parallel_workers_per_gather=4;
RESULT:
	ERROR - (1193, "Unknown system variable 'max_parallel_workers_per_gather'")

-----------
QUERY:


EXPLAIN (COSTS OFF) SELECT balk(hundred) FROM tenk1;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'COSTS OFF) SELECT balk(hundred) FROM tenk1' at line 1")

-----------
QUERY:

SELECT balk(hundred) FROM tenk1;
RESULT:
	ERROR - (1146, "Table 'test.tenk1' doesn't exist")

-----------
QUERY:


ROLLBACK;
RESULT:
	[]

-----------
QUERY:


-- test multiple usage of an aggregate whose finalfn returns a R/W datum
BEGIN;
RESULT:
	[]

-----------
QUERY:


CREATE FUNCTION rwagg_sfunc(x anyarray, y anyarray) RETURNS anyarray
LANGUAGE plpgsql IMMUTABLE AS $$
BEGIN
    RETURN array_fill(y[1], ARRAY[4]);
END;
$$;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'anyarray, y anyarray) RETURNS anyarray\nLANGUAGE plpgsql IMMUTABLE AS $$\nBEGIN\n  ' at line 1")

-----------
QUERY:


CREATE FUNCTION rwagg_finalfunc(x anyarray) RETURNS anyarray
LANGUAGE plpgsql STRICT IMMUTABLE AS $$
DECLARE
    res x%TYPE;
BEGIN
    -- assignment is essential for this test, it expands the array to R/W
    res := array_fill(x[1], ARRAY[4]);
    RETURN res;
END;
$$;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'anyarray) RETURNS anyarray\nLANGUAGE plpgsql STRICT IMMUTABLE AS $$\nDECLARE\n    r' at line 1")

-----------
QUERY:


CREATE AGGREGATE rwagg(anyarray) (
    STYPE = anyarray,
    SFUNC = rwagg_sfunc,
    FINALFUNC = rwagg_finalfunc
);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'rwagg(anyarray) (\n    STYPE = anyarray,\n    SFUNC = rwagg_sfunc,\n    FINALFUNC =' at line 1")

-----------
QUERY:


CREATE FUNCTION eatarray(x real[]) RETURNS real[]
LANGUAGE plpgsql STRICT IMMUTABLE AS $$
BEGIN
    x[1] := x[1] + 1;
    RETURN x;
END;
$$;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '[]) RETURNS real[]\nLANGUAGE plpgsql STRICT IMMUTABLE AS $$\nBEGIN\n    x[1] := x[1' at line 1")

-----------
QUERY:


SELECT eatarray(rwagg(ARRAY[1.0::real])), eatarray(rwagg(ARRAY[1.0::real]));
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '[1.0::real])), eatarray(rwagg(ARRAY[1.0::real]))' at line 1")

-----------
QUERY:


ROLLBACK;
RESULT:
	[]

-----------
QUERY:


-- test coverage for aggregate combine/serial/deserial functions
BEGIN;
RESULT:
	[]

-----------
QUERY:


SET parallel_setup_cost = 0;
RESULT:
	ERROR - (1193, "Unknown system variable 'parallel_setup_cost'")

-----------
QUERY:

SET parallel_tuple_cost = 0;
RESULT:
	ERROR - (1193, "Unknown system variable 'parallel_tuple_cost'")

-----------
QUERY:

SET min_parallel_table_scan_size = 0;
RESULT:
	ERROR - (1193, "Unknown system variable 'min_parallel_table_scan_size'")

-----------
QUERY:

SET max_parallel_workers_per_gather = 4;
RESULT:
	ERROR - (1193, "Unknown system variable 'max_parallel_workers_per_gather'")

-----------
QUERY:

SET parallel_leader_participation = off;
RESULT:
	ERROR - (1193, "Unknown system variable 'parallel_leader_participation'")

-----------
QUERY:

SET enable_indexonlyscan = off;
RESULT:
	ERROR - (1193, "Unknown system variable 'enable_indexonlyscan'")

-----------
QUERY:


-- variance(int4) covers numeric_poly_combine
-- sum(int8) covers int8_avg_combine
-- regr_count(float8, float8) covers int8inc_float8_float8 and aggregates with > 1 arg
EXPLAIN (COSTS OFF, VERBOSE)
SELECT variance(unique1::int4), sum(unique1::int8), regr_count(unique1::float8, unique1::float8)
FROM (SELECT * FROM tenk1
      UNION ALL SELECT * FROM tenk1
      UNION ALL SELECT * FROM tenk1
      UNION ALL SELECT * FROM tenk1) u;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'COSTS OFF, VERBOSE)\nSELECT variance(unique1::int4), sum(unique1::int8), regr_cou' at line 4")

-----------
QUERY:


SELECT variance(unique1::int4), sum(unique1::int8), regr_count(unique1::float8, unique1::float8)
FROM (SELECT * FROM tenk1
      UNION ALL SELECT * FROM tenk1
      UNION ALL SELECT * FROM tenk1
      UNION ALL SELECT * FROM tenk1) u;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::int4), sum(unique1::int8), regr_count(unique1::float8, unique1::float8)\nFROM (' at line 1")

-----------
QUERY:


-- variance(int8) covers numeric_combine
-- avg(numeric) covers numeric_avg_combine
EXPLAIN (COSTS OFF, VERBOSE)
SELECT variance(unique1::int8), avg(unique1::numeric)
FROM (SELECT * FROM tenk1
      UNION ALL SELECT * FROM tenk1
      UNION ALL SELECT * FROM tenk1
      UNION ALL SELECT * FROM tenk1) u;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'COSTS OFF, VERBOSE)\nSELECT variance(unique1::int8), avg(unique1::numeric)\nFROM (' at line 3")

-----------
QUERY:


SELECT variance(unique1::int8), avg(unique1::numeric)
FROM (SELECT * FROM tenk1
      UNION ALL SELECT * FROM tenk1
      UNION ALL SELECT * FROM tenk1
      UNION ALL SELECT * FROM tenk1) u;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::int8), avg(unique1::numeric)\nFROM (SELECT * FROM tenk1\n      UNION ALL SELECT ' at line 1")

-----------
QUERY:


ROLLBACK;
RESULT:
	[]

-----------
QUERY:


-- test coverage for dense_rank
SELECT dense_rank(x) WITHIN GROUP (ORDER BY x) FROM (VALUES (1),(1),(2),(2),(3),(3)) v(x) GROUP BY (x) ORDER BY 1;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'x) WITHIN GROUP (ORDER BY x) FROM (VALUES (1),(1),(2),(2),(3),(3)) v(x) GROUP BY' at line 2")

-----------
QUERY:



-- Ensure that the STRICT checks for aggregates does not take NULLness
-- of ORDER BY columns into account. See bug report around
-- 2a505161-2727-2473-7c46-591ed108ac52@email.cz
SELECT min(x ORDER BY y) FROM (VALUES(1, NULL)) AS d(x,y);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'ORDER BY y) FROM (VALUES(1, NULL)) AS d(x,y)' at line 4")

-----------
QUERY:

SELECT min(x ORDER BY y) FROM (VALUES(1, 2)) AS d(x,y);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'ORDER BY y) FROM (VALUES(1, 2)) AS d(x,y)' at line 1")

-----------
QUERY:


-- check collation-sensitive matching between grouping expressions
select v||'a', case v||'a' when 'aa' then 1 else 0 end, count(*)
  from unnest(array['a','b']) u(v)
 group by v||'a' order by 1;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(array['a','b']) u(v)\n group by v||'a' order by 1' at line 3")

-----------
QUERY:

select v||'a', case when v||'a' = 'aa' then 1 else 0 end, count(*)
  from unnest(array['a','b']) u(v)
 group by v||'a' order by 1;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(array['a','b']) u(v)\n group by v||'a' order by 1' at line 2")

-----------
QUERY:


-- Make sure that generation of HashAggregate for uniqification purposes
-- does not lead to array overflow due to unexpected duplicate hash keys
-- see CAFeeJoKKu0u+A_A9R9316djW-YW3-+Gtgvy3ju655qRHR3jtdA@mail.gmail.com
set enable_memoize to off;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'to off' at line 4")

-----------
QUERY:

explain (costs off)
  select 1 from tenk1
   where (hundred, thousand) in (select twothousand, twothousand from onek);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'costs off)\n  select 1 from tenk1\n   where (hundred, thousand) in (select twothou' at line 1")

-----------
QUERY:

reset enable_memoize;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'enable_memoize' at line 1")

-----------
QUERY:


--
-- Hash Aggregation Spill tests
--

set enable_sort=false;
RESULT:
	ERROR - (1193, "Unknown system variable 'enable_sort'")

-----------
QUERY:

set work_mem='64kB';
RESULT:
	ERROR - (1193, "Unknown system variable 'work_mem'")

-----------
QUERY:


select unique1, count(*), sum(twothousand) from tenk1
group by unique1
having sum(fivethous) > 4975
order by sum(twothousand);
RESULT:
	ERROR - (1146, "Table 'test.tenk1' doesn't exist")

-----------
QUERY:


set work_mem to default;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'to default' at line 1")

-----------
QUERY:

set enable_sort to default;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'to default' at line 1")

-----------
QUERY:


--
-- Compare results between plans using sorting and plans using hash
-- aggregation. Force spilling in both cases by setting work_mem low.
--

set work_mem='64kB';
RESULT:
	ERROR - (1193, "Unknown system variable 'work_mem'")

-----------
QUERY:


create table agg_data_2k as
select g from generate_series(0, 1999) g;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(0, 1999) g' at line 2")

-----------
QUERY:

analyze agg_data_2k;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'agg_data_2k' at line 1")

-----------
QUERY:


create table agg_data_20k as
select g from generate_series(0, 19999) g;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(0, 19999) g' at line 2")

-----------
QUERY:

analyze agg_data_20k;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'agg_data_20k' at line 1")

-----------
QUERY:


-- Produce results with sorting.

set enable_hashagg = false;
RESULT:
	ERROR - (1193, "Unknown system variable 'enable_hashagg'")

-----------
QUERY:


set jit_above_cost = 0;
RESULT:
	ERROR - (1193, "Unknown system variable 'jit_above_cost'")

-----------
QUERY:


explain (costs off)
select g%10000 as c1, sum(g::numeric) as c2, count(*) as c3
  from agg_data_20k group by g%10000;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'costs off)\nselect g%10000 as c1, sum(g::numeric) as c2, count(*) as c3\n  from ag' at line 1")

-----------
QUERY:


create table agg_group_1 as
select g%10000 as c1, sum(g::numeric) as c2, count(*) as c3
  from agg_data_20k group by g%10000;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::numeric) as c2, count(*) as c3\n  from agg_data_20k group by g%10000' at line 2")

-----------
QUERY:


create table agg_group_2 as
select * from
  (values (100), (300), (500)) as r(a),
  lateral (
    select (g/2)::numeric as c1,
           array_agg(g::numeric) as c2,
	   count(*) as c3
    from agg_data_2k
    where g < r.a
    group by g/2) as s;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(100), (300), (500)) as r(a),\n  lateral (\n    select (g/2)::numeric as c1,\n     ' at line 3")

-----------
QUERY:


set jit_above_cost to default;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'to default' at line 1")

-----------
QUERY:


create table agg_group_3 as
select (g/2)::numeric as c1, sum(7::int4) as c2, count(*) as c3
  from agg_data_2k group by g/2;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::numeric as c1, sum(7::int4) as c2, count(*) as c3\n  from agg_data_2k group by ' at line 2")

-----------
QUERY:


create table agg_group_4 as
select (g/2)::numeric as c1, array_agg(g::numeric) as c2, count(*) as c3
  from agg_data_2k group by g/2;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::numeric as c1, array_agg(g::numeric) as c2, count(*) as c3\n  from agg_data_2k ' at line 2")

-----------
QUERY:


-- Produce results with hash aggregation

set enable_hashagg = true;
RESULT:
	ERROR - (1193, "Unknown system variable 'enable_hashagg'")

-----------
QUERY:

set enable_sort = false;
RESULT:
	ERROR - (1193, "Unknown system variable 'enable_sort'")

-----------
QUERY:


set jit_above_cost = 0;
RESULT:
	ERROR - (1193, "Unknown system variable 'jit_above_cost'")

-----------
QUERY:


explain (costs off)
select g%10000 as c1, sum(g::numeric) as c2, count(*) as c3
  from agg_data_20k group by g%10000;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'costs off)\nselect g%10000 as c1, sum(g::numeric) as c2, count(*) as c3\n  from ag' at line 1")

-----------
QUERY:


create table agg_hash_1 as
select g%10000 as c1, sum(g::numeric) as c2, count(*) as c3
  from agg_data_20k group by g%10000;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::numeric) as c2, count(*) as c3\n  from agg_data_20k group by g%10000' at line 2")

-----------
QUERY:


create table agg_hash_2 as
select * from
  (values (100), (300), (500)) as r(a),
  lateral (
    select (g/2)::numeric as c1,
           array_agg(g::numeric) as c2,
	   count(*) as c3
    from agg_data_2k
    where g < r.a
    group by g/2) as s;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(100), (300), (500)) as r(a),\n  lateral (\n    select (g/2)::numeric as c1,\n     ' at line 3")

-----------
QUERY:


set jit_above_cost to default;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'to default' at line 1")

-----------
QUERY:


create table agg_hash_3 as
select (g/2)::numeric as c1, sum(7::int4) as c2, count(*) as c3
  from agg_data_2k group by g/2;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::numeric as c1, sum(7::int4) as c2, count(*) as c3\n  from agg_data_2k group by ' at line 2")

-----------
QUERY:


create table agg_hash_4 as
select (g/2)::numeric as c1, array_agg(g::numeric) as c2, count(*) as c3
  from agg_data_2k group by g/2;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::numeric as c1, array_agg(g::numeric) as c2, count(*) as c3\n  from agg_data_2k ' at line 2")

-----------
QUERY:


set enable_sort = true;
RESULT:
	ERROR - (1193, "Unknown system variable 'enable_sort'")

-----------
QUERY:

set work_mem to default;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'to default' at line 1")

-----------
QUERY:


-- Compare group aggregation results to hash aggregation results

(select * from agg_hash_1 except select * from agg_group_1)
  union all
(select * from agg_group_1 except select * from agg_hash_1);
RESULT:
	ERROR - (1146, "Table 'test.agg_hash_1' doesn't exist")

-----------
QUERY:


(select * from agg_hash_2 except select * from agg_group_2)
  union all
(select * from agg_group_2 except select * from agg_hash_2);
RESULT:
	ERROR - (1146, "Table 'test.agg_hash_2' doesn't exist")

-----------
QUERY:


(select * from agg_hash_3 except select * from agg_group_3)
  union all
(select * from agg_group_3 except select * from agg_hash_3);
RESULT:
	ERROR - (1146, "Table 'test.agg_hash_3' doesn't exist")

-----------
QUERY:


(select * from agg_hash_4 except select * from agg_group_4)
  union all
(select * from agg_group_4 except select * from agg_hash_4);
RESULT:
	ERROR - (1146, "Table 'test.agg_hash_4' doesn't exist")

-----------
QUERY:


drop table agg_group_1;
RESULT:
	ERROR - (1051, "Unknown table 'test.agg_group_1'")

-----------
QUERY:

drop table agg_group_2;
RESULT:
	ERROR - (1051, "Unknown table 'test.agg_group_2'")

-----------
QUERY:

drop table agg_group_3;
RESULT:
	ERROR - (1051, "Unknown table 'test.agg_group_3'")

-----------
QUERY:

drop table agg_group_4;
RESULT:
	ERROR - (1051, "Unknown table 'test.agg_group_4'")

-----------
QUERY:

drop table agg_hash_1;
RESULT:
	ERROR - (1051, "Unknown table 'test.agg_hash_1'")

-----------
QUERY:

drop table agg_hash_2;
RESULT:
	ERROR - (1051, "Unknown table 'test.agg_hash_2'")

-----------
QUERY:

drop table agg_hash_3;
RESULT:
	ERROR - (1051, "Unknown table 'test.agg_hash_3'")

-----------
QUERY:

drop table agg_hash_4;
RESULT:
	ERROR - (1051, "Unknown table 'test.agg_hash_4'")
