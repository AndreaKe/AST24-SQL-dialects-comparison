CREATE TABLE brintest_multi (
	int8col bigint,
	int2col smallint,
	int4col integer,
	oidcol oid,
	tidcol tid,
	float4col real,
	float8col double precision,
	macaddrcol macaddr,
	macaddr8col macaddr8,
	inetcol inet,
	cidrcol cidr,
	datecol date,
	timecol time without time zone,
	timestampcol timestamp without time zone,
	timestamptzcol timestamp with time zone,
	intervalcol interval,
	timetzcol time with time zone,
	numericcol numeric,
	uuidcol uuid,
	lsncol pg_lsn
) WITH (fillfactor=10)
ERROR: CREATE TABLE brintest_multi (
	int8col bigint,
	int2col smallint,
	int4col integer,
	oidcol oid,
	tidcol tid,
	float4col real,
	float8col double precision,
	macaddrcol macaddr,
	macaddr8col macaddr8,
	inetcol inet,
	cidrcol cidr,
	datecol date,
	timecol time without time zone,
	timestampcol timestamp without time zone,
	timestamptzcol timestamp with time zone,
	intervalcol interval,
	timetzcol time with time zone,
	numericcol numeric,
	uuidcol uuid,
	lsncol pg_lsn
) WITH (fillfactor=10)

Catalog Error: Type with name tid does not exist!
Did you mean "oid"?


INSERT INTO brintest_multi SELECT
	142857 * tenthous,
	thousand,
	twothousand,
	unique1::oid,
	format('(%s,%s)', tenthous, twenty)::tid,
	(four + 1.0)/(hundred+1),
	odd::float8 / (tenthous + 1),
	format('%s:00:%s:00:%s:00', to_hex(odd), to_hex(even), to_hex(hundred))::macaddr,
	substr(fipshash(unique1::text), 1, 16)::macaddr8,
	inet '10.2.3.4/24' + tenthous,
	cidr '10.2.3/24' + tenthous,
	date '1995-08-15' + tenthous,
	time '01:20:30' + thousand * interval '18.5 second',
	timestamp '1942-07-23 03:05:09' + tenthous * interval '36.38 hours',
	timestamptz '1972-10-10 03:00' + thousand * interval '1 hour',
	justify_days(justify_hours(tenthous * interval '12 minutes')),
	timetz '01:30:20+02' + hundred * interval '15 seconds',
	tenthous::numeric(36,30) * fivethous * even / (hundred + 1),
	format('%s%s-%s-%s-%s-%s%s%s', to_char(tenthous, 'FM0000'), to_char(tenthous, 'FM0000'), to_char(tenthous, 'FM0000'), to_char(tenthous, 'FM0000'), to_char(tenthous, 'FM0000'), to_char(tenthous, 'FM0000'), to_char(tenthous, 'FM0000'), to_char(tenthous, 'FM0000'))::uuid,
	format('%s/%s%s', odd, even, tenthous)::pg_lsn
FROM tenk1 ORDER BY unique2 LIMIT 100
ERROR: 

INSERT INTO brintest_multi SELECT
	142857 * tenthous,
	thousand,
	twothousand,
	unique1::oid,
	format('(%s,%s)', tenthous, twenty)::tid,
	(four + 1.0)/(hundred+1),
	odd::float8 / (tenthous + 1),
	format('%s:00:%s:00:%s:00', to_hex(odd), to_hex(even), to_hex(hundred))::macaddr,
	substr(fipshash(unique1::text), 1, 16)::macaddr8,
	inet '10.2.3.4/24' + tenthous,
	cidr '10.2.3/24' + tenthous,
	date '1995-08-15' + tenthous,
	time '01:20:30' + thousand * interval '18.5 second',
	timestamp '1942-07-23 03:05:09' + tenthous * interval '36.38 hours',
	timestamptz '1972-10-10 03:00' + thousand * interval '1 hour',
	justify_days(justify_hours(tenthous * interval '12 minutes')),
	timetz '01:30:20+02' + hundred * interval '15 seconds',
	tenthous::numeric(36,30) * fivethous * even / (hundred + 1),
	format('%s%s-%s-%s-%s-%s%s%s', to_char(tenthous, 'FM0000'), to_char(tenthous, 'FM0000'), to_char(tenthous, 'FM0000'), to_char(tenthous, 'FM0000'), to_char(tenthous, 'FM0000'), to_char(tenthous, 'FM0000'), to_char(tenthous, 'FM0000'), to_char(tenthous, 'FM0000'))::uuid,
	format('%s/%s%s', odd, even, tenthous)::pg_lsn
FROM tenk1 ORDER BY unique2 LIMIT 100

Catalog Error: Table with name brintest_multi does not exist!
Did you mean "INT2_TBL"?


-- throw in some NULL''s and different values
INSERT INTO brintest_multi (inetcol, cidrcol) SELECT
	inet 'fe80::6e40:8ff:fea9:8c46' + tenthous,
	cidr 'fe80::6e40:8ff:fea9:8c46' + tenthous
FROM tenk1 ORDER BY thousand, tenthous LIMIT 25
ERROR: 

-- throw in some NULL''s and different values
INSERT INTO brintest_multi (inetcol, cidrcol) SELECT
	inet 'fe80::6e40:8ff:fea9:8c46' + tenthous,
	cidr 'fe80::6e40:8ff:fea9:8c46' + tenthous
FROM tenk1 ORDER BY thousand, tenthous LIMIT 25

Catalog Error: Table with name brintest_multi does not exist!
Did you mean "INT2_TBL"?


-- test minmax-multi specific index options
-- number of values must be >= 16
CREATE INDEX brinidx_multi ON brintest_multi USING brin (
	int8col int8_minmax_multi_ops(values_per_range = 7)
)
ERROR: 

-- test minmax-multi specific index options
-- number of values must be >= 16
CREATE INDEX brinidx_multi ON brintest_multi USING brin (
	int8col int8_minmax_multi_ops(values_per_range = 7)
)

Parser Error: syntax error at or near "("

-- number of values must be <= 256
CREATE INDEX brinidx_multi ON brintest_multi USING brin (
	int8col int8_minmax_multi_ops(values_per_range = 257)
)
ERROR: 
-- number of values must be <= 256
CREATE INDEX brinidx_multi ON brintest_multi USING brin (
	int8col int8_minmax_multi_ops(values_per_range = 257)
)

Parser Error: syntax error at or near "("


-- first create an index with a single page range, to force compaction
-- due to exceeding the number of values per summary
CREATE INDEX brinidx_multi ON brintest_multi USING brin (
	int8col int8_minmax_multi_ops,
	int2col int2_minmax_multi_ops,
	int4col int4_minmax_multi_ops,
	oidcol oid_minmax_multi_ops,
	tidcol tid_minmax_multi_ops,
	float4col float4_minmax_multi_ops,
	float8col float8_minmax_multi_ops,
	macaddrcol macaddr_minmax_multi_ops,
	macaddr8col macaddr8_minmax_multi_ops,
	inetcol inet_minmax_multi_ops,
	cidrcol inet_minmax_multi_ops,
	datecol date_minmax_multi_ops,
	timecol time_minmax_multi_ops,
	timestampcol timestamp_minmax_multi_ops,
	timestamptzcol timestamptz_minmax_multi_ops,
	intervalcol interval_minmax_multi_ops,
	timetzcol timetz_minmax_multi_ops,
	numericcol numeric_minmax_multi_ops,
	uuidcol uuid_minmax_multi_ops,
	lsncol pg_lsn_minmax_multi_ops
)
ERROR: 

-- first create an index with a single page range, to force compaction
-- due to exceeding the number of values per summary
CREATE INDEX brinidx_multi ON brintest_multi USING brin (
	int8col int8_minmax_multi_ops,
	int2col int2_minmax_multi_ops,
	int4col int4_minmax_multi_ops,
	oidcol oid_minmax_multi_ops,
	tidcol tid_minmax_multi_ops,
	float4col float4_minmax_multi_ops,
	float8col float8_minmax_multi_ops,
	macaddrcol macaddr_minmax_multi_ops,
	macaddr8col macaddr8_minmax_multi_ops,
	inetcol inet_minmax_multi_ops,
	cidrcol inet_minmax_multi_ops,
	datecol date_minmax_multi_ops,
	timecol time_minmax_multi_ops,
	timestampcol timestamp_minmax_multi_ops,
	timestamptzcol timestamptz_minmax_multi_ops,
	intervalcol interval_minmax_multi_ops,
	timetzcol timetz_minmax_multi_ops,
	numericcol numeric_minmax_multi_ops,
	uuidcol uuid_minmax_multi_ops,
	lsncol pg_lsn_minmax_multi_ops
)

Not implemented Error: Index with opclass not supported yet!


DROP INDEX brinidx_multi
ERROR: 

DROP INDEX brinidx_multi

Catalog Error: Index with name brinidx_multi does not exist!
Did you mean "concur_reindex_ind1"?


CREATE INDEX brinidx_multi ON brintest_multi USING brin (
	int8col int8_minmax_multi_ops,
	int2col int2_minmax_multi_ops,
	int4col int4_minmax_multi_ops,
	oidcol oid_minmax_multi_ops,
	tidcol tid_minmax_multi_ops,
	float4col float4_minmax_multi_ops,
	float8col float8_minmax_multi_ops,
	macaddrcol macaddr_minmax_multi_ops,
	macaddr8col macaddr8_minmax_multi_ops,
	inetcol inet_minmax_multi_ops,
	cidrcol inet_minmax_multi_ops,
	datecol date_minmax_multi_ops,
	timecol time_minmax_multi_ops,
	timestampcol timestamp_minmax_multi_ops,
	timestamptzcol timestamptz_minmax_multi_ops,
	intervalcol interval_minmax_multi_ops,
	timetzcol timetz_minmax_multi_ops,
	numericcol numeric_minmax_multi_ops,
	uuidcol uuid_minmax_multi_ops,
	lsncol pg_lsn_minmax_multi_ops
) with (pages_per_range = 1)
ERROR: 

CREATE INDEX brinidx_multi ON brintest_multi USING brin (
	int8col int8_minmax_multi_ops,
	int2col int2_minmax_multi_ops,
	int4col int4_minmax_multi_ops,
	oidcol oid_minmax_multi_ops,
	tidcol tid_minmax_multi_ops,
	float4col float4_minmax_multi_ops,
	float8col float8_minmax_multi_ops,
	macaddrcol macaddr_minmax_multi_ops,
	macaddr8col macaddr8_minmax_multi_ops,
	inetcol inet_minmax_multi_ops,
	cidrcol inet_minmax_multi_ops,
	datecol date_minmax_multi_ops,
	timecol time_minmax_multi_ops,
	timestampcol timestamp_minmax_multi_ops,
	timestamptzcol timestamptz_minmax_multi_ops,
	intervalcol interval_minmax_multi_ops,
	timetzcol timetz_minmax_multi_ops,
	numericcol numeric_minmax_multi_ops,
	uuidcol uuid_minmax_multi_ops,
	lsncol pg_lsn_minmax_multi_ops
) with (pages_per_range = 1)

Not implemented Error: Index with opclass not supported yet!


CREATE TABLE brinopers_multi (colname name, typ text,
	op text[], value text[], matches int[],
	check (cardinality(op) = cardinality(value)),
	check (cardinality(op) = cardinality(matches)))
ERROR: 

CREATE TABLE brinopers_multi (colname name, typ text,
	op text[], value text[], matches int[],
	check (cardinality(op) = cardinality(value)),
	check (cardinality(op) = cardinality(matches)))

Binder Error: Cardinality can only operate on MAPs


INSERT INTO brinopers_multi VALUES
	('int2col', 'int2',
	 '{>, >=, =, <=, <}',
	 '{0, 0, 800, 999, 999}',
	 '{100, 100, 1, 100, 100}'),
	('int2col', 'int4',
	 '{>, >=, =, <=, <}',
	 '{0, 0, 800, 999, 1999}',
	 '{100, 100, 1, 100, 100}'),
	('int2col', 'int8',
	 '{>, >=, =, <=, <}',
	 '{0, 0, 800, 999, 1428427143}',
	 '{100, 100, 1, 100, 100}'),
	('int4col', 'int2',
	 '{>, >=, =, <=, <}',
	 '{0, 0, 800, 1999, 1999}',
	 '{100, 100, 1, 100, 100}'),
	('int4col', 'int4',
	 '{>, >=, =, <=, <}',
	 '{0, 0, 800, 1999, 1999}',
	 '{100, 100, 1, 100, 100}'),
	('int4col', 'int8',
	 '{>, >=, =, <=, <}',
	 '{0, 0, 800, 1999, 1428427143}',
	 '{100, 100, 1, 100, 100}'),
	('int8col', 'int2',
	 '{>, >=}',
	 '{0, 0}',
	 '{100, 100}'),
	('int8col', 'int4',
	 '{>, >=}',
	 '{0, 0}',
	 '{100, 100}'),
	('int8col', 'int8',
	 '{>, >=, =, <=, <}',
	 '{0, 0, 1257141600, 1428427143, 1428427143}',
	 '{100, 100, 1, 100, 100}'),
	('oidcol', 'oid',
	 '{>, >=, =, <=, <}',
	 '{0, 0, 8800, 9999, 9999}',
	 '{100, 100, 1, 100, 100}'),
	('tidcol', 'tid',
	 '{>, >=, =, <=, <}',
	 '{"(0,0)", "(0,0)", "(8800,0)", "(9999,19)", "(9999,19)"}',
	 '{100, 100, 1, 100, 100}'),
	('float4col', 'float4',
	 '{>, >=, =, <=, <}',
	 '{0.0103093, 0.0103093, 1, 1, 1}',
	 '{100, 100, 4, 100, 96}'),
	('float4col', 'float8',
	 '{>, >=, =, <=, <}',
	 '{0.0103093, 0.0103093, 1, 1, 1}',
	 '{100, 100, 4, 100, 96}'),
	('float8col', 'float4',
	 '{>, >=, =, <=, <}',
	 '{0, 0, 0, 1.98, 1.98}',
	 '{99, 100, 1, 100, 100}'),
	('float8col', 'float8',
	 '{>, >=, =, <=, <}',
	 '{0, 0, 0, 1.98, 1.98}',
	 '{99, 100, 1, 100, 100}'),
	('macaddrcol', 'macaddr',
	 '{>, >=, =, <=, <}',
	 '{00:00:01:00:00:00, 00:00:01:00:00:00, 2c:00:2d:00:16:00, ff:fe:00:00:00:00, ff:fe:00:00:00:00}',
	 '{99, 100, 2, 100, 100}'),
	('macaddr8col', 'macaddr8',
	 '{>, >=, =, <=, <}',
	 '{b1:d1:0e:7b:af:a4:42:12, d9:35:91:bd:f7:86:0e:1e, 72:8f:20:6c:2a:01:bf:57, 23:e8:46:63:86:07:ad:cb, 13:16:8e:6a:2e:6c:84:b4}',
	 '{31, 17, 1, 11, 4}'),
	('inetcol', 'inet',
	 '{=, <, <=, >, >=}',
	 '{10.2.14.231/24, 255.255.255.255, 255.255.255.255, 0.0.0.0, 0.0.0.0}',
	 '{1, 100, 100, 125, 125}'),
	('inetcol', 'cidr',
	 '{<, <=, >, >=}',
	 '{255.255.255.255, 255.255.255.255, 0.0.0.0, 0.0.0.0}',
	 '{100, 100, 125, 125}'),
	('cidrcol', 'inet',
	 '{=, <, <=, >, >=}',
	 '{10.2.14/24, 255.255.255.255, 255.255.255.255, 0.0.0.0, 0.0.0.0}',
	 '{2, 100, 100, 125, 125}'),
	('cidrcol', 'cidr',
	 '{=, <, <=, >, >=}',
	 '{10.2.14/24, 255.255.255.255, 255.255.255.255, 0.0.0.0, 0.0.0.0}',
	 '{2, 100, 100, 125, 125}'),
	('datecol', 'date',
	 '{>, >=, =, <=, <}',
	 '{1995-08-15, 1995-08-15, 2009-12-01, 2022-12-30, 2022-12-30}',
	 '{100, 100, 1, 100, 100}'),
	('timecol', 'time',
	 '{>, >=, =, <=, <}',
	 '{01:20:30, 01:20:30, 02:28:57, 06:28:31.5, 06:28:31.5}',
	 '{100, 100, 1, 100, 100}'),
	('timestampcol', 'timestamp',
	 '{>, >=, =, <=, <}',
	 '{1942-07-23 03:05:09, 1942-07-23 03:05:09, 1964-03-24 19:26:45, 1984-01-20 22:42:21, 1984-01-20 22:42:21}',
	 '{100, 100, 1, 100, 100}'),
	('timestampcol', 'timestamptz',
	 '{>, >=, =, <=, <}',
	 '{1942-07-23 03:05:09, 1942-07-23 03:05:09, 1964-03-24 19:26:45, 1984-01-20 22:42:21, 1984-01-20 22:42:21}',
	 '{100, 100, 1, 100, 100}'),
	('timestamptzcol', 'timestamptz',
	 '{>, >=, =, <=, <}',
	 '{1972-10-10 03:00:00-04, 1972-10-10 03:00:00-04, 1972-10-19 09:00:00-07, 1972-11-20 19:00:00-03, 1972-11-20 19:00:00-03}',
	 '{100, 100, 1, 100, 100}'),
	('intervalcol', 'interval',
	 '{>, >=, =, <=, <}',
	 '{00:00:00, 00:00:00, 1 mons 13 days 12:24, 2 mons 23 days 07:48:00, 1 year}',
	 '{100, 100, 1, 100, 100}'),
	('timetzcol', 'timetz',
	 '{>, >=, =, <=, <}',
	 '{01:30:20+02, 01:30:20+02, 01:35:50+02, 23:55:05+02, 23:55:05+02}',
	 '{99, 100, 2, 100, 100}'),
	('numericcol', 'numeric',
	 '{>, >=, =, <=, <}',
	 '{0.00, 0.01, 2268164.347826086956521739130434782609, 99470151.9, 99470151.9}',
	 '{100, 100, 1, 100, 100}'),
	('uuidcol', 'uuid',
	 '{>, >=, =, <=, <}',
	 '{00040004-0004-0004-0004-000400040004, 00040004-0004-0004-0004-000400040004, 52225222-5222-5222-5222-522252225222, 99989998-9998-9998-9998-999899989998, 99989998-9998-9998-9998-999899989998}',
	 '{100, 100, 1, 100, 100}'),
	('lsncol', 'pg_lsn',
	 '{>, >=, =, <=, <, IS, IS NOT}',
	 '{0/1200, 0/1200, 44/455222, 198/1999799, 198/1999799, NULL, NULL}',
	 '{100, 100, 1, 100, 100, 25, 100}')
ERROR: 

INSERT INTO brinopers_multi VALUES
	('int2col', 'int2',
	 '{>, >=, =, <=, <}',
	 '{0, 0, 800, 999, 999}',
	 '{100, 100, 1, 100, 100}'),
	('int2col', 'int4',
	 '{>, >=, =, <=, <}',
	 '{0, 0, 800, 999, 1999}',
	 '{100, 100, 1, 100, 100}'),
	('int2col', 'int8',
	 '{>, >=, =, <=, <}',
	 '{0, 0, 800, 999, 1428427143}',
	 '{100, 100, 1, 100, 100}'),
	('int4col', 'int2',
	 '{>, >=, =, <=, <}',
	 '{0, 0, 800, 1999, 1999}',
	 '{100, 100, 1, 100, 100}'),
	('int4col', 'int4',
	 '{>, >=, =, <=, <}',
	 '{0, 0, 800, 1999, 1999}',
	 '{100, 100, 1, 100, 100}'),
	('int4col', 'int8',
	 '{>, >=, =, <=, <}',
	 '{0, 0, 800, 1999, 1428427143}',
	 '{100, 100, 1, 100, 100}'),
	('int8col', 'int2',
	 '{>, >=}',
	 '{0, 0}',
	 '{100, 100}'),
	('int8col', 'int4',
	 '{>, >=}',
	 '{0, 0}',
	 '{100, 100}'),
	('int8col', 'int8',
	 '{>, >=, =, <=, <}',
	 '{0, 0, 1257141600, 1428427143, 1428427143}',
	 '{100, 100, 1, 100, 100}'),
	('oidcol', 'oid',
	 '{>, >=, =, <=, <}',
	 '{0, 0, 8800, 9999, 9999}',
	 '{100, 100, 1, 100, 100}'),
	('tidcol', 'tid',
	 '{>, >=, =, <=, <}',
	 '{"(0,0)", "(0,0)", "(8800,0)", "(9999,19)", "(9999,19)"}',
	 '{100, 100, 1, 100, 100}'),
	('float4col', 'float4',
	 '{>, >=, =, <=, <}',
	 '{0.0103093, 0.0103093, 1, 1, 1}',
	 '{100, 100, 4, 100, 96}'),
	('float4col', 'float8',
	 '{>, >=, =, <=, <}',
	 '{0.0103093, 0.0103093, 1, 1, 1}',
	 '{100, 100, 4, 100, 96}'),
	('float8col', 'float4',
	 '{>, >=, =, <=, <}',
	 '{0, 0, 0, 1.98, 1.98}',
	 '{99, 100, 1, 100, 100}'),
	('float8col', 'float8',
	 '{>, >=, =, <=, <}',
	 '{0, 0, 0, 1.98, 1.98}',
	 '{99, 100, 1, 100, 100}'),
	('macaddrcol', 'macaddr',
	 '{>, >=, =, <=, <}',
	 '{00:00:01:00:00:00, 00:00:01:00:00:00, 2c:00:2d:00:16:00, ff:fe:00:00:00:00, ff:fe:00:00:00:00}',
	 '{99, 100, 2, 100, 100}'),
	('macaddr8col', 'macaddr8',
	 '{>, >=, =, <=, <}',
	 '{b1:d1:0e:7b:af:a4:42:12, d9:35:91:bd:f7:86:0e:1e, 72:8f:20:6c:2a:01:bf:57, 23:e8:46:63:86:07:ad:cb, 13:16:8e:6a:2e:6c:84:b4}',
	 '{31, 17, 1, 11, 4}'),
	('inetcol', 'inet',
	 '{=, <, <=, >, >=}',
	 '{10.2.14.231/24, 255.255.255.255, 255.255.255.255, 0.0.0.0, 0.0.0.0}',
	 '{1, 100, 100, 125, 125}'),
	('inetcol', 'cidr',
	 '{<, <=, >, >=}',
	 '{255.255.255.255, 255.255.255.255, 0.0.0.0, 0.0.0.0}',
	 '{100, 100, 125, 125}'),
	('cidrcol', 'inet',
	 '{=, <, <=, >, >=}',
	 '{10.2.14/24, 255.255.255.255, 255.255.255.255, 0.0.0.0, 0.0.0.0}',
	 '{2, 100, 100, 125, 125}'),
	('cidrcol', 'cidr',
	 '{=, <, <=, >, >=}',
	 '{10.2.14/24, 255.255.255.255, 255.255.255.255, 0.0.0.0, 0.0.0.0}',
	 '{2, 100, 100, 125, 125}'),
	('datecol', 'date',
	 '{>, >=, =, <=, <}',
	 '{1995-08-15, 1995-08-15, 2009-12-01, 2022-12-30, 2022-12-30}',
	 '{100, 100, 1, 100, 100}'),
	('timecol', 'time',
	 '{>, >=, =, <=, <}',
	 '{01:20:30, 01:20:30, 02:28:57, 06:28:31.5, 06:28:31.5}',
	 '{100, 100, 1, 100, 100}'),
	('timestampcol', 'timestamp',
	 '{>, >=, =, <=, <}',
	 '{1942-07-23 03:05:09, 1942-07-23 03:05:09, 1964-03-24 19:26:45, 1984-01-20 22:42:21, 1984-01-20 22:42:21}',
	 '{100, 100, 1, 100, 100}'),
	('timestampcol', 'timestamptz',
	 '{>, >=, =, <=, <}',
	 '{1942-07-23 03:05:09, 1942-07-23 03:05:09, 1964-03-24 19:26:45, 1984-01-20 22:42:21, 1984-01-20 22:42:21}',
	 '{100, 100, 1, 100, 100}'),
	('timestamptzcol', 'timestamptz',
	 '{>, >=, =, <=, <}',
	 '{1972-10-10 03:00:00-04, 1972-10-10 03:00:00-04, 1972-10-19 09:00:00-07, 1972-11-20 19:00:00-03, 1972-11-20 19:00:00-03}',
	 '{100, 100, 1, 100, 100}'),
	('intervalcol', 'interval',
	 '{>, >=, =, <=, <}',
	 '{00:00:00, 00:00:00, 1 mons 13 days 12:24, 2 mons 23 days 07:48:00, 1 year}',
	 '{100, 100, 1, 100, 100}'),
	('timetzcol', 'timetz',
	 '{>, >=, =, <=, <}',
	 '{01:30:20+02, 01:30:20+02, 01:35:50+02, 23:55:05+02, 23:55:05+02}',
	 '{99, 100, 2, 100, 100}'),
	('numericcol', 'numeric',
	 '{>, >=, =, <=, <}',
	 '{0.00, 0.01, 2268164.347826086956521739130434782609, 99470151.9, 99470151.9}',
	 '{100, 100, 1, 100, 100}'),
	('uuidcol', 'uuid',
	 '{>, >=, =, <=, <}',
	 '{00040004-0004-0004-0004-000400040004, 00040004-0004-0004-0004-000400040004, 52225222-5222-5222-5222-522252225222, 99989998-9998-9998-9998-999899989998, 99989998-9998-9998-9998-999899989998}',
	 '{100, 100, 1, 100, 100}'),
	('lsncol', 'pg_lsn',
	 '{>, >=, =, <=, <, IS, IS NOT}',
	 '{0/1200, 0/1200, 44/455222, 198/1999799, 198/1999799, NULL, NULL}',
	 '{100, 100, 1, 100, 100, 25, 100}')

Catalog Error: Table with name brinopers_multi does not exist!
Did you mean "pg_am"?


DO $x$
DECLARE
	r record
ERROR: 

DO $x$
DECLARE
	r record

Parser Error: syntax error at or near "DO"

	r2 record
ERROR: 
	r2 record

Parser Error: syntax error at or near "r2"

	cond text
ERROR: 
	cond text

Parser Error: syntax error at or near "cond"

	idx_ctids tid[]
ERROR: 
	idx_ctids tid[]

Parser Error: syntax error at or near "idx_ctids"

	ss_ctids tid[]
ERROR: 
	ss_ctids tid[]

Parser Error: syntax error at or near "ss_ctids"

	count int
ERROR: 
	count int

Parser Error: syntax error at or near "count"

	plan_ok bool
ERROR: 
	plan_ok bool

Parser Error: syntax error at or near "plan_ok"

	plan_line text
ERROR: 
	plan_line text

Parser Error: syntax error at or near "plan_line"

BEGIN
	FOR r IN SELECT colname, oper, typ, value[ordinality], matches[ordinality] FROM brinopers_multi, unnest(op) WITH ORDINALITY AS oper LOOP

		-- prepare the condition
		IF r.value IS NULL THEN
			cond := format('%I %s %L', r.colname, r.oper, r.value)
ERROR: 
BEGIN
	FOR r IN SELECT colname, oper, typ, value[ordinality], matches[ordinality] FROM brinopers_multi, unnest(op) WITH ORDINALITY AS oper LOOP

		-- prepare the condition
		IF r.value IS NULL THEN
			cond := format('%I %s %L', r.colname, r.oper, r.value)

Parser Error: syntax error at or near "FOR"

		ELSE
			cond := format('%I %s %L::%s', r.colname, r.oper, r.value, r.typ)
ERROR: 
		ELSE
			cond := format('%I %s %L::%s', r.colname, r.oper, r.value, r.typ)

Parser Error: syntax error at or near "ELSE"

		END IF
ERROR: 
		END IF

Parser Error: syntax error at or near "IF"


		-- run the query using the brin index
		SET enable_seqscan = 0
ERROR: 

		-- run the query using the brin index
		SET enable_seqscan = 0

Catalog Error: unrecognized configuration parameter "enable_seqscan"

Did you mean: "enable_object_cache"

		SET enable_bitmapscan = 1
ERROR: 
		SET enable_bitmapscan = 1

Catalog Error: unrecognized configuration parameter "enable_bitmapscan"

Did you mean: "enable_object_cache"


		plan_ok := false
ERROR: 

		plan_ok := false

Parser Error: syntax error at or near "plan_ok"

		FOR plan_line IN EXECUTE format($y$EXPLAIN SELECT array_agg(ctid) FROM brintest_multi WHERE %s $y$, cond) LOOP
			IF plan_line LIKE '%Bitmap Heap Scan on brintest_multi%' THEN
				plan_ok := true
ERROR: 
		FOR plan_line IN EXECUTE format($y$EXPLAIN SELECT array_agg(ctid) FROM brintest_multi WHERE %s $y$, cond) LOOP
			IF plan_line LIKE '%Bitmap Heap Scan on brintest_multi%' THEN
				plan_ok := true

Parser Error: syntax error at or near "FOR"

			END IF
ERROR: 
			END IF

Parser Error: syntax error at or near "IF"

		END LOOP
ERROR: 
		END LOOP

Parser Error: syntax error at or near "LOOP"

		IF NOT plan_ok THEN
			RAISE WARNING 'did not get bitmap indexscan plan for %', r
ERROR: 
		IF NOT plan_ok THEN
			RAISE WARNING 'did not get bitmap indexscan plan for %', r

Parser Error: syntax error at or near "IF"

		END IF
ERROR: 
		END IF

Parser Error: syntax error at or near "IF"


		EXECUTE format($y$SELECT array_agg(ctid) FROM brintest_multi WHERE %s $y$, cond)
			INTO idx_ctids
ERROR: 

		EXECUTE format($y$SELECT array_agg(ctid) FROM brintest_multi WHERE %s $y$, cond)
			INTO idx_ctids

Parser Error: syntax error at or near "INTO"


		-- run the query using a seqscan
		SET enable_seqscan = 1
ERROR: 

		-- run the query using a seqscan
		SET enable_seqscan = 1

Catalog Error: unrecognized configuration parameter "enable_seqscan"

Did you mean: "enable_object_cache"

		SET enable_bitmapscan = 0
ERROR: 
		SET enable_bitmapscan = 0

Catalog Error: unrecognized configuration parameter "enable_bitmapscan"

Did you mean: "enable_object_cache"


		plan_ok := false
ERROR: 

		plan_ok := false

Parser Error: syntax error at or near "plan_ok"

		FOR plan_line IN EXECUTE format($y$EXPLAIN SELECT array_agg(ctid) FROM brintest_multi WHERE %s $y$, cond) LOOP
			IF plan_line LIKE '%Seq Scan on brintest_multi%' THEN
				plan_ok := true
ERROR: 
		FOR plan_line IN EXECUTE format($y$EXPLAIN SELECT array_agg(ctid) FROM brintest_multi WHERE %s $y$, cond) LOOP
			IF plan_line LIKE '%Seq Scan on brintest_multi%' THEN
				plan_ok := true

Parser Error: syntax error at or near "FOR"

			END IF
ERROR: 
			END IF

Parser Error: syntax error at or near "IF"

		END LOOP
ERROR: 
		END LOOP

Parser Error: syntax error at or near "LOOP"

		IF NOT plan_ok THEN
			RAISE WARNING 'did not get seqscan plan for %', r
ERROR: 
		IF NOT plan_ok THEN
			RAISE WARNING 'did not get seqscan plan for %', r

Parser Error: syntax error at or near "IF"

		END IF
ERROR: 
		END IF

Parser Error: syntax error at or near "IF"


		EXECUTE format($y$SELECT array_agg(ctid) FROM brintest_multi WHERE %s $y$, cond)
			INTO ss_ctids
ERROR: 

		EXECUTE format($y$SELECT array_agg(ctid) FROM brintest_multi WHERE %s $y$, cond)
			INTO ss_ctids

Parser Error: syntax error at or near "INTO"


		-- make sure both return the same results
		count := array_length(idx_ctids, 1)
ERROR: 

		-- make sure both return the same results
		count := array_length(idx_ctids, 1)

Parser Error: syntax error at or near "count"


		IF NOT (count = array_length(ss_ctids, 1) AND
				idx_ctids @> ss_ctids AND
				idx_ctids <@ ss_ctids) THEN
			-- report the results of each scan to make the differences obvious
			RAISE WARNING 'something not right in %: count %', r, count
ERROR: 

		IF NOT (count = array_length(ss_ctids, 1) AND
				idx_ctids @> ss_ctids AND
				idx_ctids <@ ss_ctids) THEN
			-- report the results of each scan to make the differences obvious
			RAISE WARNING 'something not right in %: count %', r, count

Parser Error: syntax error at or near "IF"

			SET enable_seqscan = 1
ERROR: 
			SET enable_seqscan = 1

Catalog Error: unrecognized configuration parameter "enable_seqscan"

Did you mean: "enable_object_cache"

			SET enable_bitmapscan = 0
ERROR: 
			SET enable_bitmapscan = 0

Catalog Error: unrecognized configuration parameter "enable_bitmapscan"

Did you mean: "enable_object_cache"

			FOR r2 IN EXECUTE 'SELECT ' || r.colname || ' FROM brintest_multi WHERE ' || cond LOOP
				RAISE NOTICE 'seqscan: %', r2
ERROR: 
			FOR r2 IN EXECUTE 'SELECT ' || r.colname || ' FROM brintest_multi WHERE ' || cond LOOP
				RAISE NOTICE 'seqscan: %', r2

Parser Error: syntax error at or near "FOR"

			END LOOP
ERROR: 
			END LOOP

Parser Error: syntax error at or near "LOOP"


			SET enable_seqscan = 0
ERROR: 

			SET enable_seqscan = 0

Catalog Error: unrecognized configuration parameter "enable_seqscan"

Did you mean: "enable_object_cache"

			SET enable_bitmapscan = 1
ERROR: 
			SET enable_bitmapscan = 1

Catalog Error: unrecognized configuration parameter "enable_bitmapscan"

Did you mean: "enable_object_cache"

			FOR r2 IN EXECUTE 'SELECT ' || r.colname || ' FROM brintest_multi WHERE ' || cond LOOP
				RAISE NOTICE 'bitmapscan: %', r2
ERROR: 
			FOR r2 IN EXECUTE 'SELECT ' || r.colname || ' FROM brintest_multi WHERE ' || cond LOOP
				RAISE NOTICE 'bitmapscan: %', r2

Parser Error: syntax error at or near "FOR"

			END LOOP
ERROR: 
			END LOOP

Parser Error: syntax error at or near "LOOP"

		END IF
ERROR: 
		END IF

Parser Error: syntax error at or near "IF"


		-- make sure we found expected number of matches
		IF count != r.matches THEN RAISE WARNING 'unexpected number of results % for %', count, r
ERROR: 

		-- make sure we found expected number of matches
		IF count != r.matches THEN RAISE WARNING 'unexpected number of results % for %', count, r

Parser Error: syntax error at or near "IF"
 END IF
ERROR:  END IF

Parser Error: syntax error at or near "IF"

	END LOOP
ERROR: 
	END LOOP

Parser Error: syntax error at or near "LOOP"

END
ERROR: 
END

TransactionContext Error: cannot commit - no transaction is active

$x$
ERROR: 
$x$

Parser Error: unterminated dollar-quoted string at or near "$x$
"


RESET enable_seqscan
ERROR: 

RESET enable_seqscan

Catalog Error: unrecognized configuration parameter "enable_seqscan"

Did you mean: "enable_object_cache"

RESET enable_bitmapscan
ERROR: 
RESET enable_bitmapscan

Catalog Error: unrecognized configuration parameter "enable_bitmapscan"

Did you mean: "enable_object_cache"


INSERT INTO brintest_multi SELECT
	142857 * tenthous,
	thousand,
	twothousand,
	unique1::oid,
	format('(%s,%s)', tenthous, twenty)::tid,
	(four + 1.0)/(hundred+1),
	odd::float8 / (tenthous + 1),
	format('%s:00:%s:00:%s:00', to_hex(odd), to_hex(even), to_hex(hundred))::macaddr,
	substr(fipshash(unique1::text), 1, 16)::macaddr8,
	inet '10.2.3.4' + tenthous,
	cidr '10.2.3/24' + tenthous,
	date '1995-08-15' + tenthous,
	time '01:20:30' + thousand * interval '18.5 second',
	timestamp '1942-07-23 03:05:09' + tenthous * interval '36.38 hours',
	timestamptz '1972-10-10 03:00' + thousand * interval '1 hour',
	justify_days(justify_hours(tenthous * interval '12 minutes')),
	timetz '01:30:20' + hundred * interval '15 seconds',
	tenthous::numeric(36,30) * fivethous * even / (hundred + 1),
	format('%s%s-%s-%s-%s-%s%s%s', to_char(tenthous, 'FM0000'), to_char(tenthous, 'FM0000'), to_char(tenthous, 'FM0000'), to_char(tenthous, 'FM0000'), to_char(tenthous, 'FM0000'), to_char(tenthous, 'FM0000'), to_char(tenthous, 'FM0000'), to_char(tenthous, 'FM0000'))::uuid,
	format('%s/%s%s', odd, even, tenthous)::pg_lsn
FROM tenk1 ORDER BY unique2 LIMIT 5 OFFSET 5
ERROR: 

INSERT INTO brintest_multi SELECT
	142857 * tenthous,
	thousand,
	twothousand,
	unique1::oid,
	format('(%s,%s)', tenthous, twenty)::tid,
	(four + 1.0)/(hundred+1),
	odd::float8 / (tenthous + 1),
	format('%s:00:%s:00:%s:00', to_hex(odd), to_hex(even), to_hex(hundred))::macaddr,
	substr(fipshash(unique1::text), 1, 16)::macaddr8,
	inet '10.2.3.4' + tenthous,
	cidr '10.2.3/24' + tenthous,
	date '1995-08-15' + tenthous,
	time '01:20:30' + thousand * interval '18.5 second',
	timestamp '1942-07-23 03:05:09' + tenthous * interval '36.38 hours',
	timestamptz '1972-10-10 03:00' + thousand * interval '1 hour',
	justify_days(justify_hours(tenthous * interval '12 minutes')),
	timetz '01:30:20' + hundred * interval '15 seconds',
	tenthous::numeric(36,30) * fivethous * even / (hundred + 1),
	format('%s%s-%s-%s-%s-%s%s%s', to_char(tenthous, 'FM0000'), to_char(tenthous, 'FM0000'), to_char(tenthous, 'FM0000'), to_char(tenthous, 'FM0000'), to_char(tenthous, 'FM0000'), to_char(tenthous, 'FM0000'), to_char(tenthous, 'FM0000'), to_char(tenthous, 'FM0000'))::uuid,
	format('%s/%s%s', odd, even, tenthous)::pg_lsn
FROM tenk1 ORDER BY unique2 LIMIT 5 OFFSET 5

Catalog Error: Table with name brintest_multi does not exist!
Did you mean "INT2_TBL"?


SELECT brin_desummarize_range('brinidx_multi', 0)
ERROR: 

SELECT brin_desummarize_range('brinidx_multi', 0)

Catalog Error: Scalar Function with name brin_desummarize_range does not exist!
Did you mean "enum_range"?

VACUUM brintest_multi
ERROR: 
VACUUM brintest_multi

Catalog Error: Table with name brintest_multi does not exist!
Did you mean "INT2_TBL"?
LINE 2: VACUUM brintest_multi
               ^
  -- force a summarization cycle in brinidx

-- Try inserting a values with NaN, to test distance calculation.
insert into public.brintest_multi (float4col) values (real 'nan')
ERROR:   -- force a summarization cycle in brinidx

-- Try inserting a values with NaN, to test distance calculation.
insert into public.brintest_multi (float4col) values (real 'nan')

Catalog Error: Table with name brintest_multi does not exist!
Did you mean "memory.INT2_TBL"?

insert into public.brintest_multi (float8col) values (real 'nan')
ERROR: 
insert into public.brintest_multi (float8col) values (real 'nan')

Catalog Error: Table with name brintest_multi does not exist!
Did you mean "memory.INT2_TBL"?


UPDATE brintest_multi SET int8col = int8col * int4col
ERROR: 

UPDATE brintest_multi SET int8col = int8col * int4col

Catalog Error: Table with name brintest_multi does not exist!
Did you mean "INT2_TBL"?
LINE 3: UPDATE brintest_multi SET int8col = int8col ...
               ^


-- Test handling of inet netmasks with inet_minmax_multi_ops
CREATE TABLE brin_test_inet (a inet)

CREATE INDEX ON brin_test_inet USING brin (a inet_minmax_multi_ops)
ERROR: 
CREATE INDEX ON brin_test_inet USING brin (a inet_minmax_multi_ops)

Not implemented Error: Index with opclass not supported yet!

INSERT INTO brin_test_inet VALUES ('127.0.0.1/0')

INSERT INTO brin_test_inet VALUES ('0.0.0.0/12')

DROP TABLE brin_test_inet


-- Tests for brin_summarize_new_values
SELECT brin_summarize_new_values('brintest_multi')
ERROR: 

-- Tests for brin_summarize_new_values
SELECT brin_summarize_new_values('brintest_multi')

Catalog Error: Scalar Function with name brin_summarize_new_values does not exist!
Did you mean "map_values"?
 -- error, not an index
SELECT brin_summarize_new_values('tenk1_unique1')
ERROR:  -- error, not an index
SELECT brin_summarize_new_values('tenk1_unique1')

Catalog Error: Scalar Function with name brin_summarize_new_values does not exist!
Did you mean "map_values"?
 -- error, not a BRIN index
SELECT brin_summarize_new_values('brinidx_multi')
ERROR:  -- error, not a BRIN index
SELECT brin_summarize_new_values('brinidx_multi')

Catalog Error: Scalar Function with name brin_summarize_new_values does not exist!
Did you mean "map_values"?
 -- ok, no change expected

-- Tests for brin_desummarize_range
SELECT brin_desummarize_range('brinidx_multi', -1)
ERROR:  -- ok, no change expected

-- Tests for brin_desummarize_range
SELECT brin_desummarize_range('brinidx_multi', -1)

Catalog Error: Scalar Function with name brin_desummarize_range does not exist!
Did you mean "enum_range"?
 -- error, invalid range
SELECT brin_desummarize_range('brinidx_multi', 0)
ERROR:  -- error, invalid range
SELECT brin_desummarize_range('brinidx_multi', 0)

Catalog Error: Scalar Function with name brin_desummarize_range does not exist!
Did you mean "enum_range"?

SELECT brin_desummarize_range('brinidx_multi', 0)
ERROR: 
SELECT brin_desummarize_range('brinidx_multi', 0)

Catalog Error: Scalar Function with name brin_desummarize_range does not exist!
Did you mean "enum_range"?

SELECT brin_desummarize_range('brinidx_multi', 100000000)
ERROR: 
SELECT brin_desummarize_range('brinidx_multi', 100000000)

Catalog Error: Scalar Function with name brin_desummarize_range does not exist!
Did you mean "enum_range"?


-- test building an index with many values, to force compaction of the buffer
CREATE TABLE brin_large_range (a int4)

INSERT INTO brin_large_range SELECT i FROM generate_series(1,10000) s(i)

CREATE INDEX brin_large_range_idx ON brin_large_range USING brin (a int4_minmax_multi_ops)
ERROR: 
CREATE INDEX brin_large_range_idx ON brin_large_range USING brin (a int4_minmax_multi_ops)

Not implemented Error: Index with opclass not supported yet!

DROP TABLE brin_large_range


-- Test brin_summarize_range
CREATE TABLE brin_summarize_multi (
    value int
) WITH (fillfactor=10, autovacuum_enabled=false)

CREATE INDEX brin_summarize_multi_idx ON brin_summarize_multi USING brin (value) WITH (pages_per_range=2)
ERROR: 
CREATE INDEX brin_summarize_multi_idx ON brin_summarize_multi USING brin (value) WITH (pages_per_range=2)

Binder Error: Unknown index type: BRIN

-- Fill a few pages
DO $$
DECLARE curtid tid;
BEGIN
  LOOP
    INSERT INTO brin_summarize_multi VALUES (1) RETURNING ctid INTO curtid;
    EXIT WHEN curtid > tid '(2, 0)';
  END LOOP;
END;
$$
ERROR: 
-- Fill a few pages
DO $$
DECLARE curtid tid;
BEGIN
  LOOP
    INSERT INTO brin_summarize_multi VALUES (1) RETURNING ctid INTO curtid;
    EXIT WHEN curtid > tid '(2, 0)';
  END LOOP;
END;
$$

Parser Error: syntax error at or near "DO"


-- summarize one range
SELECT brin_summarize_range('brin_summarize_multi_idx', 0)
ERROR: 

-- summarize one range
SELECT brin_summarize_range('brin_summarize_multi_idx', 0)

Catalog Error: Scalar Function with name brin_summarize_range does not exist!
Did you mean "enum_range"?

-- nothing: already summarized
SELECT brin_summarize_range('brin_summarize_multi_idx', 1)
ERROR: 
-- nothing: already summarized
SELECT brin_summarize_range('brin_summarize_multi_idx', 1)

Catalog Error: Scalar Function with name brin_summarize_range does not exist!
Did you mean "enum_range"?

-- summarize one range
SELECT brin_summarize_range('brin_summarize_multi_idx', 2)
ERROR: 
-- summarize one range
SELECT brin_summarize_range('brin_summarize_multi_idx', 2)

Catalog Error: Scalar Function with name brin_summarize_range does not exist!
Did you mean "enum_range"?

-- nothing: page doesn''t exist in table
SELECT brin_summarize_range('brin_summarize_multi_idx', 4294967295)
ERROR: 
-- nothing: page doesn''t exist in table
SELECT brin_summarize_range('brin_summarize_multi_idx', 4294967295)

Catalog Error: Scalar Function with name brin_summarize_range does not exist!
Did you mean "enum_range"?

-- invalid block number values
SELECT brin_summarize_range('brin_summarize_multi_idx', -1)
ERROR: 
-- invalid block number values
SELECT brin_summarize_range('brin_summarize_multi_idx', -1)

Catalog Error: Scalar Function with name brin_summarize_range does not exist!
Did you mean "enum_range"?

SELECT brin_summarize_range('brin_summarize_multi_idx', 4294967296)
ERROR: 
SELECT brin_summarize_range('brin_summarize_multi_idx', 4294967296)

Catalog Error: Scalar Function with name brin_summarize_range does not exist!
Did you mean "enum_range"?



-- test brin cost estimates behave sanely based on correlation of values
CREATE TABLE brin_test_multi (a INT, b INT)

INSERT INTO brin_test_multi SELECT x/100,x%100 FROM generate_series(1,10000) x(x)

CREATE INDEX brin_test_multi_a_idx ON brin_test_multi USING brin (a) WITH (pages_per_range = 2)
ERROR: 
CREATE INDEX brin_test_multi_a_idx ON brin_test_multi USING brin (a) WITH (pages_per_range = 2)

Binder Error: Unknown index type: BRIN

CREATE INDEX brin_test_multi_b_idx ON brin_test_multi USING brin (b) WITH (pages_per_range = 2)
ERROR: 
CREATE INDEX brin_test_multi_b_idx ON brin_test_multi USING brin (b) WITH (pages_per_range = 2)

Binder Error: Unknown index type: BRIN

VACUUM ANALYZE brin_test_multi


-- Ensure brin index is used when columns are perfectly correlated
EXPLAIN (COSTS OFF) SELECT * FROM brin_test_multi WHERE a = 1
ERROR: 

-- Ensure brin index is used when columns are perfectly correlated
EXPLAIN (COSTS OFF) SELECT * FROM brin_test_multi WHERE a = 1

Not implemented Error: Unimplemented explain type: COSTS

-- Ensure brin index is not used when values are not correlated
EXPLAIN (COSTS OFF) SELECT * FROM brin_test_multi WHERE b = 1
ERROR: 
-- Ensure brin index is not used when values are not correlated
EXPLAIN (COSTS OFF) SELECT * FROM brin_test_multi WHERE b = 1

Not implemented Error: Unimplemented explain type: COSTS



-- do some inequality tests
CREATE TABLE brin_test_multi_1 (a INT, b BIGINT) WITH (fillfactor=10)

INSERT INTO brin_test_multi_1
SELECT i/5 + mod(911 * i + 483, 25),
       i/10 + mod(751 * i + 221, 41)
  FROM generate_series(1,1000) s(i)


CREATE INDEX brin_test_multi_1_idx_1 ON brin_test_multi_1 USING brin (a int4_minmax_multi_ops) WITH (pages_per_range=5)
ERROR: 

CREATE INDEX brin_test_multi_1_idx_1 ON brin_test_multi_1 USING brin (a int4_minmax_multi_ops) WITH (pages_per_range=5)

Not implemented Error: Index with opclass not supported yet!

CREATE INDEX brin_test_multi_1_idx_2 ON brin_test_multi_1 USING brin (b int8_minmax_multi_ops) WITH (pages_per_range=5)
ERROR: 
CREATE INDEX brin_test_multi_1_idx_2 ON brin_test_multi_1 USING brin (b int8_minmax_multi_ops) WITH (pages_per_range=5)

Not implemented Error: Index with opclass not supported yet!


SET enable_seqscan=off
ERROR: 

SET enable_seqscan=off

Catalog Error: unrecognized configuration parameter "enable_seqscan"

Did you mean: "enable_object_cache"


-- int: less than
SELECT COUNT(*) FROM brin_test_multi_1 WHERE a < 37
RESULT: 
	[(122,)]


SELECT COUNT(*) FROM brin_test_multi_1 WHERE a < 113
RESULT: 
	[(502,)]


SELECT COUNT(*) FROM brin_test_multi_1 WHERE a <= 177
RESULT: 
	[(827,)]


SELECT COUNT(*) FROM brin_test_multi_1 WHERE a <= 25
RESULT: 
	[(67,)]


-- int: greater than
SELECT COUNT(*) FROM brin_test_multi_1 WHERE a > 120
RESULT: 
	[(458,)]


SELECT COUNT(*) FROM brin_test_multi_1 WHERE a >= 180
RESULT: 
	[(163,)]


SELECT COUNT(*) FROM brin_test_multi_1 WHERE a > 71
RESULT: 
	[(703,)]


SELECT COUNT(*) FROM brin_test_multi_1 WHERE a >= 63
RESULT: 
	[(748,)]


-- int: equals
SELECT COUNT(*) FROM brin_test_multi_1 WHERE a = 207
RESULT: 
	[(4,)]


SELECT COUNT(*) FROM brin_test_multi_1 WHERE a = 177
RESULT: 
	[(5,)]


-- bigint: less than
SELECT COUNT(*) FROM brin_test_multi_1 WHERE b < 73
RESULT: 
	[(525,)]


SELECT COUNT(*) FROM brin_test_multi_1 WHERE b <= 47
RESULT: 
	[(274,)]


SELECT COUNT(*) FROM brin_test_multi_1 WHERE b < 199
RESULT: 
	[(1000,)]


SELECT COUNT(*) FROM brin_test_multi_1 WHERE b <= 150
RESULT: 
	[(1000,)]


-- bigint: greater than
SELECT COUNT(*) FROM brin_test_multi_1 WHERE b > 93
RESULT: 
	[(266,)]


SELECT COUNT(*) FROM brin_test_multi_1 WHERE b > 37
RESULT: 
	[(825,)]


SELECT COUNT(*) FROM brin_test_multi_1 WHERE b >= 215
RESULT: 
	[(0,)]


SELECT COUNT(*) FROM brin_test_multi_1 WHERE b > 201
RESULT: 
	[(0,)]


-- bigint: equals
SELECT COUNT(*) FROM brin_test_multi_1 WHERE b = 88
RESULT: 
	[(11,)]


SELECT COUNT(*) FROM brin_test_multi_1 WHERE b = 103
RESULT: 
	[(9,)]


-- now do the same, but insert the rows with the indexes already created
-- so that we don''t use the ''build callback'' and instead use the regular
-- approach of adding rows into existing ranges
TRUNCATE brin_test_multi_1


INSERT INTO brin_test_multi_1
SELECT i/5 + mod(911 * i + 483, 25),
       i/10 + mod(751 * i + 221, 41)
  FROM generate_series(1,1000) s(i)


-- int: less than
SELECT COUNT(*) FROM brin_test_multi_1 WHERE a < 37
RESULT: 
	[(122,)]


SELECT COUNT(*) FROM brin_test_multi_1 WHERE a < 113
RESULT: 
	[(502,)]


SELECT COUNT(*) FROM brin_test_multi_1 WHERE a <= 177
RESULT: 
	[(827,)]


SELECT COUNT(*) FROM brin_test_multi_1 WHERE a <= 25
RESULT: 
	[(67,)]


-- int: greater than
SELECT COUNT(*) FROM brin_test_multi_1 WHERE a > 120
RESULT: 
	[(458,)]


SELECT COUNT(*) FROM brin_test_multi_1 WHERE a >= 180
RESULT: 
	[(163,)]


SELECT COUNT(*) FROM brin_test_multi_1 WHERE a > 71
RESULT: 
	[(703,)]


SELECT COUNT(*) FROM brin_test_multi_1 WHERE a >= 63
RESULT: 
	[(748,)]


-- int: equals
SELECT COUNT(*) FROM brin_test_multi_1 WHERE a = 207
RESULT: 
	[(4,)]


SELECT COUNT(*) FROM brin_test_multi_1 WHERE a = 177
RESULT: 
	[(5,)]


-- bigint: less than
SELECT COUNT(*) FROM brin_test_multi_1 WHERE b < 73
RESULT: 
	[(525,)]


SELECT COUNT(*) FROM brin_test_multi_1 WHERE b <= 47
RESULT: 
	[(274,)]


SELECT COUNT(*) FROM brin_test_multi_1 WHERE b < 199
RESULT: 
	[(1000,)]


SELECT COUNT(*) FROM brin_test_multi_1 WHERE b <= 150
RESULT: 
	[(1000,)]


-- bigint: greater than
SELECT COUNT(*) FROM brin_test_multi_1 WHERE b > 93
RESULT: 
	[(266,)]


SELECT COUNT(*) FROM brin_test_multi_1 WHERE b > 37
RESULT: 
	[(825,)]


SELECT COUNT(*) FROM brin_test_multi_1 WHERE b >= 215
RESULT: 
	[(0,)]


SELECT COUNT(*) FROM brin_test_multi_1 WHERE b > 201
RESULT: 
	[(0,)]


-- bigint: equals
SELECT COUNT(*) FROM brin_test_multi_1 WHERE b = 88
RESULT: 
	[(11,)]


SELECT COUNT(*) FROM brin_test_multi_1 WHERE b = 103
RESULT: 
	[(9,)]



DROP TABLE brin_test_multi_1

RESET enable_seqscan
ERROR: 
RESET enable_seqscan

Catalog Error: unrecognized configuration parameter "enable_seqscan"

Did you mean: "enable_object_cache"



-- do some inequality tests for varlena data types
CREATE TABLE brin_test_multi_2 (a UUID) WITH (fillfactor=10)

INSERT INTO brin_test_multi_2
SELECT v::uuid FROM (SELECT row_number() OVER (ORDER BY v) c, v FROM (SELECT fipshash((i/13)::text) AS v FROM generate_series(1,1000) s(i)) foo) bar ORDER BY c + 25 * random()
ERROR: 
INSERT INTO brin_test_multi_2
SELECT v::uuid FROM (SELECT row_number() OVER (ORDER BY v) c, v FROM (SELECT fipshash((i/13)::text) AS v FROM generate_series(1,1000) s(i)) foo) bar ORDER BY c + 25 * random()

Catalog Error: Scalar Function with name fipshash does not exist!
Did you mean "hash"?
LINE 3: ...v::uuid FROM (SELECT row_number() OVER (ORDER BY v) c, v FROM (SELECT fipshash...
                                                  ^


CREATE INDEX brin_test_multi_2_idx ON brin_test_multi_2 USING brin (a uuid_minmax_multi_ops) WITH (pages_per_range=5)
ERROR: 

CREATE INDEX brin_test_multi_2_idx ON brin_test_multi_2 USING brin (a uuid_minmax_multi_ops) WITH (pages_per_range=5)

Not implemented Error: Index with opclass not supported yet!


SET enable_seqscan=off
ERROR: 

SET enable_seqscan=off

Catalog Error: unrecognized configuration parameter "enable_seqscan"

Did you mean: "enable_object_cache"


SELECT COUNT(*) FROM brin_test_multi_2 WHERE a < '3d914f93-48c9-cc0f-f8a7-9716700b9fcd'
RESULT: 
	[(0,)]


SELECT COUNT(*) FROM brin_test_multi_2 WHERE a > '3d914f93-48c9-cc0f-f8a7-9716700b9fcd'
RESULT: 
	[(0,)]


SELECT COUNT(*) FROM brin_test_multi_2 WHERE a <= 'f369cb89-fc62-7e66-8987-007d121ed1ea'
RESULT: 
	[(0,)]


SELECT COUNT(*) FROM brin_test_multi_2 WHERE a >= 'aea92132-c4cb-eb26-3e6a-c2bf6c183b5d'
RESULT: 
	[(0,)]


SELECT COUNT(*) FROM brin_test_multi_2 WHERE a = '5feceb66-ffc8-6f38-d952-786c6d696c79'
RESULT: 
	[(0,)]


SELECT COUNT(*) FROM brin_test_multi_2 WHERE a = '86e50149-6586-6131-2a9e-0b35558d84f6'
RESULT: 
	[(0,)]



-- now do the same, but insert the rows with the indexes already created
-- so that we don''t use the ''build callback'' and instead use the regular
-- approach of adding rows into existing ranges

TRUNCATE brin_test_multi_2

INSERT INTO brin_test_multi_2
SELECT v::uuid FROM (SELECT row_number() OVER (ORDER BY v) c, v FROM (SELECT fipshash((i/13)::text) AS v FROM generate_series(1,1000) s(i)) foo) bar ORDER BY c + 25 * random()
ERROR: 
INSERT INTO brin_test_multi_2
SELECT v::uuid FROM (SELECT row_number() OVER (ORDER BY v) c, v FROM (SELECT fipshash((i/13)::text) AS v FROM generate_series(1,1000) s(i)) foo) bar ORDER BY c + 25 * random()

Catalog Error: Scalar Function with name fipshash does not exist!
Did you mean "hash"?
LINE 3: ...v::uuid FROM (SELECT row_number() OVER (ORDER BY v) c, v FROM (SELECT fipshash...
                                                  ^


SELECT COUNT(*) FROM brin_test_multi_2 WHERE a < '3d914f93-48c9-cc0f-f8a7-9716700b9fcd'
RESULT: 
	[(0,)]


SELECT COUNT(*) FROM brin_test_multi_2 WHERE a > '3d914f93-48c9-cc0f-f8a7-9716700b9fcd'
RESULT: 
	[(0,)]


SELECT COUNT(*) FROM brin_test_multi_2 WHERE a <= 'f369cb89-fc62-7e66-8987-007d121ed1ea'
RESULT: 
	[(0,)]


SELECT COUNT(*) FROM brin_test_multi_2 WHERE a >= 'aea92132-c4cb-eb26-3e6a-c2bf6c183b5d'
RESULT: 
	[(0,)]


SELECT COUNT(*) FROM brin_test_multi_2 WHERE a = '5feceb66-ffc8-6f38-d952-786c6d696c79'
RESULT: 
	[(0,)]


SELECT COUNT(*) FROM brin_test_multi_2 WHERE a = '86e50149-6586-6131-2a9e-0b35558d84f6'
RESULT: 
	[(0,)]


DROP TABLE brin_test_multi_2

RESET enable_seqscan
ERROR: 
RESET enable_seqscan

Catalog Error: unrecognized configuration parameter "enable_seqscan"

Did you mean: "enable_object_cache"


-- test overflows during CREATE INDEX with extreme timestamp values
CREATE TABLE brin_timestamp_test(a TIMESTAMPTZ)


SET datestyle TO iso
ERROR: 

SET datestyle TO iso

Catalog Error: unrecognized configuration parameter "datestyle"

Did you mean: "user"


-- values close to timestamp minimum
INSERT INTO brin_timestamp_test
SELECT '4713-01-01 00:00:01 BC'::timestamptz + (i || ' seconds')::interval
  FROM generate_series(1,30) s(i)


-- values close to timestamp maximum
INSERT INTO brin_timestamp_test
SELECT '294276-12-01 00:00:01'::timestamptz + (i || ' seconds')::interval
  FROM generate_series(1,30) s(i)
ERROR: 

-- values close to timestamp maximum
INSERT INTO brin_timestamp_test
SELECT '294276-12-01 00:00:01'::timestamptz + (i || ' seconds')::interval
  FROM generate_series(1,30) s(i)

Conversion Error: timestamp field value out of range: "294276-12-01 00:00:01", expected format is (YYYY-MM-DD HH:MM:SS[.US][±HH:MM| ZONE])
LINE 5: SELECT '294276-12-01 00:00:01'::timestamptz + (i || ' seconds')::interval
  FROM generate_series(1,30) s(i)
...
                                      ^


CREATE INDEX ON brin_timestamp_test USING brin (a timestamptz_minmax_multi_ops) WITH (pages_per_range=1)
ERROR: 

CREATE INDEX ON brin_timestamp_test USING brin (a timestamptz_minmax_multi_ops) WITH (pages_per_range=1)

Not implemented Error: Index with opclass not supported yet!

DROP TABLE brin_timestamp_test


-- test overflows during CREATE INDEX with extreme date values
CREATE TABLE brin_date_test(a DATE)


-- insert values close to date minimum
INSERT INTO brin_date_test SELECT '4713-01-01 BC'::date + i FROM generate_series(1, 30) s(i)
ERROR: 

-- insert values close to date minimum
INSERT INTO brin_date_test SELECT '4713-01-01 BC'::date + i FROM generate_series(1, 30) s(i)

Binder Error: No function matches the given name and argument types '+(DATE, BIGINT)'. You might need to add explicit type casts.
	Candidate functions:
	+(TINYINT) -> TINYINT
	+(TINYINT, TINYINT) -> TINYINT
	+(SMALLINT) -> SMALLINT
	+(SMALLINT, SMALLINT) -> SMALLINT
	+(INTEGER) -> INTEGER
	+(INTEGER, INTEGER) -> INTEGER
	+(BIGINT) -> BIGINT
	+(BIGINT, BIGINT) -> BIGINT
	+(HUGEINT) -> HUGEINT
	+(HUGEINT, HUGEINT) -> HUGEINT
	+(FLOAT) -> FLOAT
	+(FLOAT, FLOAT) -> FLOAT
	+(DOUBLE) -> DOUBLE
	+(DOUBLE, DOUBLE) -> DOUBLE
	+(DECIMAL) -> DECIMAL
	+(DECIMAL, DECIMAL) -> DECIMAL
	+(UTINYINT) -> UTINYINT
	+(UTINYINT, UTINYINT) -> UTINYINT
	+(USMALLINT) -> USMALLINT
	+(USMALLINT, USMALLINT) -> USMALLINT
	+(UINTEGER) -> UINTEGER
	+(UINTEGER, UINTEGER) -> UINTEGER
	+(UBIGINT) -> UBIGINT
	+(UBIGINT, UBIGINT) -> UBIGINT
	+(UHUGEINT) -> UHUGEINT
	+(UHUGEINT, UHUGEINT) -> UHUGEINT
	+(DATE, INTEGER) -> DATE
	+(INTEGER, DATE) -> DATE
	+(INTERVAL, INTERVAL) -> INTERVAL
	+(DATE, INTERVAL) -> TIMESTAMP
	+(INTERVAL, DATE) -> TIMESTAMP
	+(TIME, INTERVAL) -> TIME
	+(INTERVAL, TIME) -> TIME
	+(TIMESTAMP, INTERVAL) -> TIMESTAMP
	+(INTERVAL, TIMESTAMP) -> TIMESTAMP
	+(TIME WITH TIME ZONE, INTERVAL) -> TIME WITH TIME ZONE
	+(INTERVAL, TIME WITH TIME ZONE) -> TIME WITH TIME ZONE
	+(TIME, DATE) -> TIMESTAMP
	+(DATE, TIME) -> TIMESTAMP
	+(TIME WITH TIME ZONE, DATE) -> TIMESTAMP WITH TIME ZONE
	+(DATE, TIME WITH TIME ZONE) -> TIMESTAMP WITH TIME ZONE
	+(ANY[], ANY[]) -> ANY[]
	+(TIMESTAMP WITH TIME ZONE, INTERVAL) -> TIMESTAMP WITH TIME ZONE
	+(INTERVAL, TIMESTAMP WITH TIME ZONE) -> TIMESTAMP WITH TIME ZONE
	+(INET, HUGEINT) -> INET

LINE 4: ...s close to date minimum
INSERT INTO brin_date_test SELECT '4713-01-01 BC'::date + i FROM generate_series(1, 30) s(i)
                                                  ^


-- insert values close to date minimum
INSERT INTO brin_date_test SELECT '5874897-12-01'::date + i FROM generate_series(1, 30) s(i)
ERROR: 

-- insert values close to date minimum
INSERT INTO brin_date_test SELECT '5874897-12-01'::date + i FROM generate_series(1, 30) s(i)

Binder Error: No function matches the given name and argument types '+(DATE, BIGINT)'. You might need to add explicit type casts.
	Candidate functions:
	+(TINYINT) -> TINYINT
	+(TINYINT, TINYINT) -> TINYINT
	+(SMALLINT) -> SMALLINT
	+(SMALLINT, SMALLINT) -> SMALLINT
	+(INTEGER) -> INTEGER
	+(INTEGER, INTEGER) -> INTEGER
	+(BIGINT) -> BIGINT
	+(BIGINT, BIGINT) -> BIGINT
	+(HUGEINT) -> HUGEINT
	+(HUGEINT, HUGEINT) -> HUGEINT
	+(FLOAT) -> FLOAT
	+(FLOAT, FLOAT) -> FLOAT
	+(DOUBLE) -> DOUBLE
	+(DOUBLE, DOUBLE) -> DOUBLE
	+(DECIMAL) -> DECIMAL
	+(DECIMAL, DECIMAL) -> DECIMAL
	+(UTINYINT) -> UTINYINT
	+(UTINYINT, UTINYINT) -> UTINYINT
	+(USMALLINT) -> USMALLINT
	+(USMALLINT, USMALLINT) -> USMALLINT
	+(UINTEGER) -> UINTEGER
	+(UINTEGER, UINTEGER) -> UINTEGER
	+(UBIGINT) -> UBIGINT
	+(UBIGINT, UBIGINT) -> UBIGINT
	+(UHUGEINT) -> UHUGEINT
	+(UHUGEINT, UHUGEINT) -> UHUGEINT
	+(DATE, INTEGER) -> DATE
	+(INTEGER, DATE) -> DATE
	+(INTERVAL, INTERVAL) -> INTERVAL
	+(DATE, INTERVAL) -> TIMESTAMP
	+(INTERVAL, DATE) -> TIMESTAMP
	+(TIME, INTERVAL) -> TIME
	+(INTERVAL, TIME) -> TIME
	+(TIMESTAMP, INTERVAL) -> TIMESTAMP
	+(INTERVAL, TIMESTAMP) -> TIMESTAMP
	+(TIME WITH TIME ZONE, INTERVAL) -> TIME WITH TIME ZONE
	+(INTERVAL, TIME WITH TIME ZONE) -> TIME WITH TIME ZONE
	+(TIME, DATE) -> TIMESTAMP
	+(DATE, TIME) -> TIMESTAMP
	+(TIME WITH TIME ZONE, DATE) -> TIMESTAMP WITH TIME ZONE
	+(DATE, TIME WITH TIME ZONE) -> TIMESTAMP WITH TIME ZONE
	+(ANY[], ANY[]) -> ANY[]
	+(TIMESTAMP WITH TIME ZONE, INTERVAL) -> TIMESTAMP WITH TIME ZONE
	+(INTERVAL, TIMESTAMP WITH TIME ZONE) -> TIMESTAMP WITH TIME ZONE
	+(INET, HUGEINT) -> INET

LINE 4: ...s close to date minimum
INSERT INTO brin_date_test SELECT '5874897-12-01'::date + i FROM generate_series(1, 30) s(i)
                                                  ^


CREATE INDEX ON brin_date_test USING brin (a date_minmax_multi_ops) WITH (pages_per_range=1)
ERROR: 

CREATE INDEX ON brin_date_test USING brin (a date_minmax_multi_ops) WITH (pages_per_range=1)

Not implemented Error: Index with opclass not supported yet!


SET enable_seqscan = off
ERROR: 

SET enable_seqscan = off

Catalog Error: unrecognized configuration parameter "enable_seqscan"

Did you mean: "enable_object_cache"


-- make sure the ranges were built correctly and 2023-01-01 eliminates all
EXPLAIN (ANALYZE, TIMING OFF, COSTS OFF, SUMMARY OFF)
SELECT * FROM brin_date_test WHERE a = '2023-01-01'::date
ERROR: 

-- make sure the ranges were built correctly and 2023-01-01 eliminates all
EXPLAIN (ANALYZE, TIMING OFF, COSTS OFF, SUMMARY OFF)
SELECT * FROM brin_date_test WHERE a = '2023-01-01'::date

Not implemented Error: Unimplemented explain type: TIMING


DROP TABLE brin_date_test

RESET enable_seqscan
ERROR: 
RESET enable_seqscan

Catalog Error: unrecognized configuration parameter "enable_seqscan"

Did you mean: "enable_object_cache"


-- test handling of infinite timestamp values
CREATE TABLE brin_timestamp_test(a TIMESTAMP)


INSERT INTO brin_timestamp_test VALUES ('-infinity'), ('infinity')

INSERT INTO brin_timestamp_test
SELECT i FROM generate_series('2000-01-01'::timestamp, '2000-02-09'::timestamp, '1 day'::interval) s(i)


CREATE INDEX ON brin_timestamp_test USING brin (a timestamp_minmax_multi_ops) WITH (pages_per_range=1)
ERROR: 

CREATE INDEX ON brin_timestamp_test USING brin (a timestamp_minmax_multi_ops) WITH (pages_per_range=1)

Not implemented Error: Index with opclass not supported yet!


SET enable_seqscan = off
ERROR: 

SET enable_seqscan = off

Catalog Error: unrecognized configuration parameter "enable_seqscan"

Did you mean: "enable_object_cache"


EXPLAIN (ANALYZE, TIMING OFF, COSTS OFF, SUMMARY OFF)
SELECT * FROM brin_timestamp_test WHERE a = '2023-01-01'::timestamp
ERROR: 

EXPLAIN (ANALYZE, TIMING OFF, COSTS OFF, SUMMARY OFF)
SELECT * FROM brin_timestamp_test WHERE a = '2023-01-01'::timestamp

Not implemented Error: Unimplemented explain type: TIMING


EXPLAIN (ANALYZE, TIMING OFF, COSTS OFF, SUMMARY OFF)
SELECT * FROM brin_timestamp_test WHERE a = '1900-01-01'::timestamp
ERROR: 

EXPLAIN (ANALYZE, TIMING OFF, COSTS OFF, SUMMARY OFF)
SELECT * FROM brin_timestamp_test WHERE a = '1900-01-01'::timestamp

Not implemented Error: Unimplemented explain type: TIMING


DROP TABLE brin_timestamp_test

RESET enable_seqscan
ERROR: 
RESET enable_seqscan

Catalog Error: unrecognized configuration parameter "enable_seqscan"

Did you mean: "enable_object_cache"


-- test handling of infinite date values
CREATE TABLE brin_date_test(a DATE)


INSERT INTO brin_date_test VALUES ('-infinity'), ('infinity')

INSERT INTO brin_date_test SELECT '2000-01-01'::date + i FROM generate_series(1, 40) s(i)
ERROR: 
INSERT INTO brin_date_test SELECT '2000-01-01'::date + i FROM generate_series(1, 40) s(i)

Binder Error: No function matches the given name and argument types '+(DATE, BIGINT)'. You might need to add explicit type casts.
	Candidate functions:
	+(TINYINT) -> TINYINT
	+(TINYINT, TINYINT) -> TINYINT
	+(SMALLINT) -> SMALLINT
	+(SMALLINT, SMALLINT) -> SMALLINT
	+(INTEGER) -> INTEGER
	+(INTEGER, INTEGER) -> INTEGER
	+(BIGINT) -> BIGINT
	+(BIGINT, BIGINT) -> BIGINT
	+(HUGEINT) -> HUGEINT
	+(HUGEINT, HUGEINT) -> HUGEINT
	+(FLOAT) -> FLOAT
	+(FLOAT, FLOAT) -> FLOAT
	+(DOUBLE) -> DOUBLE
	+(DOUBLE, DOUBLE) -> DOUBLE
	+(DECIMAL) -> DECIMAL
	+(DECIMAL, DECIMAL) -> DECIMAL
	+(UTINYINT) -> UTINYINT
	+(UTINYINT, UTINYINT) -> UTINYINT
	+(USMALLINT) -> USMALLINT
	+(USMALLINT, USMALLINT) -> USMALLINT
	+(UINTEGER) -> UINTEGER
	+(UINTEGER, UINTEGER) -> UINTEGER
	+(UBIGINT) -> UBIGINT
	+(UBIGINT, UBIGINT) -> UBIGINT
	+(UHUGEINT) -> UHUGEINT
	+(UHUGEINT, UHUGEINT) -> UHUGEINT
	+(DATE, INTEGER) -> DATE
	+(INTEGER, DATE) -> DATE
	+(INTERVAL, INTERVAL) -> INTERVAL
	+(DATE, INTERVAL) -> TIMESTAMP
	+(INTERVAL, DATE) -> TIMESTAMP
	+(TIME, INTERVAL) -> TIME
	+(INTERVAL, TIME) -> TIME
	+(TIMESTAMP, INTERVAL) -> TIMESTAMP
	+(INTERVAL, TIMESTAMP) -> TIMESTAMP
	+(TIME WITH TIME ZONE, INTERVAL) -> TIME WITH TIME ZONE
	+(INTERVAL, TIME WITH TIME ZONE) -> TIME WITH TIME ZONE
	+(TIME, DATE) -> TIMESTAMP
	+(DATE, TIME) -> TIMESTAMP
	+(TIME WITH TIME ZONE, DATE) -> TIMESTAMP WITH TIME ZONE
	+(DATE, TIME WITH TIME ZONE) -> TIMESTAMP WITH TIME ZONE
	+(ANY[], ANY[]) -> ANY[]
	+(TIMESTAMP WITH TIME ZONE, INTERVAL) -> TIMESTAMP WITH TIME ZONE
	+(INTERVAL, TIMESTAMP WITH TIME ZONE) -> TIMESTAMP WITH TIME ZONE
	+(INET, HUGEINT) -> INET

LINE 2: ...rin_date_test SELECT '2000-01-01'::date + i FROM generate_series(1, 40) s(i)
                                                  ^


CREATE INDEX ON brin_date_test USING brin (a date_minmax_multi_ops) WITH (pages_per_range=1)
ERROR: 

CREATE INDEX ON brin_date_test USING brin (a date_minmax_multi_ops) WITH (pages_per_range=1)

Not implemented Error: Index with opclass not supported yet!


SET enable_seqscan = off
ERROR: 

SET enable_seqscan = off

Catalog Error: unrecognized configuration parameter "enable_seqscan"

Did you mean: "enable_object_cache"


EXPLAIN (ANALYZE, TIMING OFF, COSTS OFF, SUMMARY OFF)
SELECT * FROM brin_date_test WHERE a = '2023-01-01'::date
ERROR: 

EXPLAIN (ANALYZE, TIMING OFF, COSTS OFF, SUMMARY OFF)
SELECT * FROM brin_date_test WHERE a = '2023-01-01'::date

Not implemented Error: Unimplemented explain type: TIMING


EXPLAIN (ANALYZE, TIMING OFF, COSTS OFF, SUMMARY OFF)
SELECT * FROM brin_date_test WHERE a = '1900-01-01'::date
ERROR: 

EXPLAIN (ANALYZE, TIMING OFF, COSTS OFF, SUMMARY OFF)
SELECT * FROM brin_date_test WHERE a = '1900-01-01'::date

Not implemented Error: Unimplemented explain type: TIMING


DROP TABLE brin_date_test

RESET enable_seqscan
ERROR: 
RESET enable_seqscan

Catalog Error: unrecognized configuration parameter "enable_seqscan"

Did you mean: "enable_object_cache"

RESET datestyle
ERROR: 
RESET datestyle

Catalog Error: unrecognized configuration parameter "datestyle"

Did you mean: "user"


-- test handling of overflow for interval values
CREATE TABLE brin_interval_test(a INTERVAL)


INSERT INTO brin_interval_test SELECT (i || ' years')::interval FROM generate_series(-178000000, -177999980) s(i)


INSERT INTO brin_interval_test SELECT (i || ' years')::interval FROM generate_series( 177999980,  178000000) s(i)


CREATE INDEX ON brin_interval_test USING brin (a interval_minmax_multi_ops) WITH (pages_per_range=1)
ERROR: 

CREATE INDEX ON brin_interval_test USING brin (a interval_minmax_multi_ops) WITH (pages_per_range=1)

Not implemented Error: Index with opclass not supported yet!


SET enable_seqscan = off
ERROR: 

SET enable_seqscan = off

Catalog Error: unrecognized configuration parameter "enable_seqscan"

Did you mean: "enable_object_cache"


EXPLAIN (ANALYZE, TIMING OFF, COSTS OFF, SUMMARY OFF)
SELECT * FROM brin_interval_test WHERE a = '-30 years'::interval
ERROR: 

EXPLAIN (ANALYZE, TIMING OFF, COSTS OFF, SUMMARY OFF)
SELECT * FROM brin_interval_test WHERE a = '-30 years'::interval

Not implemented Error: Unimplemented explain type: TIMING


EXPLAIN (ANALYZE, TIMING OFF, COSTS OFF, SUMMARY OFF)
SELECT * FROM brin_interval_test WHERE a = '30 years'::interval
ERROR: 

EXPLAIN (ANALYZE, TIMING OFF, COSTS OFF, SUMMARY OFF)
SELECT * FROM brin_interval_test WHERE a = '30 years'::interval

Not implemented Error: Unimplemented explain type: TIMING


DROP TABLE brin_interval_test

RESET enable_seqscan
ERROR: 
RESET enable_seqscan

Catalog Error: unrecognized configuration parameter "enable_seqscan"

Did you mean: "enable_object_cache"


-- test handling of infinite interval values
CREATE TABLE brin_interval_test(a INTERVAL)


INSERT INTO brin_interval_test VALUES ('-infinity'), ('infinity')
ERROR: 

INSERT INTO brin_interval_test VALUES ('-infinity'), ('infinity')

Conversion Error: Could not convert string '-infinity' to INTERVAL
LINE 3: INSERT INTO brin_interval_test VALUES ('-infinity'), ('infinity')
                                               ^

INSERT INTO brin_interval_test SELECT (i || ' days')::interval FROM generate_series(100, 140) s(i)


CREATE INDEX ON brin_interval_test USING brin (a interval_minmax_multi_ops) WITH (pages_per_range=1)
ERROR: 

CREATE INDEX ON brin_interval_test USING brin (a interval_minmax_multi_ops) WITH (pages_per_range=1)

Not implemented Error: Index with opclass not supported yet!


SET enable_seqscan = off
ERROR: 

SET enable_seqscan = off

Catalog Error: unrecognized configuration parameter "enable_seqscan"

Did you mean: "enable_object_cache"


EXPLAIN (ANALYZE, TIMING OFF, COSTS OFF, SUMMARY OFF)
SELECT * FROM brin_interval_test WHERE a = '-30 years'::interval
ERROR: 

EXPLAIN (ANALYZE, TIMING OFF, COSTS OFF, SUMMARY OFF)
SELECT * FROM brin_interval_test WHERE a = '-30 years'::interval

Not implemented Error: Unimplemented explain type: TIMING


EXPLAIN (ANALYZE, TIMING OFF, COSTS OFF, SUMMARY OFF)
SELECT * FROM brin_interval_test WHERE a = '30 years'::interval
ERROR: 

EXPLAIN (ANALYZE, TIMING OFF, COSTS OFF, SUMMARY OFF)
SELECT * FROM brin_interval_test WHERE a = '30 years'::interval

Not implemented Error: Unimplemented explain type: TIMING


DROP TABLE brin_interval_test

RESET enable_seqscan
ERROR: 
RESET enable_seqscan

Catalog Error: unrecognized configuration parameter "enable_seqscan"

Did you mean: "enable_object_cache"

RESET datestyle
ERROR: 
RESET datestyle

Catalog Error: unrecognized configuration parameter "datestyle"

Did you mean: "user"


