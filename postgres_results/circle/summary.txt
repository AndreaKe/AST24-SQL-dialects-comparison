Guest DBMS identified: postgres
-----------
QUERY:
--
-- CIRCLE
--

-- Back off displayed precision a little bit to reduce platform-to-platform
-- variation in results.
SET extra_float_digits = -1;
RESULT: [duckdb: ERROR, mySQL: ERROR]

-----------
QUERY:


CREATE TABLE CIRCLE_TBL (f1 circle);
RESULT: [duckdb: ERROR, mySQL: ERROR]

-----------
QUERY:


INSERT INTO CIRCLE_TBL VALUES ('<(5,1),3>');
RESULT: [duckdb: ERROR, mySQL: ERROR]

-----------
QUERY:


INSERT INTO CIRCLE_TBL VALUES ('((1,2),100)');
RESULT: [duckdb: ERROR, mySQL: ERROR]

-----------
QUERY:


INSERT INTO CIRCLE_TBL VALUES (' 1 , 3 , 5 ');
RESULT: [duckdb: ERROR, mySQL: ERROR]

-----------
QUERY:


INSERT INTO CIRCLE_TBL VALUES (' ( ( 1 , 2 ) , 3 ) ');
RESULT: [duckdb: ERROR, mySQL: ERROR]

-----------
QUERY:


INSERT INTO CIRCLE_TBL VALUES (' ( 100 , 200 ) , 10 ');
RESULT: [duckdb: ERROR, mySQL: ERROR]

-----------
QUERY:


INSERT INTO CIRCLE_TBL VALUES (' < ( 100 , 1 ) , 115 > ');
RESULT: [duckdb: ERROR, mySQL: ERROR]

-----------
QUERY:


INSERT INTO CIRCLE_TBL VALUES ('<(3,5),0>');
RESULT: [duckdb: ERROR, mySQL: ERROR]

-----------
QUERY:
	-- Zero radius

INSERT INTO CIRCLE_TBL VALUES ('<(3,5),NaN>');
RESULT: [duckdb: ERROR, mySQL: ERROR]

-----------
QUERY:
	-- NaN radius

-- bad values

INSERT INTO CIRCLE_TBL VALUES ('<(-100,0),-100>');
RESULT: [duckdb: SAME, mySQL: SAME]

-----------
QUERY:


INSERT INTO CIRCLE_TBL VALUES ('<(100,200),10');
RESULT: [duckdb: SAME, mySQL: SAME]

-----------
QUERY:


INSERT INTO CIRCLE_TBL VALUES ('<(100,200),10> x');
RESULT: [duckdb: SAME, mySQL: SAME]

-----------
QUERY:


INSERT INTO CIRCLE_TBL VALUES ('1abc,3,5');
RESULT: [duckdb: SAME, mySQL: SAME]

-----------
QUERY:


INSERT INTO CIRCLE_TBL VALUES ('(3,(1,2),3)');
RESULT: [duckdb: SAME, mySQL: SAME]

-----------
QUERY:


SELECT * FROM CIRCLE_TBL;
RESULT: [duckdb: ERROR, mySQL: ERROR]

-----------
QUERY:


SELECT center(f1) AS center
  FROM CIRCLE_TBL;
RESULT: [duckdb: ERROR, mySQL: ERROR]

-----------
QUERY:


SELECT radius(f1) AS radius
  FROM CIRCLE_TBL;
RESULT: [duckdb: ERROR, mySQL: ERROR]

-----------
QUERY:


SELECT diameter(f1) AS diameter
  FROM CIRCLE_TBL;
RESULT: [duckdb: ERROR, mySQL: ERROR]

-----------
QUERY:


SELECT f1 FROM CIRCLE_TBL WHERE radius(f1) < 5;
RESULT: [duckdb: ERROR, mySQL: ERROR]

-----------
QUERY:


SELECT f1 FROM CIRCLE_TBL WHERE diameter(f1) >= 10;
RESULT: [duckdb: ERROR, mySQL: ERROR]

-----------
QUERY:


SELECT c1.f1 AS one, c2.f1 AS two, (c1.f1 <-> c2.f1) AS distance
  FROM CIRCLE_TBL c1, CIRCLE_TBL c2
  WHERE (c1.f1 < c2.f1) AND ((c1.f1 <-> c2.f1) > 0)
  ORDER BY distance, area(c1.f1), area(c2.f1);
RESULT: [duckdb: ERROR, mySQL: ERROR]
=========================================
Summary for test case circle/test.sql of postgres
=========================================

=================
Results for duckdb
SAME: 5 queries, which is 22.73%
DIFFERENT: 0 queries, which is 0.00%
ERROR: 17 queries, which is 77.27%

=================
Results for mySQL
SAME: 5 queries, which is 22.73%
DIFFERENT: 0 queries, which is 0.00%
ERROR: 17 queries, which is 77.27%
