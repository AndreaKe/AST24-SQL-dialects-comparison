
-----------
QUERY:
/*
 * This test is intended to pass on all platforms supported by Postgres.
 * We can therefore only assume that the default, C, and POSIX collations
 * are available --- and since the regression tests are often run in a
 * C-locale database, these may well all have the same behavior.  But
 * fortunately, the system doesn't know that and will treat them as
 * incompatible collations.  It is therefore at least possible to test
 * parser behaviors such as collation conflict resolution.  This test will,
 * however, be more revealing when run in a database with non-C locale,
 * since any departure from C sorting behavior will show as a failure.
 */

CREATE SCHEMA collate_tests;
RESULT:
	[]

-----------
QUERY:

SET search_path = collate_tests;
RESULT:
	ERROR - (1193, "Unknown system variable 'search_path'")

-----------
QUERY:


CREATE TABLE collate_test1 (
    a int,
    b text COLLATE "C" NOT NULL
);
RESULT:
	ERROR - (1273, "Unknown collation: 'C'")

-----------
QUERY:


-- \d collate_test1

CREATE TABLE collate_test_fail (
    a int COLLATE "C",
    b text
);
RESULT:
	ERROR - (1273, "Unknown collation: 'C'")

-----------
QUERY:


CREATE TABLE collate_test_like (
    LIKE collate_test1
);
RESULT:
	ERROR - (1146, "Table 'test.collate_test1' doesn't exist")

-----------
QUERY:


-- \d collate_test_like

CREATE TABLE collate_test2 (
    a int,
    b text COLLATE "POSIX"
);
RESULT:
	ERROR - (1273, "Unknown collation: 'POSIX'")

-----------
QUERY:


INSERT INTO collate_test1 VALUES (1, 'abc'), (2, 'Abc'), (3, 'bbc'), (4, 'ABD');
RESULT:
	ERROR - (1146, "Table 'test.collate_test1' doesn't exist")

-----------
QUERY:

INSERT INTO collate_test2 SELECT * FROM collate_test1;
RESULT:
	ERROR - (1146, "Table 'test.collate_test2' doesn't exist")

-----------
QUERY:


SELECT * FROM collate_test1 WHERE b COLLATE "C" >= 'abc';
RESULT:
	ERROR - (1273, "Unknown collation: 'C'")

-----------
QUERY:

SELECT * FROM collate_test1 WHERE b >= 'abc' COLLATE "C";
RESULT:
	ERROR - (1273, "Unknown collation: 'C'")

-----------
QUERY:

SELECT * FROM collate_test1 WHERE b COLLATE "C" >= 'abc' COLLATE "C";
RESULT:
	ERROR - (1273, "Unknown collation: 'C'")

-----------
QUERY:

SELECT * FROM collate_test1 WHERE b COLLATE "C" >= 'bbc' COLLATE "POSIX";
RESULT:
	ERROR - (1273, "Unknown collation: 'C'")

-----------
QUERY:
 -- fail

CREATE DOMAIN testdomain_p AS text COLLATE "POSIX";
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'DOMAIN testdomain_p AS text COLLATE "POSIX"\' at line 3')

-----------
QUERY:

CREATE DOMAIN testdomain_i AS int COLLATE "POSIX";
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'DOMAIN testdomain_i AS int COLLATE "POSIX"\' at line 1')

-----------
QUERY:
 -- fail
CREATE TABLE collate_test4 (
    a int,
    b testdomain_p
);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'testdomain_p\n)' at line 4")

-----------
QUERY:

INSERT INTO collate_test4 SELECT * FROM collate_test1;
RESULT:
	ERROR - (1146, "Table 'test.collate_test4' doesn't exist")

-----------
QUERY:

SELECT a, b FROM collate_test4 ORDER BY b;
RESULT:
	ERROR - (1146, "Table 'test.collate_test4' doesn't exist")

-----------
QUERY:


CREATE TABLE collate_test5 (
    a int,
    b testdomain_p COLLATE "C"
);
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'testdomain_p COLLATE "C"\n)\' at line 3')

-----------
QUERY:

INSERT INTO collate_test5 SELECT * FROM collate_test1;
RESULT:
	ERROR - (1146, "Table 'test.collate_test5' doesn't exist")

-----------
QUERY:

SELECT a, b FROM collate_test5 ORDER BY b;
RESULT:
	ERROR - (1146, "Table 'test.collate_test5' doesn't exist")

-----------
QUERY:



SELECT a, b FROM collate_test1 ORDER BY b;
RESULT:
	ERROR - (1146, "Table 'test.collate_test1' doesn't exist")

-----------
QUERY:

SELECT a, b FROM collate_test2 ORDER BY b;
RESULT:
	ERROR - (1146, "Table 'test.collate_test2' doesn't exist")

-----------
QUERY:


SELECT a, b FROM collate_test1 ORDER BY b COLLATE "C";
RESULT:
	ERROR - (1273, "Unknown collation: 'C'")

-----------
QUERY:


-- star expansion
SELECT * FROM collate_test1 ORDER BY b;
RESULT:
	ERROR - (1146, "Table 'test.collate_test1' doesn't exist")

-----------
QUERY:

SELECT * FROM collate_test2 ORDER BY b;
RESULT:
	ERROR - (1146, "Table 'test.collate_test2' doesn't exist")

-----------
QUERY:


-- constant expression folding
SELECT 'bbc' COLLATE "C" > 'Abc' COLLATE "C" AS "true";
RESULT:
	ERROR - (1273, "Unknown collation: 'C'")

-----------
QUERY:

SELECT 'bbc' COLLATE "POSIX" < 'Abc' COLLATE "POSIX" AS "false";
RESULT:
	ERROR - (1273, "Unknown collation: 'POSIX'")

-----------
QUERY:


-- upper/lower

CREATE TABLE collate_test10 (
    a int,
    x text COLLATE "C",
    y text COLLATE "POSIX"
);
RESULT:
	ERROR - (1273, "Unknown collation: 'C'")

-----------
QUERY:


INSERT INTO collate_test10 VALUES (1, 'hij', 'hij'), (2, 'HIJ', 'HIJ');
RESULT:
	ERROR - (1146, "Table 'test.collate_test10' doesn't exist")

-----------
QUERY:


SELECT a, lower(x), lower(y), upper(x), upper(y), initcap(x), initcap(y) FROM collate_test10;
RESULT:
	ERROR - (1146, "Table 'test.collate_test10' doesn't exist")

-----------
QUERY:

SELECT a, lower(x COLLATE "C"), lower(y COLLATE "C") FROM collate_test10;
RESULT:
	ERROR - (1273, "Unknown collation: 'C'")

-----------
QUERY:


SELECT a, x, y FROM collate_test10 ORDER BY lower(y), a;
RESULT:
	ERROR - (1146, "Table 'test.collate_test10' doesn't exist")

-----------
QUERY:


-- backwards parsing

CREATE VIEW collview1 AS SELECT * FROM collate_test1 WHERE b COLLATE "C" >= 'bbc';
RESULT:
	ERROR - (1273, "Unknown collation: 'C'")

-----------
QUERY:

CREATE VIEW collview2 AS SELECT a, b FROM collate_test1 ORDER BY b COLLATE "C";
RESULT:
	ERROR - (1273, "Unknown collation: 'C'")

-----------
QUERY:

CREATE VIEW collview3 AS SELECT a, lower((x || x) COLLATE "POSIX") FROM collate_test10;
RESULT:
	ERROR - (1273, "Unknown collation: 'POSIX'")

-----------
QUERY:


SELECT table_name, view_definition FROM information_schema.views
  WHERE table_name LIKE 'collview%' ORDER BY 1;
RESULT:
	()

-----------
QUERY:



-- collation propagation in various expression types

SELECT a, coalesce(b, 'foo') FROM collate_test1 ORDER BY 2;
RESULT:
	ERROR - (1146, "Table 'test.collate_test1' doesn't exist")

-----------
QUERY:

SELECT a, coalesce(b, 'foo') FROM collate_test2 ORDER BY 2;
RESULT:
	ERROR - (1146, "Table 'test.collate_test2' doesn't exist")

-----------
QUERY:

SELECT a, lower(coalesce(x, 'foo')), lower(coalesce(y, 'foo')) FROM collate_test10;
RESULT:
	ERROR - (1146, "Table 'test.collate_test10' doesn't exist")

-----------
QUERY:


SELECT a, b, greatest(b, 'CCC') FROM collate_test1 ORDER BY 3;
RESULT:
	ERROR - (1146, "Table 'test.collate_test1' doesn't exist")

-----------
QUERY:

SELECT a, b, greatest(b, 'CCC') FROM collate_test2 ORDER BY 3;
RESULT:
	ERROR - (1146, "Table 'test.collate_test2' doesn't exist")

-----------
QUERY:

SELECT a, x, y, lower(greatest(x, 'foo')), lower(greatest(y, 'foo')) FROM collate_test10;
RESULT:
	ERROR - (1146, "Table 'test.collate_test10' doesn't exist")

-----------
QUERY:


SELECT a, nullif(b, 'abc') FROM collate_test1 ORDER BY 2;
RESULT:
	ERROR - (1146, "Table 'test.collate_test1' doesn't exist")

-----------
QUERY:

SELECT a, nullif(b, 'abc') FROM collate_test2 ORDER BY 2;
RESULT:
	ERROR - (1146, "Table 'test.collate_test2' doesn't exist")

-----------
QUERY:

SELECT a, lower(nullif(x, 'foo')), lower(nullif(y, 'foo')) FROM collate_test10;
RESULT:
	ERROR - (1146, "Table 'test.collate_test10' doesn't exist")

-----------
QUERY:


SELECT a, CASE b WHEN 'abc' THEN 'abcd' ELSE b END FROM collate_test1 ORDER BY 2;
RESULT:
	ERROR - (1146, "Table 'test.collate_test1' doesn't exist")

-----------
QUERY:

SELECT a, CASE b WHEN 'abc' THEN 'abcd' ELSE b END FROM collate_test2 ORDER BY 2;
RESULT:
	ERROR - (1146, "Table 'test.collate_test2' doesn't exist")

-----------
QUERY:


CREATE DOMAIN testdomain AS text;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'DOMAIN testdomain AS text' at line 1")

-----------
QUERY:

SELECT a, b::testdomain FROM collate_test1 ORDER BY 2;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::testdomain FROM collate_test1 ORDER BY 2' at line 1")

-----------
QUERY:

SELECT a, b::testdomain FROM collate_test2 ORDER BY 2;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::testdomain FROM collate_test2 ORDER BY 2' at line 1")

-----------
QUERY:

SELECT a, b::testdomain_p FROM collate_test2 ORDER BY 2;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::testdomain_p FROM collate_test2 ORDER BY 2' at line 1")

-----------
QUERY:

SELECT a, lower(x::testdomain), lower(y::testdomain) FROM collate_test10;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::testdomain), lower(y::testdomain) FROM collate_test10' at line 1")

-----------
QUERY:


SELECT min(b), max(b) FROM collate_test1;
RESULT:
	ERROR - (1146, "Table 'test.collate_test1' doesn't exist")

-----------
QUERY:

SELECT min(b), max(b) FROM collate_test2;
RESULT:
	ERROR - (1146, "Table 'test.collate_test2' doesn't exist")

-----------
QUERY:


SELECT array_agg(b ORDER BY b) FROM collate_test1;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'ORDER BY b) FROM collate_test1' at line 1")

-----------
QUERY:

SELECT array_agg(b ORDER BY b) FROM collate_test2;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'ORDER BY b) FROM collate_test2' at line 1")

-----------
QUERY:


-- In aggregates, ORDER BY expressions don/* REPLACED */''t affect aggregate/* REPLACED */''s collation
SELECT string_agg(x COLLATE "C", y COLLATE "POSIX") FROM collate_test10;
RESULT:
	ERROR - (1273, "Unknown collation: 'C'")

-----------
QUERY:
  -- fail
SELECT array_agg(x COLLATE "C" ORDER BY y COLLATE "POSIX") FROM collate_test10;
RESULT:
	ERROR - (1273, "Unknown collation: 'C'")

-----------
QUERY:

SELECT array_agg(a ORDER BY x COLLATE "C", y COLLATE "POSIX") FROM collate_test10;
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'ORDER BY x COLLATE "C", y COLLATE "POSIX") FROM collate_test10\' at line 1')

-----------
QUERY:

SELECT array_agg(a ORDER BY x||y) FROM collate_test10;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'ORDER BY x||y) FROM collate_test10' at line 1")

-----------
QUERY:
  -- fail

SELECT a, b FROM collate_test1 UNION ALL SELECT a, b FROM collate_test1 ORDER BY 2;
RESULT:
	ERROR - (1146, "Table 'test.collate_test1' doesn't exist")

-----------
QUERY:

SELECT a, b FROM collate_test2 UNION SELECT a, b FROM collate_test2 ORDER BY 2;
RESULT:
	ERROR - (1146, "Table 'test.collate_test2' doesn't exist")

-----------
QUERY:

SELECT a, b FROM collate_test2 WHERE a < 4 INTERSECT SELECT a, b FROM collate_test2 WHERE a > 1 ORDER BY 2;
RESULT:
	ERROR - (1146, "Table 'test.collate_test2' doesn't exist")

-----------
QUERY:

SELECT a, b FROM collate_test2 EXCEPT SELECT a, b FROM collate_test2 WHERE a < 2 ORDER BY 2;
RESULT:
	ERROR - (1146, "Table 'test.collate_test2' doesn't exist")

-----------
QUERY:


SELECT a, b FROM collate_test1 UNION ALL SELECT a, b FROM collate_test2 ORDER BY 2;
RESULT:
	ERROR - (1146, "Table 'test.collate_test1' doesn't exist")

-----------
QUERY:
 -- fail
SELECT a, b FROM collate_test1 UNION ALL SELECT a, b FROM collate_test2;
RESULT:
	ERROR - (1146, "Table 'test.collate_test1' doesn't exist")

-----------
QUERY:
 -- ok
SELECT a, b FROM collate_test1 UNION SELECT a, b FROM collate_test2 ORDER BY 2;
RESULT:
	ERROR - (1146, "Table 'test.collate_test1' doesn't exist")

-----------
QUERY:
 -- fail
SELECT a, b COLLATE "C" FROM collate_test1 UNION SELECT a, b FROM collate_test2 ORDER BY 2;
RESULT:
	ERROR - (1273, "Unknown collation: 'C'")

-----------
QUERY:
 -- ok
SELECT a, b FROM collate_test1 INTERSECT SELECT a, b FROM collate_test2 ORDER BY 2;
RESULT:
	ERROR - (1146, "Table 'test.collate_test1' doesn't exist")

-----------
QUERY:
 -- fail
SELECT a, b FROM collate_test1 EXCEPT SELECT a, b FROM collate_test2 ORDER BY 2;
RESULT:
	ERROR - (1146, "Table 'test.collate_test1' doesn't exist")

-----------
QUERY:
 -- fail

CREATE TABLE test_u AS SELECT a, b FROM collate_test1 UNION ALL SELECT a, b FROM collate_test2;
RESULT:
	ERROR - (1146, "Table 'test.collate_test1' doesn't exist")

-----------
QUERY:
 -- fail

-- ideally this would be a parse-time error, but for now it must be run-time:
select x < y from collate_test10;
RESULT:
	ERROR - (1146, "Table 'test.collate_test10' doesn't exist")

-----------
QUERY:
 -- fail
select x || y from collate_test10;
RESULT:
	ERROR - (1146, "Table 'test.collate_test10' doesn't exist")

-----------
QUERY:
 -- ok, because || is not collation aware
select x, y from collate_test10 order by x || y;
RESULT:
	ERROR - (1146, "Table 'test.collate_test10' doesn't exist")

-----------
QUERY:
 -- not so ok

-- collation mismatch between recursive and non-recursive term
WITH RECURSIVE foo(x) AS
   (SELECT x FROM (VALUES('a' COLLATE "C"),('b')) t(x)
   UNION ALL
   SELECT (x || 'c') COLLATE "POSIX" FROM foo WHERE length(x) < 10)
SELECT * FROM foo;
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(\'a\' COLLATE "C"),(\'b\')) t(x)\n   UNION ALL\n   SELECT (x || \'c\') COLLATE "POSIX" \' at line 5')

-----------
QUERY:


SELECT a, b, a < b as lt FROM
  (VALUES ('a', 'B'), ('A', 'b' COLLATE "C")) v(a,b);
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(\'a\', \'B\'), (\'A\', \'b\' COLLATE "C")) v(a,b)\' at line 2')

-----------
QUERY:


-- collation mismatch in subselects
SELECT * FROM collate_test10 WHERE (x, y) NOT IN (SELECT y, x FROM collate_test10);
RESULT:
	ERROR - (1146, "Table 'test.collate_test10' doesn't exist")

-----------
QUERY:

-- now it works with overrides
SELECT * FROM collate_test10 WHERE (x COLLATE "POSIX", y COLLATE "C") NOT IN (SELECT y, x FROM collate_test10);
RESULT:
	ERROR - (1273, "Unknown collation: 'POSIX'")

-----------
QUERY:

SELECT * FROM collate_test10 WHERE (x, y) NOT IN (SELECT y COLLATE "C", x COLLATE "POSIX" FROM collate_test10);
RESULT:
	ERROR - (1273, "Unknown collation: 'C'")

-----------
QUERY:


-- casting

SELECT CAST('42' AS text COLLATE "C");
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'text COLLATE "C")\' at line 3')

-----------
QUERY:


SELECT a, CAST(b AS varchar) FROM collate_test1 ORDER BY 2;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'varchar) FROM collate_test1 ORDER BY 2' at line 1")

-----------
QUERY:

SELECT a, CAST(b AS varchar) FROM collate_test2 ORDER BY 2;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'varchar) FROM collate_test2 ORDER BY 2' at line 1")

-----------
QUERY:



-- result of a SQL function

CREATE FUNCTION vc (text) RETURNS text LANGUAGE sql
    AS 'select $1::varchar';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ') RETURNS text LANGUAGE sql\n    AS 'select $1::varchar'' at line 3")

-----------
QUERY:


SELECT a, b FROM collate_test1 ORDER BY a, vc(b);
RESULT:
	ERROR - (1146, "Table 'test.collate_test1' doesn't exist")

-----------
QUERY:



-- polymorphism

SELECT * FROM unnest((SELECT array_agg(b ORDER BY b) FROM collate_test1)) ORDER BY 1;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '((SELECT array_agg(b ORDER BY b) FROM collate_test1)) ORDER BY 1' at line 3")

-----------
QUERY:

SELECT * FROM unnest((SELECT array_agg(b ORDER BY b) FROM collate_test2)) ORDER BY 1;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '((SELECT array_agg(b ORDER BY b) FROM collate_test2)) ORDER BY 1' at line 1")

-----------
QUERY:


CREATE FUNCTION dup (anyelement) RETURNS anyelement
    AS 'select $1' LANGUAGE sql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ') RETURNS anyelement\n    AS 'select $1' LANGUAGE sql' at line 1")

-----------
QUERY:


SELECT a, dup(b) FROM collate_test1 ORDER BY 2;
RESULT:
	ERROR - (1146, "Table 'test.collate_test1' doesn't exist")

-----------
QUERY:

SELECT a, dup(b) FROM collate_test2 ORDER BY 2;
RESULT:
	ERROR - (1146, "Table 'test.collate_test2' doesn't exist")

-----------
QUERY:



-- indexes

CREATE INDEX collate_test1_idx1 ON collate_test1 (b);
RESULT:
	ERROR - (1146, "Table 'test.collate_test1' doesn't exist")

-----------
QUERY:

CREATE INDEX collate_test1_idx2 ON collate_test1 (b COLLATE "POSIX");
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'COLLATE "POSIX")\' at line 1')

-----------
QUERY:

CREATE INDEX collate_test1_idx3 ON collate_test1 ((b COLLATE "POSIX"));
RESULT:
	ERROR - (1273, "Unknown collation: 'POSIX'")

-----------
QUERY:
 -- this is different grammatically
CREATE INDEX collate_test1_idx4 ON collate_test1 (((b||'foo') COLLATE "POSIX"));
RESULT:
	ERROR - (1273, "Unknown collation: 'POSIX'")

-----------
QUERY:


CREATE INDEX collate_test1_idx5 ON collate_test1 (a COLLATE "POSIX");
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'COLLATE "POSIX")\' at line 1')

-----------
QUERY:
 -- fail
CREATE INDEX collate_test1_idx6 ON collate_test1 ((a COLLATE "POSIX"));
RESULT:
	ERROR - (1273, "Unknown collation: 'POSIX'")

-----------
QUERY:
 -- fail

SELECT relname, pg_get_indexdef(oid) FROM pg_class WHERE relname LIKE 'collate_test%_idx%' ORDER BY 1;
RESULT:
	ERROR - (1146, "Table 'test.pg_class' doesn't exist")

-----------
QUERY:



-- foreign keys

-- force indexes and mergejoins to be used for FK checking queries,
-- else they might not exercise collation-dependent operators
SET enable_seqscan TO 0;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'TO 0' at line 5")

-----------
QUERY:

SET enable_hashjoin TO 0;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'TO 0' at line 1")

-----------
QUERY:

SET enable_nestloop TO 0;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'TO 0' at line 1")

-----------
QUERY:


CREATE TABLE collate_test20 (f1 text COLLATE "C" PRIMARY KEY);
RESULT:
	ERROR - (1273, "Unknown collation: 'C'")

-----------
QUERY:

INSERT INTO collate_test20 VALUES ('foo'), ('bar');
RESULT:
	ERROR - (1146, "Table 'test.collate_test20' doesn't exist")

-----------
QUERY:

CREATE TABLE collate_test21 (f2 text COLLATE "POSIX" REFERENCES collate_test20);
RESULT:
	ERROR - (1273, "Unknown collation: 'POSIX'")

-----------
QUERY:

INSERT INTO collate_test21 VALUES ('foo'), ('bar');
RESULT:
	ERROR - (1146, "Table 'test.collate_test21' doesn't exist")

-----------
QUERY:

INSERT INTO collate_test21 VALUES ('baz');
RESULT:
	ERROR - (1146, "Table 'test.collate_test21' doesn't exist")

-----------
QUERY:
 -- fail
CREATE TABLE collate_test22 (f2 text COLLATE "POSIX");
RESULT:
	ERROR - (1273, "Unknown collation: 'POSIX'")

-----------
QUERY:

INSERT INTO collate_test22 VALUES ('foo'), ('bar'), ('baz');
RESULT:
	ERROR - (1146, "Table 'test.collate_test22' doesn't exist")

-----------
QUERY:

ALTER TABLE collate_test22 ADD FOREIGN KEY (f2) REFERENCES collate_test20;
RESULT:
	ERROR - (1146, "Table 'test.collate_test22' doesn't exist")

-----------
QUERY:
 -- fail
DELETE FROM collate_test22 WHERE f2 = 'baz';
RESULT:
	ERROR - (1146, "Table 'test.collate_test22' doesn't exist")

-----------
QUERY:

ALTER TABLE collate_test22 ADD FOREIGN KEY (f2) REFERENCES collate_test20;
RESULT:
	ERROR - (1146, "Table 'test.collate_test22' doesn't exist")

-----------
QUERY:


RESET enable_seqscan;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'enable_seqscan' at line 1")

-----------
QUERY:

RESET enable_hashjoin;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'enable_hashjoin' at line 1")

-----------
QUERY:

RESET enable_nestloop;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'enable_nestloop' at line 1")

-----------
QUERY:



-- EXPLAIN

EXPLAIN (COSTS OFF)
  SELECT * FROM collate_test10 ORDER BY x, y;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'COSTS OFF)\n  SELECT * FROM collate_test10 ORDER BY x, y' at line 3")

-----------
QUERY:

EXPLAIN (COSTS OFF)
  SELECT * FROM collate_test10 ORDER BY x DESC, y COLLATE "C" ASC NULLS FIRST;
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'COSTS OFF)\n  SELECT * FROM collate_test10 ORDER BY x DESC, y COLLATE "C" ASC NUL\' at line 1')

-----------
QUERY:



-- CREATE/DROP COLLATION

CREATE COLLATION builtin_c ( PROVIDER = builtin, LOCALE = "C" );
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'COLLATION builtin_c ( PROVIDER = builtin, LOCALE = "C" )\' at line 3')

-----------
QUERY:


SELECT b FROM collate_test1 ORDER BY b COLLATE builtin_c;
RESULT:
	ERROR - (1273, "Unknown collation: 'builtin_c'")

-----------
QUERY:


CREATE COLLATION builtin2 ( PROVIDER = builtin );
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'COLLATION builtin2 ( PROVIDER = builtin )' at line 1")

-----------
QUERY:
 -- fails
CREATE COLLATION builtin2 ( PROVIDER = builtin, LOCALE = "en_US" );
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'COLLATION builtin2 ( PROVIDER = builtin, LOCALE = "en_US" )\' at line 2')

-----------
QUERY:
 -- fails
CREATE COLLATION builtin2 ( PROVIDER = builtin, LC_CTYPE = "C", LC_COLLATE = "C" );
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'COLLATION builtin2 ( PROVIDER = builtin, LC_CTYPE = "C", LC_COLLATE = "C" )\' at line 2')

-----------
QUERY:
 -- fails

CREATE COLLATION mycoll1 FROM "C";
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'COLLATION mycoll1 FROM "C"\' at line 3')

-----------
QUERY:

CREATE COLLATION mycoll2 ( LC_COLLATE = "POSIX", LC_CTYPE = "POSIX" );
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'COLLATION mycoll2 ( LC_COLLATE = "POSIX", LC_CTYPE = "POSIX" )\' at line 1')

-----------
QUERY:

CREATE COLLATION mycoll3 FROM "default";
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'COLLATION mycoll3 FROM "default"\' at line 1')

-----------
QUERY:
  -- intentionally unsupported

DROP COLLATION mycoll1;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'COLLATION mycoll1' at line 3")

-----------
QUERY:

CREATE TABLE collate_test23 (f1 text collate mycoll2);
RESULT:
	ERROR - (1273, "Unknown collation: 'mycoll2'")

-----------
QUERY:

DROP COLLATION mycoll2;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'COLLATION mycoll2' at line 1")

-----------
QUERY:
  -- fail

-- invalid: non-lowercase quoted identifiers
CREATE COLLATION case_coll ("Lc_Collate" = "POSIX", "Lc_Ctype" = "POSIX");
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'COLLATION case_coll ("Lc_Collate" = "POSIX", "Lc_Ctype" = "POSIX")\' at line 4')

-----------
QUERY:


-- 9.1 bug with useless COLLATE in an expression subject to length coercion

CREATE TEMP TABLE vctable (f1 varchar(25));
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'TEMP TABLE vctable (f1 varchar(25))' at line 3")

-----------
QUERY:

INSERT INTO vctable VALUES ('foo' COLLATE "C");
RESULT:
	ERROR - (1273, "Unknown collation: 'C'")

-----------
QUERY:



SELECT collation for ('foo');
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '('foo')' at line 1")

-----------
QUERY:
 -- unknown type - null
SELECT collation for ('foo'::text);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '('foo'::text)' at line 2")

-----------
QUERY:

SELECT collation for ((SELECT a FROM collate_test1 LIMIT 1));
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '((SELECT a FROM collate_test1 LIMIT 1))' at line 1")

-----------
QUERY:
 -- non-collatable type - error
SELECT collation for ((SELECT b FROM collate_test1 LIMIT 1));
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '((SELECT b FROM collate_test1 LIMIT 1))' at line 2")

-----------
QUERY:


-- old bug with not dropping COLLATE when coercing to non-collatable type
CREATE VIEW collate_on_int AS
SELECT c1+1 AS c1p FROM
  (SELECT ('4' COLLATE "C")::INT AS c1) ss;
RESULT:
	ERROR - (1273, "Unknown collation: 'C'")

-----------
QUERY:

-- \d+ collate_on_int

-- Check conflicting or redundant options in CREATE COLLATION
-- LC_COLLATE
CREATE COLLATION coll_dup_chk (LC_COLLATE = "POSIX", LC_COLLATE = "NONSENSE", LC_CTYPE = "POSIX");
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'COLLATION coll_dup_chk (LC_COLLATE = "POSIX", LC_COLLATE = "NONSENSE", LC_CTYPE \' at line 5')

-----------
QUERY:

-- LC_CTYPE
CREATE COLLATION coll_dup_chk (LC_CTYPE = "POSIX", LC_CTYPE = "NONSENSE", LC_COLLATE = "POSIX");
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'COLLATION coll_dup_chk (LC_CTYPE = "POSIX", LC_CTYPE = "NONSENSE", LC_COLLATE = \' at line 2')

-----------
QUERY:

-- PROVIDER
CREATE COLLATION coll_dup_chk (PROVIDER = icu, PROVIDER = NONSENSE, LC_COLLATE = "POSIX", LC_CTYPE = "POSIX");
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'COLLATION coll_dup_chk (PROVIDER = icu, PROVIDER = NONSENSE, LC_COLLATE = "POSIX\' at line 2')

-----------
QUERY:

-- LOCALE
CREATE COLLATION case_sensitive (LOCALE = '', LOCALE = "NONSENSE");
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'COLLATION case_sensitive (LOCALE = \'\', LOCALE = "NONSENSE")\' at line 2')

-----------
QUERY:

-- DETERMINISTIC
CREATE COLLATION coll_dup_chk (DETERMINISTIC = TRUE, DETERMINISTIC = NONSENSE, LOCALE = '');
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'COLLATION coll_dup_chk (DETERMINISTIC = TRUE, DETERMINISTIC = NONSENSE, LOCALE =' at line 2")

-----------
QUERY:

-- VERSION
CREATE COLLATION coll_dup_chk (VERSION = '1', VERSION = "NONSENSE", LOCALE = '');
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'COLLATION coll_dup_chk (VERSION = \'1\', VERSION = "NONSENSE", LOCALE = \'\')\' at line 2')

-----------
QUERY:

-- LOCALE conflicts with LC_COLLATE and LC_CTYPE
CREATE COLLATION coll_dup_chk (LC_COLLATE = "POSIX", LC_CTYPE = "POSIX", LOCALE = '');
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'COLLATION coll_dup_chk (LC_COLLATE = "POSIX", LC_CTYPE = "POSIX", LOCALE = \'\')\' at line 2')

-----------
QUERY:

-- LOCALE conflicts with LC_COLLATE
CREATE COLLATION coll_dup_chk (LC_COLLATE = "POSIX", LOCALE = '');
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'COLLATION coll_dup_chk (LC_COLLATE = "POSIX", LOCALE = \'\')\' at line 2')

-----------
QUERY:

-- LOCALE conflicts with LC_CTYPE
CREATE COLLATION coll_dup_chk (LC_CTYPE = "POSIX", LOCALE = '');
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'COLLATION coll_dup_chk (LC_CTYPE = "POSIX", LOCALE = \'\')\' at line 2')

-----------
QUERY:

-- FROM conflicts with any other option
CREATE COLLATION coll_dup_chk (FROM = "C", VERSION = "1");
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'COLLATION coll_dup_chk (FROM = "C", VERSION = "1")\' at line 2')

-----------
QUERY:


--
-- Clean up.  Many of these table names will be re-used if the user is
-- trying to run any platform-specific collation tests later, so we
-- must get rid of them.
--
DROP SCHEMA collate_tests CASCADE;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'CASCADE' at line 6")
