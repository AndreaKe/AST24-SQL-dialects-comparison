
-----------
QUERY:
--
-- CONSTRAINTS
-- Constraints can be specified with:
--  - DEFAULT clause
--  - CHECK clauses
--  - PRIMARY KEY clauses
--  - UNIQUE clauses
--  - EXCLUDE clauses
--

-- directory paths are passed to us in environment variables
-- \getenv abs_srcdir PG_ABS_SRCDIR

--
-- DEFAULT syntax
--

CREATE TABLE DEFAULT_TBL (i int DEFAULT 100,
	x text DEFAULT 'vadim', f float8 DEFAULT 123.456);
RESULT:
	ERROR - (1101, "BLOB, TEXT, GEOMETRY or JSON column 'x' can't have a default value")

-----------
QUERY:


INSERT INTO DEFAULT_TBL VALUES (1, 'thomas', 57.0613);
RESULT:
	ERROR - (1146, "Table 'test.DEFAULT_TBL' doesn't exist")

-----------
QUERY:

INSERT INTO DEFAULT_TBL VALUES (1, 'bruce');
RESULT:
	ERROR - (1146, "Table 'test.DEFAULT_TBL' doesn't exist")

-----------
QUERY:

INSERT INTO DEFAULT_TBL (i, f) VALUES (2, 987.654);
RESULT:
	ERROR - (1146, "Table 'test.DEFAULT_TBL' doesn't exist")

-----------
QUERY:

INSERT INTO DEFAULT_TBL (x) VALUES ('marc');
RESULT:
	ERROR - (1146, "Table 'test.DEFAULT_TBL' doesn't exist")

-----------
QUERY:

INSERT INTO DEFAULT_TBL VALUES (3, null, 1.0);
RESULT:
	ERROR - (1146, "Table 'test.DEFAULT_TBL' doesn't exist")

-----------
QUERY:


SELECT * FROM DEFAULT_TBL;
RESULT:
	ERROR - (1146, "Table 'test.DEFAULT_TBL' doesn't exist")

-----------
QUERY:


CREATE SEQUENCE DEFAULT_SEQ;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'SEQUENCE DEFAULT_SEQ' at line 1")

-----------
QUERY:


CREATE TABLE DEFAULTEXPR_TBL (i1 int DEFAULT 100 + (200-199) * 2,
	i2 int DEFAULT nextval('default_seq'));
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '+ (200-199) * 2,\n\ti2 int DEFAULT nextval('default_seq'))' at line 1")

-----------
QUERY:


INSERT INTO DEFAULTEXPR_TBL VALUES (-1, -2);
RESULT:
	ERROR - (1146, "Table 'test.DEFAULTEXPR_TBL' doesn't exist")

-----------
QUERY:

INSERT INTO DEFAULTEXPR_TBL (i1) VALUES (-3);
RESULT:
	ERROR - (1146, "Table 'test.DEFAULTEXPR_TBL' doesn't exist")

-----------
QUERY:

INSERT INTO DEFAULTEXPR_TBL (i2) VALUES (-4);
RESULT:
	ERROR - (1146, "Table 'test.DEFAULTEXPR_TBL' doesn't exist")

-----------
QUERY:

INSERT INTO DEFAULTEXPR_TBL (i2) VALUES (NULL);
RESULT:
	ERROR - (1146, "Table 'test.DEFAULTEXPR_TBL' doesn't exist")

-----------
QUERY:


SELECT * FROM DEFAULTEXPR_TBL;
RESULT:
	ERROR - (1146, "Table 'test.DEFAULTEXPR_TBL' doesn't exist")

-----------
QUERY:


-- syntax errors
--  test for extraneous comma
CREATE TABLE error_tbl (i int DEFAULT (100, ));
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ', ))' at line 3")

-----------
QUERY:

--  this will fail because gram.y uses b_expr not a_expr for defaults,
--  to avoid a shift/reduce conflict that arises from NOT NULL being
--  part of the column definition syntax:
CREATE TABLE error_tbl (b1 bool DEFAULT 1 IN (1, 2));
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'IN (1, 2))' at line 4")

-----------
QUERY:

--  this should work, however:
CREATE TABLE error_tbl (b1 bool DEFAULT (1 IN (1, 2)));
RESULT:
	[]

-----------
QUERY:


DROP TABLE error_tbl;
RESULT:
	[]

-----------
QUERY:


--
-- CHECK syntax
--

CREATE TABLE CHECK_TBL (x int,
	CONSTRAINT CHECK_CON CHECK (x > 3));
RESULT:
	[]

-----------
QUERY:


INSERT INTO CHECK_TBL VALUES (5);
RESULT:
	[]

-----------
QUERY:

INSERT INTO CHECK_TBL VALUES (4);
RESULT:
	[]

-----------
QUERY:

INSERT INTO CHECK_TBL VALUES (3);
RESULT:
	ERROR - (3819, "Check constraint 'CHECK_CON' is violated.")

-----------
QUERY:

INSERT INTO CHECK_TBL VALUES (2);
RESULT:
	ERROR - (3819, "Check constraint 'CHECK_CON' is violated.")

-----------
QUERY:

INSERT INTO CHECK_TBL VALUES (6);
RESULT:
	[]

-----------
QUERY:

INSERT INTO CHECK_TBL VALUES (1);
RESULT:
	ERROR - (3819, "Check constraint 'CHECK_CON' is violated.")

-----------
QUERY:


SELECT * FROM CHECK_TBL;
RESULT:
	((5,), (4,), (6,))

-----------
QUERY:


CREATE SEQUENCE CHECK_SEQ;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'SEQUENCE CHECK_SEQ' at line 1")

-----------
QUERY:


CREATE TABLE CHECK2_TBL (x int, y text, z int,
	CONSTRAINT SEQUENCE_CON
	CHECK (x > 3 and y <> 'check failed' and z < 8));
RESULT:
	[]

-----------
QUERY:


INSERT INTO CHECK2_TBL VALUES (4, 'check ok', -2);
RESULT:
	[]

-----------
QUERY:

INSERT INTO CHECK2_TBL VALUES (1, 'x check failed', -2);
RESULT:
	ERROR - (3819, "Check constraint 'SEQUENCE_CON' is violated.")

-----------
QUERY:

INSERT INTO CHECK2_TBL VALUES (5, 'z check failed', 10);
RESULT:
	ERROR - (3819, "Check constraint 'SEQUENCE_CON' is violated.")

-----------
QUERY:

INSERT INTO CHECK2_TBL VALUES (0, 'check failed', -2);
RESULT:
	ERROR - (3819, "Check constraint 'SEQUENCE_CON' is violated.")

-----------
QUERY:

INSERT INTO CHECK2_TBL VALUES (6, 'check failed', 11);
RESULT:
	ERROR - (3819, "Check constraint 'SEQUENCE_CON' is violated.")

-----------
QUERY:

INSERT INTO CHECK2_TBL VALUES (7, 'check ok', 7);
RESULT:
	[]

-----------
QUERY:


SELECT * from CHECK2_TBL;
RESULT:
	((4, 'check ok', -2), (7, 'check ok', 7))

-----------
QUERY:


--
-- Check constraints on INSERT
--

CREATE SEQUENCE INSERT_SEQ;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'SEQUENCE INSERT_SEQ' at line 5")

-----------
QUERY:


CREATE TABLE INSERT_TBL (x INT DEFAULT nextval('insert_seq'),
	y TEXT DEFAULT '-NULL-',
	z INT DEFAULT -1 * currval('insert_seq'),
	CONSTRAINT INSERT_TBL_CON CHECK (x >= 3 AND y <> 'check failed' AND x < 8),
	CHECK (x + z = 0));
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'nextval('insert_seq'),\n\ty TEXT DEFAULT '-NULL-',\n\tz INT DEFAULT -1 * currval('in' at line 1")

-----------
QUERY:


INSERT INTO INSERT_TBL(x,z) VALUES (2, -2);
RESULT:
	ERROR - (1146, "Table 'test.INSERT_TBL' doesn't exist")

-----------
QUERY:


SELECT * FROM INSERT_TBL;
RESULT:
	ERROR - (1146, "Table 'test.INSERT_TBL' doesn't exist")

-----------
QUERY:


SELECT 'one' AS one, nextval('insert_seq');
RESULT:
	ERROR - (1305, 'FUNCTION test.nextval does not exist')

-----------
QUERY:


INSERT INTO INSERT_TBL(y) VALUES ('Y');
RESULT:
	ERROR - (1146, "Table 'test.INSERT_TBL' doesn't exist")

-----------
QUERY:

INSERT INTO INSERT_TBL(y) VALUES ('Y');
RESULT:
	ERROR - (1146, "Table 'test.INSERT_TBL' doesn't exist")

-----------
QUERY:

INSERT INTO INSERT_TBL(x,z) VALUES (1, -2);
RESULT:
	ERROR - (1146, "Table 'test.INSERT_TBL' doesn't exist")

-----------
QUERY:

INSERT INTO INSERT_TBL(z,x) VALUES (-7,  7);
RESULT:
	ERROR - (1146, "Table 'test.INSERT_TBL' doesn't exist")

-----------
QUERY:

INSERT INTO INSERT_TBL VALUES (5, 'check failed', -5);
RESULT:
	ERROR - (1146, "Table 'test.INSERT_TBL' doesn't exist")

-----------
QUERY:

INSERT INTO INSERT_TBL VALUES (7, '!check failed', -7);
RESULT:
	ERROR - (1146, "Table 'test.INSERT_TBL' doesn't exist")

-----------
QUERY:

INSERT INTO INSERT_TBL(y) VALUES ('-!NULL-');
RESULT:
	ERROR - (1146, "Table 'test.INSERT_TBL' doesn't exist")

-----------
QUERY:


SELECT * FROM INSERT_TBL;
RESULT:
	ERROR - (1146, "Table 'test.INSERT_TBL' doesn't exist")

-----------
QUERY:


INSERT INTO INSERT_TBL(y,z) VALUES ('check failed', 4);
RESULT:
	ERROR - (1146, "Table 'test.INSERT_TBL' doesn't exist")

-----------
QUERY:

INSERT INTO INSERT_TBL(x,y) VALUES (5, 'check failed');
RESULT:
	ERROR - (1146, "Table 'test.INSERT_TBL' doesn't exist")

-----------
QUERY:

INSERT INTO INSERT_TBL(x,y) VALUES (5, '!check failed');
RESULT:
	ERROR - (1146, "Table 'test.INSERT_TBL' doesn't exist")

-----------
QUERY:

INSERT INTO INSERT_TBL(y) VALUES ('-!NULL-');
RESULT:
	ERROR - (1146, "Table 'test.INSERT_TBL' doesn't exist")

-----------
QUERY:


SELECT * FROM INSERT_TBL;
RESULT:
	ERROR - (1146, "Table 'test.INSERT_TBL' doesn't exist")

-----------
QUERY:


SELECT 'seven' AS one, nextval('insert_seq');
RESULT:
	ERROR - (1305, 'FUNCTION test.nextval does not exist')

-----------
QUERY:


INSERT INTO INSERT_TBL(y) VALUES ('Y');
RESULT:
	ERROR - (1146, "Table 'test.INSERT_TBL' doesn't exist")

-----------
QUERY:


SELECT 'eight' AS one, currval('insert_seq');
RESULT:
	ERROR - (1305, 'FUNCTION test.currval does not exist')

-----------
QUERY:


-- According to SQL, it is OK to insert a record that gives rise to NULL
-- constraint-condition results.  Postgres used to reject this, but it
-- was wrong:
INSERT INTO INSERT_TBL VALUES (null, null, null);
RESULT:
	ERROR - (1146, "Table 'test.INSERT_TBL' doesn't exist")

-----------
QUERY:


SELECT * FROM INSERT_TBL;
RESULT:
	ERROR - (1146, "Table 'test.INSERT_TBL' doesn't exist")

-----------
QUERY:


--
-- Check constraints on system columns
--

CREATE TABLE SYS_COL_CHECK_TBL (city text, state text, is_capital bool,
                  altitude int,
                  CHECK (NOT (is_capital AND tableoid::regclass::text = 'sys_col_check_tbl')));
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::regclass::text = 'sys_col_check_tbl')))' at line 7")

-----------
QUERY:


INSERT INTO SYS_COL_CHECK_TBL VALUES ('Seattle', 'Washington', false, 100);
RESULT:
	ERROR - (1146, "Table 'test.SYS_COL_CHECK_TBL' doesn't exist")

-----------
QUERY:

INSERT INTO SYS_COL_CHECK_TBL VALUES ('Olympia', 'Washington', true, 100);
RESULT:
	ERROR - (1146, "Table 'test.SYS_COL_CHECK_TBL' doesn't exist")

-----------
QUERY:


SELECT *, tableoid::regclass::text FROM SYS_COL_CHECK_TBL;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::regclass::text FROM SYS_COL_CHECK_TBL' at line 1")

-----------
QUERY:


DROP TABLE SYS_COL_CHECK_TBL;
RESULT:
	ERROR - (1051, "Unknown table 'test.SYS_COL_CHECK_TBL'")

-----------
QUERY:


--
-- Check constraints on system columns other then TableOid should return error
--
CREATE TABLE SYS_COL_CHECK_TBL (city text, state text, is_capital bool,
                  altitude int,
				  CHECK (NOT (is_capital AND ctid::text = 'sys_col_check_tbl')));
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::text = 'sys_col_check_tbl')))' at line 6")

-----------
QUERY:


--
-- Check inheritance of defaults and constraints
--

CREATE TABLE INSERT_CHILD (cx INT default 42,
	cy INT CHECK (cy > x))
	INHERITS (INSERT_TBL);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'INHERITS (INSERT_TBL)' at line 7")

-----------
QUERY:


INSERT INTO INSERT_CHILD(x,z,cy) VALUES (7,-7,11);
RESULT:
	ERROR - (1146, "Table 'test.INSERT_CHILD' doesn't exist")

-----------
QUERY:

INSERT INTO INSERT_CHILD(x,z,cy) VALUES (7,-7,6);
RESULT:
	ERROR - (1146, "Table 'test.INSERT_CHILD' doesn't exist")

-----------
QUERY:

INSERT INTO INSERT_CHILD(x,z,cy) VALUES (6,-7,7);
RESULT:
	ERROR - (1146, "Table 'test.INSERT_CHILD' doesn't exist")

-----------
QUERY:

INSERT INTO INSERT_CHILD(x,y,z,cy) VALUES (6,'check failed',-6,7);
RESULT:
	ERROR - (1146, "Table 'test.INSERT_CHILD' doesn't exist")

-----------
QUERY:


SELECT * FROM INSERT_CHILD;
RESULT:
	ERROR - (1146, "Table 'test.INSERT_CHILD' doesn't exist")

-----------
QUERY:


DROP TABLE INSERT_CHILD;
RESULT:
	ERROR - (1051, "Unknown table 'test.INSERT_CHILD'")

-----------
QUERY:


--
-- Check NO INHERIT type of constraints and inheritance
--

CREATE TABLE ATACC1 (TEST INT
	CHECK (TEST > 0) NO INHERIT);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'NO INHERIT)' at line 6")

-----------
QUERY:


CREATE TABLE ATACC2 (TEST2 INT) INHERITS (ATACC1);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'INHERITS (ATACC1)' at line 1")

-----------
QUERY:

-- check constraint is not there on child
INSERT INTO ATACC2 (TEST) VALUES (-3);
RESULT:
	ERROR - (1146, "Table 'test.ATACC2' doesn't exist")

-----------
QUERY:

-- check constraint is there on parent
INSERT INTO ATACC1 (TEST) VALUES (-3);
RESULT:
	ERROR - (1146, "Table 'test.ATACC1' doesn't exist")

-----------
QUERY:

DROP TABLE ATACC1 CASCADE;
RESULT:
	ERROR - (1051, "Unknown table 'test.ATACC1'")

-----------
QUERY:


CREATE TABLE ATACC1 (TEST INT, TEST2 INT
	CHECK (TEST > 0), CHECK (TEST2 > 10) NO INHERIT);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'NO INHERIT)' at line 2")

-----------
QUERY:


CREATE TABLE ATACC2 () INHERITS (ATACC1);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ') INHERITS (ATACC1)' at line 1")

-----------
QUERY:

-- check constraint is there on child
INSERT INTO ATACC2 (TEST) VALUES (-3);
RESULT:
	ERROR - (1146, "Table 'test.ATACC2' doesn't exist")

-----------
QUERY:

-- check constraint is there on parent
INSERT INTO ATACC1 (TEST) VALUES (-3);
RESULT:
	ERROR - (1146, "Table 'test.ATACC1' doesn't exist")

-----------
QUERY:

-- check constraint is not there on child
INSERT INTO ATACC2 (TEST2) VALUES (3);
RESULT:
	ERROR - (1146, "Table 'test.ATACC2' doesn't exist")

-----------
QUERY:

-- check constraint is there on parent
INSERT INTO ATACC1 (TEST2) VALUES (3);
RESULT:
	ERROR - (1146, "Table 'test.ATACC1' doesn't exist")

-----------
QUERY:

DROP TABLE ATACC1 CASCADE;
RESULT:
	ERROR - (1051, "Unknown table 'test.ATACC1'")

-----------
QUERY:


-- NOT NULL NO INHERIT
CREATE TABLE ATACC1 (a int, not null a no inherit);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'not null a no inherit)' at line 2")

-----------
QUERY:

CREATE TABLE ATACC2 () INHERITS (ATACC1);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ') INHERITS (ATACC1)' at line 1")

-----------
QUERY:

-- \d+ ATACC2
DROP TABLE ATACC1, ATACC2;
RESULT:
	ERROR - (1051, "Unknown table 'test.ATACC1,test.ATACC2'")

-----------
QUERY:

CREATE TABLE ATACC1 (a int);
RESULT:
	[]

-----------
QUERY:

ALTER TABLE ATACC1 ADD NOT NULL a NO INHERIT;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'NOT NULL a NO INHERIT' at line 1")

-----------
QUERY:

CREATE TABLE ATACC2 () INHERITS (ATACC1);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ') INHERITS (ATACC1)' at line 1")

-----------
QUERY:

-- \d+ ATACC2
DROP TABLE ATACC1, ATACC2;
RESULT:
	ERROR - (1051, "Unknown table 'test.ATACC2'")

-----------
QUERY:

CREATE TABLE ATACC1 (a int);
RESULT:
	ERROR - (1050, "Table 'ATACC1' already exists")

-----------
QUERY:

CREATE TABLE ATACC2 () INHERITS (ATACC1);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ') INHERITS (ATACC1)' at line 1")

-----------
QUERY:

ALTER TABLE ATACC1 ADD NOT NULL a NO INHERIT;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'NOT NULL a NO INHERIT' at line 1")

-----------
QUERY:

-- \d+ ATACC2
DROP TABLE ATACC1, ATACC2;
RESULT:
	ERROR - (1051, "Unknown table 'test.ATACC2'")

-----------
QUERY:


--
-- Check constraints on INSERT INTO
--

DELETE FROM INSERT_TBL;
RESULT:
	ERROR - (1146, "Table 'test.INSERT_TBL' doesn't exist")

-----------
QUERY:


ALTER SEQUENCE INSERT_SEQ RESTART WITH 4;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'SEQUENCE INSERT_SEQ RESTART WITH 4' at line 1")

-----------
QUERY:


CREATE TEMP TABLE tmp (xd INT, yd TEXT, zd INT);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'TEMP TABLE tmp (xd INT, yd TEXT, zd INT)' at line 1")

-----------
QUERY:


INSERT INTO tmp VALUES (null, 'Y', null);
RESULT:
	ERROR - (1146, "Table 'test.tmp' doesn't exist")

-----------
QUERY:

INSERT INTO tmp VALUES (5, '!check failed', null);
RESULT:
	ERROR - (1146, "Table 'test.tmp' doesn't exist")

-----------
QUERY:

INSERT INTO tmp VALUES (null, 'try again', null);
RESULT:
	ERROR - (1146, "Table 'test.tmp' doesn't exist")

-----------
QUERY:

INSERT INTO INSERT_TBL(y) select yd from tmp;
RESULT:
	ERROR - (1146, "Table 'test.INSERT_TBL' doesn't exist")

-----------
QUERY:


SELECT * FROM INSERT_TBL;
RESULT:
	ERROR - (1146, "Table 'test.INSERT_TBL' doesn't exist")

-----------
QUERY:


INSERT INTO INSERT_TBL SELECT * FROM tmp WHERE yd = 'try again';
RESULT:
	ERROR - (1146, "Table 'test.INSERT_TBL' doesn't exist")

-----------
QUERY:

INSERT INTO INSERT_TBL(y,z) SELECT yd, -7 FROM tmp WHERE yd = 'try again';
RESULT:
	ERROR - (1146, "Table 'test.INSERT_TBL' doesn't exist")

-----------
QUERY:

INSERT INTO INSERT_TBL(y,z) SELECT yd, -8 FROM tmp WHERE yd = 'try again';
RESULT:
	ERROR - (1146, "Table 'test.INSERT_TBL' doesn't exist")

-----------
QUERY:


SELECT * FROM INSERT_TBL;
RESULT:
	ERROR - (1146, "Table 'test.INSERT_TBL' doesn't exist")

-----------
QUERY:


DROP TABLE tmp;
RESULT:
	ERROR - (1051, "Unknown table 'test.tmp'")

-----------
QUERY:


--
-- Check constraints on UPDATE
--

UPDATE INSERT_TBL SET x = NULL WHERE x = 5;
RESULT:
	ERROR - (1146, "Table 'test.INSERT_TBL' doesn't exist")

-----------
QUERY:

UPDATE INSERT_TBL SET x = 6 WHERE x = 6;
RESULT:
	ERROR - (1146, "Table 'test.INSERT_TBL' doesn't exist")

-----------
QUERY:

UPDATE INSERT_TBL SET x = -z, z = -x;
RESULT:
	ERROR - (1146, "Table 'test.INSERT_TBL' doesn't exist")

-----------
QUERY:

UPDATE INSERT_TBL SET x = z, z = x;
RESULT:
	ERROR - (1146, "Table 'test.INSERT_TBL' doesn't exist")

-----------
QUERY:


SELECT * FROM INSERT_TBL;
RESULT:
	ERROR - (1146, "Table 'test.INSERT_TBL' doesn't exist")

-----------
QUERY:


-- DROP TABLE INSERT_TBL /* REPLACED */ ,

--
-- Check constraints on COPY FROM
--

CREATE TABLE COPY_TBL (x INT, y TEXT, z INT,
	CONSTRAINT COPY_CON
	CHECK (x > 3 AND y <> 'check failed' AND x < 7 ));
RESULT:
	[]

-----------
QUERY:


-- \set filename /* REPLACED */ PG_ABS_SRCDIR '/data/constro.data'
COPY COPY_TBL FROM /* REPLACED */ PG_ABS_SRCDIR '/data/constro.data';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'COPY COPY_TBL FROM /* REPLACED */  '/home/keuscha/Documents/FS2024/AST/project/A' at line 2")

-----------
QUERY:


SELECT * FROM COPY_TBL;
RESULT:
	()

-----------
QUERY:


-- \set filename /* REPLACED */ PG_ABS_SRCDIR '/data/constrf.data'
COPY COPY_TBL FROM /* REPLACED */ PG_ABS_SRCDIR '/data/constrf.data';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'COPY COPY_TBL FROM /* REPLACED */  '/home/keuscha/Documents/FS2024/AST/project/A' at line 2")

-----------
QUERY:


SELECT * FROM COPY_TBL;
RESULT:
	()

-----------
QUERY:


--
-- Primary keys
--

CREATE TABLE PRIMARY_TBL (i int PRIMARY KEY, t text);
RESULT:
	[]

-----------
QUERY:


INSERT INTO PRIMARY_TBL VALUES (1, 'one');
RESULT:
	[]

-----------
QUERY:

INSERT INTO PRIMARY_TBL VALUES (2, 'two');
RESULT:
	[]

-----------
QUERY:

INSERT INTO PRIMARY_TBL VALUES (1, 'three');
RESULT:
	ERROR - (1062, "Duplicate entry '1' for key 'PRIMARY_TBL.PRIMARY'")

-----------
QUERY:

INSERT INTO PRIMARY_TBL VALUES (4, 'three');
RESULT:
	[]

-----------
QUERY:

INSERT INTO PRIMARY_TBL VALUES (5, 'one');
RESULT:
	[]

-----------
QUERY:

INSERT INTO PRIMARY_TBL (t) VALUES ('six');
RESULT:
	ERROR - (1364, "Field 'i' doesn't have a default value")

-----------
QUERY:


SELECT * FROM PRIMARY_TBL;
RESULT:
	((1, 'one'), (2, 'two'), (4, 'three'), (5, 'one'))

-----------
QUERY:


DROP TABLE PRIMARY_TBL;
RESULT:
	[]

-----------
QUERY:


CREATE TABLE PRIMARY_TBL (i int, t text,
	PRIMARY KEY(i,t));
RESULT:
	ERROR - (1170, "BLOB/TEXT column 't' used in key specification without a key length")

-----------
QUERY:


INSERT INTO PRIMARY_TBL VALUES (1, 'one');
RESULT:
	ERROR - (1146, "Table 'test.PRIMARY_TBL' doesn't exist")

-----------
QUERY:

INSERT INTO PRIMARY_TBL VALUES (2, 'two');
RESULT:
	ERROR - (1146, "Table 'test.PRIMARY_TBL' doesn't exist")

-----------
QUERY:

INSERT INTO PRIMARY_TBL VALUES (1, 'three');
RESULT:
	ERROR - (1146, "Table 'test.PRIMARY_TBL' doesn't exist")

-----------
QUERY:

INSERT INTO PRIMARY_TBL VALUES (4, 'three');
RESULT:
	ERROR - (1146, "Table 'test.PRIMARY_TBL' doesn't exist")

-----------
QUERY:

INSERT INTO PRIMARY_TBL VALUES (5, 'one');
RESULT:
	ERROR - (1146, "Table 'test.PRIMARY_TBL' doesn't exist")

-----------
QUERY:

INSERT INTO PRIMARY_TBL (t) VALUES ('six');
RESULT:
	ERROR - (1146, "Table 'test.PRIMARY_TBL' doesn't exist")

-----------
QUERY:


SELECT * FROM PRIMARY_TBL;
RESULT:
	ERROR - (1146, "Table 'test.PRIMARY_TBL' doesn't exist")

-----------
QUERY:


DROP TABLE PRIMARY_TBL;
RESULT:
	ERROR - (1051, "Unknown table 'test.PRIMARY_TBL'")

-----------
QUERY:


--
-- Unique keys
--

CREATE TABLE UNIQUE_TBL (i int UNIQUE, t text);
RESULT:
	[]

-----------
QUERY:


INSERT INTO UNIQUE_TBL VALUES (1, 'one');
RESULT:
	[]

-----------
QUERY:

INSERT INTO UNIQUE_TBL VALUES (2, 'two');
RESULT:
	[]

-----------
QUERY:

INSERT INTO UNIQUE_TBL VALUES (1, 'three');
RESULT:
	ERROR - (1062, "Duplicate entry '1' for key 'UNIQUE_TBL.i'")

-----------
QUERY:

INSERT INTO UNIQUE_TBL VALUES (4, 'four');
RESULT:
	[]

-----------
QUERY:

INSERT INTO UNIQUE_TBL VALUES (5, 'one');
RESULT:
	[]

-----------
QUERY:

INSERT INTO UNIQUE_TBL (t) VALUES ('six');
RESULT:
	[]

-----------
QUERY:

INSERT INTO UNIQUE_TBL (t) VALUES ('seven');
RESULT:
	[]

-----------
QUERY:


INSERT INTO UNIQUE_TBL VALUES (5, 'five-upsert-insert') ON CONFLICT (i) DO UPDATE SET t = 'five-upsert-update';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'CONFLICT (i) DO UPDATE SET t = 'five-upsert-update'' at line 1")

-----------
QUERY:

INSERT INTO UNIQUE_TBL VALUES (6, 'six-upsert-insert') ON CONFLICT (i) DO UPDATE SET t = 'six-upsert-update';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'CONFLICT (i) DO UPDATE SET t = 'six-upsert-update'' at line 1")

-----------
QUERY:

-- should fail
INSERT INTO UNIQUE_TBL VALUES (1, 'a'), (2, 'b'), (2, 'b') ON CONFLICT (i) DO UPDATE SET t = 'fails';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'CONFLICT (i) DO UPDATE SET t = 'fails'' at line 2")

-----------
QUERY:


SELECT * FROM UNIQUE_TBL;
RESULT:
	((1, 'one'), (2, 'two'), (4, 'four'), (5, 'one'), (None, 'six'), (None, 'seven'))

-----------
QUERY:


DROP TABLE UNIQUE_TBL;
RESULT:
	[]

-----------
QUERY:


CREATE TABLE UNIQUE_TBL (i int UNIQUE NULLS NOT DISTINCT, t text);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'NULLS NOT DISTINCT, t text)' at line 1")

-----------
QUERY:


INSERT INTO UNIQUE_TBL VALUES (1, 'one');
RESULT:
	ERROR - (1146, "Table 'test.UNIQUE_TBL' doesn't exist")

-----------
QUERY:

INSERT INTO UNIQUE_TBL VALUES (2, 'two');
RESULT:
	ERROR - (1146, "Table 'test.UNIQUE_TBL' doesn't exist")

-----------
QUERY:

INSERT INTO UNIQUE_TBL VALUES (1, 'three');
RESULT:
	ERROR - (1146, "Table 'test.UNIQUE_TBL' doesn't exist")

-----------
QUERY:
  -- fail
INSERT INTO UNIQUE_TBL VALUES (4, 'four');
RESULT:
	ERROR - (1146, "Table 'test.UNIQUE_TBL' doesn't exist")

-----------
QUERY:

INSERT INTO UNIQUE_TBL VALUES (5, 'one');
RESULT:
	ERROR - (1146, "Table 'test.UNIQUE_TBL' doesn't exist")

-----------
QUERY:

INSERT INTO UNIQUE_TBL (t) VALUES ('six');
RESULT:
	ERROR - (1146, "Table 'test.UNIQUE_TBL' doesn't exist")

-----------
QUERY:

INSERT INTO UNIQUE_TBL (t) VALUES ('seven');
RESULT:
	ERROR - (1146, "Table 'test.UNIQUE_TBL' doesn't exist")

-----------
QUERY:
  -- fail
INSERT INTO UNIQUE_TBL (t) VALUES ('eight') ON CONFLICT DO NOTHING;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'CONFLICT DO NOTHING' at line 2")

-----------
QUERY:
  -- no-op

SELECT * FROM UNIQUE_TBL;
RESULT:
	ERROR - (1146, "Table 'test.UNIQUE_TBL' doesn't exist")

-----------
QUERY:


DROP TABLE UNIQUE_TBL;
RESULT:
	ERROR - (1051, "Unknown table 'test.UNIQUE_TBL'")

-----------
QUERY:


CREATE TABLE UNIQUE_TBL (i int, t text,
	UNIQUE(i,t));
RESULT:
	ERROR - (1170, "BLOB/TEXT column 't' used in key specification without a key length")

-----------
QUERY:


INSERT INTO UNIQUE_TBL VALUES (1, 'one');
RESULT:
	ERROR - (1146, "Table 'test.UNIQUE_TBL' doesn't exist")

-----------
QUERY:

INSERT INTO UNIQUE_TBL VALUES (2, 'two');
RESULT:
	ERROR - (1146, "Table 'test.UNIQUE_TBL' doesn't exist")

-----------
QUERY:

INSERT INTO UNIQUE_TBL VALUES (1, 'three');
RESULT:
	ERROR - (1146, "Table 'test.UNIQUE_TBL' doesn't exist")

-----------
QUERY:

INSERT INTO UNIQUE_TBL VALUES (1, 'one');
RESULT:
	ERROR - (1146, "Table 'test.UNIQUE_TBL' doesn't exist")

-----------
QUERY:

INSERT INTO UNIQUE_TBL VALUES (5, 'one');
RESULT:
	ERROR - (1146, "Table 'test.UNIQUE_TBL' doesn't exist")

-----------
QUERY:

INSERT INTO UNIQUE_TBL (t) VALUES ('six');
RESULT:
	ERROR - (1146, "Table 'test.UNIQUE_TBL' doesn't exist")

-----------
QUERY:


SELECT * FROM UNIQUE_TBL;
RESULT:
	ERROR - (1146, "Table 'test.UNIQUE_TBL' doesn't exist")

-----------
QUERY:


DROP TABLE UNIQUE_TBL;
RESULT:
	ERROR - (1051, "Unknown table 'test.UNIQUE_TBL'")

-----------
QUERY:


--
-- Deferrable unique constraints
--

CREATE TABLE unique_tbl (i int UNIQUE DEFERRABLE, t text);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'DEFERRABLE, t text)' at line 5")

-----------
QUERY:


INSERT INTO unique_tbl VALUES (0, 'one');
RESULT:
	ERROR - (1146, "Table 'test.unique_tbl' doesn't exist")

-----------
QUERY:

INSERT INTO unique_tbl VALUES (1, 'two');
RESULT:
	ERROR - (1146, "Table 'test.unique_tbl' doesn't exist")

-----------
QUERY:

INSERT INTO unique_tbl VALUES (2, 'tree');
RESULT:
	ERROR - (1146, "Table 'test.unique_tbl' doesn't exist")

-----------
QUERY:

INSERT INTO unique_tbl VALUES (3, 'four');
RESULT:
	ERROR - (1146, "Table 'test.unique_tbl' doesn't exist")

-----------
QUERY:

INSERT INTO unique_tbl VALUES (4, 'five');
RESULT:
	ERROR - (1146, "Table 'test.unique_tbl' doesn't exist")

-----------
QUERY:


BEGIN;
RESULT:
	[]

-----------
QUERY:


-- default is immediate so this should fail right away
UPDATE unique_tbl SET i = 1 WHERE i = 0;
RESULT:
	ERROR - (1146, "Table 'test.unique_tbl' doesn't exist")

-----------
QUERY:


ROLLBACK;
RESULT:
	[]

-----------
QUERY:


-- check is done at end of statement, so this should succeed
UPDATE unique_tbl SET i = i+1;
RESULT:
	ERROR - (1146, "Table 'test.unique_tbl' doesn't exist")

-----------
QUERY:


SELECT * FROM unique_tbl;
RESULT:
	ERROR - (1146, "Table 'test.unique_tbl' doesn't exist")

-----------
QUERY:


-- explicitly defer the constraint
BEGIN;
RESULT:
	[]

-----------
QUERY:


SET CONSTRAINTS unique_tbl_i_key DEFERRED;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'unique_tbl_i_key DEFERRED' at line 1")

-----------
QUERY:


INSERT INTO unique_tbl VALUES (3, 'three');
RESULT:
	ERROR - (1146, "Table 'test.unique_tbl' doesn't exist")

-----------
QUERY:

DELETE FROM unique_tbl WHERE t = 'tree';
RESULT:
	ERROR - (1146, "Table 'test.unique_tbl' doesn't exist")

-----------
QUERY:
 -- makes constraint valid again

COMMIT;
RESULT:
	[]

-----------
QUERY:
 -- should succeed

SELECT * FROM unique_tbl;
RESULT:
	ERROR - (1146, "Table 'test.unique_tbl' doesn't exist")

-----------
QUERY:


-- try adding an initially deferred constraint
ALTER TABLE unique_tbl DROP CONSTRAINT unique_tbl_i_key;
RESULT:
	ERROR - (1146, "Table 'test.unique_tbl' doesn't exist")

-----------
QUERY:

ALTER TABLE unique_tbl ADD CONSTRAINT unique_tbl_i_key
	UNIQUE (i) DEFERRABLE INITIALLY DEFERRED;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'DEFERRABLE INITIALLY DEFERRED' at line 2")

-----------
QUERY:


BEGIN;
RESULT:
	[]

-----------
QUERY:


INSERT INTO unique_tbl VALUES (1, 'five');
RESULT:
	ERROR - (1146, "Table 'test.unique_tbl' doesn't exist")

-----------
QUERY:

INSERT INTO unique_tbl VALUES (5, 'one');
RESULT:
	ERROR - (1146, "Table 'test.unique_tbl' doesn't exist")

-----------
QUERY:

UPDATE unique_tbl SET i = 4 WHERE i = 2;
RESULT:
	ERROR - (1146, "Table 'test.unique_tbl' doesn't exist")

-----------
QUERY:

UPDATE unique_tbl SET i = 2 WHERE i = 4 AND t = 'four';
RESULT:
	ERROR - (1146, "Table 'test.unique_tbl' doesn't exist")

-----------
QUERY:

DELETE FROM unique_tbl WHERE i = 1 AND t = 'one';
RESULT:
	ERROR - (1146, "Table 'test.unique_tbl' doesn't exist")

-----------
QUERY:

DELETE FROM unique_tbl WHERE i = 5 AND t = 'five';
RESULT:
	ERROR - (1146, "Table 'test.unique_tbl' doesn't exist")

-----------
QUERY:


COMMIT;
RESULT:
	[]

-----------
QUERY:


SELECT * FROM unique_tbl;
RESULT:
	ERROR - (1146, "Table 'test.unique_tbl' doesn't exist")

-----------
QUERY:


-- should fail at commit-time
BEGIN;
RESULT:
	[]

-----------
QUERY:

INSERT INTO unique_tbl VALUES (3, 'Three');
RESULT:
	ERROR - (1146, "Table 'test.unique_tbl' doesn't exist")

-----------
QUERY:
 -- should succeed for now
COMMIT;
RESULT:
	[]

-----------
QUERY:
 -- should fail

-- make constraint check immediate
BEGIN;
RESULT:
	[]

-----------
QUERY:


SET CONSTRAINTS ALL IMMEDIATE;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'ALL IMMEDIATE' at line 1")

-----------
QUERY:


INSERT INTO unique_tbl VALUES (3, 'Three');
RESULT:
	ERROR - (1146, "Table 'test.unique_tbl' doesn't exist")

-----------
QUERY:
 -- should fail

COMMIT;
RESULT:
	[]

-----------
QUERY:


-- forced check when SET CONSTRAINTS is called
BEGIN;
RESULT:
	[]

-----------
QUERY:


SET CONSTRAINTS ALL DEFERRED;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'ALL DEFERRED' at line 1")

-----------
QUERY:


INSERT INTO unique_tbl VALUES (3, 'Three');
RESULT:
	ERROR - (1146, "Table 'test.unique_tbl' doesn't exist")

-----------
QUERY:
 -- should succeed for now

SET CONSTRAINTS ALL IMMEDIATE;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'ALL IMMEDIATE' at line 3")

-----------
QUERY:
 -- should fail

COMMIT;
RESULT:
	[]

-----------
QUERY:


-- test deferrable UNIQUE with a partitioned table
CREATE TABLE parted_uniq_tbl (i int UNIQUE DEFERRABLE) partition by range (i);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'DEFERRABLE) partition by range (i)' at line 2")

-----------
QUERY:

CREATE TABLE parted_uniq_tbl_1 PARTITION OF parted_uniq_tbl FOR VALUES FROM (0) TO (10);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'OF parted_uniq_tbl FOR VALUES FROM (0) TO (10)' at line 1")

-----------
QUERY:

CREATE TABLE parted_uniq_tbl_2 PARTITION OF parted_uniq_tbl FOR VALUES FROM (20) TO (30);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'OF parted_uniq_tbl FOR VALUES FROM (20) TO (30)' at line 1")

-----------
QUERY:

SELECT conname, conrelid::regclass FROM pg_constraint
  WHERE conname LIKE 'parted_uniq%' ORDER BY conname;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::regclass FROM pg_constraint\n  WHERE conname LIKE 'parted_uniq%' ORDER BY conna' at line 1")

-----------
QUERY:

BEGIN;
RESULT:
	[]

-----------
QUERY:

INSERT INTO parted_uniq_tbl VALUES (1);
RESULT:
	ERROR - (1146, "Table 'test.parted_uniq_tbl' doesn't exist")

-----------
QUERY:

SAVEPOINT f;
RESULT:
	[]

-----------
QUERY:

INSERT INTO parted_uniq_tbl VALUES (1);
RESULT:
	ERROR - (1146, "Table 'test.parted_uniq_tbl' doesn't exist")

-----------
QUERY:
	-- unique violation
ROLLBACK TO f;
RESULT:
	[]

-----------
QUERY:

SET CONSTRAINTS parted_uniq_tbl_i_key DEFERRED;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'parted_uniq_tbl_i_key DEFERRED' at line 1")

-----------
QUERY:

INSERT INTO parted_uniq_tbl VALUES (1);
RESULT:
	ERROR - (1146, "Table 'test.parted_uniq_tbl' doesn't exist")

-----------
QUERY:
	-- OK now, fail at commit
COMMIT;
RESULT:
	[]

-----------
QUERY:

DROP TABLE parted_uniq_tbl;
RESULT:
	ERROR - (1051, "Unknown table 'test.parted_uniq_tbl'")

-----------
QUERY:


-- test naming a constraint in a partition when a conflict exists
CREATE TABLE parted_fk_naming (
    id bigint NOT NULL default 1,
    id_abc bigint,
    CONSTRAINT dummy_constr FOREIGN KEY (id_abc)
        REFERENCES parted_fk_naming (id),
    PRIMARY KEY (id)
)
PARTITION BY LIST (id);
RESULT:
	ERROR - (1492, 'For LIST partitions each partition must be defined')

-----------
QUERY:

CREATE TABLE parted_fk_naming_1 (
    id bigint NOT NULL default 1,
    id_abc bigint,
    PRIMARY KEY (id),
    CONSTRAINT dummy_constr CHECK (true)
);
RESULT:
	[]

-----------
QUERY:

ALTER TABLE parted_fk_naming ATTACH PARTITION parted_fk_naming_1 FOR VALUES IN ('1');
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'ATTACH PARTITION parted_fk_naming_1 FOR VALUES IN ('1')' at line 1")

-----------
QUERY:

SELECT conname FROM pg_constraint WHERE conrelid = 'parted_fk_naming_1'::regclass AND contype = 'f';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::regclass AND contype = 'f'' at line 1")

-----------
QUERY:

DROP TABLE parted_fk_naming;
RESULT:
	ERROR - (1051, "Unknown table 'test.parted_fk_naming'")

-----------
QUERY:


-- test a HOT update that invalidates the conflicting tuple.
-- the trigger should still fire and catch the violation

BEGIN;
RESULT:
	[]

-----------
QUERY:


INSERT INTO unique_tbl VALUES (3, 'Three');
RESULT:
	ERROR - (1146, "Table 'test.unique_tbl' doesn't exist")

-----------
QUERY:
 -- should succeed for now
UPDATE unique_tbl SET t = 'THREE' WHERE i = 3 AND t = 'Three';
RESULT:
	ERROR - (1146, "Table 'test.unique_tbl' doesn't exist")

-----------
QUERY:


COMMIT;
RESULT:
	[]

-----------
QUERY:
 -- should fail

SELECT * FROM unique_tbl;
RESULT:
	ERROR - (1146, "Table 'test.unique_tbl' doesn't exist")

-----------
QUERY:


-- test a HOT update that modifies the newly inserted tuple,
-- but should succeed because we then remove the other conflicting tuple.

BEGIN;
RESULT:
	[]

-----------
QUERY:


INSERT INTO unique_tbl VALUES(3, 'tree');
RESULT:
	ERROR - (1146, "Table 'test.unique_tbl' doesn't exist")

-----------
QUERY:
 -- should succeed for now
UPDATE unique_tbl SET t = 'threex' WHERE t = 'tree';
RESULT:
	ERROR - (1146, "Table 'test.unique_tbl' doesn't exist")

-----------
QUERY:

DELETE FROM unique_tbl WHERE t = 'three';
RESULT:
	ERROR - (1146, "Table 'test.unique_tbl' doesn't exist")

-----------
QUERY:


SELECT * FROM unique_tbl;
RESULT:
	ERROR - (1146, "Table 'test.unique_tbl' doesn't exist")

-----------
QUERY:


COMMIT;
RESULT:
	[]

-----------
QUERY:


SELECT * FROM unique_tbl;
RESULT:
	ERROR - (1146, "Table 'test.unique_tbl' doesn't exist")

-----------
QUERY:


DROP TABLE unique_tbl;
RESULT:
	ERROR - (1051, "Unknown table 'test.unique_tbl'")

-----------
QUERY:


--
-- EXCLUDE constraints
--

CREATE TABLE circles (
  c1 CIRCLE,
  c2 TEXT,
  EXCLUDE USING gist
    (c1 WITH &&, (c2::circle) WITH &&)
    WHERE (circle_center(c1) <> '(0,0)')
);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'CIRCLE,\n  c2 TEXT,\n  EXCLUDE USING gist\n    (c1 WITH &&, (c2::circle) WITH &&)\n ' at line 6")

-----------
QUERY:


-- these should succeed because they don/* REPLACED */ ''t match the index predicate
INSERT INTO circles VALUES('<(0,0), 5>', '<(0,0), 5>');
RESULT:
	ERROR - (1146, "Table 'test.circles' doesn't exist")

-----------
QUERY:

INSERT INTO circles VALUES('<(0,0), 5>', '<(0,0), 4>');
RESULT:
	ERROR - (1146, "Table 'test.circles' doesn't exist")

-----------
QUERY:


-- succeed
INSERT INTO circles VALUES('<(10,10), 10>', '<(0,0), 5>');
RESULT:
	ERROR - (1146, "Table 'test.circles' doesn't exist")

-----------
QUERY:

-- fail, overlaps
INSERT INTO circles VALUES('<(20,20), 10>', '<(0,0), 4>');
RESULT:
	ERROR - (1146, "Table 'test.circles' doesn't exist")

-----------
QUERY:

-- succeed, because violation is ignored
INSERT INTO circles VALUES('<(20,20), 10>', '<(0,0), 4>')
  ON CONFLICT ON CONSTRAINT circles_c1_c2_excl DO NOTHING;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'CONFLICT ON CONSTRAINT circles_c1_c2_excl DO NOTHING' at line 3")

-----------
QUERY:

-- fail, because DO UPDATE variant requires unique index
INSERT INTO circles VALUES('<(20,20), 10>', '<(0,0), 4>')
  ON CONFLICT ON CONSTRAINT circles_c1_c2_excl DO UPDATE SET c2 = EXCLUDED.c2;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'CONFLICT ON CONSTRAINT circles_c1_c2_excl DO UPDATE SET c2 = EXCLUDED.c2' at line 3")

-----------
QUERY:

-- succeed because c1 doesn/* REPLACED */ ''t overlap
INSERT INTO circles VALUES('<(20,20), 1>', '<(0,0), 5>');
RESULT:
	ERROR - (1146, "Table 'test.circles' doesn't exist")

-----------
QUERY:

-- succeed because c2 doesn/* REPLACED */ ''t overlap
INSERT INTO circles VALUES('<(20,20), 10>', '<(10,10), 5>');
RESULT:
	ERROR - (1146, "Table 'test.circles' doesn't exist")

-----------
QUERY:


-- should fail on existing data without the WHERE clause
ALTER TABLE circles ADD EXCLUDE USING gist
  (c1 WITH &&, (c2::circle) WITH &&);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'USING gist\n  (c1 WITH &&, (c2::circle) WITH &&)' at line 2")

-----------
QUERY:


-- try reindexing an existing constraint
REINDEX INDEX circles_c1_c2_excl;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'REINDEX INDEX circles_c1_c2_excl' at line 2")

-----------
QUERY:


DROP TABLE circles;
RESULT:
	ERROR - (1051, "Unknown table 'test.circles'")

-----------
QUERY:


-- Check deferred exclusion constraint

CREATE TABLE deferred_excl (
  f1 int,
  f2 int,
  CONSTRAINT deferred_excl_con EXCLUDE (f1 WITH =) INITIALLY DEFERRED
);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'EXCLUDE (f1 WITH =) INITIALLY DEFERRED\n)' at line 6")

-----------
QUERY:


INSERT INTO deferred_excl VALUES(1);
RESULT:
	ERROR - (1146, "Table 'test.deferred_excl' doesn't exist")

-----------
QUERY:

INSERT INTO deferred_excl VALUES(2);
RESULT:
	ERROR - (1146, "Table 'test.deferred_excl' doesn't exist")

-----------
QUERY:

INSERT INTO deferred_excl VALUES(1);
RESULT:
	ERROR - (1146, "Table 'test.deferred_excl' doesn't exist")

-----------
QUERY:
 -- fail
INSERT INTO deferred_excl VALUES(1) ON CONFLICT ON CONSTRAINT deferred_excl_con DO NOTHING;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'CONFLICT ON CONSTRAINT deferred_excl_con DO NOTHING' at line 2")

-----------
QUERY:
 -- fail
BEGIN;
RESULT:
	[]

-----------
QUERY:

INSERT INTO deferred_excl VALUES(2);
RESULT:
	ERROR - (1146, "Table 'test.deferred_excl' doesn't exist")

-----------
QUERY:
 -- no fail here
COMMIT;
RESULT:
	[]

-----------
QUERY:
 -- should fail here
BEGIN;
RESULT:
	[]

-----------
QUERY:

INSERT INTO deferred_excl VALUES(3);
RESULT:
	ERROR - (1146, "Table 'test.deferred_excl' doesn't exist")

-----------
QUERY:

INSERT INTO deferred_excl VALUES(3);
RESULT:
	ERROR - (1146, "Table 'test.deferred_excl' doesn't exist")

-----------
QUERY:
 -- no fail here
COMMIT;
RESULT:
	[]

-----------
QUERY:
 -- should fail here

-- bug #13148: deferred constraint versus HOT update
BEGIN;
RESULT:
	[]

-----------
QUERY:

INSERT INTO deferred_excl VALUES(2, 1);
RESULT:
	ERROR - (1146, "Table 'test.deferred_excl' doesn't exist")

-----------
QUERY:
 -- no fail here
DELETE FROM deferred_excl WHERE f1 = 2 AND f2 IS NULL;
RESULT:
	ERROR - (1146, "Table 'test.deferred_excl' doesn't exist")

-----------
QUERY:
 -- remove old row
UPDATE deferred_excl SET f2 = 2 WHERE f1 = 2;
RESULT:
	ERROR - (1146, "Table 'test.deferred_excl' doesn't exist")

-----------
QUERY:

COMMIT;
RESULT:
	[]

-----------
QUERY:
 -- should not fail

SELECT * FROM deferred_excl;
RESULT:
	ERROR - (1146, "Table 'test.deferred_excl' doesn't exist")

-----------
QUERY:


ALTER TABLE deferred_excl DROP CONSTRAINT deferred_excl_con;
RESULT:
	ERROR - (1146, "Table 'test.deferred_excl' doesn't exist")

-----------
QUERY:


-- This should fail, but worth testing because of HOT updates
UPDATE deferred_excl SET f1 = 3;
RESULT:
	ERROR - (1146, "Table 'test.deferred_excl' doesn't exist")

-----------
QUERY:


ALTER TABLE deferred_excl ADD EXCLUDE (f1 WITH =);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(f1 WITH =)' at line 1")

-----------
QUERY:


DROP TABLE deferred_excl;
RESULT:
	ERROR - (1051, "Unknown table 'test.deferred_excl'")

-----------
QUERY:


-- verify constraints created for NOT NULL clauses
CREATE TABLE notnull_tbl1 (a INTEGER NOT NULL NOT NULL);
RESULT:
	[]

-----------
QUERY:

-- \d+ notnull_tbl1
select conname, contype, conkey from pg_constraint where conrelid = 'notnull_tbl1'::regclass;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::regclass' at line 2")

-----------
QUERY:

-- no-op
ALTER TABLE notnull_tbl1 ADD CONSTRAINT nn NOT NULL a;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'NOT NULL a' at line 2")

-----------
QUERY:

-- \d+ notnull_tbl1
-- duplicate name
ALTER TABLE notnull_tbl1 ADD COLUMN b INT CONSTRAINT notnull_tbl1_a_not_null NOT NULL;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'NOT NULL' at line 3")

-----------
QUERY:

-- DROP NOT NULL gets rid of both the attnotnull flag and the constraint itself
ALTER TABLE notnull_tbl1 ALTER a DROP NOT NULL;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'NOT NULL' at line 2")

-----------
QUERY:

-- \d notnull_tbl1
select conname, contype, conkey from pg_constraint where conrelid = 'notnull_tbl1'::regclass;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::regclass' at line 2")

-----------
QUERY:

-- SET NOT NULL puts both back
ALTER TABLE notnull_tbl1 ALTER a SET NOT NULL;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'NOT NULL' at line 2")

-----------
QUERY:

-- \d notnull_tbl1
select conname, contype, conkey from pg_constraint where conrelid = 'notnull_tbl1'::regclass;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::regclass' at line 2")

-----------
QUERY:

-- Doing it twice doesn/* REPLACED */ ''t create a redundant constraint
ALTER TABLE notnull_tbl1 ALTER a SET NOT NULL;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'NOT NULL' at line 2")

-----------
QUERY:

select conname, contype, conkey from pg_constraint where conrelid = 'notnull_tbl1'::regclass;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::regclass' at line 1")

-----------
QUERY:

-- Using the /* REPLACED */ ''table constraint/* REPLACED */ '' syntax also works
ALTER TABLE notnull_tbl1 ALTER a DROP NOT NULL;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'NOT NULL' at line 2")

-----------
QUERY:

ALTER TABLE notnull_tbl1 ADD CONSTRAINT foobar NOT NULL a;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'NOT NULL a' at line 1")

-----------
QUERY:

-- \d notnull_tbl1
select conname, contype, conkey from pg_constraint where conrelid = 'notnull_tbl1'::regclass;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::regclass' at line 2")

-----------
QUERY:

DROP TABLE notnull_tbl1;
RESULT:
	[]

-----------
QUERY:


-- nope
CREATE TABLE notnull_tbl2 (a INTEGER CONSTRAINT blah NOT NULL, b INTEGER CONSTRAINT blah NOT NULL);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'NOT NULL, b INTEGER CONSTRAINT blah NOT NULL)' at line 2")

-----------
QUERY:


CREATE TABLE notnull_tbl2 (a INTEGER PRIMARY KEY);
RESULT:
	[]

-----------
QUERY:

ALTER TABLE notnull_tbl2 ALTER a DROP NOT NULL;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'NOT NULL' at line 1")

-----------
QUERY:


CREATE TABLE notnull_tbl3 (a INTEGER NOT NULL, CHECK (a IS NOT NULL));
RESULT:
	[]

-----------
QUERY:

ALTER TABLE notnull_tbl3 ALTER A DROP NOT NULL;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'NOT NULL' at line 1")

-----------
QUERY:

ALTER TABLE notnull_tbl3 ADD b int, ADD CONSTRAINT pk PRIMARY KEY (a, b);
RESULT:
	[]

-----------
QUERY:

-- \d notnull_tbl3
ALTER TABLE notnull_tbl3 DROP CONSTRAINT pk;
RESULT:
	ERROR - (3940, "Constraint 'pk' does not exist.")

-----------
QUERY:

-- \d notnull_tbl3

-- Primary keys in parent table cause NOT NULL constraint to spawn on their
-- children.  Verify that they work correctly.
CREATE TABLE cnn_parent (a int, b int);
RESULT:
	[]

-----------
QUERY:

CREATE TABLE cnn_child () INHERITS (cnn_parent);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ') INHERITS (cnn_parent)' at line 1")

-----------
QUERY:

CREATE TABLE cnn_grandchild (NOT NULL b) INHERITS (cnn_child);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'NOT NULL b) INHERITS (cnn_child)' at line 1")

-----------
QUERY:

CREATE TABLE cnn_child2 (NOT NULL a NO INHERIT) INHERITS (cnn_parent);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'NOT NULL a NO INHERIT) INHERITS (cnn_parent)' at line 1")

-----------
QUERY:

CREATE TABLE cnn_grandchild2 () INHERITS (cnn_grandchild, cnn_child2);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ') INHERITS (cnn_grandchild, cnn_child2)' at line 1")

-----------
QUERY:


ALTER TABLE cnn_parent ADD PRIMARY KEY (b);
RESULT:
	[]

-----------
QUERY:

-- \d+ cnn_grandchild
-- \d+ cnn_grandchild2
ALTER TABLE cnn_parent DROP CONSTRAINT cnn_parent_pkey;
RESULT:
	ERROR - (3940, "Constraint 'cnn_parent_pkey' does not exist.")

-----------
QUERY:

-- \set VERBOSITY terse
DROP TABLE cnn_parent CASCADE;
RESULT:
	[]

-----------
QUERY:

-- \set VERBOSITY default

-- As above, but create the primary key ahead of time
CREATE TABLE cnn_parent (a int, b int PRIMARY KEY);
RESULT:
	[]

-----------
QUERY:

CREATE TABLE cnn_child () INHERITS (cnn_parent);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ') INHERITS (cnn_parent)' at line 1")

-----------
QUERY:

CREATE TABLE cnn_grandchild (NOT NULL b) INHERITS (cnn_child);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'NOT NULL b) INHERITS (cnn_child)' at line 1")

-----------
QUERY:

CREATE TABLE cnn_child2 (NOT NULL a NO INHERIT) INHERITS (cnn_parent);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'NOT NULL a NO INHERIT) INHERITS (cnn_parent)' at line 1")

-----------
QUERY:

CREATE TABLE cnn_grandchild2 () INHERITS (cnn_grandchild, cnn_child2);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ') INHERITS (cnn_grandchild, cnn_child2)' at line 1")

-----------
QUERY:


ALTER TABLE cnn_parent ADD PRIMARY KEY (b);
RESULT:
	ERROR - (1068, 'Multiple primary key defined')

-----------
QUERY:

-- \d+ cnn_grandchild
-- \d+ cnn_grandchild2
ALTER TABLE cnn_parent DROP CONSTRAINT cnn_parent_pkey;
RESULT:
	ERROR - (3940, "Constraint 'cnn_parent_pkey' does not exist.")

-----------
QUERY:

-- \set VERBOSITY terse
DROP TABLE cnn_parent CASCADE;
RESULT:
	[]

-----------
QUERY:

-- \set VERBOSITY default

-- As above, but create the primary key using a UNIQUE index
CREATE TABLE cnn_parent (a int, b int);
RESULT:
	[]

-----------
QUERY:

CREATE TABLE cnn_child () INHERITS (cnn_parent);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ') INHERITS (cnn_parent)' at line 1")

-----------
QUERY:

CREATE TABLE cnn_grandchild (NOT NULL b) INHERITS (cnn_child);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'NOT NULL b) INHERITS (cnn_child)' at line 1")

-----------
QUERY:

CREATE TABLE cnn_child2 (NOT NULL a NO INHERIT) INHERITS (cnn_parent);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'NOT NULL a NO INHERIT) INHERITS (cnn_parent)' at line 1")

-----------
QUERY:

CREATE TABLE cnn_grandchild2 () INHERITS (cnn_grandchild, cnn_child2);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ') INHERITS (cnn_grandchild, cnn_child2)' at line 1")

-----------
QUERY:


CREATE UNIQUE INDEX b_uq ON cnn_parent (b);
RESULT:
	[]

-----------
QUERY:

ALTER TABLE cnn_parent ADD PRIMARY KEY USING INDEX b_uq;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'INDEX b_uq' at line 1")

-----------
QUERY:

-- \d+ cnn_grandchild
-- \d+ cnn_grandchild2
ALTER TABLE cnn_parent DROP CONSTRAINT cnn_parent_pkey;
RESULT:
	ERROR - (3940, "Constraint 'cnn_parent_pkey' does not exist.")

-----------
QUERY:

-- keeps these tables around, for pg_upgrade testing

-- ensure columns in partitions are marked not-null
create table cnn2_parted(a int primary key) partition by list (a);
RESULT:
	ERROR - (1492, 'For LIST partitions each partition must be defined')

-----------
QUERY:

create table cnn2_part1(a int);
RESULT:
	[]

-----------
QUERY:

alter table cnn2_parted attach partition cnn2_part1 for values in (1);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'attach partition cnn2_part1 for values in (1)' at line 1")

-----------
QUERY:

drop table cnn2_parted, cnn2_part1;
RESULT:
	ERROR - (1051, "Unknown table 'test.cnn2_parted'")

-----------
QUERY:


create table cnn2_parted(a int not null) partition by list (a);
RESULT:
	ERROR - (1492, 'For LIST partitions each partition must be defined')

-----------
QUERY:

create table cnn2_part1(a int primary key);
RESULT:
	ERROR - (1050, "Table 'cnn2_part1' already exists")

-----------
QUERY:

alter table cnn2_parted attach partition cnn2_part1 for values in (1);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'attach partition cnn2_part1 for values in (1)' at line 1")

-----------
QUERY:

drop table cnn2_parted, cnn2_part1;
RESULT:
	ERROR - (1051, "Unknown table 'test.cnn2_parted'")

-----------
QUERY:


-- columns in regular and LIKE inheritance should be marked not-nullable
-- for primary keys, even if those are deferred
CREATE TABLE notnull_tbl4 (a INTEGER PRIMARY KEY INITIALLY DEFERRED);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'INITIALLY DEFERRED)' at line 3")

-----------
QUERY:

CREATE TABLE notnull_tbl4_lk (LIKE notnull_tbl4);
RESULT:
	ERROR - (1146, "Table 'test.notnull_tbl4' doesn't exist")

-----------
QUERY:

CREATE TABLE notnull_tbl4_lk2 (LIKE notnull_tbl4 INCLUDING INDEXES);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'INCLUDING INDEXES)' at line 1")

-----------
QUERY:

CREATE TABLE notnull_tbl4_lk3 (LIKE notnull_tbl4 INCLUDING INDEXES, CONSTRAINT a_nn NOT NULL a);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'INCLUDING INDEXES, CONSTRAINT a_nn NOT NULL a)' at line 1")

-----------
QUERY:

CREATE TABLE notnull_tbl4_cld () INHERITS (notnull_tbl4);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ') INHERITS (notnull_tbl4)' at line 1")

-----------
QUERY:

CREATE TABLE notnull_tbl4_cld2 (PRIMARY KEY (a) DEFERRABLE) INHERITS (notnull_tbl4);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'DEFERRABLE) INHERITS (notnull_tbl4)' at line 1")

-----------
QUERY:

CREATE TABLE notnull_tbl4_cld3 (PRIMARY KEY (a) DEFERRABLE, CONSTRAINT a_nn NOT NULL a) INHERITS (notnull_tbl4);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'DEFERRABLE, CONSTRAINT a_nn NOT NULL a) INHERITS (notnull_tbl4)' at line 1")

-----------
QUERY:

-- \d+ notnull_tbl4
-- \d+ notnull_tbl4_lk
-- \d+ notnull_tbl4_lk2
-- \d+ notnull_tbl4_lk3
-- \d+ notnull_tbl4_cld
-- \d+ notnull_tbl4_cld2
-- \d+ notnull_tbl4_cld3
-- leave these tables around for pg_upgrade testing

-- also, if a NOT NULL is dropped underneath a deferrable PK, the column
-- should still be nullable afterwards.  This mimics what pg_dump does.
CREATE TABLE notnull_tbl5 (a INTEGER CONSTRAINT a_nn NOT NULL);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'NOT NULL)' at line 12")

-----------
QUERY:

ALTER TABLE notnull_tbl5 ADD PRIMARY KEY (a) DEFERRABLE;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'DEFERRABLE' at line 1")

-----------
QUERY:

ALTER TABLE notnull_tbl5 DROP CONSTRAINT a_nn;
RESULT:
	ERROR - (1146, "Table 'test.notnull_tbl5' doesn't exist")

-----------
QUERY:

-- \d+ notnull_tbl5
DROP TABLE notnull_tbl5;
RESULT:
	ERROR - (1051, "Unknown table 'test.notnull_tbl5'")

-----------
QUERY:


-- Comments
-- Setup a low-level role to enforce non-superuser checks.
CREATE ROLE regress_constraint_comments;
RESULT:
	[]

-----------
QUERY:

SET SESSION AUTHORIZATION regress_constraint_comments;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'regress_constraint_comments' at line 1")

-----------
QUERY:


CREATE TABLE constraint_comments_tbl (a int CONSTRAINT the_constraint CHECK (a > 0));
RESULT:
	[]

-----------
QUERY:

CREATE DOMAIN constraint_comments_dom AS int CONSTRAINT the_constraint CHECK (value > 0);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'DOMAIN constraint_comments_dom AS int CONSTRAINT the_constraint CHECK (value > 0' at line 1")

-----------
QUERY:


COMMENT ON CONSTRAINT the_constraint ON constraint_comments_tbl IS 'yes, the comment';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'COMMENT ON CONSTRAINT the_constraint ON constraint_comments_tbl IS 'yes, the com' at line 1")

-----------
QUERY:

COMMENT ON CONSTRAINT the_constraint ON DOMAIN constraint_comments_dom IS 'yes, another comment';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'COMMENT ON CONSTRAINT the_constraint ON DOMAIN constraint_comments_dom IS 'yes, ' at line 1")

-----------
QUERY:


-- no such constraint
COMMENT ON CONSTRAINT no_constraint ON constraint_comments_tbl IS 'yes, the comment';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'COMMENT ON CONSTRAINT no_constraint ON constraint_comments_tbl IS 'yes, the comm' at line 2")

-----------
QUERY:

COMMENT ON CONSTRAINT no_constraint ON DOMAIN constraint_comments_dom IS 'yes, another comment';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'COMMENT ON CONSTRAINT no_constraint ON DOMAIN constraint_comments_dom IS 'yes, a' at line 1")

-----------
QUERY:


-- no such table/domain
COMMENT ON CONSTRAINT the_constraint ON no_comments_tbl IS 'bad comment';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'COMMENT ON CONSTRAINT the_constraint ON no_comments_tbl IS 'bad comment'' at line 2")

-----------
QUERY:

COMMENT ON CONSTRAINT the_constraint ON DOMAIN no_comments_dom IS 'another bad comment';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'COMMENT ON CONSTRAINT the_constraint ON DOMAIN no_comments_dom IS 'another bad c' at line 1")

-----------
QUERY:


COMMENT ON CONSTRAINT the_constraint ON constraint_comments_tbl IS NULL;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'COMMENT ON CONSTRAINT the_constraint ON constraint_comments_tbl IS NULL' at line 1")

-----------
QUERY:

COMMENT ON CONSTRAINT the_constraint ON DOMAIN constraint_comments_dom IS NULL;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'COMMENT ON CONSTRAINT the_constraint ON DOMAIN constraint_comments_dom IS NULL' at line 1")

-----------
QUERY:


-- unauthorized user
RESET SESSION AUTHORIZATION;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'SESSION AUTHORIZATION' at line 2")

-----------
QUERY:

CREATE ROLE regress_constraint_comments_noaccess;
RESULT:
	ERROR - (1470, "String 'regress_constraint_comments_noaccess' is too long for user name (should be no longer than 32)")

-----------
QUERY:

SET SESSION AUTHORIZATION regress_constraint_comments_noaccess;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'regress_constraint_comments_noaccess' at line 1")

-----------
QUERY:

COMMENT ON CONSTRAINT the_constraint ON constraint_comments_tbl IS 'no, the comment';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'COMMENT ON CONSTRAINT the_constraint ON constraint_comments_tbl IS 'no, the comm' at line 1")

-----------
QUERY:

COMMENT ON CONSTRAINT the_constraint ON DOMAIN constraint_comments_dom IS 'no, another comment';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'COMMENT ON CONSTRAINT the_constraint ON DOMAIN constraint_comments_dom IS 'no, a' at line 1")

-----------
QUERY:

RESET SESSION AUTHORIZATION;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'SESSION AUTHORIZATION' at line 1")

-----------
QUERY:


DROP TABLE constraint_comments_tbl;
RESULT:
	[]

-----------
QUERY:

DROP DOMAIN constraint_comments_dom;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'DOMAIN constraint_comments_dom' at line 1")

-----------
QUERY:


DROP ROLE regress_constraint_comments;
RESULT:
	[]

-----------
QUERY:

DROP ROLE regress_constraint_comments_noaccess;
RESULT:
	ERROR - (1470, "String 'regress_constraint_comments_noaccess' is too long for user name (should be no longer than 32)")
