
-----------
QUERY:
--
-- Test cases for COPY (INSERT/UPDATE/DELETE) TO
--
create table copydml_test (id serial, t text);
RESULT:
	[]

-----------
QUERY:

insert into copydml_test (t) values ('a');
RESULT:
	[]

-----------
QUERY:

insert into copydml_test (t) values ('b');
RESULT:
	[]

-----------
QUERY:

insert into copydml_test (t) values ('c');
RESULT:
	[]

-----------
QUERY:

insert into copydml_test (t) values ('d');
RESULT:
	[]

-----------
QUERY:

insert into copydml_test (t) values ('e');
RESULT:
	[]

-----------
QUERY:


--
-- Test COPY (insert/update/delete ...)
--
copy (insert into copydml_test (t) values ('f') returning id) to stdout;
RESULT:
	ERROR - can't execute COPY TO: use the copy_to() method instead

-----------
QUERY:

copy (update copydml_test set t = 'g' where t = 'f' returning id) to stdout;
RESULT:
	ERROR - can't execute COPY TO: use the copy_to() method instead

-----------
QUERY:

copy (delete from copydml_test where t = 'g' returning id) to stdout;
RESULT:
	ERROR - can't execute COPY TO: use the copy_to() method instead

-----------
QUERY:


--
-- Test \copy (insert/update/delete ...)
--
\copy (insert into copydml_test (t) values ('f') returning id) to stdout;
RESULT:
	ERROR - syntax error at or near "\"
LINE 6: \copy (insert into copydml_test (t) values ('f') returning i...
        ^


-----------
QUERY:

\copy (update copydml_test set t = 'g' where t = 'f' returning id) to stdout;
RESULT:
	ERROR - syntax error at or near "\"
LINE 2: \copy (update copydml_test set t = 'g' where t = 'f' returni...
        ^


-----------
QUERY:

\copy (delete from copydml_test where t = 'g' returning id) to stdout;
RESULT:
	ERROR - syntax error at or near "\"
LINE 2: \copy (delete from copydml_test where t = 'g' returning id) ...
        ^


-----------
QUERY:


-- Error cases
copy (insert into copydml_test default values) to stdout;
RESULT:
	ERROR - COPY query must have a RETURNING clause


-----------
QUERY:

copy (update copydml_test set t = 'g') to stdout;
RESULT:
	ERROR - COPY query must have a RETURNING clause


-----------
QUERY:

copy (delete from copydml_test) to stdout;
RESULT:
	ERROR - COPY query must have a RETURNING clause


-----------
QUERY:


create rule qqq as on insert to copydml_test do instead nothing;
RESULT:
	[]

-----------
QUERY:

copy (insert into copydml_test default values) to stdout;
RESULT:
	ERROR - DO INSTEAD NOTHING rules are not supported for COPY


-----------
QUERY:

drop rule qqq on copydml_test;
RESULT:
	[]

-----------
QUERY:

create rule qqq as on insert to copydml_test do also delete from copydml_test;
RESULT:
	[]

-----------
QUERY:

copy (insert into copydml_test default values) to stdout;
RESULT:
	ERROR - DO ALSO rules are not supported for the COPY


-----------
QUERY:

drop rule qqq on copydml_test;
RESULT:
	[]

-----------
QUERY:

create rule qqq as on insert to copydml_test do instead (delete from copydml_test;
RESULT:
	ERROR - syntax error at end of input
LINE 2: ...insert to copydml_test do instead (delete from copydml_test;
                                                                       ^


-----------
QUERY:
 delete from copydml_test);
RESULT:
	ERROR - syntax error at or near ")"
LINE 1:  delete from copydml_test);
                                 ^


-----------
QUERY:

copy (insert into copydml_test default values) to stdout;
RESULT:
	ERROR - COPY query must have a RETURNING clause


-----------
QUERY:

drop rule qqq on copydml_test;
RESULT:
	ERROR - rule "qqq" for relation "copydml_test" does not exist


-----------
QUERY:

create rule qqq as on insert to copydml_test where new.t <> 'f' do instead delete from copydml_test;
RESULT:
	[]

-----------
QUERY:

copy (insert into copydml_test default values) to stdout;
RESULT:
	ERROR - conditional DO INSTEAD rules are not supported for COPY


-----------
QUERY:

drop rule qqq on copydml_test;
RESULT:
	[]

-----------
QUERY:


create rule qqq as on update to copydml_test do instead nothing;
RESULT:
	[]

-----------
QUERY:

copy (update copydml_test set t = 'f') to stdout;
RESULT:
	ERROR - DO INSTEAD NOTHING rules are not supported for COPY


-----------
QUERY:

drop rule qqq on copydml_test;
RESULT:
	[]

-----------
QUERY:

create rule qqq as on update to copydml_test do also delete from copydml_test;
RESULT:
	[]

-----------
QUERY:

copy (update copydml_test set t = 'f') to stdout;
RESULT:
	ERROR - DO ALSO rules are not supported for the COPY


-----------
QUERY:

drop rule qqq on copydml_test;
RESULT:
	[]

-----------
QUERY:

create rule qqq as on update to copydml_test do instead (delete from copydml_test;
RESULT:
	ERROR - syntax error at end of input
LINE 2: ...update to copydml_test do instead (delete from copydml_test;
                                                                       ^


-----------
QUERY:
 delete from copydml_test);
RESULT:
	ERROR - syntax error at or near ")"
LINE 1:  delete from copydml_test);
                                 ^


-----------
QUERY:

copy (update copydml_test set t = 'f') to stdout;
RESULT:
	ERROR - COPY query must have a RETURNING clause


-----------
QUERY:

drop rule qqq on copydml_test;
RESULT:
	ERROR - rule "qqq" for relation "copydml_test" does not exist


-----------
QUERY:

create rule qqq as on update to copydml_test where new.t <> 'f' do instead delete from copydml_test;
RESULT:
	[]

-----------
QUERY:

copy (update copydml_test set t = 'f') to stdout;
RESULT:
	ERROR - conditional DO INSTEAD rules are not supported for COPY


-----------
QUERY:

drop rule qqq on copydml_test;
RESULT:
	[]

-----------
QUERY:


create rule qqq as on delete to copydml_test do instead nothing;
RESULT:
	[]

-----------
QUERY:

copy (delete from copydml_test) to stdout;
RESULT:
	ERROR - DO INSTEAD NOTHING rules are not supported for COPY


-----------
QUERY:

drop rule qqq on copydml_test;
RESULT:
	[]

-----------
QUERY:

create rule qqq as on delete to copydml_test do also insert into copydml_test default values;
RESULT:
	[]

-----------
QUERY:

copy (delete from copydml_test) to stdout;
RESULT:
	ERROR - DO ALSO rules are not supported for the COPY


-----------
QUERY:

drop rule qqq on copydml_test;
RESULT:
	[]

-----------
QUERY:

create rule qqq as on delete to copydml_test do instead (insert into copydml_test default values;
RESULT:
	ERROR - syntax error at end of input
LINE 2: ...ml_test do instead (insert into copydml_test default values;
                                                                       ^


-----------
QUERY:
 insert into copydml_test default values);
RESULT:
	ERROR - syntax error at or near ")"
LINE 1:  insert into copydml_test default values);
                                                ^


-----------
QUERY:

copy (delete from copydml_test) to stdout;
RESULT:
	ERROR - COPY query must have a RETURNING clause


-----------
QUERY:

drop rule qqq on copydml_test;
RESULT:
	ERROR - rule "qqq" for relation "copydml_test" does not exist


-----------
QUERY:

create rule qqq as on delete to copydml_test where old.t <> 'f' do instead insert into copydml_test default values;
RESULT:
	[]

-----------
QUERY:

copy (delete from copydml_test) to stdout;
RESULT:
	ERROR - conditional DO INSTEAD rules are not supported for COPY


-----------
QUERY:

drop rule qqq on copydml_test;
RESULT:
	[]

-----------
QUERY:


-- triggers
create function qqq_trig() returns trigger as $$
begin
if tg_op in ('INSERT', 'UPDATE') then
    raise notice '% % %', tg_when, tg_op, new.id;
    return new;
else
    raise notice '% % %', tg_when, tg_op, old.id;
    return old;
end if;
end
$$ language plpgsql;
RESULT:
	[]

-----------
QUERY:

create trigger qqqbef before insert or update or delete on copydml_test
    for each row execute procedure qqq_trig();
RESULT:
	[]

-----------
QUERY:

create trigger qqqaf after insert or update or delete on copydml_test
    for each row execute procedure qqq_trig();
RESULT:
	[]

-----------
QUERY:


copy (insert into copydml_test (t) values ('f') returning id) to stdout;
RESULT:
	ERROR - can't execute COPY TO: use the copy_to() method instead

-----------
QUERY:

copy (update copydml_test set t = 'g' where t = 'f' returning id) to stdout;
RESULT:
	ERROR - can't execute COPY TO: use the copy_to() method instead

-----------
QUERY:

copy (delete from copydml_test where t = 'g' returning id) to stdout;
RESULT:
	ERROR - can't execute COPY TO: use the copy_to() method instead

-----------
QUERY:


drop table copydml_test;
RESULT:
	[]

-----------
QUERY:

drop function qqq_trig();
RESULT:
	[]
