
-----------
QUERY:
CALL nonexistent();
RESULT:
	ERROR - Catalog Error: Table Function with name nonexistent does not exist!
Did you mean "unnest"?

-----------
QUERY:
  -- error
CALL random();
RESULT:
	ERROR - Catalog Error: Table Function with name random does not exist!
Did you mean "range"?

-----------
QUERY:
  -- error

CREATE FUNCTION cp_testfunc1(a int) RETURNS int LANGUAGE SQL AS $$ SELECT a $$;
RESULT:
	ERROR - Parser Error: syntax error at or near "int"

-----------
QUERY:


CREATE TABLE cp_test (a int, b text);
RESULT:
	[]

-----------
QUERY:


CREATE PROCEDURE ptest1(x text)
LANGUAGE SQL
AS $$
INSERT INTO cp_test VALUES (1, x);
$$;
RESULT:
	ERROR - Parser Error: syntax error at or near "PROCEDURE"

-----------
QUERY:


-- \df ptest1
SELECT pg_get_functiondef('ptest1'::regproc);
RESULT:
	ERROR - Catalog Error: Scalar Function with name pg_get_functiondef does not exist!
Did you mean "pg_get_constraintdef"?

-----------
QUERY:


-- show only normal functions
-- \dfn public.*test*1

-- show only procedures
-- \dfp public.*test*1

SELECT ptest1('x');
RESULT:
	ERROR - Catalog Error: Scalar Function with name ptest1 does not exist!
Did you mean "least"?

-----------
QUERY:
  -- error
CALL ptest1('a');
RESULT:
	ERROR - Catalog Error: Table Function with name ptest1 does not exist!
Did you mean "repeat"?

-----------
QUERY:
  -- ok
CALL ptest1('xy' || 'zzy');
RESULT:
	ERROR - Catalog Error: Table Function with name ptest1 does not exist!
Did you mean "repeat"?

-----------
QUERY:
  -- ok, constant-folded arg
CALL ptest1(substring(random()::numeric(20,15)::text, 1, 1));
RESULT:
	ERROR - Catalog Error: Table Function with name ptest1 does not exist!
Did you mean "repeat"?

-----------
QUERY:
  -- ok, volatile arg

SELECT * FROM cp_test ORDER BY b COLLATE "C";
RESULT:
	[]

-----------
QUERY:



-- SQL-standard body
CREATE PROCEDURE ptest1s(x text)
LANGUAGE SQL
BEGIN ATOMIC
  INSERT INTO cp_test VALUES (1, x);
RESULT:
	ERROR - Parser Error: syntax error at or near "PROCEDURE"

-----------
QUERY:

END;
RESULT:
	ERROR - TransactionContext Error: cannot commit - no transaction is active

-----------
QUERY:


-- \df ptest1s
SELECT pg_get_functiondef('ptest1s'::regproc);
RESULT:
	ERROR - Catalog Error: Scalar Function with name pg_get_functiondef does not exist!
Did you mean "pg_get_constraintdef"?

-----------
QUERY:


CALL ptest1s('b');
RESULT:
	ERROR - Catalog Error: Table Function with name ptest1s does not exist!
Did you mean "repeat"?

-----------
QUERY:


SELECT * FROM cp_test ORDER BY b COLLATE "C";
RESULT:
	[]

-----------
QUERY:


-- utility functions currently not supported here
CREATE PROCEDURE ptestx()
LANGUAGE SQL
BEGIN ATOMIC
  CREATE TABLE x (a int);
RESULT:
	ERROR - Parser Error: syntax error at or near "PROCEDURE"

-----------
QUERY:

END;
RESULT:
	ERROR - TransactionContext Error: cannot commit - no transaction is active

-----------
QUERY:



CREATE PROCEDURE ptest2()
LANGUAGE SQL
AS $$
SELECT 5;
$$;
RESULT:
	ERROR - Parser Error: syntax error at or near "PROCEDURE"

-----------
QUERY:


CALL ptest2();
RESULT:
	ERROR - Catalog Error: Table Function with name ptest2 does not exist!
Did you mean "repeat"?

-----------
QUERY:



-- nested CALL
TRUNCATE cp_test;
RESULT:
	[]

-----------
QUERY:


CREATE PROCEDURE ptest3(y text)
LANGUAGE SQL
AS $$
CALL ptest1(y);
CALL ptest1($1);
$$;
RESULT:
	ERROR - Parser Error: syntax error at or near "PROCEDURE"

-----------
QUERY:


CALL ptest3('b');
RESULT:
	ERROR - Catalog Error: Table Function with name ptest3 does not exist!
Did you mean "repeat"?

-----------
QUERY:


SELECT * FROM cp_test;
RESULT:
	[]

-----------
QUERY:



-- output arguments

CREATE PROCEDURE ptest4a(INOUT a int, INOUT b int)
LANGUAGE SQL
AS $$
SELECT 1, 2;
$$;
RESULT:
	ERROR - Parser Error: syntax error at or near "PROCEDURE"

-----------
QUERY:


CALL ptest4a(NULL, NULL);
RESULT:
	ERROR - Catalog Error: Table Function with name ptest4a does not exist!
Did you mean "repeat"?

-----------
QUERY:


CREATE PROCEDURE ptest4b(INOUT b int, INOUT a int)
LANGUAGE SQL
AS $$
CALL ptest4a(a, b);  -- error, not supported
$$;
RESULT:
	ERROR - Parser Error: syntax error at or near "PROCEDURE"

-----------
QUERY:


-- we used to get confused by a single output argument that is composite
CREATE PROCEDURE ptest4c(INOUT comp int8_tbl)
LANGUAGE SQL
AS $$
SELECT ROW(1, 2);
$$;
RESULT:
	ERROR - Parser Error: syntax error at or near "PROCEDURE"

-----------
QUERY:


CALL ptest4c(NULL);
RESULT:
	ERROR - Catalog Error: Table Function with name ptest4c does not exist!
Did you mean "repeat"?

-----------
QUERY:


DROP PROCEDURE ptest4a, ptest4c;
RESULT:
	ERROR - Parser Error: syntax error at or near "PROCEDURE"

-----------
QUERY:



-- named and default parameters

CREATE OR REPLACE PROCEDURE ptest5(a int, b text, c int default 100)
LANGUAGE SQL
AS $$
INSERT INTO cp_test VALUES(a, b);
INSERT INTO cp_test VALUES(c, b);
$$;
RESULT:
	ERROR - Parser Error: syntax error at or near "PROCEDURE"

-----------
QUERY:


TRUNCATE cp_test;
RESULT:
	[]

-----------
QUERY:


CALL ptest5(10, 'Hello', 20);
RESULT:
	ERROR - Catalog Error: Table Function with name ptest5 does not exist!
Did you mean "repeat"?

-----------
QUERY:

CALL ptest5(10, 'Hello');
RESULT:
	ERROR - Catalog Error: Table Function with name ptest5 does not exist!
Did you mean "repeat"?

-----------
QUERY:

CALL ptest5(10, b => 'Hello');
RESULT:
	ERROR - Catalog Error: Table Function with name ptest5 does not exist!
Did you mean "repeat"?

-----------
QUERY:

CALL ptest5(b => 'Hello', a => 10);
RESULT:
	ERROR - Catalog Error: Table Function with name ptest5 does not exist!
Did you mean "repeat"?

-----------
QUERY:


SELECT * FROM cp_test;
RESULT:
	[]

-----------
QUERY:



-- polymorphic types

CREATE PROCEDURE ptest6(a int, b anyelement)
LANGUAGE SQL
AS $$
SELECT NULL::int;
$$;
RESULT:
	ERROR - Parser Error: syntax error at or near "PROCEDURE"

-----------
QUERY:


CALL ptest6(1, 2);
RESULT:
	ERROR - Catalog Error: Table Function with name ptest6 does not exist!
Did you mean "repeat"?

-----------
QUERY:



-- collation assignment

CREATE PROCEDURE ptest7(a text, b text)
LANGUAGE SQL
AS $$
SELECT a = b;
$$;
RESULT:
	ERROR - Parser Error: syntax error at or near "PROCEDURE"

-----------
QUERY:


CALL ptest7(least('a', 'b'), 'a');
RESULT:
	ERROR - Catalog Error: Table Function with name ptest7 does not exist!
Did you mean "repeat"?

-----------
QUERY:



-- empty body
CREATE PROCEDURE ptest8(x text)
BEGIN ATOMIC
END;
RESULT:
	ERROR - Parser Error: syntax error at or near "PROCEDURE"

-----------
QUERY:


-- \df ptest8
SELECT pg_get_functiondef('ptest8'::regproc);
RESULT:
	ERROR - Catalog Error: Scalar Function with name pg_get_functiondef does not exist!
Did you mean "pg_get_constraintdef"?

-----------
QUERY:

CALL ptest8('');
RESULT:
	ERROR - Catalog Error: Table Function with name ptest8 does not exist!
Did you mean "repeat"?

-----------
QUERY:



-- OUT parameters

CREATE PROCEDURE ptest9(OUT a int)
LANGUAGE SQL
AS $$
INSERT INTO cp_test VALUES (1, 'a');
SELECT 1;
$$;
RESULT:
	ERROR - Parser Error: syntax error at or near "PROCEDURE"

-----------
QUERY:


-- standard way to do a call:
CALL ptest9(NULL);
RESULT:
	ERROR - Catalog Error: Table Function with name ptest9 does not exist!
Did you mean "repeat"?

-----------
QUERY:

-- you can write an expression, but it/* REPLACED */''s not evaluated
CALL ptest9(1/0);
RESULT:
	ERROR - Catalog Error: Table Function with name ptest9 does not exist!
Did you mean "repeat"?

-----------
QUERY:
  -- no error
-- ... and it had better match the type of the parameter
CALL ptest9(1./0.);
RESULT:
	ERROR - Catalog Error: Table Function with name ptest9 does not exist!
Did you mean "repeat"?

-----------
QUERY:
  -- error

-- check named-parameter matching
CREATE PROCEDURE ptest10(OUT a int, IN b int, IN c int)
LANGUAGE SQL AS $$ SELECT b - c $$;
RESULT:
	ERROR - Parser Error: syntax error at or near "PROCEDURE"

-----------
QUERY:


CALL ptest10(null, 7, 4);
RESULT:
	ERROR - Catalog Error: Table Function with name ptest10 does not exist!
Did you mean "repeat"?

-----------
QUERY:

CALL ptest10(a => null, b => 8, c => 2);
RESULT:
	ERROR - Catalog Error: Table Function with name ptest10 does not exist!
Did you mean "repeat"?

-----------
QUERY:

CALL ptest10(null, 7, c => 2);
RESULT:
	ERROR - Catalog Error: Table Function with name ptest10 does not exist!
Did you mean "repeat"?

-----------
QUERY:

CALL ptest10(null, c => 4, b => 11);
RESULT:
	ERROR - Catalog Error: Table Function with name ptest10 does not exist!
Did you mean "repeat"?

-----------
QUERY:

CALL ptest10(b => 8, c => 2, a => 0);
RESULT:
	ERROR - Catalog Error: Table Function with name ptest10 does not exist!
Did you mean "repeat"?

-----------
QUERY:


CREATE PROCEDURE ptest11(a OUT int, VARIADIC b int[]) LANGUAGE SQL
  AS $$ SELECT b[1] + b[2] $$;
RESULT:
	ERROR - Parser Error: syntax error at or near "PROCEDURE"

-----------
QUERY:


CALL ptest11(null, 11, 12, 13);
RESULT:
	ERROR - Catalog Error: Table Function with name ptest11 does not exist!
Did you mean "repeat"?

-----------
QUERY:


-- check resolution of ambiguous DROP commands

CREATE PROCEDURE ptest10(IN a int, IN b int, IN c int)
LANGUAGE SQL AS $$ SELECT a + b - c $$;
RESULT:
	ERROR - Parser Error: syntax error at or near "PROCEDURE"

-----------
QUERY:


-- \df ptest10

drop procedure ptest10;
RESULT:
	ERROR - Parser Error: syntax error at or near "procedure"

-----------
QUERY:
  -- fail
drop procedure ptest10(int, int, int);
RESULT:
	ERROR - Parser Error: syntax error at or near "procedure"

-----------
QUERY:
  -- fail
begin;
RESULT:
	[]

-----------
QUERY:

drop procedure ptest10(out int, int, int);
RESULT:
	ERROR - Parser Error: syntax error at or near "procedure"

-----------
QUERY:

-- \df ptest10
drop procedure ptest10(int, int, int);
RESULT:
	ERROR - Parser Error: syntax error at or near "procedure"

-----------
QUERY:
  -- now this would work
rollback;
RESULT:
	[]

-----------
QUERY:

begin;
RESULT:
	[]

-----------
QUERY:

drop procedure ptest10(in int, int, int);
RESULT:
	ERROR - Parser Error: syntax error at or near "procedure"

-----------
QUERY:

-- \df ptest10
drop procedure ptest10(int, int, int);
RESULT:
	ERROR - Parser Error: syntax error at or near "procedure"

-----------
QUERY:
  -- now this would work
rollback;
RESULT:
	[]

-----------
QUERY:


-- various error cases

CALL version();
RESULT:
	ERROR - Catalog Error: Table Function with name version does not exist!
Did you mean "pragma_version"?

-----------
QUERY:
  -- error: not a procedure
CALL sum(1);
RESULT:
	ERROR - Catalog Error: Table Function with name sum does not exist!
Did you mean "summary"?

-----------
QUERY:
  -- error: not a procedure

CREATE PROCEDURE ptestx() LANGUAGE SQL WINDOW AS $$ INSERT INTO cp_test VALUES (1, 'a') $$;
RESULT:
	ERROR - Parser Error: syntax error at or near "PROCEDURE"

-----------
QUERY:

CREATE PROCEDURE ptestx() LANGUAGE SQL STRICT AS $$ INSERT INTO cp_test VALUES (1, 'a') $$;
RESULT:
	ERROR - Parser Error: syntax error at or near "PROCEDURE"

-----------
QUERY:

CREATE PROCEDURE ptestx(a VARIADIC int[], b OUT int) LANGUAGE SQL
  AS $$ SELECT a[1] $$;
RESULT:
	ERROR - Parser Error: syntax error at or near "PROCEDURE"

-----------
QUERY:

CREATE PROCEDURE ptestx(a int DEFAULT 42, b OUT int) LANGUAGE SQL
  AS $$ SELECT a $$;
RESULT:
	ERROR - Parser Error: syntax error at or near "PROCEDURE"

-----------
QUERY:


ALTER PROCEDURE ptest1(text) STRICT;
RESULT:
	ERROR - Parser Error: syntax error at or near "PROCEDURE"

-----------
QUERY:

ALTER FUNCTION ptest1(text) VOLATILE;
RESULT:
	ERROR - Parser Error: syntax error at or near "FUNCTION"

-----------
QUERY:
  -- error: not a function
ALTER PROCEDURE cp_testfunc1(int) VOLATILE;
RESULT:
	ERROR - Parser Error: syntax error at or near "PROCEDURE"

-----------
QUERY:
  -- error: not a procedure
ALTER PROCEDURE nonexistent() VOLATILE;
RESULT:
	ERROR - Parser Error: syntax error at or near "PROCEDURE"

-----------
QUERY:


DROP FUNCTION ptest1(text);
RESULT:
	ERROR - Parser Error: syntax error at or near "("

-----------
QUERY:
  -- error: not a function
DROP PROCEDURE cp_testfunc1(int);
RESULT:
	ERROR - Parser Error: syntax error at or near "PROCEDURE"

-----------
QUERY:
  -- error: not a procedure
DROP PROCEDURE nonexistent();
RESULT:
	ERROR - Parser Error: syntax error at or near "PROCEDURE"

-----------
QUERY:



-- privileges

CREATE USER regress_cp_user1;
RESULT:
	ERROR - Parser Error: syntax error at or near "USER"

-----------
QUERY:

GRANT INSERT ON cp_test TO regress_cp_user1;
RESULT:
	ERROR - Parser Error: syntax error at or near "GRANT"

-----------
QUERY:

REVOKE EXECUTE ON PROCEDURE ptest1(text) FROM PUBLIC;
RESULT:
	ERROR - Parser Error: syntax error at or near "REVOKE"

-----------
QUERY:

SET ROLE regress_cp_user1;
RESULT:
	ERROR - Parser Error: syntax error at or near "regress_cp_user1"

-----------
QUERY:

CALL ptest1('a');
RESULT:
	ERROR - Catalog Error: Table Function with name ptest1 does not exist!
Did you mean "repeat"?

-----------
QUERY:
  -- error
RESET ROLE;
RESULT:
	ERROR - Catalog Error: unrecognized configuration parameter "ROLE"

Did you mean: "threads", "Calendar", "home_directory", "errors_as_json", "profile_output"

-----------
QUERY:

GRANT EXECUTE ON PROCEDURE ptest1(text) TO regress_cp_user1;
RESULT:
	ERROR - Parser Error: syntax error at or near "GRANT"

-----------
QUERY:

SET ROLE regress_cp_user1;
RESULT:
	ERROR - Parser Error: syntax error at or near "regress_cp_user1"

-----------
QUERY:

CALL ptest1('a');
RESULT:
	ERROR - Catalog Error: Table Function with name ptest1 does not exist!
Did you mean "repeat"?

-----------
QUERY:
  -- ok
RESET ROLE;
RESULT:
	ERROR - Catalog Error: unrecognized configuration parameter "ROLE"

Did you mean: "threads", "Calendar", "home_directory", "errors_as_json", "profile_output"

-----------
QUERY:



-- ROUTINE syntax

ALTER ROUTINE cp_testfunc1(int) RENAME TO cp_testfunc1a;
RESULT:
	ERROR - Parser Error: syntax error at or near "ROUTINE"

-----------
QUERY:

ALTER ROUTINE cp_testfunc1a RENAME TO cp_testfunc1;
RESULT:
	ERROR - Parser Error: syntax error at or near "ROUTINE"

-----------
QUERY:


ALTER ROUTINE ptest1(text) RENAME TO ptest1a;
RESULT:
	ERROR - Parser Error: syntax error at or near "ROUTINE"

-----------
QUERY:

ALTER ROUTINE ptest1a RENAME TO ptest1;
RESULT:
	ERROR - Parser Error: syntax error at or near "ROUTINE"

-----------
QUERY:


DROP ROUTINE cp_testfunc1(int);
RESULT:
	ERROR - Parser Error: syntax error at or near "ROUTINE"

-----------
QUERY:



-- cleanup

DROP PROCEDURE ptest1;
RESULT:
	ERROR - Parser Error: syntax error at or near "PROCEDURE"

-----------
QUERY:

DROP PROCEDURE ptest1s;
RESULT:
	ERROR - Parser Error: syntax error at or near "PROCEDURE"

-----------
QUERY:

DROP PROCEDURE ptest2;
RESULT:
	ERROR - Parser Error: syntax error at or near "PROCEDURE"

-----------
QUERY:


DROP TABLE cp_test;
RESULT:
	[]

-----------
QUERY:


DROP USER regress_cp_user1;
RESULT:
	ERROR - Parser Error: syntax error at or near "USER"
