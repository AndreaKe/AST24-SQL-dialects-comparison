
-----------
QUERY:
--
-- CREATE_TYPE
--

-- directory path and dlsuffix are passed to us in environment variables
-- \getenv libdir '/home/keuscha/Documents/FS2024/AST/project/postgresql/src/test/regress'
-- \getenv dlsuffix '.so'

-- \set regresslib /* REPLACED */'/home/keuscha/Documents/FS2024/AST/project/postgresql/src/test/regress' '/regress' /* REPLACED */'.so'

--
-- Test the /* REPLACED */''old style/* REPLACED */'' approach of making the I/O functions first,
-- with no explicit shell type creation.
--
CREATE FUNCTION widget_in(cstring)
   RETURNS widget
   AS /* REPLACED */'/home/keuscha/Documents/FS2024/AST/project/postgresql/src/test/regress/regress.so'
   LANGUAGE C STRICT IMMUTABLE;
RESULT:
	ERROR - Parser Error: syntax error at or near "RETURNS"

-----------
QUERY:


CREATE FUNCTION widget_out(widget)
   RETURNS cstring
   AS /* REPLACED */'/home/keuscha/Documents/FS2024/AST/project/postgresql/src/test/regress/regress.so'
   LANGUAGE C STRICT IMMUTABLE;
RESULT:
	ERROR - Parser Error: syntax error at or near "RETURNS"

-----------
QUERY:


CREATE FUNCTION int44in(cstring)
   RETURNS city_budget
   AS /* REPLACED */'/home/keuscha/Documents/FS2024/AST/project/postgresql/src/test/regress/regress.so'
   LANGUAGE C STRICT IMMUTABLE;
RESULT:
	ERROR - Parser Error: syntax error at or near "RETURNS"

-----------
QUERY:


CREATE FUNCTION int44out(city_budget)
   RETURNS cstring
   AS /* REPLACED */'/home/keuscha/Documents/FS2024/AST/project/postgresql/src/test/regress/regress.so'
   LANGUAGE C STRICT IMMUTABLE;
RESULT:
	ERROR - Parser Error: syntax error at or near "RETURNS"

-----------
QUERY:


CREATE TYPE widget (
   internallength = 24,
   input = widget_in,
   output = widget_out,
   typmod_in = numerictypmodin,
   typmod_out = numerictypmodout,
   alignment = double
);
RESULT:
	ERROR - Parser Error: syntax error at or near "("

-----------
QUERY:


CREATE TYPE city_budget (
   internallength = 16,
   input = int44in,
   output = int44out,
   element = int4,
   category = 'x',   -- just to verify the system will take it
   preferred = true  -- ditto
);
RESULT:
	ERROR - Parser Error: syntax error at or near "("

-----------
QUERY:


-- Test creation and destruction of shell types
CREATE TYPE shell;
RESULT:
	ERROR - Parser Error: syntax error at or near ";"

-----------
QUERY:

CREATE TYPE shell;
RESULT:
	ERROR - Parser Error: syntax error at or near ";"

-----------
QUERY:
   -- fail, type already present
DROP TYPE shell;
RESULT:
	ERROR - Catalog Error: Type with name shell does not exist!
Did you mean "null"?

-----------
QUERY:

DROP TYPE shell;
RESULT:
	ERROR - Catalog Error: Type with name shell does not exist!
Did you mean "null"?

-----------
QUERY:
     -- fail, type not exist

-- also, let/* REPLACED */''s leave one around for purposes of pg_dump testing
CREATE TYPE myshell;
RESULT:
	ERROR - Parser Error: syntax error at or near ";"

-----------
QUERY:


--
-- Test type-related default values (broken in releases before PG 7.2)
--
-- This part of the test also exercises the /* REPLACED */''new style/* REPLACED */'' approach of making
-- a shell type and then filling it in.
--
CREATE TYPE int42;
RESULT:
	ERROR - Parser Error: syntax error at or near ";"

-----------
QUERY:

CREATE TYPE text_w_default;
RESULT:
	ERROR - Parser Error: syntax error at or near ";"

-----------
QUERY:


-- Make dummy I/O routines using the existing internal support for int4, text
CREATE FUNCTION int42_in(cstring)
   RETURNS int42
   AS 'int4in'
   LANGUAGE internal STRICT IMMUTABLE;
RESULT:
	ERROR - Parser Error: syntax error at or near "RETURNS"

-----------
QUERY:

CREATE FUNCTION int42_out(int42)
   RETURNS cstring
   AS 'int4out'
   LANGUAGE internal STRICT IMMUTABLE;
RESULT:
	ERROR - Parser Error: syntax error at or near "RETURNS"

-----------
QUERY:

CREATE FUNCTION text_w_default_in(cstring)
   RETURNS text_w_default
   AS 'textin'
   LANGUAGE internal STRICT IMMUTABLE;
RESULT:
	ERROR - Parser Error: syntax error at or near "RETURNS"

-----------
QUERY:

CREATE FUNCTION text_w_default_out(text_w_default)
   RETURNS cstring
   AS 'textout'
   LANGUAGE internal STRICT IMMUTABLE;
RESULT:
	ERROR - Parser Error: syntax error at or near "RETURNS"

-----------
QUERY:


CREATE TYPE int42 (
   internallength = 4,
   input = int42_in,
   output = int42_out,
   alignment = int4,
   default = 42,
   passedbyvalue
);
RESULT:
	ERROR - Parser Error: syntax error at or near "("

-----------
QUERY:


CREATE TYPE text_w_default (
   internallength = variable,
   input = text_w_default_in,
   output = text_w_default_out,
   alignment = int4,
   default = 'zippo'
);
RESULT:
	ERROR - Parser Error: syntax error at or near "("

-----------
QUERY:


CREATE TABLE default_test (f1 text_w_default, f2 int42);
RESULT:
	ERROR - Catalog Error: Type with name text_w_default does not exist!
Did you mean "text"?

-----------
QUERY:


INSERT INTO default_test DEFAULT VALUES;
RESULT:
	ERROR - Catalog Error: Table with name default_test does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:


SELECT * FROM default_test;
RESULT:
	ERROR - Catalog Error: Table with name default_test does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:


-- We need a shell type to test some CREATE TYPE failure cases with
CREATE TYPE bogus_type;
RESULT:
	ERROR - Parser Error: syntax error at or near ";"

-----------
QUERY:


-- invalid: non-lowercase quoted identifiers
CREATE TYPE bogus_type (
	"Internallength" = 4,
	"Input" = int42_in,
	"Output" = int42_out,
	"Alignment" = int4,
	"Default" = 42,
	"Passedbyvalue"
);
RESULT:
	ERROR - Parser Error: syntax error at or near "("

-----------
QUERY:


-- invalid: input/output function incompatibility
CREATE TYPE bogus_type (INPUT = array_in,
    OUTPUT = array_out,
    ELEMENT = int,
    INTERNALLENGTH = 32);
RESULT:
	ERROR - Parser Error: syntax error at or near "("

-----------
QUERY:


DROP TYPE bogus_type;
RESULT:
	ERROR - Catalog Error: Type with name bogus_type does not exist!
Did you mean "bit"?

-----------
QUERY:


-- It no longer is possible to issue CREATE TYPE without making a shell first
CREATE TYPE bogus_type (INPUT = array_in,
    OUTPUT = array_out,
    ELEMENT = int,
    INTERNALLENGTH = 32);
RESULT:
	ERROR - Parser Error: syntax error at or near "("

-----------
QUERY:


-- Test stand-alone composite type

CREATE TYPE default_test_row AS (f1 text_w_default, f2 int42);
RESULT:
	ERROR - Parser Error: syntax error at or near "("

-----------
QUERY:


CREATE FUNCTION get_default_test() RETURNS SETOF default_test_row AS '
  SELECT * FROM default_test;
RESULT:
	ERROR - Parser Error: syntax error at or near "RETURNS"

-----------
QUERY:

' LANGUAGE SQL;
RESULT:
	ERROR - Parser Error: unterminated quoted string at or near "' LANGUAGE SQL;"

-----------
QUERY:


SELECT * FROM get_default_test();
RESULT:
	ERROR - Catalog Error: Table Function with name get_default_test does not exist!
Did you mean "test_all_types"?

-----------
QUERY:


-- Test comments
COMMENT ON TYPE bad IS 'bad comment';
RESULT:
	ERROR - Catalog Error: Type with name bad does not exist!
Did you mean "bit"?

-----------
QUERY:

COMMENT ON TYPE default_test_row IS 'good comment';
RESULT:
	ERROR - Catalog Error: Type with name default_test_row does not exist!
Did you mean "date"?

-----------
QUERY:

COMMENT ON TYPE default_test_row IS NULL;
RESULT:
	ERROR - Catalog Error: Type with name default_test_row does not exist!
Did you mean "date"?

-----------
QUERY:

COMMENT ON COLUMN default_test_row.nope IS 'bad comment';
RESULT:
	ERROR - Catalog Error: Table with name default_test_row does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:

COMMENT ON COLUMN default_test_row.f1 IS 'good comment';
RESULT:
	ERROR - Catalog Error: Table with name default_test_row does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:

COMMENT ON COLUMN default_test_row.f1 IS NULL;
RESULT:
	ERROR - Catalog Error: Table with name default_test_row does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:


-- Check shell type create for existing types
CREATE TYPE text_w_default;
RESULT:
	ERROR - Parser Error: syntax error at or near ";"

-----------
QUERY:
		-- should fail

DROP TYPE default_test_row CASCADE;
RESULT:
	ERROR - Catalog Error: Type with name default_test_row does not exist!
Did you mean "date"?

-----------
QUERY:


DROP TABLE default_test;
RESULT:
	ERROR - Catalog Error: Table with name default_test does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:


-- Check dependencies are established when creating a new type
CREATE TYPE base_type;
RESULT:
	ERROR - Parser Error: syntax error at or near ";"

-----------
QUERY:

CREATE FUNCTION base_fn_in(cstring) RETURNS base_type AS 'boolin'
    LANGUAGE internal IMMUTABLE STRICT;
RESULT:
	ERROR - Parser Error: syntax error at or near "RETURNS"

-----------
QUERY:

CREATE FUNCTION base_fn_out(base_type) RETURNS cstring AS 'boolout'
    LANGUAGE internal IMMUTABLE STRICT;
RESULT:
	ERROR - Parser Error: syntax error at or near "RETURNS"

-----------
QUERY:

CREATE TYPE base_type(INPUT = base_fn_in, OUTPUT = base_fn_out);
RESULT:
	ERROR - Parser Error: syntax error at or near "("

-----------
QUERY:

DROP FUNCTION base_fn_in(cstring);
RESULT:
	ERROR - Parser Error: syntax error at or near "("

-----------
QUERY:
 -- error
DROP FUNCTION base_fn_out(base_type);
RESULT:
	ERROR - Parser Error: syntax error at or near "("

-----------
QUERY:
 -- error
DROP TYPE base_type;
RESULT:
	ERROR - Catalog Error: Type with name base_type does not exist!
Did you mean "date"?

-----------
QUERY:
 -- error
DROP TYPE base_type CASCADE;
RESULT:
	ERROR - Catalog Error: Type with name base_type does not exist!
Did you mean "date"?

-----------
QUERY:


-- Check usage of typmod with a user-defined type
-- (we have borrowed numeric/* REPLACED */''s typmod functions)

CREATE TEMP TABLE mytab (foo widget(42,13,7));
RESULT:
	ERROR - Parser Error: A maximum of two modifiers is supported

-----------
QUERY:
     -- should fail
CREATE TEMP TABLE mytab (foo widget(42,13));
RESULT:
	ERROR - Catalog Error: Type with name widget does not exist!
Did you mean "bit"?

-----------
QUERY:


SELECT format_type(atttypid,atttypmod) FROM pg_attribute
WHERE attrelid = 'mytab'::regclass AND attnum > 0;
RESULT:
	ERROR - Catalog Error: Type with name regclass does not exist!
Did you mean "real"?

-----------
QUERY:


-- might as well exercise the widget type while we/* REPLACED */''re here
INSERT INTO mytab VALUES ('(1,2,3)'), ('(-44,5.5,12)');
RESULT:
	ERROR - Catalog Error: Table with name mytab does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:

TABLE mytab;
RESULT:
	ERROR - Catalog Error: Table with name mytab does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:


-- and test format_type() a bit more, too
select format_type('varchar'::regtype, 42);
RESULT:
	ERROR - Catalog Error: Type with name regtype does not exist!
Did you mean "date"?

-----------
QUERY:

select format_type('bpchar'::regtype, null);
RESULT:
	ERROR - Catalog Error: Type with name regtype does not exist!
Did you mean "date"?

-----------
QUERY:

-- this behavior difference is intentional
select format_type('bpchar'::regtype, -1);
RESULT:
	ERROR - Catalog Error: Type with name regtype does not exist!
Did you mean "date"?

-----------
QUERY:


-- Test non-error-throwing APIs using widget, which still throws errors
SELECT pg_input_is_valid('(1,2,3)', 'widget');
RESULT:
	ERROR - Catalog Error: Scalar Function with name pg_input_is_valid does not exist!
Did you mean "json_valid"?

-----------
QUERY:

SELECT pg_input_is_valid('(1,2)', 'widget');
RESULT:
	ERROR - Catalog Error: Scalar Function with name pg_input_is_valid does not exist!
Did you mean "json_valid"?

-----------
QUERY:
  -- hard error expected
SELECT pg_input_is_valid('{"(1,2,3)"}', 'widget[]');
RESULT:
	ERROR - Catalog Error: Scalar Function with name pg_input_is_valid does not exist!
Did you mean "json_valid"?

-----------
QUERY:

SELECT pg_input_is_valid('{"(1,2)"}', 'widget[]');
RESULT:
	ERROR - Catalog Error: Scalar Function with name pg_input_is_valid does not exist!
Did you mean "json_valid"?

-----------
QUERY:
  -- hard error expected
SELECT pg_input_is_valid('("(1,2,3)")', 'mytab');
RESULT:
	ERROR - Catalog Error: Scalar Function with name pg_input_is_valid does not exist!
Did you mean "json_valid"?

-----------
QUERY:

SELECT pg_input_is_valid('("(1,2)")', 'mytab');
RESULT:
	ERROR - Catalog Error: Scalar Function with name pg_input_is_valid does not exist!
Did you mean "json_valid"?

-----------
QUERY:
  -- hard error expected

-- Test creation of an operator over a user-defined type

CREATE FUNCTION pt_in_widget(point, widget)
   RETURNS bool
   AS /* REPLACED */'/home/keuscha/Documents/FS2024/AST/project/postgresql/src/test/regress/regress.so'
   LANGUAGE C STRICT;
RESULT:
	ERROR - Parser Error: syntax error at or near "RETURNS"

-----------
QUERY:


CREATE OPERATOR <% (
   leftarg = point,
   rightarg = widget,
   procedure = pt_in_widget,
   commutator = >% ,
   negator = >=%
);
RESULT:
	ERROR - Parser Error: syntax error at or near "OPERATOR"

-----------
QUERY:


SELECT point '(1,2)' <% widget '(0,0,3)' AS t,
       point '(1,2)' <% widget '(0,0,1)' AS f;
RESULT:
	ERROR - Catalog Error: Scalar Function with name <% does not exist!
Did you mean "%"?

-----------
QUERY:


-- exercise city_budget type
CREATE TABLE city (
	name		name,
	location 	box,
	budget 		city_budget
);
RESULT:
	ERROR - Catalog Error: Type with name name does not exist!
Did you mean "date"?

-----------
QUERY:


INSERT INTO city VALUES
('Podunk', '(1,2),(3,4)', '100,127,1000'),
('Gotham', '(1000,34),(1100,334)', '123456,127,-1000,6789');
RESULT:
	ERROR - Catalog Error: Table with name city does not exist!
Did you mean "pg_type"?

-----------
QUERY:


TABLE city;
RESULT:
	ERROR - Catalog Error: Table with name city does not exist!
Did you mean "pg_type"?

-----------
QUERY:


--
-- Test CREATE/ALTER TYPE using a type that/* REPLACED */''s compatible with varchar,
-- so we can re-use those support functions
--
CREATE TYPE myvarchar;
RESULT:
	ERROR - Parser Error: syntax error at or near ";"

-----------
QUERY:


CREATE FUNCTION myvarcharin(cstring, oid, integer) RETURNS myvarchar
LANGUAGE internal IMMUTABLE PARALLEL SAFE STRICT AS 'varcharin';
RESULT:
	ERROR - Parser Error: syntax error at or near "RETURNS"

-----------
QUERY:


CREATE FUNCTION myvarcharout(myvarchar) RETURNS cstring
LANGUAGE internal IMMUTABLE PARALLEL SAFE STRICT AS 'varcharout';
RESULT:
	ERROR - Parser Error: syntax error at or near "RETURNS"

-----------
QUERY:


CREATE FUNCTION myvarcharsend(myvarchar) RETURNS bytea
LANGUAGE internal STABLE PARALLEL SAFE STRICT AS 'varcharsend';
RESULT:
	ERROR - Parser Error: syntax error at or near "RETURNS"

-----------
QUERY:


CREATE FUNCTION myvarcharrecv(internal, oid, integer) RETURNS myvarchar
LANGUAGE internal STABLE PARALLEL SAFE STRICT AS 'varcharrecv';
RESULT:
	ERROR - Parser Error: syntax error at or near "RETURNS"

-----------
QUERY:


-- fail, it/* REPLACED */''s still a shell:
ALTER TYPE myvarchar SET (storage = extended);
RESULT:
	ERROR - Parser Error: syntax error at or near "TYPE"

-----------
QUERY:


CREATE TYPE myvarchar (
    input = myvarcharin,
    output = myvarcharout,
    alignment = integer,
    storage = main
);
RESULT:
	ERROR - Parser Error: syntax error at or near "("

-----------
QUERY:


-- want to check updating of a domain over the target type, too
CREATE DOMAIN myvarchardom AS myvarchar;
RESULT:
	ERROR - Parser Error: syntax error at or near "DOMAIN"

-----------
QUERY:


ALTER TYPE myvarchar SET (storage = plain);
RESULT:
	ERROR - Parser Error: syntax error at or near "TYPE"

-----------
QUERY:
  -- not allowed

ALTER TYPE myvarchar SET (storage = extended);
RESULT:
	ERROR - Parser Error: syntax error at or near "TYPE"

-----------
QUERY:


ALTER TYPE myvarchar SET (
    send = myvarcharsend,
    receive = myvarcharrecv,
    typmod_in = varchartypmodin,
    typmod_out = varchartypmodout,
    -- these are bogus, but it/* REPLACED */''s safe as long as we don/* REPLACED */''t use the type:
    analyze = ts_typanalyze,
    subscript = raw_array_subscript_handler
);
RESULT:
	ERROR - Parser Error: syntax error at or near "TYPE"

-----------
QUERY:


SELECT typinput, typoutput, typreceive, typsend, typmodin, typmodout,
       typanalyze, typsubscript, typstorage
FROM pg_type WHERE typname = 'myvarchar';
RESULT:
	[]

-----------
QUERY:


SELECT typinput, typoutput, typreceive, typsend, typmodin, typmodout,
       typanalyze, typsubscript, typstorage
FROM pg_type WHERE typname = '_myvarchar';
RESULT:
	[]

-----------
QUERY:


SELECT typinput, typoutput, typreceive, typsend, typmodin, typmodout,
       typanalyze, typsubscript, typstorage
FROM pg_type WHERE typname = 'myvarchardom';
RESULT:
	[]

-----------
QUERY:


SELECT typinput, typoutput, typreceive, typsend, typmodin, typmodout,
       typanalyze, typsubscript, typstorage
FROM pg_type WHERE typname = '_myvarchardom';
RESULT:
	[]

-----------
QUERY:


-- ensure dependencies are straight
DROP FUNCTION myvarcharsend(myvarchar);
RESULT:
	ERROR - Parser Error: syntax error at or near "("

-----------
QUERY:
  -- fail
DROP TYPE myvarchar;
RESULT:
	ERROR - Catalog Error: Type with name myvarchar does not exist!
Did you mean "varchar"?

-----------
QUERY:
  -- fail

DROP TYPE myvarchar CASCADE;
RESULT:
	ERROR - Catalog Error: Type with name myvarchar does not exist!
Did you mean "varchar"?
