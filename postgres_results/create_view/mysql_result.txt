
-----------
QUERY:
--
-- CREATE_VIEW
-- Virtual class definitions
--	(this also tests the query rewrite system)
--

-- directory paths and dlsuffix are passed to us in environment variables
-- \getenv abs_srcdir PG_ABS_SRCDIR
-- \getenv libdir PG_LIBDIR
-- \getenv dlsuffix PG_DLSUFFIX

-- \set regresslib /* REPLACED */ PG_LIBDIR '/regress' /* REPLACED */ PG_DLSUFFIX

CREATE FUNCTION interpt_pp(path, path)
    RETURNS point
    AS /* REPLACED */ PG_LIBDIR '/regress' PG_DLSUFFIX
    LANGUAGE C STRICT;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ', path)\n    RETURNS point\n    AS /* REPLACED */  '/home/keuscha/Documents/FS2024' at line 14")

-----------
QUERY:


CREATE TABLE real_city (
	pop			int4,
	cname		text,
	outline 	path
);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'path\n)' at line 4")

-----------
QUERY:


-- \set filename /* REPLACED */ PG_ABS_SRCDIR '/data/real_city.data'
COPY real_city FROM /* REPLACED */ PG_ABS_SRCDIR '/data/real_city.data';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'COPY real_city FROM /* REPLACED */  '/home/keuscha/Documents/FS2024/AST/project/' at line 2")

-----------
QUERY:

ANALYZE real_city;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'real_city' at line 1")

-----------
QUERY:


SELECT *
   INTO TABLE ramp
   FROM ONLY road
   WHERE name ~ '.*Ramp';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'TABLE ramp\n   FROM ONLY road\n   WHERE name ~ '.*Ramp'' at line 2")

-----------
QUERY:


CREATE VIEW street AS
   SELECT r.name, r.thepath, c.cname AS cname
   FROM ONLY road r, real_city c
   WHERE c.outline ?# r.thepath;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'r, real_city c\n   WHERE c.outline ?# r.thepath' at line 3")

-----------
QUERY:


CREATE VIEW iexit AS
   SELECT ih.name, ih.thepath,
	interpt_pp(ih.thepath, r.thepath) AS exit
   FROM ihighway ih, ramp r
   WHERE ih.thepath ?# r.thepath;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'exit\n   FROM ihighway ih, ramp r\n   WHERE ih.thepath ?# r.thepath' at line 3")

-----------
QUERY:


CREATE VIEW toyemp AS
   SELECT name, age, location, 12*salary AS annualsal
   FROM emp;
RESULT:
	ERROR - (1146, "Table 'test.emp' doesn't exist")

-----------
QUERY:


-- Test comments
COMMENT ON VIEW noview IS 'no view';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'COMMENT ON VIEW noview IS 'no view'' at line 2")

-----------
QUERY:

COMMENT ON VIEW toyemp IS 'is a view';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'COMMENT ON VIEW toyemp IS 'is a view'' at line 1")

-----------
QUERY:

COMMENT ON VIEW toyemp IS NULL;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'COMMENT ON VIEW toyemp IS NULL' at line 1")

-----------
QUERY:


-- These views are left around mainly to exercise special cases in pg_dump.

CREATE TABLE view_base_table (key int PRIMARY KEY, data varchar(20));
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'int PRIMARY KEY, data varchar(20))' at line 3")

-----------
QUERY:


CREATE VIEW key_dependent_view AS
   SELECT * FROM view_base_table GROUP BY key;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'key' at line 2")

-----------
QUERY:


ALTER TABLE view_base_table DROP CONSTRAINT view_base_table_pkey;
RESULT:
	ERROR - (1146, "Table 'test.view_base_table' doesn't exist")

-----------
QUERY:
  -- fails

CREATE VIEW key_dependent_view_no_cols AS
   SELECT FROM view_base_table GROUP BY key HAVING length(data) > 0;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'FROM view_base_table GROUP BY key HAVING length(data) > 0' at line 4")

-----------
QUERY:


--
-- CREATE OR REPLACE VIEW
--

CREATE TABLE viewtest_tbl (a int, b int, c numeric(10,1), d text COLLATE "C");
RESULT:
	ERROR - (1273, "Unknown collation: 'C'")

-----------
QUERY:


COPY viewtest_tbl FROM stdin;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'COPY viewtest_tbl FROM stdin' at line 1")

-----------
QUERY:

5	10	1.1	xy
10	15	2.2	xyz
15	20	3.3	xyzz
20	25	4.4	xyzzy
-- \.

CREATE OR REPLACE VIEW viewtest AS
	SELECT * FROM viewtest_tbl;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '5\t10\t1.1\txy\n10\t15\t2.2\txyz\n15\t20\t3.3\txyzz\n20\t25\t4.4\txyzzy\n-- \\.\n\nCREATE OR REPLAC' at line 1")

-----------
QUERY:


CREATE OR REPLACE VIEW viewtest AS
	SELECT * FROM viewtest_tbl WHERE a > 10;
RESULT:
	ERROR - (1146, "Table 'test.viewtest_tbl' doesn't exist")

-----------
QUERY:


SELECT * FROM viewtest;
RESULT:
	ERROR - (1146, "Table 'test.viewtest' doesn't exist")

-----------
QUERY:


CREATE OR REPLACE VIEW viewtest AS
	SELECT a, b, c, d FROM viewtest_tbl WHERE a > 5 ORDER BY b DESC;
RESULT:
	ERROR - (1146, "Table 'test.viewtest_tbl' doesn't exist")

-----------
QUERY:


SELECT * FROM viewtest;
RESULT:
	ERROR - (1146, "Table 'test.viewtest' doesn't exist")

-----------
QUERY:


-- should fail
CREATE OR REPLACE VIEW viewtest AS
	SELECT a FROM viewtest_tbl WHERE a <> 20;
RESULT:
	ERROR - (1146, "Table 'test.viewtest_tbl' doesn't exist")

-----------
QUERY:


-- should fail
CREATE OR REPLACE VIEW viewtest AS
	SELECT 1, * FROM viewtest_tbl;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '* FROM viewtest_tbl' at line 3")

-----------
QUERY:


-- should fail
CREATE OR REPLACE VIEW viewtest AS
	SELECT a, b::numeric, c, d FROM viewtest_tbl;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::numeric, c, d FROM viewtest_tbl' at line 3")

-----------
QUERY:


-- should fail
CREATE OR REPLACE VIEW viewtest AS
	SELECT a, b, c::numeric(10,2), d FROM viewtest_tbl;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::numeric(10,2), d FROM viewtest_tbl' at line 3")

-----------
QUERY:


-- should fail
CREATE OR REPLACE VIEW viewtest AS
	SELECT a, b, c, d COLLATE "POSIX" FROM viewtest_tbl;
RESULT:
	ERROR - (1273, "Unknown collation: 'POSIX'")

-----------
QUERY:


-- should work
CREATE OR REPLACE VIEW viewtest AS
	SELECT a, b, c, d, 0 AS e FROM viewtest_tbl;
RESULT:
	ERROR - (1146, "Table 'test.viewtest_tbl' doesn't exist")

-----------
QUERY:


DROP VIEW viewtest;
RESULT:
	ERROR - (1051, "Unknown table 'test.viewtest'")

-----------
QUERY:

DROP TABLE viewtest_tbl;
RESULT:
	ERROR - (1051, "Unknown table 'test.viewtest_tbl'")

-----------
QUERY:


-- tests for temporary views

CREATE SCHEMA temp_view_test
    CREATE TABLE base_table (a int, id int)
    CREATE TABLE base_table2 (a int, id int);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'CREATE TABLE base_table (a int, id int)\n    CREATE TABLE base_table2 (a int, id ' at line 4")

-----------
QUERY:


SET search_path TO temp_view_test, public;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'TO temp_view_test, public' at line 1")

-----------
QUERY:


CREATE TEMPORARY TABLE temp_table (a int, id int);
RESULT:
	[]

-----------
QUERY:


-- should be created in temp_view_test schema
CREATE VIEW v1 AS SELECT * FROM base_table;
RESULT:
	ERROR - (1146, "Table 'test.base_table' doesn't exist")

-----------
QUERY:

-- should be created in temp object schema
CREATE VIEW v1_temp AS SELECT * FROM temp_table;
RESULT:
	ERROR - (1352, "View's SELECT refers to a temporary table 'temp_table'")

-----------
QUERY:

-- should be created in temp object schema
CREATE TEMP VIEW v2_temp AS SELECT * FROM base_table;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'TEMP VIEW v2_temp AS SELECT * FROM base_table' at line 2")

-----------
QUERY:

-- should be created in temp_views schema
CREATE VIEW temp_view_test.v2 AS SELECT * FROM base_table;
RESULT:
	ERROR - (1146, "Table 'test.base_table' doesn't exist")

-----------
QUERY:

-- should fail
CREATE VIEW temp_view_test.v3_temp AS SELECT * FROM temp_table;
RESULT:
	ERROR - (1049, "Unknown database 'temp_view_test'")

-----------
QUERY:

-- should fail
CREATE SCHEMA test_view_schema
    CREATE TEMP VIEW testview AS SELECT 1;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'CREATE TEMP VIEW testview AS SELECT 1' at line 3")

-----------
QUERY:


-- joins: if any of the join relations are temporary, the view
-- should also be temporary

-- should be non-temp
CREATE VIEW v3 AS
    SELECT t1.a AS t1_a, t2.a AS t2_a
    FROM base_table t1, base_table2 t2
    WHERE t1.id = t2.id;
RESULT:
	ERROR - (1146, "Table 'test.base_table' doesn't exist")

-----------
QUERY:

-- should be temp (one join rel is temp)
CREATE VIEW v4_temp AS
    SELECT t1.a AS t1_a, t2.a AS t2_a
    FROM base_table t1, temp_table t2
    WHERE t1.id = t2.id;
RESULT:
	ERROR - (1146, "Table 'test.base_table' doesn't exist")

-----------
QUERY:

-- should be temp
CREATE VIEW v5_temp AS
    SELECT t1.a AS t1_a, t2.a AS t2_a, t3.a AS t3_a
    FROM base_table t1, base_table2 t2, temp_table t3
    WHERE t1.id = t2.id and t2.id = t3.id;
RESULT:
	ERROR - (1146, "Table 'test.base_table' doesn't exist")

-----------
QUERY:


-- subqueries
CREATE VIEW v4 AS SELECT * FROM base_table WHERE id IN (SELECT id FROM base_table2);
RESULT:
	ERROR - (1146, "Table 'test.base_table' doesn't exist")

-----------
QUERY:

CREATE VIEW v5 AS SELECT t1.id, t2.a FROM base_table t1, (SELECT * FROM base_table2) t2;
RESULT:
	ERROR - (1146, "Table 'test.base_table' doesn't exist")

-----------
QUERY:

CREATE VIEW v6 AS SELECT * FROM base_table WHERE EXISTS (SELECT 1 FROM base_table2);
RESULT:
	ERROR - (1146, "Table 'test.base_table' doesn't exist")

-----------
QUERY:

CREATE VIEW v7 AS SELECT * FROM base_table WHERE NOT EXISTS (SELECT 1 FROM base_table2);
RESULT:
	ERROR - (1146, "Table 'test.base_table' doesn't exist")

-----------
QUERY:

CREATE VIEW v8 AS SELECT * FROM base_table WHERE EXISTS (SELECT 1);
RESULT:
	ERROR - (1146, "Table 'test.base_table' doesn't exist")

-----------
QUERY:


CREATE VIEW v6_temp AS SELECT * FROM base_table WHERE id IN (SELECT id FROM temp_table);
RESULT:
	ERROR - (1146, "Table 'test.base_table' doesn't exist")

-----------
QUERY:

CREATE VIEW v7_temp AS SELECT t1.id, t2.a FROM base_table t1, (SELECT * FROM temp_table) t2;
RESULT:
	ERROR - (1146, "Table 'test.base_table' doesn't exist")

-----------
QUERY:

CREATE VIEW v8_temp AS SELECT * FROM base_table WHERE EXISTS (SELECT 1 FROM temp_table);
RESULT:
	ERROR - (1146, "Table 'test.base_table' doesn't exist")

-----------
QUERY:

CREATE VIEW v9_temp AS SELECT * FROM base_table WHERE NOT EXISTS (SELECT 1 FROM temp_table);
RESULT:
	ERROR - (1146, "Table 'test.base_table' doesn't exist")

-----------
QUERY:


-- a view should also be temporary if it references a temporary view
CREATE VIEW v10_temp AS SELECT * FROM v7_temp;
RESULT:
	ERROR - (1146, "Table 'test.v7_temp' doesn't exist")

-----------
QUERY:

CREATE VIEW v11_temp AS SELECT t1.id, t2.a FROM base_table t1, v10_temp t2;
RESULT:
	ERROR - (1146, "Table 'test.base_table' doesn't exist")

-----------
QUERY:

CREATE VIEW v12_temp AS SELECT true FROM v11_temp;
RESULT:
	ERROR - (1146, "Table 'test.v11_temp' doesn't exist")

-----------
QUERY:


-- a view should also be temporary if it references a temporary sequence
CREATE SEQUENCE seq1;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'SEQUENCE seq1' at line 2")

-----------
QUERY:

CREATE TEMPORARY SEQUENCE seq1_temp;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'SEQUENCE seq1_temp' at line 1")

-----------
QUERY:

CREATE VIEW v9 AS SELECT seq1.is_called FROM seq1;
RESULT:
	ERROR - (1146, "Table 'test.seq1' doesn't exist")

-----------
QUERY:

CREATE VIEW v13_temp AS SELECT seq1_temp.is_called FROM seq1_temp;
RESULT:
	ERROR - (1146, "Table 'test.seq1_temp' doesn't exist")

-----------
QUERY:


SELECT relname FROM pg_class
    WHERE relname LIKE 'v_'
    AND relnamespace = (SELECT oid FROM pg_namespace WHERE nspname = 'temp_view_test')
    ORDER BY relname;
RESULT:
	ERROR - (1146, "Table 'test.pg_class' doesn't exist")

-----------
QUERY:

SELECT relname FROM pg_class
    WHERE relname LIKE 'v%'
    AND relnamespace IN (SELECT oid FROM pg_namespace WHERE nspname LIKE 'pg_temp%')
    ORDER BY relname;
RESULT:
	ERROR - (1146, "Table 'test.pg_class' doesn't exist")

-----------
QUERY:


CREATE SCHEMA testviewschm2;
RESULT:
	[]

-----------
QUERY:

SET search_path TO testviewschm2, public;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'TO testviewschm2, public' at line 1")

-----------
QUERY:


CREATE TABLE t1 (num int, name text);
RESULT:
	[]

-----------
QUERY:

CREATE TABLE t2 (num2 int, value text);
RESULT:
	[]

-----------
QUERY:

CREATE TEMP TABLE tt (num2 int, value text);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'TEMP TABLE tt (num2 int, value text)' at line 1")

-----------
QUERY:


CREATE VIEW nontemp1 AS SELECT * FROM t1 CROSS JOIN t2;
RESULT:
	[]

-----------
QUERY:

CREATE VIEW temporal1 AS SELECT * FROM t1 CROSS JOIN tt;
RESULT:
	ERROR - (1146, "Table 'test.tt' doesn't exist")

-----------
QUERY:

CREATE VIEW nontemp2 AS SELECT * FROM t1 INNER JOIN t2 ON t1.num = t2.num2;
RESULT:
	[]

-----------
QUERY:

CREATE VIEW temporal2 AS SELECT * FROM t1 INNER JOIN tt ON t1.num = tt.num2;
RESULT:
	ERROR - (1146, "Table 'test.tt' doesn't exist")

-----------
QUERY:

CREATE VIEW nontemp3 AS SELECT * FROM t1 LEFT JOIN t2 ON t1.num = t2.num2;
RESULT:
	[]

-----------
QUERY:

CREATE VIEW temporal3 AS SELECT * FROM t1 LEFT JOIN tt ON t1.num = tt.num2;
RESULT:
	ERROR - (1146, "Table 'test.tt' doesn't exist")

-----------
QUERY:

CREATE VIEW nontemp4 AS SELECT * FROM t1 LEFT JOIN t2 ON t1.num = t2.num2 AND t2.value = 'xxx';
RESULT:
	[]

-----------
QUERY:

CREATE VIEW temporal4 AS SELECT * FROM t1 LEFT JOIN tt ON t1.num = tt.num2 AND tt.value = 'xxx';
RESULT:
	ERROR - (1146, "Table 'test.tt' doesn't exist")

-----------
QUERY:


SELECT relname FROM pg_class
    WHERE relname LIKE 'nontemp%'
    AND relnamespace = (SELECT oid FROM pg_namespace WHERE nspname = 'testviewschm2')
    ORDER BY relname;
RESULT:
	ERROR - (1146, "Table 'test.pg_class' doesn't exist")

-----------
QUERY:

SELECT relname FROM pg_class
    WHERE relname LIKE 'temporal%'
    AND relnamespace IN (SELECT oid FROM pg_namespace WHERE nspname LIKE 'pg_temp%')
    ORDER BY relname;
RESULT:
	ERROR - (1146, "Table 'test.pg_class' doesn't exist")

-----------
QUERY:


CREATE TABLE tbl1 ( a int, b int);
RESULT:
	[]

-----------
QUERY:

CREATE TABLE tbl2 (c int, d int);
RESULT:
	[]

-----------
QUERY:

CREATE TABLE tbl3 (e int, f int);
RESULT:
	[]

-----------
QUERY:

CREATE TABLE tbl4 (g int, h int);
RESULT:
	[]

-----------
QUERY:

CREATE TEMP TABLE tmptbl (i int, j int);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'TEMP TABLE tmptbl (i int, j int)' at line 1")

-----------
QUERY:


--Should be in testviewschm2
CREATE   VIEW  pubview AS SELECT * FROM tbl1 WHERE tbl1.a
BETWEEN (SELECT d FROM tbl2 WHERE c = 1) AND (SELECT e FROM tbl3 WHERE f = 2)
AND EXISTS (SELECT g FROM tbl4 LEFT JOIN tbl3 ON tbl4.h = tbl3.f);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '--Should be in testviewschm2\nCREATE   VIEW  pubview AS SELECT * FROM tbl1 WHERE ' at line 1")

-----------
QUERY:


SELECT count(*) FROM pg_class where relname = 'pubview'
AND relnamespace IN (SELECT OID FROM pg_namespace WHERE nspname = 'testviewschm2');
RESULT:
	ERROR - (1146, "Table 'test.pg_class' doesn't exist")

-----------
QUERY:


--Should be in temp object schema
CREATE   VIEW  mytempview AS SELECT * FROM tbl1 WHERE tbl1.a
BETWEEN (SELECT d FROM tbl2 WHERE c = 1) AND (SELECT e FROM tbl3 WHERE f = 2)
AND EXISTS (SELECT g FROM tbl4 LEFT JOIN tbl3 ON tbl4.h = tbl3.f)
AND NOT EXISTS (SELECT g FROM tbl4 LEFT JOIN tmptbl ON tbl4.h = tmptbl.j);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '--Should be in temp object schema\nCREATE   VIEW  mytempview AS SELECT * FROM tbl' at line 1")

-----------
QUERY:


SELECT count(*) FROM pg_class where relname LIKE 'mytempview'
And relnamespace IN (SELECT OID FROM pg_namespace WHERE nspname LIKE 'pg_temp%');
RESULT:
	ERROR - (1146, "Table 'test.pg_class' doesn't exist")

-----------
QUERY:


--
-- CREATE VIEW and WITH(...) clause
--
CREATE VIEW mysecview1
       AS SELECT * FROM tbl1 WHERE a = 0;
RESULT:
	[]

-----------
QUERY:

CREATE VIEW mysecview2 WITH (security_barrier=true)
       AS SELECT * FROM tbl1 WHERE a > 0;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WITH (security_barrier=true)\n       AS SELECT * FROM tbl1 WHERE a > 0' at line 1")

-----------
QUERY:

CREATE VIEW mysecview3 WITH (security_barrier=false)
       AS SELECT * FROM tbl1 WHERE a < 0;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WITH (security_barrier=false)\n       AS SELECT * FROM tbl1 WHERE a < 0' at line 1")

-----------
QUERY:

CREATE VIEW mysecview4 WITH (security_barrier)
       AS SELECT * FROM tbl1 WHERE a <> 0;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WITH (security_barrier)\n       AS SELECT * FROM tbl1 WHERE a <> 0' at line 1")

-----------
QUERY:

CREATE VIEW mysecview5 WITH (security_barrier=100)	-- Error
       AS SELECT * FROM tbl1 WHERE a > 100;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WITH (security_barrier=100)\t-- Error\n       AS SELECT * FROM tbl1 WHERE a > 100' at line 1")

-----------
QUERY:

CREATE VIEW mysecview6 WITH (invalid_option)		-- Error
       AS SELECT * FROM tbl1 WHERE a < 100;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WITH (invalid_option)\t\t-- Error\n       AS SELECT * FROM tbl1 WHERE a < 100' at line 1")

-----------
QUERY:

CREATE VIEW mysecview7 WITH (security_invoker=true)
       AS SELECT * FROM tbl1 WHERE a = 100;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WITH (security_invoker=true)\n       AS SELECT * FROM tbl1 WHERE a = 100' at line 1")

-----------
QUERY:

CREATE VIEW mysecview8 WITH (security_invoker=false, security_barrier=true)
       AS SELECT * FROM tbl1 WHERE a > 100;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WITH (security_invoker=false, security_barrier=true)\n       AS SELECT * FROM tbl' at line 1")

-----------
QUERY:

CREATE VIEW mysecview9 WITH (security_invoker)
       AS SELECT * FROM tbl1 WHERE a < 100;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WITH (security_invoker)\n       AS SELECT * FROM tbl1 WHERE a < 100' at line 1")

-----------
QUERY:

CREATE VIEW mysecview10 WITH (security_invoker=100)	-- Error
       AS SELECT * FROM tbl1 WHERE a <> 100;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WITH (security_invoker=100)\t-- Error\n       AS SELECT * FROM tbl1 WHERE a <> 100' at line 1")

-----------
QUERY:

SELECT relname, relkind, reloptions FROM pg_class
       WHERE oid in ('mysecview1'::regclass, 'mysecview2'::regclass,
                     'mysecview3'::regclass, 'mysecview4'::regclass,
                     'mysecview7'::regclass, 'mysecview8'::regclass,
                     'mysecview9'::regclass)
       ORDER BY relname;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::regclass, 'mysecview2'::regclass,\n                     'mysecview3'::regclass,' at line 2")

-----------
QUERY:


CREATE OR REPLACE VIEW mysecview1
       AS SELECT * FROM tbl1 WHERE a = 256;
RESULT:
	[]

-----------
QUERY:

CREATE OR REPLACE VIEW mysecview2
       AS SELECT * FROM tbl1 WHERE a > 256;
RESULT:
	[]

-----------
QUERY:

CREATE OR REPLACE VIEW mysecview3 WITH (security_barrier=true)
       AS SELECT * FROM tbl1 WHERE a < 256;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WITH (security_barrier=true)\n       AS SELECT * FROM tbl1 WHERE a < 256' at line 1")

-----------
QUERY:

CREATE OR REPLACE VIEW mysecview4 WITH (security_barrier=false)
       AS SELECT * FROM tbl1 WHERE a <> 256;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WITH (security_barrier=false)\n       AS SELECT * FROM tbl1 WHERE a <> 256' at line 1")

-----------
QUERY:

CREATE OR REPLACE VIEW mysecview7
       AS SELECT * FROM tbl1 WHERE a > 256;
RESULT:
	[]

-----------
QUERY:

CREATE OR REPLACE VIEW mysecview8 WITH (security_invoker=true)
       AS SELECT * FROM tbl1 WHERE a < 256;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WITH (security_invoker=true)\n       AS SELECT * FROM tbl1 WHERE a < 256' at line 1")

-----------
QUERY:

CREATE OR REPLACE VIEW mysecview9 WITH (security_invoker=false, security_barrier=true)
       AS SELECT * FROM tbl1 WHERE a <> 256;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WITH (security_invoker=false, security_barrier=true)\n       AS SELECT * FROM tbl' at line 1")

-----------
QUERY:

SELECT relname, relkind, reloptions FROM pg_class
       WHERE oid in ('mysecview1'::regclass, 'mysecview2'::regclass,
                     'mysecview3'::regclass, 'mysecview4'::regclass,
                     'mysecview7'::regclass, 'mysecview8'::regclass,
                     'mysecview9'::regclass)
       ORDER BY relname;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::regclass, 'mysecview2'::regclass,\n                     'mysecview3'::regclass,' at line 2")

-----------
QUERY:


-- Check that unknown literals are converted to /* REPLACED */ ''text/* REPLACED */ '' in CREATE VIEW,
-- so that we don/* REPLACED */ ''t end up with unknown-type columns.

CREATE VIEW unspecified_types AS
  SELECT 42 as i, 42.5 as num, 'foo' as u, 'foo'::unknown as u2, null as n;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::unknown as u2, null as n' at line 5")

-----------
QUERY:

-- \d+ unspecified_types
SELECT * FROM unspecified_types;
RESULT:
	ERROR - (1146, "Table 'test.unspecified_types' doesn't exist")

-----------
QUERY:


-- This test checks that proper typmods are assigned in a multi-row VALUES

CREATE VIEW tt1 AS
  SELECT * FROM (
    VALUES
       ('abc'::varchar(3), '0123456789', 42, 'abcd'::varchar(4)),
       ('0123456789', 'abc'::varchar(3), 42.12, 'abc'::varchar(4))
  ) vv(a,b,c,d);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '('abc'::varchar(3), '0123456789', 42, 'abcd'::varchar(4)),\n       ('0123456789',' at line 6")

-----------
QUERY:

-- \d+ tt1
SELECT * FROM tt1;
RESULT:
	ERROR - (1146, "Table 'test.tt1' doesn't exist")

-----------
QUERY:

SELECT a::varchar(3) FROM tt1;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::varchar(3) FROM tt1' at line 1")

-----------
QUERY:

DROP VIEW tt1;
RESULT:
	ERROR - (1051, "Unknown table 'test.tt1'")

-----------
QUERY:


-- Test view decompilation in the face of relation renaming conflicts

CREATE TABLE tt1 (f1 int, f2 int, f3 text);
RESULT:
	[]

-----------
QUERY:

CREATE TABLE tx1 (x1 int, x2 int, x3 text);
RESULT:
	[]

-----------
QUERY:

CREATE TABLE temp_view_test.tt1 (y1 int, f2 int, f3 text);
RESULT:
	ERROR - (1049, "Unknown database 'temp_view_test'")

-----------
QUERY:


CREATE VIEW aliased_view_1 AS
  select * from tt1
    where exists (select 1 from tx1 where tt1.f1 = tx1.x1);
RESULT:
	[]

-----------
QUERY:

CREATE VIEW aliased_view_2 AS
  select * from tt1 a1
    where exists (select 1 from tx1 where a1.f1 = tx1.x1);
RESULT:
	[]

-----------
QUERY:

CREATE VIEW aliased_view_3 AS
  select * from tt1
    where exists (select 1 from tx1 a2 where tt1.f1 = a2.x1);
RESULT:
	[]

-----------
QUERY:

CREATE VIEW aliased_view_4 AS
  select * from temp_view_test.tt1
    where exists (select 1 from tt1 where temp_view_test.tt1.y1 = tt1.f1);
RESULT:
	ERROR - (1049, "Unknown database 'temp_view_test'")

-----------
QUERY:


-- \d+ aliased_view_1
-- \d+ aliased_view_2
-- \d+ aliased_view_3
-- \d+ aliased_view_4

ALTER TABLE tx1 RENAME TO a1;
RESULT:
	[]

-----------
QUERY:


-- \d+ aliased_view_1
-- \d+ aliased_view_2
-- \d+ aliased_view_3
-- \d+ aliased_view_4

ALTER TABLE tt1 RENAME TO a2;
RESULT:
	[]

-----------
QUERY:


-- \d+ aliased_view_1
-- \d+ aliased_view_2
-- \d+ aliased_view_3
-- \d+ aliased_view_4

ALTER TABLE a1 RENAME TO tt1;
RESULT:
	[]

-----------
QUERY:


-- \d+ aliased_view_1
-- \d+ aliased_view_2
-- \d+ aliased_view_3
-- \d+ aliased_view_4

ALTER TABLE a2 RENAME TO tx1;
RESULT:
	[]

-----------
QUERY:

ALTER TABLE tx1 SET SCHEMA temp_view_test;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'SET SCHEMA temp_view_test' at line 1")

-----------
QUERY:


-- \d+ aliased_view_1
-- \d+ aliased_view_2
-- \d+ aliased_view_3
-- \d+ aliased_view_4

ALTER TABLE temp_view_test.tt1 RENAME TO tmp1;
RESULT:
	ERROR - (1049, "Unknown database 'temp_view_test'")

-----------
QUERY:

ALTER TABLE temp_view_test.tmp1 SET SCHEMA testviewschm2;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'SET SCHEMA testviewschm2' at line 1")

-----------
QUERY:

ALTER TABLE tmp1 RENAME TO tx1;
RESULT:
	ERROR - (1146, "Table 'test.tmp1' doesn't exist")

-----------
QUERY:


-- \d+ aliased_view_1
-- \d+ aliased_view_2
-- \d+ aliased_view_3
-- \d+ aliased_view_4

-- Test aliasing of joins

create view view_of_joins as
select * from
  (select * from (tbl1 cross join tbl2) same) ss,
  (tbl3 cross join tbl4) same;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'same) ss,\n  (tbl3 cross join tbl4) same' at line 10")

-----------
QUERY:


-- \d+ view_of_joins

create table tbl1a (a int, c int);
RESULT:
	[]

-----------
QUERY:

create view view_of_joins_2a as select * from tbl1 join tbl1a using (a);
RESULT:
	[]

-----------
QUERY:

create view view_of_joins_2b as select * from tbl1 join tbl1a using (a) as x;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'as x' at line 1")

-----------
QUERY:

create view view_of_joins_2c as select * from (tbl1 join tbl1a using (a)) as y;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'as y' at line 1")

-----------
QUERY:

create view view_of_joins_2d as select * from (tbl1 join tbl1a using (a) as x) as y;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'as x) as y' at line 1")

-----------
QUERY:


select pg_get_viewdef('view_of_joins_2a', true);
RESULT:
	ERROR - (1305, 'FUNCTION test.pg_get_viewdef does not exist')

-----------
QUERY:

select pg_get_viewdef('view_of_joins_2b', true);
RESULT:
	ERROR - (1305, 'FUNCTION test.pg_get_viewdef does not exist')

-----------
QUERY:

select pg_get_viewdef('view_of_joins_2c', true);
RESULT:
	ERROR - (1305, 'FUNCTION test.pg_get_viewdef does not exist')

-----------
QUERY:

select pg_get_viewdef('view_of_joins_2d', true);
RESULT:
	ERROR - (1305, 'FUNCTION test.pg_get_viewdef does not exist')

-----------
QUERY:


-- Test view decompilation in the face of column addition/deletion/renaming

create table tt2 (a int, b int, c int);
RESULT:
	[]

-----------
QUERY:

create table tt3 (ax int8, b int2, c numeric);
RESULT:
	[]

-----------
QUERY:

create table tt4 (ay int, b int, q int);
RESULT:
	[]

-----------
QUERY:


create view v1 as select * from tt2 natural join tt3;
RESULT:
	[]

-----------
QUERY:

create view v1a as select * from (tt2 natural join tt3) j;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'j' at line 1")

-----------
QUERY:

create view v2 as select * from tt2 join tt3 using (b,c) join tt4 using (b);
RESULT:
	[]

-----------
QUERY:

create view v2a as select * from (tt2 join tt3 using (b,c) join tt4 using (b)) j;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'j' at line 1")

-----------
QUERY:

create view v3 as select * from tt2 join tt3 using (b,c) full join tt4 using (b);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'full join tt4 using (b)' at line 1")

-----------
QUERY:


select pg_get_viewdef('v1', true);
RESULT:
	ERROR - (1305, 'FUNCTION test.pg_get_viewdef does not exist')

-----------
QUERY:

select pg_get_viewdef('v1a', true);
RESULT:
	ERROR - (1305, 'FUNCTION test.pg_get_viewdef does not exist')

-----------
QUERY:

select pg_get_viewdef('v2', true);
RESULT:
	ERROR - (1305, 'FUNCTION test.pg_get_viewdef does not exist')

-----------
QUERY:

select pg_get_viewdef('v2a', true);
RESULT:
	ERROR - (1305, 'FUNCTION test.pg_get_viewdef does not exist')

-----------
QUERY:

select pg_get_viewdef('v3', true);
RESULT:
	ERROR - (1305, 'FUNCTION test.pg_get_viewdef does not exist')

-----------
QUERY:


alter table tt2 add column d int;
RESULT:
	[]

-----------
QUERY:

alter table tt2 add column e int;
RESULT:
	[]

-----------
QUERY:


select pg_get_viewdef('v1', true);
RESULT:
	ERROR - (1305, 'FUNCTION test.pg_get_viewdef does not exist')

-----------
QUERY:

select pg_get_viewdef('v1a', true);
RESULT:
	ERROR - (1305, 'FUNCTION test.pg_get_viewdef does not exist')

-----------
QUERY:

select pg_get_viewdef('v2', true);
RESULT:
	ERROR - (1305, 'FUNCTION test.pg_get_viewdef does not exist')

-----------
QUERY:

select pg_get_viewdef('v2a', true);
RESULT:
	ERROR - (1305, 'FUNCTION test.pg_get_viewdef does not exist')

-----------
QUERY:

select pg_get_viewdef('v3', true);
RESULT:
	ERROR - (1305, 'FUNCTION test.pg_get_viewdef does not exist')

-----------
QUERY:


alter table tt3 rename c to d;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'to d' at line 1")

-----------
QUERY:


select pg_get_viewdef('v1', true);
RESULT:
	ERROR - (1305, 'FUNCTION test.pg_get_viewdef does not exist')

-----------
QUERY:

select pg_get_viewdef('v1a', true);
RESULT:
	ERROR - (1305, 'FUNCTION test.pg_get_viewdef does not exist')

-----------
QUERY:

select pg_get_viewdef('v2', true);
RESULT:
	ERROR - (1305, 'FUNCTION test.pg_get_viewdef does not exist')

-----------
QUERY:

select pg_get_viewdef('v2a', true);
RESULT:
	ERROR - (1305, 'FUNCTION test.pg_get_viewdef does not exist')

-----------
QUERY:

select pg_get_viewdef('v3', true);
RESULT:
	ERROR - (1305, 'FUNCTION test.pg_get_viewdef does not exist')

-----------
QUERY:


alter table tt3 add column c int;
RESULT:
	ERROR - (1060, "Duplicate column name 'c'")

-----------
QUERY:

alter table tt3 add column e int;
RESULT:
	[]

-----------
QUERY:


select pg_get_viewdef('v1', true);
RESULT:
	ERROR - (1305, 'FUNCTION test.pg_get_viewdef does not exist')

-----------
QUERY:

select pg_get_viewdef('v1a', true);
RESULT:
	ERROR - (1305, 'FUNCTION test.pg_get_viewdef does not exist')

-----------
QUERY:

select pg_get_viewdef('v2', true);
RESULT:
	ERROR - (1305, 'FUNCTION test.pg_get_viewdef does not exist')

-----------
QUERY:

select pg_get_viewdef('v2a', true);
RESULT:
	ERROR - (1305, 'FUNCTION test.pg_get_viewdef does not exist')

-----------
QUERY:

select pg_get_viewdef('v3', true);
RESULT:
	ERROR - (1305, 'FUNCTION test.pg_get_viewdef does not exist')

-----------
QUERY:


alter table tt2 drop column d;
RESULT:
	[]

-----------
QUERY:


select pg_get_viewdef('v1', true);
RESULT:
	ERROR - (1305, 'FUNCTION test.pg_get_viewdef does not exist')

-----------
QUERY:

select pg_get_viewdef('v1a', true);
RESULT:
	ERROR - (1305, 'FUNCTION test.pg_get_viewdef does not exist')

-----------
QUERY:

select pg_get_viewdef('v2', true);
RESULT:
	ERROR - (1305, 'FUNCTION test.pg_get_viewdef does not exist')

-----------
QUERY:

select pg_get_viewdef('v2a', true);
RESULT:
	ERROR - (1305, 'FUNCTION test.pg_get_viewdef does not exist')

-----------
QUERY:

select pg_get_viewdef('v3', true);
RESULT:
	ERROR - (1305, 'FUNCTION test.pg_get_viewdef does not exist')

-----------
QUERY:


create table tt5 (a int, b int);
RESULT:
	[]

-----------
QUERY:

create table tt6 (c int, d int);
RESULT:
	[]

-----------
QUERY:

create view vv1 as select * from (tt5 cross join tt6) j(aa,bb,cc,dd);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'j(aa,bb,cc,dd)' at line 1")

-----------
QUERY:

select pg_get_viewdef('vv1', true);
RESULT:
	ERROR - (1305, 'FUNCTION test.pg_get_viewdef does not exist')

-----------
QUERY:

alter table tt5 add column c int;
RESULT:
	[]

-----------
QUERY:

select pg_get_viewdef('vv1', true);
RESULT:
	ERROR - (1305, 'FUNCTION test.pg_get_viewdef does not exist')

-----------
QUERY:

alter table tt5 add column cc int;
RESULT:
	[]

-----------
QUERY:

select pg_get_viewdef('vv1', true);
RESULT:
	ERROR - (1305, 'FUNCTION test.pg_get_viewdef does not exist')

-----------
QUERY:

alter table tt5 drop column c;
RESULT:
	[]

-----------
QUERY:

select pg_get_viewdef('vv1', true);
RESULT:
	ERROR - (1305, 'FUNCTION test.pg_get_viewdef does not exist')

-----------
QUERY:


create view v4 as select * from v1;
RESULT:
	[]

-----------
QUERY:

alter view v1 rename column a to x;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'rename column a to x' at line 1")

-----------
QUERY:

select pg_get_viewdef('v1', true);
RESULT:
	ERROR - (1305, 'FUNCTION test.pg_get_viewdef does not exist')

-----------
QUERY:

select pg_get_viewdef('v4', true);
RESULT:
	ERROR - (1305, 'FUNCTION test.pg_get_viewdef does not exist')

-----------
QUERY:



-- Unnamed FULL JOIN USING is lots of fun too

create table tt7 (x int, xx int, y int);
RESULT:
	[]

-----------
QUERY:

alter table tt7 drop column xx;
RESULT:
	[]

-----------
QUERY:

create table tt8 (x int, z int);
RESULT:
	[]

-----------
QUERY:


create view vv2 as
select * from (values(1,2,3,4,5)) v(a,b,c,d,e)
union all
select * from tt7 full join tt8 using (x), tt8 tt8x;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(1,2,3,4,5)) v(a,b,c,d,e)\nunion all\nselect * from tt7 full join tt8 using (x), t' at line 2")

-----------
QUERY:


select pg_get_viewdef('vv2', true);
RESULT:
	ERROR - (1305, 'FUNCTION test.pg_get_viewdef does not exist')

-----------
QUERY:


create view vv3 as
select * from (values(1,2,3,4,5,6)) v(a,b,c,x,e,f)
union all
select * from
  tt7 full join tt8 using (x),
  tt7 tt7x full join tt8 tt8x using (x);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(1,2,3,4,5,6)) v(a,b,c,x,e,f)\nunion all\nselect * from\n  tt7 full join tt8 using ' at line 2")

-----------
QUERY:


select pg_get_viewdef('vv3', true);
RESULT:
	ERROR - (1305, 'FUNCTION test.pg_get_viewdef does not exist')

-----------
QUERY:


create view vv4 as
select * from (values(1,2,3,4,5,6,7)) v(a,b,c,x,e,f,g)
union all
select * from
  tt7 full join tt8 using (x),
  tt7 tt7x full join tt8 tt8x using (x) full join tt8 tt8y using (x);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(1,2,3,4,5,6,7)) v(a,b,c,x,e,f,g)\nunion all\nselect * from\n  tt7 full join tt8 us' at line 2")

-----------
QUERY:


select pg_get_viewdef('vv4', true);
RESULT:
	ERROR - (1305, 'FUNCTION test.pg_get_viewdef does not exist')

-----------
QUERY:


alter table tt7 add column zz int;
RESULT:
	[]

-----------
QUERY:

alter table tt7 add column z int;
RESULT:
	[]

-----------
QUERY:

alter table tt7 drop column zz;
RESULT:
	[]

-----------
QUERY:

alter table tt8 add column z2 int;
RESULT:
	[]

-----------
QUERY:


select pg_get_viewdef('vv2', true);
RESULT:
	ERROR - (1305, 'FUNCTION test.pg_get_viewdef does not exist')

-----------
QUERY:

select pg_get_viewdef('vv3', true);
RESULT:
	ERROR - (1305, 'FUNCTION test.pg_get_viewdef does not exist')

-----------
QUERY:

select pg_get_viewdef('vv4', true);
RESULT:
	ERROR - (1305, 'FUNCTION test.pg_get_viewdef does not exist')

-----------
QUERY:


-- Implicit coercions in a JOIN USING create issues similar to FULL JOIN

create table tt7a (x date, xx int, y int);
RESULT:
	[]

-----------
QUERY:

alter table tt7a drop column xx;
RESULT:
	[]

-----------
QUERY:

create table tt8a (x timestamptz, z int);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'timestamptz, z int)' at line 1")

-----------
QUERY:


create view vv2a as
select * from (values(now(),2,3,now(),5)) v(a,b,c,d,e)
union all
select * from tt7a left join tt8a using (x), tt8a tt8ax;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(now(),2,3,now(),5)) v(a,b,c,d,e)\nunion all\nselect * from tt7a left join tt8a us' at line 2")

-----------
QUERY:


select pg_get_viewdef('vv2a', true);
RESULT:
	ERROR - (1305, 'FUNCTION test.pg_get_viewdef does not exist')

-----------
QUERY:


--
-- Also check dropping a column that existed when the view was made
--

create table tt9 (x int, xx int, y int);
RESULT:
	[]

-----------
QUERY:

create table tt10 (x int, z int);
RESULT:
	[]

-----------
QUERY:


create view vv5 as select x,y,z from tt9 join tt10 using(x);
RESULT:
	[]

-----------
QUERY:


select pg_get_viewdef('vv5', true);
RESULT:
	ERROR - (1305, 'FUNCTION test.pg_get_viewdef does not exist')

-----------
QUERY:


alter table tt9 drop column xx;
RESULT:
	[]

-----------
QUERY:


select pg_get_viewdef('vv5', true);
RESULT:
	ERROR - (1305, 'FUNCTION test.pg_get_viewdef does not exist')

-----------
QUERY:


--
-- Another corner case is that we might add a column to a table below a
-- JOIN USING, and thereby make the USING column name ambiguous
--

create table tt11 (x int, y int);
RESULT:
	[]

-----------
QUERY:

create table tt12 (x int, z int);
RESULT:
	[]

-----------
QUERY:

create table tt13 (z int, q int);
RESULT:
	[]

-----------
QUERY:


create view vv6 as select x,y,z,q from
  (tt11 join tt12 using(x)) join tt13 using(z);
RESULT:
	[]

-----------
QUERY:


select pg_get_viewdef('vv6', true);
RESULT:
	ERROR - (1305, 'FUNCTION test.pg_get_viewdef does not exist')

-----------
QUERY:


alter table tt11 add column z int;
RESULT:
	[]

-----------
QUERY:


select pg_get_viewdef('vv6', true);
RESULT:
	ERROR - (1305, 'FUNCTION test.pg_get_viewdef does not exist')

-----------
QUERY:


--
-- Check cases involving dropped/altered columns in a function/* REPLACED */ ''s rowtype result
--

create table tt14t (f1 text, f2 text, f3 text, f4 text);
RESULT:
	[]

-----------
QUERY:

insert into tt14t values('foo', 'bar', 'baz', '42');
RESULT:
	[]

-----------
QUERY:


alter table tt14t drop column f2;
RESULT:
	[]

-----------
QUERY:


create function tt14f() returns setof tt14t as
$$
declare
    rec1 record;
begin
    for rec1 in select * from tt14t
    loop
        return next rec1;
    end loop;
end;
$$
language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'setof tt14t as\n$$\ndeclare\n    rec1 record;\nbegin\n    for rec1 in select * from t' at line 1")

-----------
QUERY:


create view tt14v as select t.* from tt14f() t;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '() t' at line 1")

-----------
QUERY:


select pg_get_viewdef('tt14v', true);
RESULT:
	ERROR - (1305, 'FUNCTION test.pg_get_viewdef does not exist')

-----------
QUERY:

select * from tt14v;
RESULT:
	ERROR - (1146, "Table 'test.tt14v' doesn't exist")

-----------
QUERY:


alter table tt14t drop column f3;
RESULT:
	[]

-----------
QUERY:
  -- fail, view has explicit reference to f3

-- We used to have a bug that would allow the above to succeed, posing
-- hazards for later execution of the view.  Check that the internal
-- defenses for those hazards haven/* REPLACED */ ''t bit-rotted, in case some other
-- bug with similar symptoms emerges.
begin;
RESULT:
	[]

-----------
QUERY:


-- destroy the dependency entry that prevents the DROP:
delete from pg_depend where
  objid = (select oid from pg_rewrite
           where ev_class = 'tt14v'::regclass and rulename = '_RETURN')
  and refobjsubid = 3
returning pg_describe_object(classid, objid, objsubid) as obj,
          pg_describe_object(refclassid, refobjid, refobjsubid) as ref,
          deptype;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::regclass and rulename = '_RETURN')\n  and refobjsubid = 3\nreturning pg_describe' at line 4")

-----------
QUERY:


-- this will now succeed:
alter table tt14t drop column f3;
RESULT:
	ERROR - (1091, "Can't DROP 'f3'; check that column/key exists")

-----------
QUERY:


-- column f3 is still in the view, sort of ...
select pg_get_viewdef('tt14v', true);
RESULT:
	ERROR - (1305, 'FUNCTION test.pg_get_viewdef does not exist')

-----------
QUERY:

-- ... and you can even EXPLAIN it ...
explain (verbose, costs off) select * from tt14v;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'verbose, costs off) select * from tt14v' at line 2")

-----------
QUERY:

-- but it will fail at execution
select f1, f4 from tt14v;
RESULT:
	ERROR - (1146, "Table 'test.tt14v' doesn't exist")

-----------
QUERY:

select * from tt14v;
RESULT:
	ERROR - (1146, "Table 'test.tt14v' doesn't exist")

-----------
QUERY:


rollback;
RESULT:
	[]

-----------
QUERY:


-- likewise, altering a referenced column/* REPLACED */ ''s type is prohibited ...
alter table tt14t alter column f4 type integer using f4::integer;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'type integer using f4::integer' at line 2")

-----------
QUERY:
  -- fail

-- ... but some bug might let it happen, so check defenses
begin;
RESULT:
	[]

-----------
QUERY:


-- destroy the dependency entry that prevents the ALTER:
delete from pg_depend where
  objid = (select oid from pg_rewrite
           where ev_class = 'tt14v'::regclass and rulename = '_RETURN')
  and refobjsubid = 4
returning pg_describe_object(classid, objid, objsubid) as obj,
          pg_describe_object(refclassid, refobjid, refobjsubid) as ref,
          deptype;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::regclass and rulename = '_RETURN')\n  and refobjsubid = 4\nreturning pg_describe' at line 4")

-----------
QUERY:


-- this will now succeed:
alter table tt14t alter column f4 type integer using f4::integer;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'type integer using f4::integer' at line 2")

-----------
QUERY:


-- f4 is still in the view ...
select pg_get_viewdef('tt14v', true);
RESULT:
	ERROR - (1305, 'FUNCTION test.pg_get_viewdef does not exist')

-----------
QUERY:

-- but will fail at execution
select f1, f3 from tt14v;
RESULT:
	ERROR - (1146, "Table 'test.tt14v' doesn't exist")

-----------
QUERY:

select * from tt14v;
RESULT:
	ERROR - (1146, "Table 'test.tt14v' doesn't exist")

-----------
QUERY:


rollback;
RESULT:
	[]

-----------
QUERY:


drop view tt14v;
RESULT:
	ERROR - (1051, "Unknown table 'test.tt14v'")

-----------
QUERY:


create view tt14v as select t.f1, t.f4 from tt14f() t;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '() t' at line 1")

-----------
QUERY:


select pg_get_viewdef('tt14v', true);
RESULT:
	ERROR - (1305, 'FUNCTION test.pg_get_viewdef does not exist')

-----------
QUERY:

select * from tt14v;
RESULT:
	ERROR - (1146, "Table 'test.tt14v' doesn't exist")

-----------
QUERY:


alter table tt14t drop column f3;
RESULT:
	ERROR - (1091, "Can't DROP 'f3'; check that column/key exists")

-----------
QUERY:
  -- ok

select pg_get_viewdef('tt14v', true);
RESULT:
	ERROR - (1305, 'FUNCTION test.pg_get_viewdef does not exist')

-----------
QUERY:

explain (verbose, costs off) select * from tt14v;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'verbose, costs off) select * from tt14v' at line 1")

-----------
QUERY:

select * from tt14v;
RESULT:
	ERROR - (1146, "Table 'test.tt14v' doesn't exist")

-----------
QUERY:


-- check display of whole-row variables in some corner cases

create type nestedcomposite as (x int8_tbl);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'type nestedcomposite as (x int8_tbl)' at line 3")

-----------
QUERY:

create view tt15v as select row(i)::nestedcomposite from int8_tbl i;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')::nestedcomposite from int8_tbl i' at line 1")

-----------
QUERY:

select * from tt15v;
RESULT:
	ERROR - (1146, "Table 'test.tt15v' doesn't exist")

-----------
QUERY:

select pg_get_viewdef('tt15v', true);
RESULT:
	ERROR - (1305, 'FUNCTION test.pg_get_viewdef does not exist')

-----------
QUERY:

select row(i.*::int8_tbl)::nestedcomposite from int8_tbl i;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '*::int8_tbl)::nestedcomposite from int8_tbl i' at line 1")

-----------
QUERY:


create view tt16v as select * from int8_tbl i, lateral(values(i)) ss;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(i)) ss' at line 1")

-----------
QUERY:

select * from tt16v;
RESULT:
	ERROR - (1146, "Table 'test.tt16v' doesn't exist")

-----------
QUERY:

select pg_get_viewdef('tt16v', true);
RESULT:
	ERROR - (1305, 'FUNCTION test.pg_get_viewdef does not exist')

-----------
QUERY:

select * from int8_tbl i, lateral(values(i.*::int8_tbl)) ss;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(i.*::int8_tbl)) ss' at line 1")

-----------
QUERY:


create view tt17v as select * from int8_tbl i where i in (values(i));
RESULT:
	ERROR - (1146, "Table 'test.int8_tbl' doesn't exist")

-----------
QUERY:

select * from tt17v;
RESULT:
	ERROR - (1146, "Table 'test.tt17v' doesn't exist")

-----------
QUERY:

select pg_get_viewdef('tt17v', true);
RESULT:
	ERROR - (1305, 'FUNCTION test.pg_get_viewdef does not exist')

-----------
QUERY:

select * from int8_tbl i where i.* in (values(i.*::int8_tbl));
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '* in (values(i.*::int8_tbl))' at line 1")

-----------
QUERY:


create table tt15v_log(o tt15v, n tt15v, incr bool);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'tt15v, n tt15v, incr bool)' at line 1")

-----------
QUERY:

create rule updlog as on update to tt15v do also
  insert into tt15v_log values(old, new, row(old,old) < row(new,new));
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'rule updlog as on update to tt15v do also\n  insert into tt15v_log values(old, ne' at line 1")

-----------
QUERY:

-- \d+ tt15v

-- check unique-ification of overlength names

create view tt18v as
  select * from int8_tbl xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxy
  union all
  select * from int8_tbl xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxz;
RESULT:
	ERROR - (1146, "Table 'test.int8_tbl' doesn't exist")

-----------
QUERY:

select pg_get_viewdef('tt18v', true);
RESULT:
	ERROR - (1305, 'FUNCTION test.pg_get_viewdef does not exist')

-----------
QUERY:

explain (costs off) select * from tt18v;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'costs off) select * from tt18v' at line 1")

-----------
QUERY:


-- check display of ScalarArrayOp with a sub-select

select 'foo'::text = any(array['abc','def','foo']::text[]);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::text = any(array['abc','def','foo']::text[])' at line 3")

-----------
QUERY:

select 'foo'::text = any((select array['abc','def','foo']::text[]));
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::text = any((select array['abc','def','foo']::text[]))' at line 1")

-----------
QUERY:
  -- fail
select 'foo'::text = any((select array['abc','def','foo']::text[])::text[]);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::text = any((select array['abc','def','foo']::text[])::text[])' at line 2")

-----------
QUERY:


create view tt19v as
select 'foo'::text = any(array['abc','def','foo']::text[]) c1,
       'foo'::text = any((select array['abc','def','foo']::text[])::text[]) c2;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::text = any(array['abc','def','foo']::text[]) c1,\n       'foo'::text = any((sel' at line 2")

-----------
QUERY:

select pg_get_viewdef('tt19v', true);
RESULT:
	ERROR - (1305, 'FUNCTION test.pg_get_viewdef does not exist')

-----------
QUERY:


-- check display of assorted RTE_FUNCTION expressions

create view tt20v as
select * from
  coalesce(1,2) as c,
  collation for ('x'::text) col,
  current_date as d,
  localtimestamp(3) as t,
  cast(1+2 as int4) as i4,
  cast(1+2 as int8) as i8;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(1,2) as c,\n  collation for ('x'::text) col,\n  current_date as d,\n  localtimesta' at line 5")

-----------
QUERY:

select pg_get_viewdef('tt20v', true);
RESULT:
	ERROR - (1305, 'FUNCTION test.pg_get_viewdef does not exist')

-----------
QUERY:


-- reverse-listing of various special function syntaxes required by SQL

create view tt201v as
select
  ('2022-12-01'::date + '1 day'::interval) at time zone 'UTC' as atz,
  extract(day from now()) as extr,
  (now(), '1 day'::interval) overlaps
    (current_timestamp(2), '1 day'::interval) as o,
  'foo' is normalized isn,
  'foo' is nfkc normalized isnn,
  normalize('foo') as n,
  normalize('foo', nfkd) as nfkd,
  overlay('foo' placing 'bar' from 2) as ovl,
  overlay('foo' placing 'bar' from 2 for 3) as ovl2,
  position('foo' in 'foobar') as p,
  substring('foo' from 2 for 3) as s,
  substring('foo' similar 'f' escape '#') as ss,
  substring('foo' from 'oo') as ssf,  -- historically-permitted abuse
  trim(' ' from ' foo ') as bt,
  trim(leading ' ' from ' foo ') as lt,
  trim(trailing ' foo ') as rt,
  trim(E'\\000'::bytea from E'\\000Tom\\000'::bytea) as btb,
  trim(leading E'\\000'::bytea from E'\\000Tom\\000'::bytea) as ltb,
  trim(trailing E'\\000'::bytea from E'\\000Tom\\000'::bytea) as rtb,
  CURRENT_DATE as cd,
  (select * from CURRENT_DATE) as cd2,
  CURRENT_TIME as ct,
  (select * from CURRENT_TIME) as ct2,
  CURRENT_TIME (1) as ct3,
  (select * from CURRENT_TIME (1)) as ct4,
  CURRENT_TIMESTAMP as ct5,
  (select * from CURRENT_TIMESTAMP) as ct6,
  CURRENT_TIMESTAMP (1) as ct7,
  (select * from CURRENT_TIMESTAMP (1)) as ct8,
  LOCALTIME as lt1,
  (select * from LOCALTIME) as lt2,
  LOCALTIME (1) as lt3,
  (select * from LOCALTIME (1)) as lt4,
  LOCALTIMESTAMP as lt5,
  (select * from LOCALTIMESTAMP) as lt6,
  LOCALTIMESTAMP (1) as lt7,
  (select * from LOCALTIMESTAMP (1)) as lt8,
  CURRENT_CATALOG as ca,
  (select * from CURRENT_CATALOG) as ca2,
  CURRENT_ROLE as cr,
  (select * from CURRENT_ROLE) as cr2,
  CURRENT_SCHEMA as cs,
  (select * from CURRENT_SCHEMA) as cs2,
  CURRENT_USER as cu,
  (select * from CURRENT_USER) as cu2,
  USER as us,
  (select * from USER) as us2,
  SESSION_USER seu,
  (select * from SESSION_USER) as seu2,
  SYSTEM_USER as su,
  (select * from SYSTEM_USER) as su2;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::date + '1 day'::interval) at time zone 'UTC' as atz,\n  extract(day from now())' at line 5")

-----------
QUERY:

select pg_get_viewdef('tt201v', true);
RESULT:
	ERROR - (1305, 'FUNCTION test.pg_get_viewdef does not exist')

-----------
QUERY:


-- corner cases with empty join conditions

create view tt21v as
select * from tt5 natural inner join tt6;
RESULT:
	[]

-----------
QUERY:

select pg_get_viewdef('tt21v', true);
RESULT:
	ERROR - (1305, 'FUNCTION test.pg_get_viewdef does not exist')

-----------
QUERY:


create view tt22v as
select * from tt5 natural left join tt6;
RESULT:
	[]

-----------
QUERY:

select pg_get_viewdef('tt22v', true);
RESULT:
	ERROR - (1305, 'FUNCTION test.pg_get_viewdef does not exist')

-----------
QUERY:


-- check handling of views with immediately-renamed columns

create view tt23v (col_a, col_b) as
select q1 as other_name1, q2 as other_name2 from int8_tbl
union
select 42, 43;
RESULT:
	ERROR - (1146, "Table 'test.int8_tbl' doesn't exist")

-----------
QUERY:


select pg_get_viewdef('tt23v', true);
RESULT:
	ERROR - (1305, 'FUNCTION test.pg_get_viewdef does not exist')

-----------
QUERY:

select pg_get_ruledef(oid, true) from pg_rewrite
  where ev_class = 'tt23v'::regclass and ev_type = '1';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::regclass and ev_type = '1'' at line 2")

-----------
QUERY:


-- test extraction of FieldSelect field names (get_name_for_var_field)

create view tt24v as
with cte as materialized (select r from (values(1,2),(3,4)) r)
select (r).column2 as col_a, (rr).column2 as col_b from
  cte join (select rr from (values(1,7),(3,8)) rr limit 2) ss
  on (r).column1 = (rr).column1;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'materialized (select r from (values(1,2),(3,4)) r)\nselect (r).column2 as col_a, ' at line 4")

-----------
QUERY:

select pg_get_viewdef('tt24v', true);
RESULT:
	ERROR - (1305, 'FUNCTION test.pg_get_viewdef does not exist')

-----------
QUERY:

create view tt25v as
with cte as materialized (select pg_get_keywords() k)
select (k).word from cte;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'materialized (select pg_get_keywords() k)\nselect (k).word from cte' at line 2")

-----------
QUERY:

select pg_get_viewdef('tt25v', true);
RESULT:
	ERROR - (1305, 'FUNCTION test.pg_get_viewdef does not exist')

-----------
QUERY:

-- also check cases seen only in EXPLAIN
explain (verbose, costs off)
select * from tt24v;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'verbose, costs off)\nselect * from tt24v' at line 2")

-----------
QUERY:

explain (verbose, costs off)
select (r).column2 from (select r from (values(1,2),(3,4)) r limit 1) ss;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'verbose, costs off)\nselect (r).column2 from (select r from (values(1,2),(3,4)) r' at line 1")

-----------
QUERY:


-- test pretty-print parenthesization rules, and SubLink deparsing

create view tt26v as
select x + y + z as c1,
       (x * y) + z as c2,
       x + (y * z) as c3,
       (x + y) * z as c4,
       x * (y + z) as c5,
       x + (y + z) as c6,
       x + (y # z) as c7,
       (x > y) AND (y > z OR x > z) as c8,
       (x > y) OR (y > z AND NOT (x > z)) as c9,
       (x,y) <> ALL (values(1,2),(3,4)) as c10,
       (x,y) <= ANY (values(1,2),(3,4)) as c11
from (values(1,2,3)) v(x,y,z);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'as c8,\n       (x > y) OR (y > z AND NOT (x > z)) as c9,\n       (x,y) <> ALL (val' at line 11")

-----------
QUERY:

select pg_get_viewdef('tt26v', true);
RESULT:
	ERROR - (1305, 'FUNCTION test.pg_get_viewdef does not exist')

-----------
QUERY:


-- clean up all the random objects we made above
DROP SCHEMA temp_view_test CASCADE;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'CASCADE' at line 2")

-----------
QUERY:

DROP SCHEMA testviewschm2 CASCADE;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'CASCADE' at line 1")
