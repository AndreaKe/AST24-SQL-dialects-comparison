
-----------
QUERY:
--
-- Test domains.
--

-- Test Comment / Drop
create domain domaindroptest int4;
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:

comment on domain domaindroptest is 'About to drop this..';
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:


create domain dependenttypetest domaindroptest;
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:


-- fail because of dependent type
drop domain domaindroptest;
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:


drop domain domaindroptest cascade;
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:


-- this should fail because already gone
drop domain domaindroptest cascade;
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:



-- Test domain input.

-- Note: the point of checking both INSERT and COPY FROM is that INSERT
-- exercises CoerceToDomain while COPY exercises domain_in.

create domain domainvarchar varchar(5);
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:

create domain domainnumeric numeric(8,2);
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:

create domain domainint4 int4;
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:

create domain domaintext text;
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:


-- Test explicit coercions --- these should succeed (and truncate)
SELECT cast('123456' as domainvarchar);
RESULT:
	ERROR - Catalog Error: Type with name domainvarchar does not exist!
Did you mean "nvarchar"?

-----------
QUERY:

SELECT cast('12345' as domainvarchar);
RESULT:
	ERROR - Catalog Error: Type with name domainvarchar does not exist!
Did you mean "nvarchar"?

-----------
QUERY:


-- Test tables using domains
create table basictest
           ( testint4 domainint4
           , testtext domaintext
           , testvarchar domainvarchar
           , testnumeric domainnumeric
           );
RESULT:
	ERROR - Catalog Error: Type with name domainint4 does not exist!
Did you mean "int4"?

-----------
QUERY:


INSERT INTO basictest values ('88', 'haha', 'short', '123.12');
RESULT:
	ERROR - Catalog Error: Table with name basictest does not exist!
Did you mean "temp.information_schema.schemata"?

-----------
QUERY:
      -- Good
INSERT INTO basictest values ('88', 'haha', 'short text', '123.12');
RESULT:
	ERROR - Catalog Error: Table with name basictest does not exist!
Did you mean "temp.information_schema.schemata"?

-----------
QUERY:
 -- Bad varchar
INSERT INTO basictest values ('88', 'haha', 'short', '123.1212');
RESULT:
	ERROR - Catalog Error: Table with name basictest does not exist!
Did you mean "temp.information_schema.schemata"?

-----------
QUERY:
    -- Truncate numeric

-- Test copy
COPY basictest (testvarchar) FROM stdin;
RESULT:
	ERROR - Catalog Error: Table with name basictest does not exist!
Did you mean "temp.information_schema.schemata"?

-----------
QUERY:
 -- fail
notsoshorttext
\.

COPY basictest (testvarchar) FROM stdin;
RESULT:
	ERROR - Parser Error: syntax error at or near "notsoshorttext"

-----------
QUERY:

short
\.

select * from basictest;
RESULT:
	ERROR - Parser Error: syntax error at or near "short"

-----------
QUERY:


-- check that domains inherit operations from base types
select testtext || testvarchar as concat, testnumeric + 42 as sum
from basictest;
RESULT:
	ERROR - Catalog Error: Table with name basictest does not exist!
Did you mean "temp.information_schema.schemata"?

-----------
QUERY:


-- check that union/case/coalesce type resolution handles domains properly
select pg_typeof(coalesce(4::domainint4, 7));
RESULT:
	ERROR - Catalog Error: Type with name domainint4 does not exist!
Did you mean "int4"?

-----------
QUERY:

select pg_typeof(coalesce(4::domainint4, 7::domainint4));
RESULT:
	ERROR - Catalog Error: Type with name domainint4 does not exist!
Did you mean "int4"?

-----------
QUERY:


drop table basictest;
RESULT:
	ERROR - Catalog Error: Table with name basictest does not exist!
Did you mean "temp.information_schema.schemata"?

-----------
QUERY:

drop domain domainvarchar restrict;
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:

drop domain domainnumeric restrict;
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:

drop domain domainint4 restrict;
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:

drop domain domaintext;
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:



-- Test non-error-throwing input

create domain positiveint int4 check(value > 0);
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:

create domain weirdfloat float8 check((1 / value) < 10);
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:


select pg_input_is_valid('1', 'positiveint');
RESULT:
	ERROR - Catalog Error: Scalar Function with name pg_input_is_valid does not exist!
Did you mean "json_valid"?

-----------
QUERY:

select pg_input_is_valid('junk', 'positiveint');
RESULT:
	ERROR - Catalog Error: Scalar Function with name pg_input_is_valid does not exist!
Did you mean "json_valid"?

-----------
QUERY:

select pg_input_is_valid('-1', 'positiveint');
RESULT:
	ERROR - Catalog Error: Scalar Function with name pg_input_is_valid does not exist!
Did you mean "json_valid"?

-----------
QUERY:

select * from pg_input_error_info('junk', 'positiveint');
RESULT:
	ERROR - Catalog Error: Table Function with name pg_input_error_info does not exist!
Did you mean "pragma_storage_info"?

-----------
QUERY:

select * from pg_input_error_info('-1', 'positiveint');
RESULT:
	ERROR - Catalog Error: Table Function with name pg_input_error_info does not exist!
Did you mean "pragma_storage_info"?

-----------
QUERY:

select * from pg_input_error_info('junk', 'weirdfloat');
RESULT:
	ERROR - Catalog Error: Table Function with name pg_input_error_info does not exist!
Did you mean "pragma_storage_info"?

-----------
QUERY:

select * from pg_input_error_info('0.01', 'weirdfloat');
RESULT:
	ERROR - Catalog Error: Table Function with name pg_input_error_info does not exist!
Did you mean "pragma_storage_info"?

-----------
QUERY:

-- We currently can/* REPLACED */''t trap errors raised in the CHECK expression itself
select * from pg_input_error_info('0', 'weirdfloat');
RESULT:
	ERROR - Catalog Error: Table Function with name pg_input_error_info does not exist!
Did you mean "pragma_storage_info"?

-----------
QUERY:


drop domain positiveint;
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:

drop domain weirdfloat;
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:



-- Test domains over array types

create domain domainint4arr int4[1];
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:

create domain domainchar4arr varchar(4)[2][3];
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:


create table domarrtest
           ( testint4arr domainint4arr
           , testchar4arr domainchar4arr
            );
RESULT:
	ERROR - Catalog Error: Type with name domainint4arr does not exist!
Did you mean "int4"?

-----------
QUERY:

INSERT INTO domarrtest values ('{2,2}', '{{"a","b"},{"c","d"}}');
RESULT:
	ERROR - Catalog Error: Table with name domarrtest does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:

INSERT INTO domarrtest values ('{{2,2},{2,2}}', '{{"a","b"}}');
RESULT:
	ERROR - Catalog Error: Table with name domarrtest does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:

INSERT INTO domarrtest values ('{2,2}', '{{"a","b"},{"c","d"},{"e","f"}}');
RESULT:
	ERROR - Catalog Error: Table with name domarrtest does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:

INSERT INTO domarrtest values ('{2,2}', '{{"a"},{"c"}}');
RESULT:
	ERROR - Catalog Error: Table with name domarrtest does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:

INSERT INTO domarrtest values (NULL, '{{"a","b","c"},{"d","e","f"}}');
RESULT:
	ERROR - Catalog Error: Table with name domarrtest does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:

INSERT INTO domarrtest values (NULL, '{{"toolong","b","c"},{"d","e","f"}}');
RESULT:
	ERROR - Catalog Error: Table with name domarrtest does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:

INSERT INTO domarrtest (testint4arr[1], testint4arr[3]) values (11,22);
RESULT:
	ERROR - Catalog Error: Table with name domarrtest does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:

select * from domarrtest;
RESULT:
	ERROR - Catalog Error: Table with name domarrtest does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:

select testint4arr[1], testchar4arr[2:2] from domarrtest;
RESULT:
	ERROR - Catalog Error: Table with name domarrtest does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:

select array_dims(testint4arr), array_dims(testchar4arr) from domarrtest;
RESULT:
	ERROR - Catalog Error: Table with name domarrtest does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:


COPY domarrtest FROM stdin;
RESULT:
	ERROR - Catalog Error: Table with name domarrtest does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:

{3,4}	{q,w,e}
\N	\N
\.

COPY domarrtest FROM stdin;
RESULT:
	ERROR - Parser Error: syntax error at or near "{"

-----------
QUERY:
	-- fail
{3,4}	{qwerty,w,e}
\.

select * from domarrtest;
RESULT:
	ERROR - Parser Error: syntax error at or near "{"

-----------
QUERY:


update domarrtest set
  testint4arr[1] = testint4arr[1] + 1,
  testint4arr[3] = testint4arr[3] - 1
where testchar4arr is null;
RESULT:
	ERROR - Catalog Error: Table with name domarrtest does not exist!
Did you mean "temp.information_schema.tables"?
LINE 3: update domarrtest set
               ^

-----------
QUERY:


select * from domarrtest where testchar4arr is null;
RESULT:
	ERROR - Catalog Error: Table with name domarrtest does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:


drop table domarrtest;
RESULT:
	ERROR - Catalog Error: Table with name domarrtest does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:

drop domain domainint4arr restrict;
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:

drop domain domainchar4arr restrict;
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:


create domain dia as int[];
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:

select '{1,2,3}'::dia;
RESULT:
	ERROR - Catalog Error: Type with name dia does not exist!
Did you mean "date"?

-----------
QUERY:

select array_dims('{1,2,3}'::dia);
RESULT:
	ERROR - Catalog Error: Scalar Function with name array_dims does not exist!
Did you mean "array_has"?

-----------
QUERY:

select pg_typeof('{1,2,3}'::dia);
RESULT:
	ERROR - Catalog Error: Type with name dia does not exist!
Did you mean "date"?

-----------
QUERY:

select pg_typeof('{1,2,3}'::dia || 42);
RESULT:
	ERROR - Catalog Error: Type with name dia does not exist!
Did you mean "date"?

-----------
QUERY:
 -- should be int[] not dia
drop domain dia;
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:



-- Test domains over composites

create type comptype as (r float8, i float8);
RESULT:
	ERROR - Parser Error: syntax error at or near "("

-----------
QUERY:

create domain dcomptype as comptype;
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:

create table dcomptable (d1 dcomptype unique);
RESULT:
	ERROR - Catalog Error: Type with name dcomptype does not exist!
Did you mean "date"?

-----------
QUERY:


insert into dcomptable values (row(1,2)::dcomptype);
RESULT:
	ERROR - Catalog Error: Table with name dcomptable does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:

insert into dcomptable values (row(3,4)::comptype);
RESULT:
	ERROR - Catalog Error: Table with name dcomptable does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:

insert into dcomptable values (row(1,2)::dcomptype);
RESULT:
	ERROR - Catalog Error: Table with name dcomptable does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:
  -- fail on uniqueness
insert into dcomptable (d1.r) values(11);
RESULT:
	ERROR - Catalog Error: Table with name dcomptable does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:


select * from dcomptable;
RESULT:
	ERROR - Catalog Error: Table with name dcomptable does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:

select (d1).r, (d1).i, (d1).* from dcomptable;
RESULT:
	ERROR - Parser Error: syntax error at or near "*"

-----------
QUERY:

update dcomptable set d1.r = (d1).r + 1 where (d1).i > 0;
RESULT:
	ERROR - Catalog Error: Table with name dcomptable does not exist!
Did you mean "temp.information_schema.tables"?
LINE 2: update dcomptable set d1.r = (d1).r + 1 where...
               ^

-----------
QUERY:

select * from dcomptable;
RESULT:
	ERROR - Catalog Error: Table with name dcomptable does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:


alter domain dcomptype add constraint c1 check ((value).r <= (value).i);
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:

alter domain dcomptype add constraint c2 check ((value).r > (value).i);
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:
  -- fail

select row(2,1)::dcomptype;
RESULT:
	ERROR - Catalog Error: Type with name dcomptype does not exist!
Did you mean "date"?

-----------
QUERY:
  -- fail
insert into dcomptable values (row(1,2)::comptype);
RESULT:
	ERROR - Catalog Error: Table with name dcomptable does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:

insert into dcomptable values (row(2,1)::comptype);
RESULT:
	ERROR - Catalog Error: Table with name dcomptable does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:
  -- fail
insert into dcomptable (d1.r) values(99);
RESULT:
	ERROR - Catalog Error: Table with name dcomptable does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:

insert into dcomptable (d1.r, d1.i) values(99, 100);
RESULT:
	ERROR - Catalog Error: Table with name dcomptable does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:

insert into dcomptable (d1.r, d1.i) values(100, 99);
RESULT:
	ERROR - Catalog Error: Table with name dcomptable does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:
  -- fail
update dcomptable set d1.r = (d1).r + 1 where (d1).i > 0;
RESULT:
	ERROR - Catalog Error: Table with name dcomptable does not exist!
Did you mean "temp.information_schema.tables"?
LINE 2: update dcomptable set d1.r = (d1).r ...
               ^

-----------
QUERY:
  -- fail
update dcomptable set d1.r = (d1).r - 1, d1.i = (d1).i + 1 where (d1).i > 0;
RESULT:
	ERROR - Catalog Error: Table with name dcomptable does not exist!
Did you mean "temp.information_schema.tables"?
LINE 2: update dcomptable set d1.r = (d1).r ...
               ^

-----------
QUERY:

select * from dcomptable;
RESULT:
	ERROR - Catalog Error: Table with name dcomptable does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:


explain (verbose, costs off)
  update dcomptable set d1.r = (d1).r - 1, d1.i = (d1).i + 1 where (d1).i > 0;
RESULT:
	ERROR - Not implemented Error: Unimplemented explain type: verbose

-----------
QUERY:

create rule silly as on delete to dcomptable do instead
  update dcomptable set d1.r = (d1).r - 1, d1.i = (d1).i + 1 where (d1).i > 0;
RESULT:
	ERROR - Parser Error: syntax error at or near "rule"

-----------
QUERY:

-- \d+ dcomptable

create function makedcomp(r float8, i float8) returns dcomptype
as 'select row(r, i)' language sql;
RESULT:
	ERROR - Parser Error: syntax error at or near "float8"

-----------
QUERY:


select makedcomp(1,2);
RESULT:
	ERROR - Catalog Error: Scalar Function with name makedcomp does not exist!
Did you mean "mad"?

-----------
QUERY:

select makedcomp(2,1);
RESULT:
	ERROR - Catalog Error: Scalar Function with name makedcomp does not exist!
Did you mean "mad"?

-----------
QUERY:
  -- fail
select * from makedcomp(1,2) m;
RESULT:
	ERROR - Catalog Error: Table Function with name makedcomp does not exist!
Did you mean "range"?

-----------
QUERY:

select m, m is not null from makedcomp(1,2) m;
RESULT:
	ERROR - Catalog Error: Table Function with name makedcomp does not exist!
Did you mean "range"?

-----------
QUERY:


drop function makedcomp(float8, float8);
RESULT:
	ERROR - Parser Error: syntax error at or near "("

-----------
QUERY:

drop table dcomptable;
RESULT:
	ERROR - Catalog Error: Table with name dcomptable does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:

drop type comptype cascade;
RESULT:
	ERROR - Catalog Error: Type with name comptype does not exist!
Did you mean "map"?

-----------
QUERY:



-- check altering and dropping columns used by domain constraints
create type comptype as (r float8, i float8);
RESULT:
	ERROR - Parser Error: syntax error at or near "("

-----------
QUERY:

create domain dcomptype as comptype;
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:

alter domain dcomptype add constraint c1 check ((value).r > 0);
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:

comment on constraint c1 on domain dcomptype is 'random commentary';
RESULT:
	ERROR - Parser Error: syntax error at or near "constraint"

-----------
QUERY:


select row(0,1)::dcomptype;
RESULT:
	ERROR - Catalog Error: Type with name dcomptype does not exist!
Did you mean "date"?

-----------
QUERY:
  -- fail

alter type comptype alter attribute r type varchar;
RESULT:
	ERROR - Parser Error: syntax error at or near "type"

-----------
QUERY:
  -- fail
alter type comptype alter attribute r type bigint;
RESULT:
	ERROR - Parser Error: syntax error at or near "type"

-----------
QUERY:


alter type comptype drop attribute r;
RESULT:
	ERROR - Parser Error: syntax error at or near "type"

-----------
QUERY:
  -- fail
alter type comptype drop attribute i;
RESULT:
	ERROR - Parser Error: syntax error at or near "type"

-----------
QUERY:


select conname, obj_description(oid, 'pg_constraint') from pg_constraint
  where contypid = 'dcomptype'::regtype;
RESULT:
	ERROR - Catalog Error: Type with name regtype does not exist!
Did you mean "date"?

-----------
QUERY:
  -- check comment is still there

drop type comptype cascade;
RESULT:
	ERROR - Catalog Error: Type with name comptype does not exist!
Did you mean "map"?

-----------
QUERY:



-- Test domains over arrays of composite

create type comptype as (r float8, i float8);
RESULT:
	ERROR - Parser Error: syntax error at or near "("

-----------
QUERY:

create domain dcomptypea as comptype[];
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:

create table dcomptable (d1 dcomptypea unique);
RESULT:
	ERROR - Catalog Error: Type with name dcomptypea does not exist!
Did you mean "date"?

-----------
QUERY:


insert into dcomptable values (array[row(1,2)]::dcomptypea);
RESULT:
	ERROR - Catalog Error: Table with name dcomptable does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:

insert into dcomptable values (array[row(3,4), row(5,6)]::comptype[]);
RESULT:
	ERROR - Catalog Error: Table with name dcomptable does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:

insert into dcomptable values (array[row(7,8)::comptype, row(9,10)::comptype]);
RESULT:
	ERROR - Catalog Error: Table with name dcomptable does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:

insert into dcomptable values (array[row(1,2)]::dcomptypea);
RESULT:
	ERROR - Catalog Error: Table with name dcomptable does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:
  -- fail on uniqueness
insert into dcomptable (d1[1]) values(row(9,10));
RESULT:
	ERROR - Catalog Error: Table with name dcomptable does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:

insert into dcomptable (d1[1].r) values(11);
RESULT:
	ERROR - Catalog Error: Table with name dcomptable does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:


select * from dcomptable;
RESULT:
	ERROR - Catalog Error: Table with name dcomptable does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:

select d1[2], d1[1].r, d1[1].i from dcomptable;
RESULT:
	ERROR - Catalog Error: Table with name dcomptable does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:

update dcomptable set d1[2] = row(d1[2].i, d1[2].r);
RESULT:
	ERROR - Catalog Error: Table with name dcomptable does not exist!
Did you mean "temp.information_schema.tables"?
LINE 2: update dcomptable set d1[2] = row(d1[2].i, d1...
               ^

-----------
QUERY:

select * from dcomptable;
RESULT:
	ERROR - Catalog Error: Table with name dcomptable does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:

update dcomptable set d1[1].r = d1[1].r + 1 where d1[1].i > 0;
RESULT:
	ERROR - Catalog Error: Table with name dcomptable does not exist!
Did you mean "temp.information_schema.tables"?
LINE 2: update dcomptable set d1[1].r = d1[1].r + 1 w...
               ^

-----------
QUERY:

select * from dcomptable;
RESULT:
	ERROR - Catalog Error: Table with name dcomptable does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:


alter domain dcomptypea add constraint c1 check (value[1].r <= value[1].i);
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:

alter domain dcomptypea add constraint c2 check (value[1].r > value[1].i);
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:
  -- fail

select array[row(2,1)]::dcomptypea;
RESULT:
	ERROR - Catalog Error: Type with name dcomptypea does not exist!
Did you mean "date"?

-----------
QUERY:
  -- fail
insert into dcomptable values (array[row(1,2)]::comptype[]);
RESULT:
	ERROR - Catalog Error: Table with name dcomptable does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:

insert into dcomptable values (array[row(2,1)]::comptype[]);
RESULT:
	ERROR - Catalog Error: Table with name dcomptable does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:
  -- fail
insert into dcomptable (d1[1].r) values(99);
RESULT:
	ERROR - Catalog Error: Table with name dcomptable does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:

insert into dcomptable (d1[1].r, d1[1].i) values(99, 100);
RESULT:
	ERROR - Catalog Error: Table with name dcomptable does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:

insert into dcomptable (d1[1].r, d1[1].i) values(100, 99);
RESULT:
	ERROR - Catalog Error: Table with name dcomptable does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:
  -- fail
update dcomptable set d1[1].r = d1[1].r + 1 where d1[1].i > 0;
RESULT:
	ERROR - Catalog Error: Table with name dcomptable does not exist!
Did you mean "temp.information_schema.tables"?
LINE 2: update dcomptable set d1[1].r = d1[1...
               ^

-----------
QUERY:
  -- fail
update dcomptable set d1[1].r = d1[1].r - 1, d1[1].i = d1[1].i + 1
  where d1[1].i > 0;
RESULT:
	ERROR - Catalog Error: Table with name dcomptable does not exist!
Did you mean "temp.information_schema.tables"?
LINE 2: update dcomptable set d1[1].r = d1[1...
               ^

-----------
QUERY:

select * from dcomptable;
RESULT:
	ERROR - Catalog Error: Table with name dcomptable does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:


explain (verbose, costs off)
  update dcomptable set d1[1].r = d1[1].r - 1, d1[1].i = d1[1].i + 1
    where d1[1].i > 0;
RESULT:
	ERROR - Not implemented Error: Unimplemented explain type: verbose

-----------
QUERY:

create rule silly as on delete to dcomptable do instead
  update dcomptable set d1[1].r = d1[1].r - 1, d1[1].i = d1[1].i + 1
    where d1[1].i > 0;
RESULT:
	ERROR - Parser Error: syntax error at or near "rule"

-----------
QUERY:

-- \d+ dcomptable

drop table dcomptable;
RESULT:
	ERROR - Catalog Error: Table with name dcomptable does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:

drop type comptype cascade;
RESULT:
	ERROR - Catalog Error: Type with name comptype does not exist!
Did you mean "map"?

-----------
QUERY:



-- Test arrays over domains

create domain posint as int check (value > 0);
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:


create table pitable (f1 posint[]);
RESULT:
	ERROR - Catalog Error: Type with name posint does not exist!
Did you mean "int"?

-----------
QUERY:

insert into pitable values(array[42]);
RESULT:
	ERROR - Catalog Error: Table with name pitable does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:

insert into pitable values(array[-1]);
RESULT:
	ERROR - Catalog Error: Table with name pitable does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:
  -- fail
insert into pitable values('{0}');
RESULT:
	ERROR - Catalog Error: Table with name pitable does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:
  -- fail
update pitable set f1[1] = f1[1] + 1;
RESULT:
	ERROR - Catalog Error: Table with name pitable does not exist!
Did you mean "temp.information_schema.tables"?
LINE 2: update pitable set f1[1] = f1[1] + 1;
               ^

-----------
QUERY:

update pitable set f1[1] = 0;
RESULT:
	ERROR - Catalog Error: Table with name pitable does not exist!
Did you mean "temp.information_schema.tables"?
LINE 2: update pitable set f1[1] = 0;
               ^

-----------
QUERY:
  -- fail
select * from pitable;
RESULT:
	ERROR - Catalog Error: Table with name pitable does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:

drop table pitable;
RESULT:
	ERROR - Catalog Error: Table with name pitable does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:


create domain vc4 as varchar(4);
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:

create table vc4table (f1 vc4[]);
RESULT:
	ERROR - Catalog Error: Type with name vc4 does not exist!
Did you mean "dec"?

-----------
QUERY:

insert into vc4table values(array['too long']);
RESULT:
	ERROR - Catalog Error: Table with name vc4table does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:
  -- fail
insert into vc4table values(array['too long']::vc4[]);
RESULT:
	ERROR - Catalog Error: Table with name vc4table does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:
  -- cast truncates
select * from vc4table;
RESULT:
	ERROR - Catalog Error: Table with name vc4table does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:

drop table vc4table;
RESULT:
	ERROR - Catalog Error: Table with name vc4table does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:

drop type vc4;
RESULT:
	ERROR - Catalog Error: Type with name vc4 does not exist!
Did you mean "dec"?

-----------
QUERY:


-- You can sort of fake arrays-of-arrays by putting a domain in between
create domain dposinta as posint[];
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:

create table dposintatable (f1 dposinta[]);
RESULT:
	ERROR - Catalog Error: Type with name dposinta does not exist!
Did you mean "int"?

-----------
QUERY:

insert into dposintatable values(array[array[42]]);
RESULT:
	ERROR - Catalog Error: Table with name dposintatable does not exist!
Did you mean "INT2_TBL"?

-----------
QUERY:
  -- fail
insert into dposintatable values(array[array[42]::posint[]]);
RESULT:
	ERROR - Catalog Error: Table with name dposintatable does not exist!
Did you mean "INT2_TBL"?

-----------
QUERY:
 -- still fail
insert into dposintatable values(array[array[42]::dposinta]);
RESULT:
	ERROR - Catalog Error: Table with name dposintatable does not exist!
Did you mean "INT2_TBL"?

-----------
QUERY:
 -- but this works
select f1, f1[1], (f1[1])[1] from dposintatable;
RESULT:
	ERROR - Catalog Error: Table with name dposintatable does not exist!
Did you mean "INT2_TBL"?

-----------
QUERY:

select pg_typeof(f1) from dposintatable;
RESULT:
	ERROR - Catalog Error: Table with name dposintatable does not exist!
Did you mean "INT2_TBL"?

-----------
QUERY:

select pg_typeof(f1[1]) from dposintatable;
RESULT:
	ERROR - Catalog Error: Table with name dposintatable does not exist!
Did you mean "INT2_TBL"?

-----------
QUERY:

select pg_typeof(f1[1][1]) from dposintatable;
RESULT:
	ERROR - Catalog Error: Table with name dposintatable does not exist!
Did you mean "INT2_TBL"?

-----------
QUERY:

select pg_typeof((f1[1])[1]) from dposintatable;
RESULT:
	ERROR - Catalog Error: Table with name dposintatable does not exist!
Did you mean "INT2_TBL"?

-----------
QUERY:

update dposintatable set f1[2] = array[99];
RESULT:
	ERROR - Catalog Error: Table with name dposintatable does not exist!
Did you mean "INT2_TBL"?
LINE 2: update dposintatable set f1[2] = array[99];
               ^

-----------
QUERY:

select f1, f1[1], (f1[2])[1] from dposintatable;
RESULT:
	ERROR - Catalog Error: Table with name dposintatable does not exist!
Did you mean "INT2_TBL"?

-----------
QUERY:

-- it/* REPLACED */''d be nice if you could do something like this, but for now you can/* REPLACED */''t:
update dposintatable set f1[2][1] = array[97];
RESULT:
	ERROR - Catalog Error: Table with name dposintatable does not exist!
Did you mean "INT2_TBL"?
LINE 3: update dposintatable set f1[2][1] = array[97];
               ^

-----------
QUERY:

-- maybe someday we can make this syntax work:
update dposintatable set (f1[2])[1] = array[98];
RESULT:
	ERROR - Parser Error: syntax error at or near "["

-----------
QUERY:


drop table dposintatable;
RESULT:
	ERROR - Catalog Error: Table with name dposintatable does not exist!
Did you mean "INT2_TBL"?

-----------
QUERY:

drop domain posint cascade;
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:



-- Test arrays over domains of composite

create type comptype as (cf1 int, cf2 int);
RESULT:
	ERROR - Parser Error: syntax error at or near "("

-----------
QUERY:

create domain dcomptype as comptype check ((value).cf1 > 0);
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:


create table dcomptable (f1 dcomptype[]);
RESULT:
	ERROR - Catalog Error: Type with name dcomptype does not exist!
Did you mean "date"?

-----------
QUERY:

insert into dcomptable values (null);
RESULT:
	ERROR - Catalog Error: Table with name dcomptable does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:

update dcomptable set f1[1].cf2 = 5;
RESULT:
	ERROR - Catalog Error: Table with name dcomptable does not exist!
Did you mean "temp.information_schema.tables"?
LINE 2: update dcomptable set f1[1].cf2 = 5;
               ^

-----------
QUERY:

table dcomptable;
RESULT:
	ERROR - Catalog Error: Table with name dcomptable does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:

update dcomptable set f1[1].cf1 = -1;
RESULT:
	ERROR - Catalog Error: Table with name dcomptable does not exist!
Did you mean "temp.information_schema.tables"?
LINE 2: update dcomptable set f1[1].cf1 = -1;
               ^

-----------
QUERY:
  -- fail
update dcomptable set f1[1].cf1 = 1;
RESULT:
	ERROR - Catalog Error: Table with name dcomptable does not exist!
Did you mean "temp.information_schema.tables"?
LINE 2: update dcomptable set f1[1].cf1 = 1;
               ^

-----------
QUERY:

table dcomptable;
RESULT:
	ERROR - Catalog Error: Table with name dcomptable does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:

-- if there/* REPLACED */''s no constraints, a different code path is taken:
alter domain dcomptype drop constraint dcomptype_check;
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:

update dcomptable set f1[1].cf1 = -1;
RESULT:
	ERROR - Catalog Error: Table with name dcomptable does not exist!
Did you mean "temp.information_schema.tables"?
LINE 2: update dcomptable set f1[1].cf1 = -1;
               ^

-----------
QUERY:
  -- now ok
table dcomptable;
RESULT:
	ERROR - Catalog Error: Table with name dcomptable does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:


drop table dcomptable;
RESULT:
	ERROR - Catalog Error: Table with name dcomptable does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:

drop type comptype cascade;
RESULT:
	ERROR - Catalog Error: Type with name comptype does not exist!
Did you mean "map"?

-----------
QUERY:



-- Test not-null restrictions

create domain dnotnull varchar(15) NOT NULL;
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:

create domain dnull    varchar(15);
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:

create domain dcheck   varchar(15) NOT NULL CHECK (VALUE = 'a' OR VALUE = 'c' OR VALUE = 'd');
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:


create table nulltest
           ( col1 dnotnull
           , col2 dnotnull NULL  -- NOT NULL in the domain cannot be overridden
           , col3 dnull    NOT NULL
           , col4 dnull
           , col5 dcheck CHECK (col5 IN ('c', 'd'))
           );
RESULT:
	ERROR - Catalog Error: Type with name dnotnull does not exist!
Did you mean "null"?

-----------
QUERY:

INSERT INTO nulltest DEFAULT VALUES;
RESULT:
	ERROR - Catalog Error: Table with name nulltest does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:

INSERT INTO nulltest values ('a', 'b', 'c', 'd', 'c');
RESULT:
	ERROR - Catalog Error: Table with name nulltest does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:
  -- Good
insert into nulltest values ('a', 'b', 'c', 'd', NULL);
RESULT:
	ERROR - Catalog Error: Table with name nulltest does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:

insert into nulltest values ('a', 'b', 'c', 'd', 'a');
RESULT:
	ERROR - Catalog Error: Table with name nulltest does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:

INSERT INTO nulltest values (NULL, 'b', 'c', 'd', 'd');
RESULT:
	ERROR - Catalog Error: Table with name nulltest does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:

INSERT INTO nulltest values ('a', NULL, 'c', 'd', 'c');
RESULT:
	ERROR - Catalog Error: Table with name nulltest does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:

INSERT INTO nulltest values ('a', 'b', NULL, 'd', 'c');
RESULT:
	ERROR - Catalog Error: Table with name nulltest does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:

INSERT INTO nulltest values ('a', 'b', 'c', NULL, 'd');
RESULT:
	ERROR - Catalog Error: Table with name nulltest does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:
 -- Good

-- Test copy
COPY nulltest FROM stdin;
RESULT:
	ERROR - Catalog Error: Table with name nulltest does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:
 --fail
a	b	\N	d	d
\.

COPY nulltest FROM stdin;
RESULT:
	ERROR - Parser Error: syntax error at or near "a"

-----------
QUERY:
 --fail
a	b	c	d	\N
\.

-- Last row is bad
COPY nulltest FROM stdin;
RESULT:
	ERROR - Parser Error: syntax error at or near "a"

-----------
QUERY:

a	b	c	\N	c
a	b	c	\N	d
a	b	c	\N	a
\.

select * from nulltest;
RESULT:
	ERROR - Parser Error: syntax error at or near "a"

-----------
QUERY:


-- Test out coerced (casted) constraints
SELECT cast('1' as dnotnull);
RESULT:
	ERROR - Catalog Error: Type with name dnotnull does not exist!
Did you mean "null"?

-----------
QUERY:

SELECT cast(NULL as dnotnull);
RESULT:
	ERROR - Catalog Error: Type with name dnotnull does not exist!
Did you mean "null"?

-----------
QUERY:
 -- fail
SELECT cast(cast(NULL as dnull) as dnotnull);
RESULT:
	ERROR - Catalog Error: Type with name dnull does not exist!
Did you mean "null"?

-----------
QUERY:
 -- fail
SELECT cast(col4 as dnotnull) from nulltest;
RESULT:
	ERROR - Catalog Error: Table with name nulltest does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:
 -- fail

-- cleanup
drop table nulltest;
RESULT:
	ERROR - Catalog Error: Table with name nulltest does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:

drop domain dnotnull restrict;
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:

drop domain dnull restrict;
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:

drop domain dcheck restrict;
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:



create domain ddef1 int4 DEFAULT 3;
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:

create domain ddef2 oid DEFAULT '12';
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:

-- Type mixing, function returns int8
create domain ddef3 text DEFAULT 5;
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:

create sequence ddef4_seq;
RESULT:
	[]

-----------
QUERY:

create domain ddef4 int4 DEFAULT nextval('ddef4_seq');
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:

create domain ddef5 numeric(8,2) NOT NULL DEFAULT '12.12';
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:


create table defaulttest
            ( col1 ddef1
            , col2 ddef2
            , col3 ddef3
            , col4 ddef4 PRIMARY KEY
            , col5 ddef1 NOT NULL DEFAULT NULL
            , col6 ddef2 DEFAULT '88'
            , col7 ddef4 DEFAULT 8000
            , col8 ddef5
            );
RESULT:
	ERROR - Catalog Error: Type with name ddef1 does not exist!
Did you mean "dec"?

-----------
QUERY:

insert into defaulttest(col4) values(0);
RESULT:
	ERROR - Catalog Error: Table with name defaulttest does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:
 -- fails, col5 defaults to null
alter table defaulttest alter column col5 drop default;
RESULT:
	ERROR - Catalog Error: Table with name defaulttest does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:

insert into defaulttest default values;
RESULT:
	ERROR - Catalog Error: Table with name defaulttest does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:
 -- succeeds, inserts domain default
-- We used to treat SET DEFAULT NULL as equivalent to DROP DEFAULT /* REPLACED */, wrong
alter table defaulttest alter column col5 set default null;
RESULT:
	ERROR - Catalog Error: Table with name defaulttest does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:

insert into defaulttest(col4) values(0);
RESULT:
	ERROR - Catalog Error: Table with name defaulttest does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:
 -- fails
alter table defaulttest alter column col5 drop default;
RESULT:
	ERROR - Catalog Error: Table with name defaulttest does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:

insert into defaulttest default values;
RESULT:
	ERROR - Catalog Error: Table with name defaulttest does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:

insert into defaulttest default values;
RESULT:
	ERROR - Catalog Error: Table with name defaulttest does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:


-- Test defaults with copy
COPY defaulttest(col5) FROM stdin;
RESULT:
	ERROR - Catalog Error: Table with name defaulttest does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:

42
\.

select * from defaulttest;
RESULT:
	ERROR - Parser Error: syntax error at or near "42"

-----------
QUERY:


drop table defaulttest cascade;
RESULT:
	ERROR - Catalog Error: Table with name defaulttest does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:


-- Test ALTER DOMAIN .. NOT NULL
create domain dnotnulltest integer;
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:

create table domnotnull
( col1 dnotnulltest
, col2 dnotnulltest
);
RESULT:
	ERROR - Catalog Error: Type with name dnotnulltest does not exist!
Did you mean "double"?

-----------
QUERY:


insert into domnotnull default values;
RESULT:
	ERROR - Catalog Error: Table with name domnotnull does not exist!
Did you mean "temp.information_schema.columns"?

-----------
QUERY:

alter domain dnotnulltest set not null;
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:
 -- fails

update domnotnull set col1 = 5;
RESULT:
	ERROR - Catalog Error: Table with name domnotnull does not exist!
Did you mean "temp.information_schema.columns"?
LINE 3: update domnotnull set col1 = 5;
               ^

-----------
QUERY:

alter domain dnotnulltest set not null;
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:
 -- fails

update domnotnull set col2 = 6;
RESULT:
	ERROR - Catalog Error: Table with name domnotnull does not exist!
Did you mean "temp.information_schema.columns"?
LINE 3: update domnotnull set col2 = 6;
               ^

-----------
QUERY:


alter domain dnotnulltest set not null;
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:


update domnotnull set col1 = null;
RESULT:
	ERROR - Catalog Error: Table with name domnotnull does not exist!
Did you mean "temp.information_schema.columns"?
LINE 3: update domnotnull set col1 = null;
               ^

-----------
QUERY:
 -- fails

alter domain dnotnulltest drop not null;
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:


update domnotnull set col1 = null;
RESULT:
	ERROR - Catalog Error: Table with name domnotnull does not exist!
Did you mean "temp.information_schema.columns"?
LINE 3: update domnotnull set col1 = null;
               ^

-----------
QUERY:


drop domain dnotnulltest cascade;
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:


-- Test ALTER DOMAIN .. DEFAULT ..
create table domdeftest (col1 ddef1);
RESULT:
	ERROR - Catalog Error: Type with name ddef1 does not exist!
Did you mean "dec"?

-----------
QUERY:


insert into domdeftest default values;
RESULT:
	ERROR - Catalog Error: Table with name domdeftest does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:

select * from domdeftest;
RESULT:
	ERROR - Catalog Error: Table with name domdeftest does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:


alter domain ddef1 set default '42';
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:

insert into domdeftest default values;
RESULT:
	ERROR - Catalog Error: Table with name domdeftest does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:

select * from domdeftest;
RESULT:
	ERROR - Catalog Error: Table with name domdeftest does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:


alter domain ddef1 drop default;
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:

insert into domdeftest default values;
RESULT:
	ERROR - Catalog Error: Table with name domdeftest does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:

select * from domdeftest;
RESULT:
	ERROR - Catalog Error: Table with name domdeftest does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:


drop table domdeftest;
RESULT:
	ERROR - Catalog Error: Table with name domdeftest does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:


-- Test ALTER DOMAIN .. CONSTRAINT ..
create domain con as integer;
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:

create table domcontest (col1 con);
RESULT:
	ERROR - Catalog Error: Type with name con does not exist!
Did you mean "JSON"?

-----------
QUERY:


insert into domcontest values (1);
RESULT:
	ERROR - Catalog Error: Table with name domcontest does not exist!
Did you mean "temp.information_schema.columns"?

-----------
QUERY:

insert into domcontest values (2);
RESULT:
	ERROR - Catalog Error: Table with name domcontest does not exist!
Did you mean "temp.information_schema.columns"?

-----------
QUERY:

alter domain con add constraint t check (VALUE < 1);
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:
 -- fails

alter domain con add constraint t check (VALUE < 34);
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:

alter domain con add check (VALUE > 0);
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:


insert into domcontest values (-5);
RESULT:
	ERROR - Catalog Error: Table with name domcontest does not exist!
Did you mean "temp.information_schema.columns"?

-----------
QUERY:
 -- fails
insert into domcontest values (42);
RESULT:
	ERROR - Catalog Error: Table with name domcontest does not exist!
Did you mean "temp.information_schema.columns"?

-----------
QUERY:
 -- fails
insert into domcontest values (5);
RESULT:
	ERROR - Catalog Error: Table with name domcontest does not exist!
Did you mean "temp.information_schema.columns"?

-----------
QUERY:


alter domain con drop constraint t;
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:

insert into domcontest values (-5);
RESULT:
	ERROR - Catalog Error: Table with name domcontest does not exist!
Did you mean "temp.information_schema.columns"?

-----------
QUERY:
 --fails
insert into domcontest values (42);
RESULT:
	ERROR - Catalog Error: Table with name domcontest does not exist!
Did you mean "temp.information_schema.columns"?

-----------
QUERY:


alter domain con drop constraint nonexistent;
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:

alter domain con drop constraint if exists nonexistent;
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:


-- not-null constraints
create domain connotnull integer;
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:

create table domconnotnulltest
( col1 connotnull
, col2 connotnull
);
RESULT:
	ERROR - Catalog Error: Type with name connotnull does not exist!
Did you mean "null"?

-----------
QUERY:


insert into domconnotnulltest default values;
RESULT:
	ERROR - Catalog Error: Table with name domconnotnulltest does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:

alter domain connotnull add not null value;
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:
 -- fails

update domconnotnulltest set col1 = 5;
RESULT:
	ERROR - Catalog Error: Table with name domconnotnulltest does not exist!
Did you mean "temp.information_schema.tables"?
LINE 3: update domconnotnulltest set col1 = 5;
               ^

-----------
QUERY:

alter domain connotnull add not null value;
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:
 -- fails

update domconnotnulltest set col2 = 6;
RESULT:
	ERROR - Catalog Error: Table with name domconnotnulltest does not exist!
Did you mean "temp.information_schema.tables"?
LINE 3: update domconnotnulltest set col2 = 6;
               ^

-----------
QUERY:


alter domain connotnull add constraint constr1 not null value;
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:

select count(*) from pg_constraint where contypid = 'connotnull'::regtype and contype = 'n';
RESULT:
	ERROR - Catalog Error: Type with name regtype does not exist!
Did you mean "date"?

-----------
QUERY:

alter domain connotnull add constraint constr1bis not null value;
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:
  -- redundant
select count(*) from pg_constraint where contypid = 'connotnull'::regtype and contype = 'n';
RESULT:
	ERROR - Catalog Error: Type with name regtype does not exist!
Did you mean "date"?

-----------
QUERY:


update domconnotnulltest set col1 = null;
RESULT:
	ERROR - Catalog Error: Table with name domconnotnulltest does not exist!
Did you mean "temp.information_schema.tables"?
LINE 3: update domconnotnulltest set col1 = null;
               ^

-----------
QUERY:
 -- fails

alter domain connotnull drop constraint constr1;
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:


update domconnotnulltest set col1 = null;
RESULT:
	ERROR - Catalog Error: Table with name domconnotnulltest does not exist!
Did you mean "temp.information_schema.tables"?
LINE 3: update domconnotnulltest set col1 = null;
               ^

-----------
QUERY:


drop domain connotnull cascade;
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:

drop table domconnotnulltest;
RESULT:
	ERROR - Catalog Error: Table with name domconnotnulltest does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:


-- Test ALTER DOMAIN .. CONSTRAINT .. NOT VALID
create domain things AS INT;
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:

CREATE TABLE thethings (stuff things);
RESULT:
	ERROR - Catalog Error: Type with name things does not exist!
Did you mean "string"?

-----------
QUERY:

INSERT INTO thethings (stuff) VALUES (55);
RESULT:
	ERROR - Catalog Error: Table with name thethings does not exist!
Did you mean "pg_settings"?

-----------
QUERY:

ALTER DOMAIN things ADD CONSTRAINT meow CHECK (VALUE < 11);
RESULT:
	ERROR - Parser Error: syntax error at or near "DOMAIN"

-----------
QUERY:

ALTER DOMAIN things ADD CONSTRAINT meow CHECK (VALUE < 11) NOT VALID;
RESULT:
	ERROR - Parser Error: syntax error at or near "DOMAIN"

-----------
QUERY:

ALTER DOMAIN things VALIDATE CONSTRAINT meow;
RESULT:
	ERROR - Parser Error: syntax error at or near "DOMAIN"

-----------
QUERY:

UPDATE thethings SET stuff = 10;
RESULT:
	ERROR - Catalog Error: Table with name thethings does not exist!
Did you mean "pg_settings"?
LINE 2: UPDATE thethings SET stuff = 10;
               ^

-----------
QUERY:

ALTER DOMAIN things VALIDATE CONSTRAINT meow;
RESULT:
	ERROR - Parser Error: syntax error at or near "DOMAIN"

-----------
QUERY:


-- Confirm ALTER DOMAIN with RULES.
create table domtab (col1 integer);
RESULT:
	[]

-----------
QUERY:

create domain dom as integer;
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:

create view domview as select cast(col1 as dom) from domtab;
RESULT:
	ERROR - Catalog Error: Type with name dom does not exist!
Did you mean "dec"?

-----------
QUERY:

insert into domtab (col1) values (null);
RESULT:
	[]

-----------
QUERY:

insert into domtab (col1) values (5);
RESULT:
	[]

-----------
QUERY:

select * from domview;
RESULT:
	ERROR - Catalog Error: Table with name domview does not exist!
Did you mean "pg_views"?

-----------
QUERY:


alter domain dom set not null;
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:

select * from domview;
RESULT:
	ERROR - Catalog Error: Table with name domview does not exist!
Did you mean "pg_views"?

-----------
QUERY:
 -- fail

alter domain dom drop not null;
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:

select * from domview;
RESULT:
	ERROR - Catalog Error: Table with name domview does not exist!
Did you mean "pg_views"?

-----------
QUERY:


alter domain dom add constraint domchkgt6 check(value > 6);
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:

select * from domview;
RESULT:
	ERROR - Catalog Error: Table with name domview does not exist!
Did you mean "pg_views"?

-----------
QUERY:
 --fail

alter domain dom drop constraint domchkgt6 restrict;
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:

select * from domview;
RESULT:
	ERROR - Catalog Error: Table with name domview does not exist!
Did you mean "pg_views"?

-----------
QUERY:


-- cleanup
drop domain ddef1 restrict;
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:

drop domain ddef2 restrict;
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:

drop domain ddef3 restrict;
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:

drop domain ddef4 restrict;
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:

drop domain ddef5 restrict;
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:

drop sequence ddef4_seq;
RESULT:
	[]

-----------
QUERY:


-- Test domains over domains
create domain vchar4 varchar(4);
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:

create domain dinter vchar4 check (substring(VALUE, 1, 1) = 'x');
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:

create domain dtop dinter check (substring(VALUE, 2, 1) = '1');
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:


select 'x123'::dtop;
RESULT:
	ERROR - Catalog Error: Type with name dtop does not exist!
Did you mean "date"?

-----------
QUERY:

select 'x1234'::dtop;
RESULT:
	ERROR - Catalog Error: Type with name dtop does not exist!
Did you mean "date"?

-----------
QUERY:
 -- explicit coercion should truncate
select 'y1234'::dtop;
RESULT:
	ERROR - Catalog Error: Type with name dtop does not exist!
Did you mean "date"?

-----------
QUERY:
 -- fail
select 'y123'::dtop;
RESULT:
	ERROR - Catalog Error: Type with name dtop does not exist!
Did you mean "date"?

-----------
QUERY:
 -- fail
select 'yz23'::dtop;
RESULT:
	ERROR - Catalog Error: Type with name dtop does not exist!
Did you mean "date"?

-----------
QUERY:
 -- fail
select 'xz23'::dtop;
RESULT:
	ERROR - Catalog Error: Type with name dtop does not exist!
Did you mean "date"?

-----------
QUERY:
 -- fail

create temp table dtest(f1 dtop);
RESULT:
	ERROR - Catalog Error: Type with name dtop does not exist!
Did you mean "date"?

-----------
QUERY:


insert into dtest values('x123');
RESULT:
	ERROR - Catalog Error: Table with name dtest does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:

insert into dtest values('x1234');
RESULT:
	ERROR - Catalog Error: Table with name dtest does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:
 -- fail, implicit coercion
insert into dtest values('y1234');
RESULT:
	ERROR - Catalog Error: Table with name dtest does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:
 -- fail, implicit coercion
insert into dtest values('y123');
RESULT:
	ERROR - Catalog Error: Table with name dtest does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:
 -- fail
insert into dtest values('yz23');
RESULT:
	ERROR - Catalog Error: Table with name dtest does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:
 -- fail
insert into dtest values('xz23');
RESULT:
	ERROR - Catalog Error: Table with name dtest does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:
 -- fail

drop table dtest;
RESULT:
	ERROR - Catalog Error: Table with name dtest does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:

drop domain vchar4 cascade;
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:


-- Make sure that constraints of newly-added domain columns are
-- enforced correctly, even if there/* REPLACED */''s no default value for the new
-- column. Per bug #1433
create domain str_domain as text not null;
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:


create table domain_test (a int, b int);
RESULT:
	[]

-----------
QUERY:


insert into domain_test values (1, 2);
RESULT:
	[]

-----------
QUERY:

insert into domain_test values (1, 2);
RESULT:
	[]

-----------
QUERY:


-- should fail
alter table domain_test add column c str_domain;
RESULT:
	ERROR - Catalog Error: Type with name str_domain does not exist!
Did you mean "string"?

-----------
QUERY:


create domain str_domain2 as text check (value <> 'foo') default 'foo';
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:


-- should fail
alter table domain_test add column d str_domain2;
RESULT:
	ERROR - Catalog Error: Type with name str_domain2 does not exist!
Did you mean "string"?

-----------
QUERY:


-- Check that domain constraints on prepared statement parameters of
-- unknown type are enforced correctly.
create domain pos_int as int4 check (value > 0) not null;
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:

prepare s1 as select $1::pos_int = 10 as "is_ten";
RESULT:
	ERROR - Catalog Error: Type with name pos_int does not exist!
Did you mean "int"?

-----------
QUERY:


execute s1(10);
RESULT:
	ERROR - Binder Error: Prepared statement "s1" does not exist

-----------
QUERY:

execute s1(0);
RESULT:
	ERROR - Binder Error: Prepared statement "s1" does not exist

-----------
QUERY:
 -- should fail
execute s1(NULL);
RESULT:
	ERROR - Binder Error: Prepared statement "s1" does not exist

-----------
QUERY:
 -- should fail

-- Check that domain constraints on plpgsql function parameters, results,
-- and local variables are enforced correctly.

create function doubledecrement(p1 pos_int) returns pos_int as $$
declare v pos_int;
begin
    return p1;
end$$ language plpgsql;
RESULT:
	ERROR - Parser Error: syntax error at or near "pos_int"

-----------
QUERY:


select doubledecrement(3);
RESULT:
	ERROR - Catalog Error: Scalar Function with name doubledecrement does not exist!
Did you mean "count"?

-----------
QUERY:
 -- fail because of implicit null assignment

create or replace function doubledecrement(p1 pos_int) returns pos_int as $$
declare v pos_int := 0;
begin
    return p1;
end$$ language plpgsql;
RESULT:
	ERROR - Parser Error: syntax error at or near "pos_int"

-----------
QUERY:


select doubledecrement(3);
RESULT:
	ERROR - Catalog Error: Scalar Function with name doubledecrement does not exist!
Did you mean "count"?

-----------
QUERY:
 -- fail at initialization assignment

create or replace function doubledecrement(p1 pos_int) returns pos_int as $$
declare v pos_int := 1;
begin
    v := p1 - 1;
    return v - 1;
end$$ language plpgsql;
RESULT:
	ERROR - Parser Error: syntax error at or near "pos_int"

-----------
QUERY:


select doubledecrement(null);
RESULT:
	ERROR - Catalog Error: Scalar Function with name doubledecrement does not exist!
Did you mean "count"?

-----------
QUERY:
 -- fail before call
select doubledecrement(0);
RESULT:
	ERROR - Catalog Error: Scalar Function with name doubledecrement does not exist!
Did you mean "count"?

-----------
QUERY:
 -- fail before call
select doubledecrement(1);
RESULT:
	ERROR - Catalog Error: Scalar Function with name doubledecrement does not exist!
Did you mean "count"?

-----------
QUERY:
 -- fail at assignment to v
select doubledecrement(2);
RESULT:
	ERROR - Catalog Error: Scalar Function with name doubledecrement does not exist!
Did you mean "count"?

-----------
QUERY:
 -- fail at return
select doubledecrement(3);
RESULT:
	ERROR - Catalog Error: Scalar Function with name doubledecrement does not exist!
Did you mean "count"?

-----------
QUERY:
 -- good

-- Check that ALTER DOMAIN tests columns of derived types

create domain posint as int4;
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:


-- Currently, this doesn/* REPLACED */''t work for composite types, but verify it complains
create type ddtest1 as (f1 posint);
RESULT:
	ERROR - Parser Error: syntax error at or near "("

-----------
QUERY:

create table ddtest2(f1 ddtest1);
RESULT:
	ERROR - Catalog Error: Type with name ddtest1 does not exist!
Did you mean "date"?

-----------
QUERY:

insert into ddtest2 values(row(-1));
RESULT:
	ERROR - Catalog Error: Table with name ddtest2 does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:

alter domain posint add constraint c1 check(value >= 0);
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:

drop table ddtest2;
RESULT:
	ERROR - Catalog Error: Table with name ddtest2 does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:


-- Likewise for domains within arrays of composite
create table ddtest2(f1 ddtest1[]);
RESULT:
	ERROR - Catalog Error: Type with name ddtest1 does not exist!
Did you mean "date"?

-----------
QUERY:

insert into ddtest2 values('{(-1)}');
RESULT:
	ERROR - Catalog Error: Table with name ddtest2 does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:

alter domain posint add constraint c1 check(value >= 0);
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:

drop table ddtest2;
RESULT:
	ERROR - Catalog Error: Table with name ddtest2 does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:


-- Likewise for domains within domains over composite
create domain ddtest1d as ddtest1;
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:

create table ddtest2(f1 ddtest1d);
RESULT:
	ERROR - Catalog Error: Type with name ddtest1d does not exist!
Did you mean "date"?

-----------
QUERY:

insert into ddtest2 values('(-1)');
RESULT:
	ERROR - Catalog Error: Table with name ddtest2 does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:

alter domain posint add constraint c1 check(value >= 0);
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:

drop table ddtest2;
RESULT:
	ERROR - Catalog Error: Table with name ddtest2 does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:

drop domain ddtest1d;
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:


-- Likewise for domains within domains over array of composite
create domain ddtest1d as ddtest1[];
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:

create table ddtest2(f1 ddtest1d);
RESULT:
	ERROR - Catalog Error: Type with name ddtest1d does not exist!
Did you mean "date"?

-----------
QUERY:

insert into ddtest2 values('{(-1)}');
RESULT:
	ERROR - Catalog Error: Table with name ddtest2 does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:

alter domain posint add constraint c1 check(value >= 0);
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:

drop table ddtest2;
RESULT:
	ERROR - Catalog Error: Table with name ddtest2 does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:

drop domain ddtest1d;
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:


-- Doesn/* REPLACED */''t work for ranges, either
create type rposint as range (subtype = posint);
RESULT:
	ERROR - Parser Error: Expected an integer constant as type modifier

-----------
QUERY:

create table ddtest2(f1 rposint);
RESULT:
	ERROR - Catalog Error: Type with name rposint does not exist!
Did you mean "int"?

-----------
QUERY:

insert into ddtest2 values('(-1,3]');
RESULT:
	ERROR - Catalog Error: Table with name ddtest2 does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:

alter domain posint add constraint c1 check(value >= 0);
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:

drop table ddtest2;
RESULT:
	ERROR - Catalog Error: Table with name ddtest2 does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:

drop type rposint;
RESULT:
	ERROR - Catalog Error: Type with name rposint does not exist!
Did you mean "int"?

-----------
QUERY:


alter domain posint add constraint c1 check(value >= 0);
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:


create domain posint2 as posint check (value % 2 = 0);
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:

create table ddtest2(f1 posint2);
RESULT:
	ERROR - Catalog Error: Type with name posint2 does not exist!
Did you mean "int2"?

-----------
QUERY:

insert into ddtest2 values(11);
RESULT:
	ERROR - Catalog Error: Table with name ddtest2 does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:
 -- fail
insert into ddtest2 values(-2);
RESULT:
	ERROR - Catalog Error: Table with name ddtest2 does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:
 -- fail
insert into ddtest2 values(2);
RESULT:
	ERROR - Catalog Error: Table with name ddtest2 does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:


alter domain posint add constraint c2 check(value >= 10);
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:
 -- fail
alter domain posint add constraint c2 check(value > 0);
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:
 -- OK

drop table ddtest2;
RESULT:
	ERROR - Catalog Error: Table with name ddtest2 does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:

drop type ddtest1;
RESULT:
	ERROR - Catalog Error: Type with name ddtest1 does not exist!
Did you mean "date"?

-----------
QUERY:

drop domain posint cascade;
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:


--
-- Check enforcement of domain-related typmod in plpgsql (bug #5717)
--

create or replace function array_elem_check(numeric) returns numeric as $$
declare
  x numeric(4,2)[1];
begin
  x[1] := $1;
  return x[1];
end$$ language plpgsql;
RESULT:
	ERROR - Parser Error: syntax error at or near "returns"

-----------
QUERY:


select array_elem_check(121.00);
RESULT:
	ERROR - Catalog Error: Scalar Function with name array_elem_check does not exist!
Did you mean "array_select"?

-----------
QUERY:

select array_elem_check(1.23456);
RESULT:
	ERROR - Catalog Error: Scalar Function with name array_elem_check does not exist!
Did you mean "array_select"?

-----------
QUERY:


create domain mynums as numeric(4,2)[1];
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:


create or replace function array_elem_check(numeric) returns numeric as $$
declare
  x mynums;
begin
  x[1] := $1;
  return x[1];
end$$ language plpgsql;
RESULT:
	ERROR - Parser Error: syntax error at or near "returns"

-----------
QUERY:


select array_elem_check(121.00);
RESULT:
	ERROR - Catalog Error: Scalar Function with name array_elem_check does not exist!
Did you mean "array_select"?

-----------
QUERY:

select array_elem_check(1.23456);
RESULT:
	ERROR - Catalog Error: Scalar Function with name array_elem_check does not exist!
Did you mean "array_select"?

-----------
QUERY:


create domain mynums2 as mynums;
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:


create or replace function array_elem_check(numeric) returns numeric as $$
declare
  x mynums2;
begin
  x[1] := $1;
  return x[1];
end$$ language plpgsql;
RESULT:
	ERROR - Parser Error: syntax error at or near "returns"

-----------
QUERY:


select array_elem_check(121.00);
RESULT:
	ERROR - Catalog Error: Scalar Function with name array_elem_check does not exist!
Did you mean "array_select"?

-----------
QUERY:

select array_elem_check(1.23456);
RESULT:
	ERROR - Catalog Error: Scalar Function with name array_elem_check does not exist!
Did you mean "array_select"?

-----------
QUERY:


drop function array_elem_check(numeric);
RESULT:
	ERROR - Parser Error: syntax error at or near "("

-----------
QUERY:


--
-- Check enforcement of array-level domain constraints
--

create domain orderedpair as int[2] check (value[1] < value[2]);
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:


select array[1,2]::orderedpair;
RESULT:
	ERROR - Catalog Error: Type with name orderedpair does not exist!
Did you mean "real"?

-----------
QUERY:

select array[2,1]::orderedpair;
RESULT:
	ERROR - Catalog Error: Type with name orderedpair does not exist!
Did you mean "real"?

-----------
QUERY:
  -- fail

create temp table op (f1 orderedpair);
RESULT:
	ERROR - Catalog Error: Type with name orderedpair does not exist!
Did you mean "real"?

-----------
QUERY:

insert into op values (array[1,2]);
RESULT:
	ERROR - Catalog Error: Table with name op does not exist!
Did you mean "pg_am"?

-----------
QUERY:

insert into op values (array[2,1]);
RESULT:
	ERROR - Catalog Error: Table with name op does not exist!
Did you mean "pg_am"?

-----------
QUERY:
  -- fail

update op set f1[2] = 3;
RESULT:
	ERROR - Catalog Error: Table with name op does not exist!
Did you mean "pg_am"?
LINE 3: update op set f1[2] = 3;
               ^

-----------
QUERY:

update op set f1[2] = 0;
RESULT:
	ERROR - Catalog Error: Table with name op does not exist!
Did you mean "pg_am"?
LINE 2: update op set f1[2] = 0;
               ^

-----------
QUERY:
  -- fail
select * from op;
RESULT:
	ERROR - Catalog Error: Table with name op does not exist!
Did you mean "pg_am"?

-----------
QUERY:


create or replace function array_elem_check(int) returns int as $$
declare
  x orderedpair := '{1,2}';
begin
  x[2] := $1;
  return x[2];
end$$ language plpgsql;
RESULT:
	ERROR - Parser Error: syntax error at or near "returns"

-----------
QUERY:


select array_elem_check(3);
RESULT:
	ERROR - Catalog Error: Scalar Function with name array_elem_check does not exist!
Did you mean "array_select"?

-----------
QUERY:

select array_elem_check(-1);
RESULT:
	ERROR - Catalog Error: Scalar Function with name array_elem_check does not exist!
Did you mean "array_select"?

-----------
QUERY:


drop function array_elem_check(int);
RESULT:
	ERROR - Parser Error: syntax error at or near "("

-----------
QUERY:


--
-- Check enforcement of changing constraints in plpgsql
--

create domain di as int;
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:


create function dom_check(int) returns di as $$
declare d di;
begin
  d := $1::di;
  return d;
end
$$ language plpgsql immutable;
RESULT:
	ERROR - Parser Error: syntax error at or near "returns"

-----------
QUERY:


select dom_check(0);
RESULT:
	ERROR - Catalog Error: Scalar Function with name dom_check does not exist!
Did you mean "from_hex"?

-----------
QUERY:


alter domain di add constraint pos check (value > 0);
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:


select dom_check(0);
RESULT:
	ERROR - Catalog Error: Scalar Function with name dom_check does not exist!
Did you mean "from_hex"?

-----------
QUERY:
 -- fail

alter domain di drop constraint pos;
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:


select dom_check(0);
RESULT:
	ERROR - Catalog Error: Scalar Function with name dom_check does not exist!
Did you mean "from_hex"?

-----------
QUERY:


-- implicit cast during assignment is a separate code path, test that too

create or replace function dom_check(int) returns di as $$
declare d di;
begin
  d := $1;
  return d;
end
$$ language plpgsql immutable;
RESULT:
	ERROR - Parser Error: syntax error at or near "returns"

-----------
QUERY:


select dom_check(0);
RESULT:
	ERROR - Catalog Error: Scalar Function with name dom_check does not exist!
Did you mean "from_hex"?

-----------
QUERY:


alter domain di add constraint pos check (value > 0);
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:


select dom_check(0);
RESULT:
	ERROR - Catalog Error: Scalar Function with name dom_check does not exist!
Did you mean "from_hex"?

-----------
QUERY:
 -- fail

alter domain di drop constraint pos;
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:


select dom_check(0);
RESULT:
	ERROR - Catalog Error: Scalar Function with name dom_check does not exist!
Did you mean "from_hex"?

-----------
QUERY:


drop function dom_check(int);
RESULT:
	ERROR - Parser Error: syntax error at or near "("

-----------
QUERY:


drop domain di;
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:


--
-- Check use of a (non-inline-able) SQL function in a domain constraint /* REPLACED */,
-- this has caused issues in the past
--

create function sql_is_distinct_from(anyelement, anyelement)
returns boolean language sql
as 'select $1 is distinct from $2 limit 1';
RESULT:
	ERROR - Parser Error: syntax error at or near "returns"

-----------
QUERY:


create domain inotnull int
  check (sql_is_distinct_from(value, null));
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:


select 1::inotnull;
RESULT:
	ERROR - Catalog Error: Type with name inotnull does not exist!
Did you mean "null"?

-----------
QUERY:

select null::inotnull;
RESULT:
	ERROR - Catalog Error: Type with name inotnull does not exist!
Did you mean "null"?

-----------
QUERY:


create table dom_table (x inotnull);
RESULT:
	ERROR - Catalog Error: Type with name inotnull does not exist!
Did you mean "null"?

-----------
QUERY:

insert into dom_table values ('1');
RESULT:
	ERROR - Catalog Error: Table with name dom_table does not exist!
Did you mean "domtab"?

-----------
QUERY:

insert into dom_table values (1);
RESULT:
	ERROR - Catalog Error: Table with name dom_table does not exist!
Did you mean "domtab"?

-----------
QUERY:

insert into dom_table values (null);
RESULT:
	ERROR - Catalog Error: Table with name dom_table does not exist!
Did you mean "domtab"?

-----------
QUERY:


drop table dom_table;
RESULT:
	ERROR - Catalog Error: Table with name dom_table does not exist!
Did you mean "domtab"?

-----------
QUERY:

drop domain inotnull;
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:

drop function sql_is_distinct_from(anyelement, anyelement);
RESULT:
	ERROR - Parser Error: syntax error at or near "("

-----------
QUERY:


--
-- Renaming
--

create domain testdomain1 as int;
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:

alter domain testdomain1 rename to testdomain2;
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:

alter type testdomain2 rename to testdomain3;
RESULT:
	ERROR - Parser Error: syntax error at or near "type"

-----------
QUERY:
  -- alter type also works
drop domain testdomain3;
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:



--
-- Renaming domain constraints
--

create domain testdomain1 as int constraint unsigned check (value > 0);
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:

alter domain testdomain1 rename constraint unsigned to unsigned_foo;
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:

alter domain testdomain1 drop constraint unsigned_foo;
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:

drop domain testdomain1;
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:



--
-- Information schema
--

SELECT * FROM information_schema.column_domain_usage
  WHERE domain_name IN ('con', 'dom', 'pos_int', 'things')
  ORDER BY domain_name;
RESULT:
	ERROR - Catalog Error: Table with name column_domain_usage does not exist!
Did you mean "key_column_usage"?

-----------
QUERY:


SELECT * FROM information_schema.domain_constraints
  WHERE domain_name IN ('con', 'dom', 'pos_int', 'things')
  ORDER BY constraint_name;
RESULT:
	ERROR - Catalog Error: Table with name domain_constraints does not exist!
Did you mean "table_constraints"?

-----------
QUERY:


SELECT * FROM information_schema.domains
  WHERE domain_name IN ('con', 'dom', 'pos_int', 'things')
  ORDER BY domain_name;
RESULT:
	ERROR - Catalog Error: Table with name domains does not exist!
Did you mean "memory.domain_test"?

-----------
QUERY:


SELECT * FROM information_schema.check_constraints
  WHERE (constraint_schema, constraint_name)
        IN (SELECT constraint_schema, constraint_name
            FROM information_schema.domain_constraints
            WHERE domain_name IN ('con', 'dom', 'pos_int', 'things'))
  ORDER BY constraint_name;
RESULT:
	ERROR - Catalog Error: Table with name check_constraints does not exist!
Did you mean "main.duckdb_constraints"?
