--
-- ALTER TABLE ADD COLUMN DEFAULT test
--

SET search_path = fast_default
ERROR: --
-- ALTER TABLE ADD COLUMN DEFAULT test
--

SET search_path = fast_default

Catalog Error: SET search_path: No catalog + schema named "fast_default" found.

CREATE SCHEMA fast_default

CREATE TABLE m(id OID)

INSERT INTO m VALUES (NULL::OID)


CREATE FUNCTION set(tabname name) RETURNS VOID
AS $$
BEGIN
  UPDATE m
  SET id = (SELECT c.relfilenode
            FROM pg_class AS c, pg_namespace AS s
            WHERE c.relname = tabname
                AND c.relnamespace = s.oid
                AND s.nspname = 'fast_default');
END;
$$ LANGUAGE 'plpgsql'
ERROR: 

CREATE FUNCTION set(tabname name) RETURNS VOID
AS $$
BEGIN
  UPDATE m
  SET id = (SELECT c.relfilenode
            FROM pg_class AS c, pg_namespace AS s
            WHERE c.relname = tabname
                AND c.relnamespace = s.oid
                AND s.nspname = 'fast_default');
END;
$$ LANGUAGE 'plpgsql'

Parser Error: syntax error at or near "name"


CREATE FUNCTION comp() RETURNS TEXT
AS $$
BEGIN
  RETURN (SELECT CASE
               WHEN m.id = c.relfilenode THEN 'Unchanged'
               ELSE 'Rewritten'
               END
           FROM m, pg_class AS c, pg_namespace AS s
           WHERE c.relname = 't'
               AND c.relnamespace = s.oid
               AND s.nspname = 'fast_default');
END;
$$ LANGUAGE 'plpgsql'
ERROR: 

CREATE FUNCTION comp() RETURNS TEXT
AS $$
BEGIN
  RETURN (SELECT CASE
               WHEN m.id = c.relfilenode THEN 'Unchanged'
               ELSE 'Rewritten'
               END
           FROM m, pg_class AS c, pg_namespace AS s
           WHERE c.relname = 't'
               AND c.relnamespace = s.oid
               AND s.nspname = 'fast_default');
END;
$$ LANGUAGE 'plpgsql'

Parser Error: syntax error at or near "RETURNS"


CREATE FUNCTION log_rewrite() RETURNS event_trigger
LANGUAGE plpgsql as
$func$

declare
   this_schema text
ERROR: 

CREATE FUNCTION log_rewrite() RETURNS event_trigger
LANGUAGE plpgsql as
$func$

declare
   this_schema text

Parser Error: syntax error at or near "RETURNS"

begin
    select into this_schema relnamespace::regnamespace::text
    from pg_class
    where oid = pg_event_trigger_table_rewrite_oid()
ERROR: 
begin
    select into this_schema relnamespace::regnamespace::text
    from pg_class
    where oid = pg_event_trigger_table_rewrite_oid()

Parser Error: syntax error at or near "select"

    if this_schema = 'fast_default'
    then
        RAISE NOTICE 'rewriting table % for reason %',
          pg_event_trigger_table_rewrite_oid()::regclass,
          pg_event_trigger_table_rewrite_reason()
ERROR: 
    if this_schema = 'fast_default'
    then
        RAISE NOTICE 'rewriting table % for reason %',
          pg_event_trigger_table_rewrite_oid()::regclass,
          pg_event_trigger_table_rewrite_reason()

Parser Error: syntax error at or near "if"

    end if
ERROR: 
    end if

Parser Error: syntax error at or near "if"

end
ERROR: 
end

TransactionContext Error: cannot commit - no transaction is active

$func$
ERROR: 
$func$

Parser Error: unterminated dollar-quoted string at or near "$func$
"


CREATE TABLE has_volatile AS
SELECT * FROM generate_series(1,10) id



CREATE EVENT TRIGGER has_volatile_rewrite
                  ON table_rewrite
   EXECUTE PROCEDURE log_rewrite()
ERROR: 


CREATE EVENT TRIGGER has_volatile_rewrite
                  ON table_rewrite
   EXECUTE PROCEDURE log_rewrite()

Parser Error: syntax error at or near "EVENT"


-- only the last of these should trigger a rewrite
ALTER TABLE has_volatile ADD col1 int

ALTER TABLE has_volatile ADD col2 int DEFAULT 1

ALTER TABLE has_volatile ADD col3 timestamptz DEFAULT current_timestamp

ALTER TABLE has_volatile ADD col4 int DEFAULT (random() * 10000)::int




-- Test a large sample of different datatypes
CREATE TABLE T(pk INT NOT NULL PRIMARY KEY, c_int INT DEFAULT 1)


SELECT set('t')
ERROR: 

SELECT set('t')

Catalog Error: Scalar Function with name set does not exist!
Did you mean "sem"?


INSERT INTO T VALUES (1), (2)
ERROR: 

INSERT INTO T VALUES (1), (2)

Binder Error: table T has 2 columns but 1 values were supplied


ALTER TABLE T ADD COLUMN c_bpchar BPCHAR(5) DEFAULT 'hello',
              ALTER COLUMN c_int SET DEFAULT 2
ERROR: 

ALTER TABLE T ADD COLUMN c_bpchar BPCHAR(5) DEFAULT 'hello',
              ALTER COLUMN c_int SET DEFAULT 2

Parser Error: Only one ALTER command per statement is supported


INSERT INTO T VALUES (3), (4)
ERROR: 

INSERT INTO T VALUES (3), (4)

Binder Error: table T has 2 columns but 1 values were supplied



ALTER TABLE T ADD COLUMN c_text TEXT  DEFAULT 'world',
              ALTER COLUMN c_bpchar SET DEFAULT 'dog'
ERROR: 


ALTER TABLE T ADD COLUMN c_text TEXT  DEFAULT 'world',
              ALTER COLUMN c_bpchar SET DEFAULT 'dog'

Parser Error: Only one ALTER command per statement is supported


INSERT INTO T VALUES (5), (6)
ERROR: 

INSERT INTO T VALUES (5), (6)

Binder Error: table T has 2 columns but 1 values were supplied


ALTER TABLE T ADD COLUMN c_date DATE DEFAULT '2016-06-02',
              ALTER COLUMN c_text SET DEFAULT 'cat'
ERROR: 

ALTER TABLE T ADD COLUMN c_date DATE DEFAULT '2016-06-02',
              ALTER COLUMN c_text SET DEFAULT 'cat'

Parser Error: Only one ALTER command per statement is supported


INSERT INTO T VALUES (7), (8)
ERROR: 

INSERT INTO T VALUES (7), (8)

Binder Error: table T has 2 columns but 1 values were supplied


ALTER TABLE T ADD COLUMN c_timestamp TIMESTAMP DEFAULT '2016-09-01 12:00:00',
              ADD COLUMN c_timestamp_null TIMESTAMP,
              ALTER COLUMN c_date SET DEFAULT '2010-01-01'
ERROR: 

ALTER TABLE T ADD COLUMN c_timestamp TIMESTAMP DEFAULT '2016-09-01 12:00:00',
              ADD COLUMN c_timestamp_null TIMESTAMP,
              ALTER COLUMN c_date SET DEFAULT '2010-01-01'

Parser Error: Only one ALTER command per statement is supported


INSERT INTO T VALUES (9), (10)
ERROR: 

INSERT INTO T VALUES (9), (10)

Binder Error: table T has 2 columns but 1 values were supplied


ALTER TABLE T ADD COLUMN c_array TEXT[]
                  DEFAULT '{"This", "is", "the", "real", "world"}',
              ALTER COLUMN c_timestamp SET DEFAULT '1970-12-31 11:12:13',
              ALTER COLUMN c_timestamp_null SET DEFAULT '2016-09-29 12:00:00'
ERROR: 

ALTER TABLE T ADD COLUMN c_array TEXT[]
                  DEFAULT '{"This", "is", "the", "real", "world"}',
              ALTER COLUMN c_timestamp SET DEFAULT '1970-12-31 11:12:13',
              ALTER COLUMN c_timestamp_null SET DEFAULT '2016-09-29 12:00:00'

Parser Error: Only one ALTER command per statement is supported


INSERT INTO T VALUES (11), (12)
ERROR: 

INSERT INTO T VALUES (11), (12)

Binder Error: table T has 2 columns but 1 values were supplied


ALTER TABLE T ADD COLUMN c_small SMALLINT DEFAULT -5,
              ADD COLUMN c_small_null SMALLINT,
              ALTER COLUMN c_array
                  SET DEFAULT '{"This", "is", "no", "fantasy"}'
ERROR: 

ALTER TABLE T ADD COLUMN c_small SMALLINT DEFAULT -5,
              ADD COLUMN c_small_null SMALLINT,
              ALTER COLUMN c_array
                  SET DEFAULT '{"This", "is", "no", "fantasy"}'

Parser Error: Only one ALTER command per statement is supported


INSERT INTO T VALUES (13), (14)
ERROR: 

INSERT INTO T VALUES (13), (14)

Binder Error: table T has 2 columns but 1 values were supplied


ALTER TABLE T ADD COLUMN c_big BIGINT DEFAULT 180000000000018,
              ALTER COLUMN c_small SET DEFAULT 9,
              ALTER COLUMN c_small_null SET DEFAULT 13
ERROR: 

ALTER TABLE T ADD COLUMN c_big BIGINT DEFAULT 180000000000018,
              ALTER COLUMN c_small SET DEFAULT 9,
              ALTER COLUMN c_small_null SET DEFAULT 13

Parser Error: Only one ALTER command per statement is supported


INSERT INTO T VALUES (15), (16)
ERROR: 

INSERT INTO T VALUES (15), (16)

Binder Error: table T has 2 columns but 1 values were supplied


ALTER TABLE T ADD COLUMN c_num NUMERIC DEFAULT 1.00000000001,
              ALTER COLUMN c_big SET DEFAULT -9999999999999999
ERROR: 

ALTER TABLE T ADD COLUMN c_num NUMERIC DEFAULT 1.00000000001,
              ALTER COLUMN c_big SET DEFAULT -9999999999999999

Parser Error: Only one ALTER command per statement is supported


INSERT INTO T VALUES (17), (18)
ERROR: 

INSERT INTO T VALUES (17), (18)

Binder Error: table T has 2 columns but 1 values were supplied


ALTER TABLE T ADD COLUMN c_time TIME DEFAULT '12:00:00',
              ALTER COLUMN c_num SET DEFAULT 2.000000000000002
ERROR: 

ALTER TABLE T ADD COLUMN c_time TIME DEFAULT '12:00:00',
              ALTER COLUMN c_num SET DEFAULT 2.000000000000002

Parser Error: Only one ALTER command per statement is supported


INSERT INTO T VALUES (19), (20)
ERROR: 

INSERT INTO T VALUES (19), (20)

Binder Error: table T has 2 columns but 1 values were supplied


ALTER TABLE T ADD COLUMN c_interval INTERVAL DEFAULT '1 day',
              ALTER COLUMN c_time SET DEFAULT '23:59:59'
ERROR: 

ALTER TABLE T ADD COLUMN c_interval INTERVAL DEFAULT '1 day',
              ALTER COLUMN c_time SET DEFAULT '23:59:59'

Parser Error: Only one ALTER command per statement is supported


INSERT INTO T VALUES (21), (22)
ERROR: 

INSERT INTO T VALUES (21), (22)

Binder Error: table T has 2 columns but 1 values were supplied


ALTER TABLE T ADD COLUMN c_hugetext TEXT DEFAULT repeat('abcdefg',1000),
              ALTER COLUMN c_interval SET DEFAULT '3 hours'
ERROR: 

ALTER TABLE T ADD COLUMN c_hugetext TEXT DEFAULT repeat('abcdefg',1000),
              ALTER COLUMN c_interval SET DEFAULT '3 hours'

Parser Error: Only one ALTER command per statement is supported


INSERT INTO T VALUES (23), (24)
ERROR: 

INSERT INTO T VALUES (23), (24)

Binder Error: table T has 2 columns but 1 values were supplied


ALTER TABLE T ALTER COLUMN c_interval DROP DEFAULT,
              ALTER COLUMN c_hugetext SET DEFAULT repeat('poiuyt', 1000)
ERROR: 

ALTER TABLE T ALTER COLUMN c_interval DROP DEFAULT,
              ALTER COLUMN c_hugetext SET DEFAULT repeat('poiuyt', 1000)

Parser Error: Only one ALTER command per statement is supported


INSERT INTO T VALUES (25), (26)
ERROR: 

INSERT INTO T VALUES (25), (26)

Binder Error: table T has 2 columns but 1 values were supplied


ALTER TABLE T ALTER COLUMN c_bpchar    DROP DEFAULT,
              ALTER COLUMN c_date      DROP DEFAULT,
              ALTER COLUMN c_text      DROP DEFAULT,
              ALTER COLUMN c_timestamp DROP DEFAULT,
              ALTER COLUMN c_array     DROP DEFAULT,
              ALTER COLUMN c_small     DROP DEFAULT,
              ALTER COLUMN c_big       DROP DEFAULT,
              ALTER COLUMN c_num       DROP DEFAULT,
              ALTER COLUMN c_time      DROP DEFAULT,
              ALTER COLUMN c_hugetext  DROP DEFAULT
ERROR: 

ALTER TABLE T ALTER COLUMN c_bpchar    DROP DEFAULT,
              ALTER COLUMN c_date      DROP DEFAULT,
              ALTER COLUMN c_text      DROP DEFAULT,
              ALTER COLUMN c_timestamp DROP DEFAULT,
              ALTER COLUMN c_array     DROP DEFAULT,
              ALTER COLUMN c_small     DROP DEFAULT,
              ALTER COLUMN c_big       DROP DEFAULT,
              ALTER COLUMN c_num       DROP DEFAULT,
              ALTER COLUMN c_time      DROP DEFAULT,
              ALTER COLUMN c_hugetext  DROP DEFAULT

Parser Error: Only one ALTER command per statement is supported


INSERT INTO T VALUES (27), (28)
ERROR: 

INSERT INTO T VALUES (27), (28)

Binder Error: table T has 2 columns but 1 values were supplied


SELECT pk, c_int, c_bpchar, c_text, c_date, c_timestamp,
       c_timestamp_null, c_array, c_small, c_small_null,
       c_big, c_num, c_time, c_interval,
       c_hugetext = repeat('abcdefg',1000) as c_hugetext_origdef,
       c_hugetext = repeat('poiuyt', 1000) as c_hugetext_newdef
FROM T ORDER BY pk
ERROR: 

SELECT pk, c_int, c_bpchar, c_text, c_date, c_timestamp,
       c_timestamp_null, c_array, c_small, c_small_null,
       c_big, c_num, c_time, c_interval,
       c_hugetext = repeat('abcdefg',1000) as c_hugetext_origdef,
       c_hugetext = repeat('poiuyt', 1000) as c_hugetext_newdef
FROM T ORDER BY pk

Binder Error: Referenced column "c_bpchar" not found in FROM clause!
Candidate bindings: "T.pk"


SELECT comp()
ERROR: 

SELECT comp()

Catalog Error: Scalar Function with name comp does not exist!
Did you mean "cos"?


DROP TABLE T


-- Test expressions in the defaults
CREATE OR REPLACE FUNCTION foo(a INT) RETURNS TEXT AS $$
DECLARE res TEXT := '';
        i INT;
BEGIN
  i := 0;
  WHILE (i < a) LOOP
    res := res || chr(ascii('a') + i);
    i := i + 1;
  END LOOP;
  RETURN res;
END; $$ LANGUAGE PLPGSQL STABLE
ERROR: 

-- Test expressions in the defaults
CREATE OR REPLACE FUNCTION foo(a INT) RETURNS TEXT AS $$
DECLARE res TEXT := '';
        i INT;
BEGIN
  i := 0;
  WHILE (i < a) LOOP
    res := res || chr(ascii('a') + i);
    i := i + 1;
  END LOOP;
  RETURN res;
END; $$ LANGUAGE PLPGSQL STABLE

Parser Error: syntax error at or near "INT"


CREATE TABLE T(pk INT NOT NULL PRIMARY KEY, c_int INT DEFAULT LENGTH(foo(6)))
ERROR: 

CREATE TABLE T(pk INT NOT NULL PRIMARY KEY, c_int INT DEFAULT LENGTH(foo(6)))

Catalog Error: Scalar Function with name foo does not exist!
Did you mean "floor"?
LINE 3: ...LL PRIMARY KEY, c_int INT DEFAULT LENGTH(foo(6)))
                                                  ^


SELECT set('t')
ERROR: 

SELECT set('t')

Catalog Error: Scalar Function with name set does not exist!
Did you mean "sem"?


INSERT INTO T VALUES (1), (2)
ERROR: 

INSERT INTO T VALUES (1), (2)

Catalog Error: Table with name T does not exist!
Did you mean "m"?


ALTER TABLE T ADD COLUMN c_bpchar BPCHAR(5) DEFAULT foo(4),
              ALTER COLUMN c_int SET DEFAULT LENGTH(foo(8))
ERROR: 

ALTER TABLE T ADD COLUMN c_bpchar BPCHAR(5) DEFAULT foo(4),
              ALTER COLUMN c_int SET DEFAULT LENGTH(foo(8))

Parser Error: Only one ALTER command per statement is supported


INSERT INTO T VALUES (3), (4)
ERROR: 

INSERT INTO T VALUES (3), (4)

Catalog Error: Table with name T does not exist!
Did you mean "m"?


ALTER TABLE T ADD COLUMN c_text TEXT  DEFAULT foo(6),
              ALTER COLUMN c_bpchar SET DEFAULT foo(3)
ERROR: 

ALTER TABLE T ADD COLUMN c_text TEXT  DEFAULT foo(6),
              ALTER COLUMN c_bpchar SET DEFAULT foo(3)

Parser Error: Only one ALTER command per statement is supported


INSERT INTO T VALUES (5), (6)
ERROR: 

INSERT INTO T VALUES (5), (6)

Catalog Error: Table with name T does not exist!
Did you mean "m"?


ALTER TABLE T ADD COLUMN c_date DATE
                  DEFAULT '2016-06-02'::DATE  + LENGTH(foo(10)),
              ALTER COLUMN c_text SET DEFAULT foo(12)
ERROR: 

ALTER TABLE T ADD COLUMN c_date DATE
                  DEFAULT '2016-06-02'::DATE  + LENGTH(foo(10)),
              ALTER COLUMN c_text SET DEFAULT foo(12)

Parser Error: Only one ALTER command per statement is supported


INSERT INTO T VALUES (7), (8)
ERROR: 

INSERT INTO T VALUES (7), (8)

Catalog Error: Table with name T does not exist!
Did you mean "m"?


ALTER TABLE T ADD COLUMN c_timestamp TIMESTAMP
                  DEFAULT '2016-09-01'::DATE + LENGTH(foo(10)),
              ALTER COLUMN c_date
                  SET DEFAULT '2010-01-01'::DATE - LENGTH(foo(4))
ERROR: 

ALTER TABLE T ADD COLUMN c_timestamp TIMESTAMP
                  DEFAULT '2016-09-01'::DATE + LENGTH(foo(10)),
              ALTER COLUMN c_date
                  SET DEFAULT '2010-01-01'::DATE - LENGTH(foo(4))

Parser Error: Only one ALTER command per statement is supported


INSERT INTO T VALUES (9), (10)
ERROR: 

INSERT INTO T VALUES (9), (10)

Catalog Error: Table with name T does not exist!
Did you mean "m"?


ALTER TABLE T ADD COLUMN c_array TEXT[]
                  DEFAULT ('{"This", "is", "' || foo(4) ||
                           '","the", "real", "world"}')::TEXT[],
              ALTER COLUMN c_timestamp
                  SET DEFAULT '1970-12-31'::DATE + LENGTH(foo(30))
ERROR: 

ALTER TABLE T ADD COLUMN c_array TEXT[]
                  DEFAULT ('{"This", "is", "' || foo(4) ||
                           '","the", "real", "world"}')::TEXT[],
              ALTER COLUMN c_timestamp
                  SET DEFAULT '1970-12-31'::DATE + LENGTH(foo(30))

Parser Error: Only one ALTER command per statement is supported


INSERT INTO T VALUES (11), (12)
ERROR: 

INSERT INTO T VALUES (11), (12)

Catalog Error: Table with name T does not exist!
Did you mean "m"?


ALTER TABLE T ALTER COLUMN c_int DROP DEFAULT,
              ALTER COLUMN c_array
                  SET DEFAULT ('{"This", "is", "' || foo(1) ||
                               '", "fantasy"}')::text[]
ERROR: 

ALTER TABLE T ALTER COLUMN c_int DROP DEFAULT,
              ALTER COLUMN c_array
                  SET DEFAULT ('{"This", "is", "' || foo(1) ||
                               '", "fantasy"}')::text[]

Parser Error: Only one ALTER command per statement is supported


INSERT INTO T VALUES (13), (14)
ERROR: 

INSERT INTO T VALUES (13), (14)

Catalog Error: Table with name T does not exist!
Did you mean "m"?


ALTER TABLE T ALTER COLUMN c_bpchar    DROP DEFAULT,
              ALTER COLUMN c_date      DROP DEFAULT,
              ALTER COLUMN c_text      DROP DEFAULT,
              ALTER COLUMN c_timestamp DROP DEFAULT,
              ALTER COLUMN c_array     DROP DEFAULT
ERROR: 

ALTER TABLE T ALTER COLUMN c_bpchar    DROP DEFAULT,
              ALTER COLUMN c_date      DROP DEFAULT,
              ALTER COLUMN c_text      DROP DEFAULT,
              ALTER COLUMN c_timestamp DROP DEFAULT,
              ALTER COLUMN c_array     DROP DEFAULT

Parser Error: Only one ALTER command per statement is supported


INSERT INTO T VALUES (15), (16)
ERROR: 

INSERT INTO T VALUES (15), (16)

Catalog Error: Table with name T does not exist!
Did you mean "m"?


SELECT * FROM T
ERROR: 

SELECT * FROM T

Catalog Error: Table with name T does not exist!
Did you mean "m"?


SELECT comp()
ERROR: 

SELECT comp()

Catalog Error: Scalar Function with name comp does not exist!
Did you mean "cos"?


DROP TABLE T
ERROR: 

DROP TABLE T

Catalog Error: Table with name T does not exist!
Did you mean "m"?


DROP FUNCTION foo(INT)
ERROR: 

DROP FUNCTION foo(INT)

Parser Error: syntax error at or near "("


-- Fall back to full rewrite for volatile expressions
CREATE TABLE T(pk INT NOT NULL PRIMARY KEY)


INSERT INTO T VALUES (1)


SELECT set('t')
ERROR: 

SELECT set('t')

Catalog Error: Scalar Function with name set does not exist!
Did you mean "sem"?


-- now() is stable, because it returns the transaction timestamp
ALTER TABLE T ADD COLUMN c1 TIMESTAMP DEFAULT now()


SELECT comp()
ERROR: 

SELECT comp()

Catalog Error: Scalar Function with name comp does not exist!
Did you mean "cos"?


-- clock_timestamp() is volatile
ALTER TABLE T ADD COLUMN c2 TIMESTAMP DEFAULT clock_timestamp()
ERROR: 

-- clock_timestamp() is volatile
ALTER TABLE T ADD COLUMN c2 TIMESTAMP DEFAULT clock_timestamp()

Catalog Error: Scalar Function with name clock_timestamp does not exist!
Did you mean "to_timestamp"?
LINE 4: ...ock_timestamp() is volatile
ALTER TABLE T ADD COLUMN c2 TIMESTAMP DEFAULT clock_timestamp()
                                                  ^


SELECT comp()
ERROR: 

SELECT comp()

Catalog Error: Scalar Function with name comp does not exist!
Did you mean "cos"?


-- check that we notice insertion of a volatile default argument
CREATE FUNCTION foolme(timestamptz DEFAULT clock_timestamp())
  RETURNS timestamptz
  IMMUTABLE AS 'select $1' LANGUAGE sql
ERROR: 

-- check that we notice insertion of a volatile default argument
CREATE FUNCTION foolme(timestamptz DEFAULT clock_timestamp())
  RETURNS timestamptz
  IMMUTABLE AS 'select $1' LANGUAGE sql

Parser Error: syntax error at or near "DEFAULT"

ALTER TABLE T ADD COLUMN c3 timestamptz DEFAULT foolme()
ERROR: 
ALTER TABLE T ADD COLUMN c3 timestamptz DEFAULT foolme()

Catalog Error: Scalar Function with name foolme does not exist!
Did you mean "floor"?
LINE 2: ...BLE T ADD COLUMN c3 timestamptz DEFAULT foolme()
                                                  ^


SELECT attname, atthasmissing, attmissingval FROM pg_attribute
  WHERE attrelid = 't'::regclass AND attnum > 0
  ORDER BY attnum
ERROR: 

SELECT attname, atthasmissing, attmissingval FROM pg_attribute
  WHERE attrelid = 't'::regclass AND attnum > 0
  ORDER BY attnum

Catalog Error: Type with name regclass does not exist!
Did you mean "real"?


DROP TABLE T

DROP FUNCTION foolme(timestamptz)
ERROR: 
DROP FUNCTION foolme(timestamptz)

Parser Error: syntax error at or near "("


-- Simple querie
CREATE TABLE T (pk INT NOT NULL PRIMARY KEY)


SELECT set('t')
ERROR: 

SELECT set('t')

Catalog Error: Scalar Function with name set does not exist!
Did you mean "sem"?


INSERT INTO T SELECT * FROM generate_series(1, 10) a


ALTER TABLE T ADD COLUMN c_bigint BIGINT NOT NULL DEFAULT -1
ERROR: 

ALTER TABLE T ADD COLUMN c_bigint BIGINT NOT NULL DEFAULT -1

Parser Error: Adding columns with constraints not yet supported


INSERT INTO T SELECT b, b - 10 FROM generate_series(11, 20) a(b)
ERROR: 

INSERT INTO T SELECT b, b - 10 FROM generate_series(11, 20) a(b)

Binder Error: table T has 1 columns but 2 values were supplied


ALTER TABLE T ADD COLUMN c_text TEXT DEFAULT 'hello'


INSERT INTO T SELECT b, b - 10, (b + 10)::text FROM generate_series(21, 30) a(b)
ERROR: 

INSERT INTO T SELECT b, b - 10, (b + 10)::text FROM generate_series(21, 30) a(b)

Binder Error: table T has 2 columns but 3 values were supplied


-- WHERE clause
SELECT c_bigint, c_text FROM T WHERE c_bigint = -1 LIMIT 1
ERROR: 

-- WHERE clause
SELECT c_bigint, c_text FROM T WHERE c_bigint = -1 LIMIT 1

Binder Error: Referenced column "c_bigint" not found in FROM clause!
Candidate bindings: "T.c_text"


EXPLAIN (VERBOSE TRUE, COSTS FALSE)
SELECT c_bigint, c_text FROM T WHERE c_bigint = -1 LIMIT 1
ERROR: 

EXPLAIN (VERBOSE TRUE, COSTS FALSE)
SELECT c_bigint, c_text FROM T WHERE c_bigint = -1 LIMIT 1

Not implemented Error: Unimplemented explain type: VERBOSE


SELECT c_bigint, c_text FROM T WHERE c_text = 'hello' LIMIT 1
ERROR: 

SELECT c_bigint, c_text FROM T WHERE c_text = 'hello' LIMIT 1

Binder Error: Referenced column "c_bigint" not found in FROM clause!
Candidate bindings: "T.c_text"


EXPLAIN (VERBOSE TRUE, COSTS FALSE) SELECT c_bigint, c_text FROM T WHERE c_text = 'hello' LIMIT 1
ERROR: 

EXPLAIN (VERBOSE TRUE, COSTS FALSE) SELECT c_bigint, c_text FROM T WHERE c_text = 'hello' LIMIT 1

Not implemented Error: Unimplemented explain type: VERBOSE



-- COALESCE
SELECT COALESCE(c_bigint, pk), COALESCE(c_text, pk::text)
FROM T
ORDER BY pk LIMIT 10
ERROR: 


-- COALESCE
SELECT COALESCE(c_bigint, pk), COALESCE(c_text, pk::text)
FROM T
ORDER BY pk LIMIT 10

Binder Error: Referenced column "c_bigint" not found in FROM clause!
Candidate bindings: "T.c_text"


-- Aggregate function
SELECT SUM(c_bigint), MAX(c_text COLLATE "C" ), MIN(c_text COLLATE "C") FROM T
ERROR: 

-- Aggregate function
SELECT SUM(c_bigint), MAX(c_text COLLATE "C" ), MIN(c_text COLLATE "C") FROM T

Binder Error: Referenced column "c_bigint" not found in FROM clause!
Candidate bindings: "T.c_text"


-- ORDER BY
SELECT * FROM T ORDER BY c_bigint, c_text, pk LIMIT 10
ERROR: 

-- ORDER BY
SELECT * FROM T ORDER BY c_bigint, c_text, pk LIMIT 10

Binder Error: Referenced column "c_bigint" not found in FROM clause!
Candidate bindings: "T.c_text"


EXPLAIN (VERBOSE TRUE, COSTS FALSE)
SELECT * FROM T ORDER BY c_bigint, c_text, pk LIMIT 10
ERROR: 

EXPLAIN (VERBOSE TRUE, COSTS FALSE)
SELECT * FROM T ORDER BY c_bigint, c_text, pk LIMIT 10

Not implemented Error: Unimplemented explain type: VERBOSE


-- LIMIT
SELECT * FROM T WHERE c_bigint > -1 ORDER BY c_bigint, c_text, pk LIMIT 10
ERROR: 

-- LIMIT
SELECT * FROM T WHERE c_bigint > -1 ORDER BY c_bigint, c_text, pk LIMIT 10

Binder Error: Referenced column "c_bigint" not found in FROM clause!
Candidate bindings: "T.c_text"


EXPLAIN (VERBOSE TRUE, COSTS FALSE)
SELECT * FROM T WHERE c_bigint > -1 ORDER BY c_bigint, c_text, pk LIMIT 10
ERROR: 

EXPLAIN (VERBOSE TRUE, COSTS FALSE)
SELECT * FROM T WHERE c_bigint > -1 ORDER BY c_bigint, c_text, pk LIMIT 10

Not implemented Error: Unimplemented explain type: VERBOSE


--  DELETE with RETURNING
DELETE FROM T WHERE pk BETWEEN 10 AND 20 RETURNING *
RESULT: 
	[(10, 'hello')]

EXPLAIN (VERBOSE TRUE, COSTS FALSE)
DELETE FROM T WHERE pk BETWEEN 10 AND 20 RETURNING *
ERROR: 
EXPLAIN (VERBOSE TRUE, COSTS FALSE)
DELETE FROM T WHERE pk BETWEEN 10 AND 20 RETURNING *

Not implemented Error: Unimplemented explain type: VERBOSE


-- UPDATE
UPDATE T SET c_text = '"' || c_text || '"'  WHERE pk < 10

SELECT * FROM T WHERE c_text LIKE '"%"' ORDER BY PK
RESULT: 
	[(1, '"hello"'), (2, '"hello"'), (3, '"hello"'), (4, '"hello"'), (5, '"hello"'), (6, '"hello"'), (7, '"hello"'), (8, '"hello"'), (9, '"hello"')]


SELECT comp()
ERROR: 

SELECT comp()

Catalog Error: Scalar Function with name comp does not exist!
Did you mean "cos"?


DROP TABLE T



-- Combine with other DDL
CREATE TABLE T(pk INT NOT NULL PRIMARY KEY)


SELECT set('t')
ERROR: 

SELECT set('t')

Catalog Error: Scalar Function with name set does not exist!
Did you mean "sem"?


INSERT INTO T VALUES (1), (2)


ALTER TABLE T ADD COLUMN c_int INT NOT NULL DEFAULT -1
ERROR: 

ALTER TABLE T ADD COLUMN c_int INT NOT NULL DEFAULT -1

Parser Error: Adding columns with constraints not yet supported


INSERT INTO T VALUES (3), (4)


ALTER TABLE T ADD COLUMN c_text TEXT DEFAULT 'Hello'


INSERT INTO T VALUES (5), (6)
ERROR: 

INSERT INTO T VALUES (5), (6)

Binder Error: table T has 2 columns but 1 values were supplied


ALTER TABLE T ALTER COLUMN c_text SET DEFAULT 'world',
              ALTER COLUMN c_int  SET DEFAULT 1
ERROR: 

ALTER TABLE T ALTER COLUMN c_text SET DEFAULT 'world',
              ALTER COLUMN c_int  SET DEFAULT 1

Parser Error: Only one ALTER command per statement is supported


INSERT INTO T VALUES (7), (8)
ERROR: 

INSERT INTO T VALUES (7), (8)

Binder Error: table T has 2 columns but 1 values were supplied


SELECT * FROM T ORDER BY pk
RESULT: 
	[(1, 'Hello'), (2, 'Hello'), (3, 'Hello'), (4, 'Hello')]


-- Add an index
CREATE INDEX i ON T(c_int, c_text)
ERROR: 

-- Add an index
CREATE INDEX i ON T(c_int, c_text)

Binder Error: Table "T" does not have a column named "c_int"


SELECT c_text FROM T WHERE c_int = -1
ERROR: 

SELECT c_text FROM T WHERE c_int = -1

Binder Error: Referenced column "c_int" not found in FROM clause!
Candidate bindings: "T.c_text"


SELECT comp()
ERROR: 

SELECT comp()

Catalog Error: Scalar Function with name comp does not exist!
Did you mean "cos"?


-- query to exercise expand_tuple function
CREATE TABLE t1 AS
SELECT 1::int AS a , 2::int AS b
FROM generate_series(1,20) q


ALTER TABLE t1 ADD COLUMN c text


SELECT a,
       stddev(cast((SELECT sum(1) FROM generate_series(1,20) x) AS float4))
          OVER (PARTITION BY a,b,c ORDER BY b)
       AS z
FROM t1
RESULT: 
	[(1, 0.0), (1, 0.0), (1, 0.0), (1, 0.0), (1, 0.0), (1, 0.0), (1, 0.0), (1, 0.0), (1, 0.0), (1, 0.0), (1, 0.0), (1, 0.0), (1, 0.0), (1, 0.0), (1, 0.0), (1, 0.0), (1, 0.0), (1, 0.0), (1, 0.0), (1, 0.0)]


DROP TABLE T


-- test that we account for missing columns without defaults correctly
-- in expand_tuple, and that rows are correctly expanded for triggers

CREATE FUNCTION test_trigger()
RETURNS trigger
LANGUAGE plpgsql
AS $$

begin
    raise notice 'old tuple: %', to_json(OLD)::text;
    if TG_OP = 'DELETE'
    then
       return OLD;
    else
       return NEW;
    end if;
end;

$$
ERROR: 

-- test that we account for missing columns without defaults correctly
-- in expand_tuple, and that rows are correctly expanded for triggers

CREATE FUNCTION test_trigger()
RETURNS trigger
LANGUAGE plpgsql
AS $$

begin
    raise notice 'old tuple: %', to_json(OLD)::text;
    if TG_OP = 'DELETE'
    then
       return OLD;
    else
       return NEW;
    end if;
end;

$$

Parser Error: syntax error at or near "RETURNS"


-- 2 new columns, both have defaults
CREATE TABLE t (id serial PRIMARY KEY, a int, b int, c int)
ERROR: 

-- 2 new columns, both have defaults
CREATE TABLE t (id serial PRIMARY KEY, a int, b int, c int)

Catalog Error: Type with name serial does not exist!
Did you mean "real"?

INSERT INTO t (a,b,c) VALUES (1,2,3)
ERROR: 
INSERT INTO t (a,b,c) VALUES (1,2,3)

Catalog Error: Table with name t does not exist!
Did you mean "t1"?

ALTER TABLE t ADD COLUMN x int NOT NULL DEFAULT 4
ERROR: 
ALTER TABLE t ADD COLUMN x int NOT NULL DEFAULT 4

Parser Error: Adding columns with constraints not yet supported

ALTER TABLE t ADD COLUMN y int NOT NULL DEFAULT 5
ERROR: 
ALTER TABLE t ADD COLUMN y int NOT NULL DEFAULT 5

Parser Error: Adding columns with constraints not yet supported

CREATE TRIGGER a BEFORE UPDATE ON t FOR EACH ROW EXECUTE PROCEDURE test_trigger()
ERROR: 
CREATE TRIGGER a BEFORE UPDATE ON t FOR EACH ROW EXECUTE PROCEDURE test_trigger()

Parser Error: syntax error at or near "TRIGGER"

SELECT * FROM t
ERROR: 
SELECT * FROM t

Catalog Error: Table with name t does not exist!
Did you mean "t1"?

UPDATE t SET y = 2
ERROR: 
UPDATE t SET y = 2

Catalog Error: Table with name t does not exist!
Did you mean "t1"?
LINE 2: UPDATE t SET y = 2
               ^

SELECT * FROM t
ERROR: 
SELECT * FROM t

Catalog Error: Table with name t does not exist!
Did you mean "t1"?

DROP TABLE t
ERROR: 
DROP TABLE t

Catalog Error: Table with name t does not exist!
Did you mean "t1"?


-- 2 new columns, first has default
CREATE TABLE t (id serial PRIMARY KEY, a int, b int, c int)
ERROR: 

-- 2 new columns, first has default
CREATE TABLE t (id serial PRIMARY KEY, a int, b int, c int)

Catalog Error: Type with name serial does not exist!
Did you mean "real"?

INSERT INTO t (a,b,c) VALUES (1,2,3)
ERROR: 
INSERT INTO t (a,b,c) VALUES (1,2,3)

Catalog Error: Table with name t does not exist!
Did you mean "t1"?

ALTER TABLE t ADD COLUMN x int NOT NULL DEFAULT 4
ERROR: 
ALTER TABLE t ADD COLUMN x int NOT NULL DEFAULT 4

Parser Error: Adding columns with constraints not yet supported

ALTER TABLE t ADD COLUMN y int
ERROR: 
ALTER TABLE t ADD COLUMN y int

Catalog Error: Table with name t does not exist!
Did you mean "t1"?

CREATE TRIGGER a BEFORE UPDATE ON t FOR EACH ROW EXECUTE PROCEDURE test_trigger()
ERROR: 
CREATE TRIGGER a BEFORE UPDATE ON t FOR EACH ROW EXECUTE PROCEDURE test_trigger()

Parser Error: syntax error at or near "TRIGGER"

SELECT * FROM t
ERROR: 
SELECT * FROM t

Catalog Error: Table with name t does not exist!
Did you mean "t1"?

UPDATE t SET y = 2
ERROR: 
UPDATE t SET y = 2

Catalog Error: Table with name t does not exist!
Did you mean "t1"?
LINE 2: UPDATE t SET y = 2
               ^

SELECT * FROM t
ERROR: 
SELECT * FROM t

Catalog Error: Table with name t does not exist!
Did you mean "t1"?

DROP TABLE t
ERROR: 
DROP TABLE t

Catalog Error: Table with name t does not exist!
Did you mean "t1"?


-- 2 new columns, second has default
CREATE TABLE t (id serial PRIMARY KEY, a int, b int, c int)
ERROR: 

-- 2 new columns, second has default
CREATE TABLE t (id serial PRIMARY KEY, a int, b int, c int)

Catalog Error: Type with name serial does not exist!
Did you mean "real"?

INSERT INTO t (a,b,c) VALUES (1,2,3)
ERROR: 
INSERT INTO t (a,b,c) VALUES (1,2,3)

Catalog Error: Table with name t does not exist!
Did you mean "t1"?

ALTER TABLE t ADD COLUMN x int
ERROR: 
ALTER TABLE t ADD COLUMN x int

Catalog Error: Table with name t does not exist!
Did you mean "t1"?

ALTER TABLE t ADD COLUMN y int NOT NULL DEFAULT 5
ERROR: 
ALTER TABLE t ADD COLUMN y int NOT NULL DEFAULT 5

Parser Error: Adding columns with constraints not yet supported

CREATE TRIGGER a BEFORE UPDATE ON t FOR EACH ROW EXECUTE PROCEDURE test_trigger()
ERROR: 
CREATE TRIGGER a BEFORE UPDATE ON t FOR EACH ROW EXECUTE PROCEDURE test_trigger()

Parser Error: syntax error at or near "TRIGGER"

SELECT * FROM t
ERROR: 
SELECT * FROM t

Catalog Error: Table with name t does not exist!
Did you mean "t1"?

UPDATE t SET y = 2
ERROR: 
UPDATE t SET y = 2

Catalog Error: Table with name t does not exist!
Did you mean "t1"?
LINE 2: UPDATE t SET y = 2
               ^

SELECT * FROM t
ERROR: 
SELECT * FROM t

Catalog Error: Table with name t does not exist!
Did you mean "t1"?

DROP TABLE t
ERROR: 
DROP TABLE t

Catalog Error: Table with name t does not exist!
Did you mean "t1"?


-- 2 new columns, neither has default
CREATE TABLE t (id serial PRIMARY KEY, a int, b int, c int)
ERROR: 

-- 2 new columns, neither has default
CREATE TABLE t (id serial PRIMARY KEY, a int, b int, c int)

Catalog Error: Type with name serial does not exist!
Did you mean "real"?

INSERT INTO t (a,b,c) VALUES (1,2,3)
ERROR: 
INSERT INTO t (a,b,c) VALUES (1,2,3)

Catalog Error: Table with name t does not exist!
Did you mean "t1"?

ALTER TABLE t ADD COLUMN x int
ERROR: 
ALTER TABLE t ADD COLUMN x int

Catalog Error: Table with name t does not exist!
Did you mean "t1"?

ALTER TABLE t ADD COLUMN y int
ERROR: 
ALTER TABLE t ADD COLUMN y int

Catalog Error: Table with name t does not exist!
Did you mean "t1"?

CREATE TRIGGER a BEFORE UPDATE ON t FOR EACH ROW EXECUTE PROCEDURE test_trigger()
ERROR: 
CREATE TRIGGER a BEFORE UPDATE ON t FOR EACH ROW EXECUTE PROCEDURE test_trigger()

Parser Error: syntax error at or near "TRIGGER"

SELECT * FROM t
ERROR: 
SELECT * FROM t

Catalog Error: Table with name t does not exist!
Did you mean "t1"?

UPDATE t SET y = 2
ERROR: 
UPDATE t SET y = 2

Catalog Error: Table with name t does not exist!
Did you mean "t1"?
LINE 2: UPDATE t SET y = 2
               ^

SELECT * FROM t
ERROR: 
SELECT * FROM t

Catalog Error: Table with name t does not exist!
Did you mean "t1"?

DROP TABLE t
ERROR: 
DROP TABLE t

Catalog Error: Table with name t does not exist!
Did you mean "t1"?


-- same as last 4 tests but here the last original column has a NULL value
-- 2 new columns, both have defaults
CREATE TABLE t (id serial PRIMARY KEY, a int, b int, c int)
ERROR: 

-- same as last 4 tests but here the last original column has a NULL value
-- 2 new columns, both have defaults
CREATE TABLE t (id serial PRIMARY KEY, a int, b int, c int)

Catalog Error: Type with name serial does not exist!
Did you mean "real"?

INSERT INTO t (a,b,c) VALUES (1,2,NULL)
ERROR: 
INSERT INTO t (a,b,c) VALUES (1,2,NULL)

Catalog Error: Table with name t does not exist!
Did you mean "t1"?

ALTER TABLE t ADD COLUMN x int NOT NULL DEFAULT 4
ERROR: 
ALTER TABLE t ADD COLUMN x int NOT NULL DEFAULT 4

Parser Error: Adding columns with constraints not yet supported

ALTER TABLE t ADD COLUMN y int NOT NULL DEFAULT 5
ERROR: 
ALTER TABLE t ADD COLUMN y int NOT NULL DEFAULT 5

Parser Error: Adding columns with constraints not yet supported

CREATE TRIGGER a BEFORE UPDATE ON t FOR EACH ROW EXECUTE PROCEDURE test_trigger()
ERROR: 
CREATE TRIGGER a BEFORE UPDATE ON t FOR EACH ROW EXECUTE PROCEDURE test_trigger()

Parser Error: syntax error at or near "TRIGGER"

SELECT * FROM t
ERROR: 
SELECT * FROM t

Catalog Error: Table with name t does not exist!
Did you mean "t1"?

UPDATE t SET y = 2
ERROR: 
UPDATE t SET y = 2

Catalog Error: Table with name t does not exist!
Did you mean "t1"?
LINE 2: UPDATE t SET y = 2
               ^

SELECT * FROM t
ERROR: 
SELECT * FROM t

Catalog Error: Table with name t does not exist!
Did you mean "t1"?

DROP TABLE t
ERROR: 
DROP TABLE t

Catalog Error: Table with name t does not exist!
Did you mean "t1"?


-- 2 new columns, first has default
CREATE TABLE t (id serial PRIMARY KEY, a int, b int, c int)
ERROR: 

-- 2 new columns, first has default
CREATE TABLE t (id serial PRIMARY KEY, a int, b int, c int)

Catalog Error: Type with name serial does not exist!
Did you mean "real"?

INSERT INTO t (a,b,c) VALUES (1,2,NULL)
ERROR: 
INSERT INTO t (a,b,c) VALUES (1,2,NULL)

Catalog Error: Table with name t does not exist!
Did you mean "t1"?

ALTER TABLE t ADD COLUMN x int NOT NULL DEFAULT 4
ERROR: 
ALTER TABLE t ADD COLUMN x int NOT NULL DEFAULT 4

Parser Error: Adding columns with constraints not yet supported

ALTER TABLE t ADD COLUMN y int
ERROR: 
ALTER TABLE t ADD COLUMN y int

Catalog Error: Table with name t does not exist!
Did you mean "t1"?

CREATE TRIGGER a BEFORE UPDATE ON t FOR EACH ROW EXECUTE PROCEDURE test_trigger()
ERROR: 
CREATE TRIGGER a BEFORE UPDATE ON t FOR EACH ROW EXECUTE PROCEDURE test_trigger()

Parser Error: syntax error at or near "TRIGGER"

SELECT * FROM t
ERROR: 
SELECT * FROM t

Catalog Error: Table with name t does not exist!
Did you mean "t1"?

UPDATE t SET y = 2
ERROR: 
UPDATE t SET y = 2

Catalog Error: Table with name t does not exist!
Did you mean "t1"?
LINE 2: UPDATE t SET y = 2
               ^

SELECT * FROM t
ERROR: 
SELECT * FROM t

Catalog Error: Table with name t does not exist!
Did you mean "t1"?

DROP TABLE t
ERROR: 
DROP TABLE t

Catalog Error: Table with name t does not exist!
Did you mean "t1"?


-- 2 new columns, second has default
CREATE TABLE t (id serial PRIMARY KEY, a int, b int, c int)
ERROR: 

-- 2 new columns, second has default
CREATE TABLE t (id serial PRIMARY KEY, a int, b int, c int)

Catalog Error: Type with name serial does not exist!
Did you mean "real"?

INSERT INTO t (a,b,c) VALUES (1,2,NULL)
ERROR: 
INSERT INTO t (a,b,c) VALUES (1,2,NULL)

Catalog Error: Table with name t does not exist!
Did you mean "t1"?

ALTER TABLE t ADD COLUMN x int
ERROR: 
ALTER TABLE t ADD COLUMN x int

Catalog Error: Table with name t does not exist!
Did you mean "t1"?

ALTER TABLE t ADD COLUMN y int NOT NULL DEFAULT 5
ERROR: 
ALTER TABLE t ADD COLUMN y int NOT NULL DEFAULT 5

Parser Error: Adding columns with constraints not yet supported

CREATE TRIGGER a BEFORE UPDATE ON t FOR EACH ROW EXECUTE PROCEDURE test_trigger()
ERROR: 
CREATE TRIGGER a BEFORE UPDATE ON t FOR EACH ROW EXECUTE PROCEDURE test_trigger()

Parser Error: syntax error at or near "TRIGGER"

SELECT * FROM t
ERROR: 
SELECT * FROM t

Catalog Error: Table with name t does not exist!
Did you mean "t1"?

UPDATE t SET y = 2
ERROR: 
UPDATE t SET y = 2

Catalog Error: Table with name t does not exist!
Did you mean "t1"?
LINE 2: UPDATE t SET y = 2
               ^

SELECT * FROM t
ERROR: 
SELECT * FROM t

Catalog Error: Table with name t does not exist!
Did you mean "t1"?

DROP TABLE t
ERROR: 
DROP TABLE t

Catalog Error: Table with name t does not exist!
Did you mean "t1"?


-- 2 new columns, neither has default
CREATE TABLE t (id serial PRIMARY KEY, a int, b int, c int)
ERROR: 

-- 2 new columns, neither has default
CREATE TABLE t (id serial PRIMARY KEY, a int, b int, c int)

Catalog Error: Type with name serial does not exist!
Did you mean "real"?

INSERT INTO t (a,b,c) VALUES (1,2,NULL)
ERROR: 
INSERT INTO t (a,b,c) VALUES (1,2,NULL)

Catalog Error: Table with name t does not exist!
Did you mean "t1"?

ALTER TABLE t ADD COLUMN x int
ERROR: 
ALTER TABLE t ADD COLUMN x int

Catalog Error: Table with name t does not exist!
Did you mean "t1"?

ALTER TABLE t ADD COLUMN y int
ERROR: 
ALTER TABLE t ADD COLUMN y int

Catalog Error: Table with name t does not exist!
Did you mean "t1"?

CREATE TRIGGER a BEFORE UPDATE ON t FOR EACH ROW EXECUTE PROCEDURE test_trigger()
ERROR: 
CREATE TRIGGER a BEFORE UPDATE ON t FOR EACH ROW EXECUTE PROCEDURE test_trigger()

Parser Error: syntax error at or near "TRIGGER"

SELECT * FROM t
ERROR: 
SELECT * FROM t

Catalog Error: Table with name t does not exist!
Did you mean "t1"?

UPDATE t SET y = 2
ERROR: 
UPDATE t SET y = 2

Catalog Error: Table with name t does not exist!
Did you mean "t1"?
LINE 2: UPDATE t SET y = 2
               ^

SELECT * FROM t
ERROR: 
SELECT * FROM t

Catalog Error: Table with name t does not exist!
Did you mean "t1"?

DROP TABLE t
ERROR: 
DROP TABLE t

Catalog Error: Table with name t does not exist!
Did you mean "t1"?


-- make sure expanded tuple has correct self pointer
-- it will be required by the RI trigger doing the cascading delete

CREATE TABLE leader (a int PRIMARY KEY, b int)

CREATE TABLE follower (a int REFERENCES leader ON DELETE CASCADE, b int)
ERROR: 
CREATE TABLE follower (a int REFERENCES leader ON DELETE CASCADE, b int)

Parser Error: FOREIGN KEY constraints cannot use CASCADE, SET NULL or SET DEFAULT

INSERT INTO leader VALUES (1, 1), (2, 2)

ALTER TABLE leader ADD c int

ALTER TABLE leader DROP c

DELETE FROM leader


-- check that ALTER TABLE ... ALTER TYPE does the right thing

CREATE TABLE vtype( a integer)

INSERT INTO vtype VALUES (1)

ALTER TABLE vtype ADD COLUMN b DOUBLE PRECISION DEFAULT 0.2

ALTER TABLE vtype ADD COLUMN c BOOLEAN DEFAULT true

SELECT * FROM vtype
RESULT: 
	[(1, 0.2, True)]

ALTER TABLE vtype
      ALTER b TYPE text USING b::text,
      ALTER c TYPE text USING c::text
ERROR: 
ALTER TABLE vtype
      ALTER b TYPE text USING b::text,
      ALTER c TYPE text USING c::text

Parser Error: Only one ALTER command per statement is supported

SELECT * FROM vtype
RESULT: 
	[(1, 0.2, True)]


-- also check the case that doesn''t rewrite the table

CREATE TABLE vtype2 (a int)

INSERT INTO vtype2 VALUES (1)

ALTER TABLE vtype2 ADD COLUMN b varchar(10) DEFAULT 'xxx'

ALTER TABLE vtype2 ALTER COLUMN b SET DEFAULT 'yyy'

INSERT INTO vtype2 VALUES (2)
ERROR: 
INSERT INTO vtype2 VALUES (2)

Binder Error: table vtype2 has 2 columns but 1 values were supplied


ALTER TABLE vtype2 ALTER COLUMN b TYPE varchar(20) USING b::varchar(20)

SELECT * FROM vtype2
RESULT: 
	[(1, 'xxx')]



-- Ensure that defaults are checked when evaluating whether HOT update
-- is possible, this was broken for a while:
-- https://postgr.es/m/20190202133521.ylauh3ckqa7colzj%40alap3.anarazel.de
BEGIN

CREATE TABLE t()
ERROR: 
CREATE TABLE t()

Parser Error: Table must have at least one column!

INSERT INTO t DEFAULT VALUES
ERROR: 
INSERT INTO t DEFAULT VALUES

Catalog Error: Table with name t does not exist!
Did you mean "t1"?

ALTER TABLE t ADD COLUMN a int DEFAULT 1
ERROR: 
ALTER TABLE t ADD COLUMN a int DEFAULT 1

Catalog Error: Table with name t does not exist!
Did you mean "t1"?

CREATE INDEX ON t(a)
ERROR: 
CREATE INDEX ON t(a)

Not implemented Error: Please provide an index name, e.g., CREATE INDEX my_name ...

-- set column with a default 1 to NULL, due to a bug that wasn''t
-- noticed has heap_getattr buggily returned NULL for default columns
UPDATE t SET a = NULL
ERROR: 
-- set column with a default 1 to NULL, due to a bug that wasn''t
-- noticed has heap_getattr buggily returned NULL for default columns
UPDATE t SET a = NULL

Catalog Error: Table with name t does not exist!
Did you mean "t1"?
LINE 4: UPDATE t SET a = NULL
               ^


-- verify that index and non-index scans show the same result
SET LOCAL enable_seqscan = true
ERROR: 

-- verify that index and non-index scans show the same result
SET LOCAL enable_seqscan = true

Not implemented Error: SET LOCAL is not implemented.

SELECT * FROM t WHERE a IS NULL
ERROR: 
SELECT * FROM t WHERE a IS NULL

Catalog Error: Table with name t does not exist!
Did you mean "t1"?

SET LOCAL enable_seqscan = false
ERROR: 
SET LOCAL enable_seqscan = false

Not implemented Error: SET LOCAL is not implemented.

SELECT * FROM t WHERE a IS NULL
ERROR: 
SELECT * FROM t WHERE a IS NULL

Catalog Error: Table with name t does not exist!
Did you mean "t1"?

ROLLBACK


-- verify that a default set on a non-plain table doesn''t set a missing
-- value on the attribute
CREATE FOREIGN DATA WRAPPER dummy
ERROR: 

-- verify that a default set on a non-plain table doesn''t set a missing
-- value on the attribute
CREATE FOREIGN DATA WRAPPER dummy

Parser Error: syntax error at or near "FOREIGN"

CREATE SERVER s0 FOREIGN DATA WRAPPER dummy
ERROR: 
CREATE SERVER s0 FOREIGN DATA WRAPPER dummy

Parser Error: syntax error at or near "SERVER"

CREATE FOREIGN TABLE ft1 (c1 integer NOT NULL) SERVER s0
ERROR: 
CREATE FOREIGN TABLE ft1 (c1 integer NOT NULL) SERVER s0

Parser Error: syntax error at or near "FOREIGN"

ALTER FOREIGN TABLE ft1 ADD COLUMN c8 integer DEFAULT 0
ERROR: 
ALTER FOREIGN TABLE ft1 ADD COLUMN c8 integer DEFAULT 0

Parser Error: syntax error at or near "FOREIGN"

ALTER FOREIGN TABLE ft1 ALTER COLUMN c8 TYPE char(10)
ERROR: 
ALTER FOREIGN TABLE ft1 ALTER COLUMN c8 TYPE char(10)

Parser Error: syntax error at or near "FOREIGN"

SELECT count(*)
  FROM pg_attribute
  WHERE attrelid = 'ft1'::regclass AND
    (attmissingval IS NOT NULL OR atthasmissing)
ERROR: 
SELECT count(*)
  FROM pg_attribute
  WHERE attrelid = 'ft1'::regclass AND
    (attmissingval IS NOT NULL OR atthasmissing)

Catalog Error: Type with name regclass does not exist!
Did you mean "real"?


-- cleanup
DROP FOREIGN TABLE ft1
ERROR: 

-- cleanup
DROP FOREIGN TABLE ft1

Not implemented Error: Cannot drop this type yet

DROP SERVER s0
ERROR: 
DROP SERVER s0

Not implemented Error: Cannot drop this type yet

DROP FOREIGN DATA WRAPPER dummy
ERROR: 
DROP FOREIGN DATA WRAPPER dummy

Not implemented Error: Cannot drop this type yet

DROP TABLE vtype

DROP TABLE vtype2

DROP TABLE follower
ERROR: 
DROP TABLE follower

Catalog Error: Table with name follower does not exist!
Did you mean "leader"?

DROP TABLE leader

DROP FUNCTION test_trigger()
ERROR: 
DROP FUNCTION test_trigger()

Parser Error: syntax error at or near "("

DROP TABLE t1

DROP FUNCTION set(name)
ERROR: 
DROP FUNCTION set(name)

Parser Error: syntax error at or near "("

DROP FUNCTION comp()
ERROR: 
DROP FUNCTION comp()

Parser Error: syntax error at or near "("

DROP TABLE m

DROP TABLE has_volatile

DROP EVENT TRIGGER has_volatile_rewrite
ERROR: 
DROP EVENT TRIGGER has_volatile_rewrite

Not implemented Error: Cannot drop this type yet

DROP FUNCTION log_rewrite
ERROR: 
DROP FUNCTION log_rewrite

Catalog Error: Macro Function with name log_rewrite does not exist!
Did you mean "log"?

DROP SCHEMA fast_default


-- Leave a table with an active fast default in place, for pg_upgrade testing
set search_path = public
ERROR: 

-- Leave a table with an active fast default in place, for pg_upgrade testing
set search_path = public

Catalog Error: SET search_path: No catalog + schema named "public" found.

create table has_fast_default(f1 int)

insert into has_fast_default values(1)

alter table has_fast_default add column f2 int default 42

table has_fast_default
RESULT: 
	[(1, 42)]


