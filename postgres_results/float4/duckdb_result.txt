
-----------
QUERY:
--
-- FLOAT4
--

CREATE TABLE FLOAT4_TBL (f1  float4);
RESULT:
	[]

-----------
QUERY:


INSERT INTO FLOAT4_TBL(f1) VALUES ('    0.0');
RESULT:
	[]

-----------
QUERY:

INSERT INTO FLOAT4_TBL(f1) VALUES ('1004.30   ');
RESULT:
	[]

-----------
QUERY:

INSERT INTO FLOAT4_TBL(f1) VALUES ('     -34.84    ');
RESULT:
	[]

-----------
QUERY:

INSERT INTO FLOAT4_TBL(f1) VALUES ('1.2345678901234e+20');
RESULT:
	[]

-----------
QUERY:

INSERT INTO FLOAT4_TBL(f1) VALUES ('1.2345678901234e-20');
RESULT:
	[]

-----------
QUERY:


-- test for over and under flow
INSERT INTO FLOAT4_TBL(f1) VALUES ('10e70');
RESULT:
	[]

-----------
QUERY:

INSERT INTO FLOAT4_TBL(f1) VALUES ('-10e70');
RESULT:
	[]

-----------
QUERY:

INSERT INTO FLOAT4_TBL(f1) VALUES ('10e-70');
RESULT:
	[]

-----------
QUERY:

INSERT INTO FLOAT4_TBL(f1) VALUES ('-10e-70');
RESULT:
	[]

-----------
QUERY:


INSERT INTO FLOAT4_TBL(f1) VALUES ('10e70'::float8);
RESULT:
	ERROR - Conversion Error: Type DOUBLE with value 1e+71 can't be cast because the value is out of range for the destination type FLOAT
LINE 3: ...NSERT INTO FLOAT4_TBL(f1) VALUES ('10e70'::float8);
                                                  ^

-----------
QUERY:

INSERT INTO FLOAT4_TBL(f1) VALUES ('-10e70'::float8);
RESULT:
	ERROR - Conversion Error: Type DOUBLE with value -1e+71 can't be cast because the value is out of range for the destination type FLOAT
LINE 2: ...ERT INTO FLOAT4_TBL(f1) VALUES ('-10e70'::float8);
                                                  ^

-----------
QUERY:

INSERT INTO FLOAT4_TBL(f1) VALUES ('10e-70'::float8);
RESULT:
	[]

-----------
QUERY:

INSERT INTO FLOAT4_TBL(f1) VALUES ('-10e-70'::float8);
RESULT:
	[]

-----------
QUERY:


INSERT INTO FLOAT4_TBL(f1) VALUES ('10e400');
RESULT:
	[]

-----------
QUERY:

INSERT INTO FLOAT4_TBL(f1) VALUES ('-10e400');
RESULT:
	[]

-----------
QUERY:

INSERT INTO FLOAT4_TBL(f1) VALUES ('10e-400');
RESULT:
	[]

-----------
QUERY:

INSERT INTO FLOAT4_TBL(f1) VALUES ('-10e-400');
RESULT:
	[]

-----------
QUERY:


-- bad input
INSERT INTO FLOAT4_TBL(f1) VALUES ('');
RESULT:
	ERROR - Conversion Error: Could not convert string '' to FLOAT
LINE 4: INSERT INTO FLOAT4_TBL(f1) VALUES ('');
                                           ^

-----------
QUERY:

INSERT INTO FLOAT4_TBL(f1) VALUES ('       ');
RESULT:
	ERROR - Conversion Error: Could not convert string '       ' to FLOAT
LINE 2: INSERT INTO FLOAT4_TBL(f1) VALUES ('       ');
                                           ^

-----------
QUERY:

INSERT INTO FLOAT4_TBL(f1) VALUES ('xyz');
RESULT:
	ERROR - Conversion Error: Could not convert string 'xyz' to FLOAT
LINE 2: INSERT INTO FLOAT4_TBL(f1) VALUES ('xyz');
                                           ^

-----------
QUERY:

INSERT INTO FLOAT4_TBL(f1) VALUES ('5.0.0');
RESULT:
	ERROR - Conversion Error: Could not convert string '5.0.0' to FLOAT
LINE 2: INSERT INTO FLOAT4_TBL(f1) VALUES ('5.0.0');
                                           ^

-----------
QUERY:

INSERT INTO FLOAT4_TBL(f1) VALUES ('5 . 0');
RESULT:
	ERROR - Conversion Error: Could not convert string '5 . 0' to FLOAT
LINE 2: INSERT INTO FLOAT4_TBL(f1) VALUES ('5 . 0');
                                           ^

-----------
QUERY:

INSERT INTO FLOAT4_TBL(f1) VALUES ('5.   0');
RESULT:
	ERROR - Conversion Error: Could not convert string '5.   0' to FLOAT
LINE 2: INSERT INTO FLOAT4_TBL(f1) VALUES ('5.   0');
                                           ^

-----------
QUERY:

INSERT INTO FLOAT4_TBL(f1) VALUES ('     - 3.0');
RESULT:
	ERROR - Conversion Error: Could not convert string '     - 3.0' to FLOAT
LINE 2: INSERT INTO FLOAT4_TBL(f1) VALUES ('     - 3.0');
                                           ^

-----------
QUERY:

INSERT INTO FLOAT4_TBL(f1) VALUES ('123            5');
RESULT:
	ERROR - Conversion Error: Could not convert string '123            5' to FLOAT
LINE 2: INSERT INTO FLOAT4_TBL(f1) VALUES ('123            5');
                                           ^

-----------
QUERY:


-- Also try it with non-error-throwing API
SELECT pg_input_is_valid('34.5', 'float4');
RESULT:
	ERROR - Catalog Error: Scalar Function with name pg_input_is_valid does not exist!
Did you mean "json_valid"?

-----------
QUERY:

SELECT pg_input_is_valid('xyz', 'float4');
RESULT:
	ERROR - Catalog Error: Scalar Function with name pg_input_is_valid does not exist!
Did you mean "json_valid"?

-----------
QUERY:

SELECT pg_input_is_valid('1e400', 'float4');
RESULT:
	ERROR - Catalog Error: Scalar Function with name pg_input_is_valid does not exist!
Did you mean "json_valid"?

-----------
QUERY:

SELECT * FROM pg_input_error_info('1e400', 'float4');
RESULT:
	ERROR - Catalog Error: Table Function with name pg_input_error_info does not exist!
Did you mean "pragma_storage_info"?

-----------
QUERY:


-- special inputs
SELECT 'NaN'::float4;
RESULT:
	[(nan,)]

-----------
QUERY:

SELECT 'nan'::float4;
RESULT:
	[(nan,)]

-----------
QUERY:

SELECT '   NAN  '::float4;
RESULT:
	[(nan,)]

-----------
QUERY:

SELECT 'infinity'::float4;
RESULT:
	[(inf,)]

-----------
QUERY:

SELECT '          -INFINiTY   '::float4;
RESULT:
	[(-inf,)]

-----------
QUERY:

-- bad special inputs
SELECT 'N A N'::float4;
RESULT:
	ERROR - Conversion Error: Could not convert string 'N A N' to FLOAT

-----------
QUERY:

SELECT 'NaN x'::float4;
RESULT:
	ERROR - Conversion Error: Could not convert string 'NaN x' to FLOAT

-----------
QUERY:

SELECT ' INFINITY    x'::float4;
RESULT:
	ERROR - Conversion Error: Could not convert string ' INFINITY    x' to FLOAT

-----------
QUERY:


SELECT 'Infinity'::float4 + 100.0;
RESULT:
	[(inf,)]

-----------
QUERY:

SELECT 'Infinity'::float4 / 'Infinity'::float4;
RESULT:
	[(nan,)]

-----------
QUERY:

SELECT '42'::float4 / 'Infinity'::float4;
RESULT:
	[(0.0,)]

-----------
QUERY:

SELECT 'nan'::float4 / 'nan'::float4;
RESULT:
	[(nan,)]

-----------
QUERY:

SELECT 'nan'::float4 / '0'::float4;
RESULT:
	[(None,)]

-----------
QUERY:

SELECT 'nan'::numeric::float4;
RESULT:
	ERROR - Conversion Error: Could not convert string "nan" to DECIMAL(18,3)

-----------
QUERY:


SELECT * FROM FLOAT4_TBL;
RESULT:
	[(0.0,), (1004.2999877929688,), (-34.84000015258789,), (1.2345678955701443e+20,), (1.2345678720289608e-20,), (inf,), (-inf,), (0.0,), (-0.0,), (0.0,), (-0.0,), (inf,), (-inf,), (0.0,), (-0.0,)]

-----------
QUERY:


SELECT f.* FROM FLOAT4_TBL f WHERE f.f1 <> '1004.3';
RESULT:
	[(0.0,), (-34.84000015258789,), (1.2345678955701443e+20,), (1.2345678720289608e-20,), (inf,), (-inf,), (0.0,), (-0.0,), (0.0,), (-0.0,), (inf,), (-inf,), (0.0,), (-0.0,)]

-----------
QUERY:


SELECT f.* FROM FLOAT4_TBL f WHERE f.f1 = '1004.3';
RESULT:
	[(1004.2999877929688,)]

-----------
QUERY:


SELECT f.* FROM FLOAT4_TBL f WHERE '1004.3' > f.f1;
RESULT:
	[(0.0,), (-34.84000015258789,), (1.2345678720289608e-20,), (-inf,), (0.0,), (-0.0,), (0.0,), (-0.0,), (-inf,), (0.0,), (-0.0,)]

-----------
QUERY:


SELECT f.* FROM FLOAT4_TBL f WHERE  f.f1 < '1004.3';
RESULT:
	[(0.0,), (-34.84000015258789,), (1.2345678720289608e-20,), (-inf,), (0.0,), (-0.0,), (0.0,), (-0.0,), (-inf,), (0.0,), (-0.0,)]

-----------
QUERY:


SELECT f.* FROM FLOAT4_TBL f WHERE '1004.3' >= f.f1;
RESULT:
	[(0.0,), (1004.2999877929688,), (-34.84000015258789,), (1.2345678720289608e-20,), (-inf,), (0.0,), (-0.0,), (0.0,), (-0.0,), (-inf,), (0.0,), (-0.0,)]

-----------
QUERY:


SELECT f.* FROM FLOAT4_TBL f WHERE  f.f1 <= '1004.3';
RESULT:
	[(0.0,), (1004.2999877929688,), (-34.84000015258789,), (1.2345678720289608e-20,), (-inf,), (0.0,), (-0.0,), (0.0,), (-0.0,), (-inf,), (0.0,), (-0.0,)]

-----------
QUERY:


SELECT f.f1, f.f1 * '-10' AS x FROM FLOAT4_TBL f
   WHERE f.f1 > '0.0';
RESULT:
	[(1004.2999877929688, -10043.0), (1.2345678955701443e+20, -1.2345678252014e+21), (1.2345678720289608e-20, -1.234567839717218e-19), (inf, -inf), (inf, -inf)]

-----------
QUERY:


SELECT f.f1, f.f1 + '-10' AS x FROM FLOAT4_TBL f
   WHERE f.f1 > '0.0';
RESULT:
	[(1004.2999877929688, 994.2999877929688), (1.2345678955701443e+20, 1.2345678955701443e+20), (1.2345678720289608e-20, -10.0), (inf, inf), (inf, inf)]

-----------
QUERY:


SELECT f.f1, f.f1 / '-10' AS x FROM FLOAT4_TBL f
   WHERE f.f1 > '0.0';
RESULT:
	[(1004.2999877929688, -100.43000030517578), (1.2345678955701443e+20, -1.2345679395506094e+19), (1.2345678720289608e-20, -1.2345678720289608e-21), (inf, -inf), (inf, -inf)]

-----------
QUERY:


SELECT f.f1, f.f1 - '-10' AS x FROM FLOAT4_TBL f
   WHERE f.f1 > '0.0';
RESULT:
	[(1004.2999877929688, 1014.2999877929688), (1.2345678955701443e+20, 1.2345678955701443e+20), (1.2345678720289608e-20, 10.0), (inf, inf), (inf, inf)]

-----------
QUERY:


-- test divide by zero
SELECT f.f1 / '0.0' from FLOAT4_TBL f;
RESULT:
	[(None,), (None,), (None,), (None,), (None,), (None,), (None,), (None,), (None,), (None,), (None,), (None,), (None,), (None,), (None,)]

-----------
QUERY:


SELECT * FROM FLOAT4_TBL;
RESULT:
	[(0.0,), (1004.2999877929688,), (-34.84000015258789,), (1.2345678955701443e+20,), (1.2345678720289608e-20,), (inf,), (-inf,), (0.0,), (-0.0,), (0.0,), (-0.0,), (inf,), (-inf,), (0.0,), (-0.0,)]

-----------
QUERY:


-- test the unary float4abs operator
SELECT f.f1, @f.f1 AS abs_f1 FROM FLOAT4_TBL f;
RESULT:
	[(0.0, 0.0), (1004.2999877929688, 1004.2999877929688), (-34.84000015258789, 34.84000015258789), (1.2345678955701443e+20, 1.2345678955701443e+20), (1.2345678720289608e-20, 1.2345678720289608e-20), (inf, inf), (-inf, inf), (0.0, 0.0), (-0.0, -0.0), (0.0, 0.0), (-0.0, -0.0), (inf, inf), (-inf, inf), (0.0, 0.0), (-0.0, -0.0)]

-----------
QUERY:


UPDATE FLOAT4_TBL
   SET f1 = FLOAT4_TBL.f1 * '-1'
   WHERE FLOAT4_TBL.f1 > '0.0';
RESULT:
	[]

-----------
QUERY:


SELECT * FROM FLOAT4_TBL;
RESULT:
	[(0.0,), (-1004.2999877929688,), (-34.84000015258789,), (-1.2345678955701443e+20,), (-1.2345678720289608e-20,), (-inf,), (-inf,), (0.0,), (-0.0,), (0.0,), (-0.0,), (-inf,), (-inf,), (0.0,), (-0.0,)]

-----------
QUERY:


-- test edge-case coercions to integer
SELECT '32767.4'::float4::int2;
RESULT:
	[(32767,)]

-----------
QUERY:

SELECT '32767.6'::float4::int2;
RESULT:
	[(-32768,)]

-----------
QUERY:

SELECT '-32768.4'::float4::int2;
RESULT:
	ERROR - Conversion Error: Type FLOAT with value -32768.4 can't be cast because the value is out of range for the destination type INT16

-----------
QUERY:

SELECT '-32768.6'::float4::int2;
RESULT:
	ERROR - Conversion Error: Type FLOAT with value -32768.6 can't be cast because the value is out of range for the destination type INT16

-----------
QUERY:

SELECT '2147483520'::float4::int4;
RESULT:
	[(2147483520,)]

-----------
QUERY:

SELECT '2147483647'::float4::int4;
RESULT:
	ERROR - Conversion Error: Type FLOAT with value 2147483600.0 can't be cast because the value is out of range for the destination type INT32

-----------
QUERY:

SELECT '-2147483648.5'::float4::int4;
RESULT:
	[(-2147483648,)]

-----------
QUERY:

SELECT '-2147483900'::float4::int4;
RESULT:
	ERROR - Conversion Error: Type FLOAT with value -2147484000.0 can't be cast because the value is out of range for the destination type INT32

-----------
QUERY:

SELECT '9223369837831520256'::float4::int8;
RESULT:
	[(9223369837831520256,)]

-----------
QUERY:

SELECT '9223372036854775807'::float4::int8;
RESULT:
	ERROR - Conversion Error: Type FLOAT with value 9.223372e+18 can't be cast because the value is out of range for the destination type INT64

-----------
QUERY:

SELECT '-9223372036854775808.5'::float4::int8;
RESULT:
	[(-9223372036854775808,)]

-----------
QUERY:

SELECT '-9223380000000000000'::float4::int8;
RESULT:
	ERROR - Conversion Error: Type FLOAT with value -9.22338e+18 can't be cast because the value is out of range for the destination type INT64

-----------
QUERY:


-- test output (and round-trip safety) of various values.
-- To ensure we/* REPLACED */ ''re testing what we think we/* REPLACED */ ''re testing, start with
-- float values specified by bit patterns (as a useful side effect,
-- this means we/* REPLACED */ ''ll fail on non-IEEE platforms).

create type xfloat4;
RESULT:
	ERROR - Parser Error: syntax error at or near ";"

-----------
QUERY:

create function xfloat4in(cstring) returns xfloat4 immutable strict
  language internal as 'int4in';
RESULT:
	ERROR - Parser Error: syntax error at or near "returns"

-----------
QUERY:

create function xfloat4out(xfloat4) returns cstring immutable strict
  language internal as 'int4out';
RESULT:
	ERROR - Parser Error: syntax error at or near "returns"

-----------
QUERY:

create type xfloat4 (input = xfloat4in, output = xfloat4out, like = float4);
RESULT:
	ERROR - Parser Error: syntax error at or near "("

-----------
QUERY:

create cast (xfloat4 as float4) without function;
RESULT:
	ERROR - Parser Error: syntax error at or near "cast"

-----------
QUERY:

create cast (float4 as xfloat4) without function;
RESULT:
	ERROR - Parser Error: syntax error at or near "cast"

-----------
QUERY:

create cast (xfloat4 as integer) without function;
RESULT:
	ERROR - Parser Error: syntax error at or near "cast"

-----------
QUERY:

create cast (integer as xfloat4) without function;
RESULT:
	ERROR - Parser Error: syntax error at or near "cast"

-----------
QUERY:


-- clean up, lest opr_sanity complain
drop type xfloat4 cascade;
RESULT:
	ERROR - Catalog Error: Type with name xfloat4 does not exist!
Did you mean "float4"?
