--
-- GEOMETRY
--
-- Back off displayed precision a little bit to reduce platform-to-platform
-- variation in results.
SET extra_float_digits TO -3;
--
-- Points
--
SELECT center(f1) AS center
   FROM BOX_TBL;
ERROR:  relation "box_tbl" does not exist
LINE 2:    FROM BOX_TBL;
                ^
SELECT (@@ f1) AS center
   FROM BOX_TBL;
ERROR:  relation "box_tbl" does not exist
LINE 2:    FROM BOX_TBL;
                ^
SELECT point(f1) AS center
   FROM CIRCLE_TBL;
ERROR:  relation "circle_tbl" does not exist
LINE 2:    FROM CIRCLE_TBL;
                ^
SELECT (@@ f1) AS center
   FROM CIRCLE_TBL;
ERROR:  relation "circle_tbl" does not exist
LINE 2:    FROM CIRCLE_TBL;
                ^
SELECT (@@ f1) AS center
   FROM POLYGON_TBL
   WHERE (# f1) > 2;
ERROR:  relation "polygon_tbl" does not exist
LINE 2:    FROM POLYGON_TBL
                ^
-- "is horizontal" function
SELECT p1.f1
   FROM POINT_TBL p1
   WHERE ishorizontal(p1.f1, point '(0,0)');
        f1        
------------------
 (0,0)
 (-10,0)
 (1e-300,-1e-300)
(3 rows)

-- "is horizontal" operator
SELECT p1.f1
   FROM POINT_TBL p1
   WHERE p1.f1 ?- point '(0,0)';
        f1        
------------------
 (0,0)
 (-10,0)
 (1e-300,-1e-300)
(3 rows)

-- "is vertical" function
SELECT p1.f1
   FROM POINT_TBL p1
   WHERE isvertical(p1.f1, point '(5.1,34.5)');
     f1     
------------
 (5.1,34.5)
(1 row)

-- "is vertical" operator
SELECT p1.f1
   FROM POINT_TBL p1
   WHERE p1.f1 ?| point '(5.1,34.5)';
     f1     
------------
 (5.1,34.5)
(1 row)

-- Slope
SELECT p1.f1, p2.f1, slope(p1.f1, p2.f1) FROM POINT_TBL p1, POINT_TBL p2;
        f1         |        f1         |     slope      
-------------------+-------------------+----------------
 (0,0)             | (0,0)             |       Infinity
 (0,0)             | (-10,0)           |              0
 (0,0)             | (-3,4)            | -1.33333333333
 (0,0)             | (5.1,34.5)        |  6.76470588235
 (0,0)             | (-5,-12)          |            2.4
 (0,0)             | (1e-300,-1e-300)  |       Infinity
 (0,0)             | (1e+300,Infinity) |       Infinity
 (0,0)             | (Infinity,1e+300) |              0
 (0,0)             | (NaN,NaN)         |            NaN
 (0,0)             | (10,10)           |              1
 (-10,0)           | (0,0)             |              0
 (-10,0)           | (-10,0)           |       Infinity
 (-10,0)           | (-3,4)            | 0.571428571429
 (-10,0)           | (5.1,34.5)        |  2.28476821192
 (-10,0)           | (-5,-12)          |           -2.4
 (-10,0)           | (1e-300,-1e-300)  |              0
 (-10,0)           | (1e+300,Infinity) |       Infinity
 (-10,0)           | (Infinity,1e+300) |              0
 (-10,0)           | (NaN,NaN)         |            NaN
 (-10,0)           | (10,10)           |            0.5
 (-3,4)            | (0,0)             | -1.33333333333
 (-3,4)            | (-10,0)           | 0.571428571429
 (-3,4)            | (-3,4)            |       Infinity
 (-3,4)            | (5.1,34.5)        |  3.76543209877
 (-3,4)            | (-5,-12)          |              8
 (-3,4)            | (1e-300,-1e-300)  | -1.33333333333
 (-3,4)            | (1e+300,Infinity) |       Infinity
 (-3,4)            | (Infinity,1e+300) |              0
 (-3,4)            | (NaN,NaN)         |            NaN
 (-3,4)            | (10,10)           | 0.461538461538
 (5.1,34.5)        | (0,0)             |  6.76470588235
 (5.1,34.5)        | (-10,0)           |  2.28476821192
 (5.1,34.5)        | (-3,4)            |  3.76543209877
 (5.1,34.5)        | (5.1,34.5)        |       Infinity
 (5.1,34.5)        | (-5,-12)          |  4.60396039604
 (5.1,34.5)        | (1e-300,-1e-300)  |  6.76470588235
 (5.1,34.5)        | (1e+300,Infinity) |       Infinity
 (5.1,34.5)        | (Infinity,1e+300) |              0
 (5.1,34.5)        | (NaN,NaN)         |            NaN
 (5.1,34.5)        | (10,10)           |             -5
 (-5,-12)          | (0,0)             |            2.4
 (-5,-12)          | (-10,0)           |           -2.4
 (-5,-12)          | (-3,4)            |              8
 (-5,-12)          | (5.1,34.5)        |  4.60396039604
 (-5,-12)          | (-5,-12)          |       Infinity
 (-5,-12)          | (1e-300,-1e-300)  |            2.4
 (-5,-12)          | (1e+300,Infinity) |       Infinity
 (-5,-12)          | (Infinity,1e+300) |              0
 (-5,-12)          | (NaN,NaN)         |            NaN
 (-5,-12)          | (10,10)           |  1.46666666667
 (1e-300,-1e-300)  | (0,0)             |       Infinity
 (1e-300,-1e-300)  | (-10,0)           |              0
 (1e-300,-1e-300)  | (-3,4)            | -1.33333333333
 (1e-300,-1e-300)  | (5.1,34.5)        |  6.76470588235
 (1e-300,-1e-300)  | (-5,-12)          |            2.4
 (1e-300,-1e-300)  | (1e-300,-1e-300)  |       Infinity
 (1e-300,-1e-300)  | (1e+300,Infinity) |       Infinity
 (1e-300,-1e-300)  | (Infinity,1e+300) |              0
 (1e-300,-1e-300)  | (NaN,NaN)         |            NaN
 (1e-300,-1e-300)  | (10,10)           |              1
 (1e+300,Infinity) | (0,0)             |       Infinity
 (1e+300,Infinity) | (-10,0)           |       Infinity
 (1e+300,Infinity) | (-3,4)            |       Infinity
 (1e+300,Infinity) | (5.1,34.5)        |       Infinity
 (1e+300,Infinity) | (-5,-12)          |       Infinity
 (1e+300,Infinity) | (1e-300,-1e-300)  |       Infinity
 (1e+300,Infinity) | (1e+300,Infinity) |       Infinity
 (1e+300,Infinity) | (Infinity,1e+300) |            NaN
 (1e+300,Infinity) | (NaN,NaN)         |            NaN
 (1e+300,Infinity) | (10,10)           |       Infinity
 (Infinity,1e+300) | (0,0)             |              0
 (Infinity,1e+300) | (-10,0)           |              0
 (Infinity,1e+300) | (-3,4)            |              0
 (Infinity,1e+300) | (5.1,34.5)        |              0
 (Infinity,1e+300) | (-5,-12)          |              0
 (Infinity,1e+300) | (1e-300,-1e-300)  |              0
 (Infinity,1e+300) | (1e+300,Infinity) |            NaN
 (Infinity,1e+300) | (Infinity,1e+300) |       Infinity
 (Infinity,1e+300) | (NaN,NaN)         |            NaN
 (Infinity,1e+300) | (10,10)           |              0
 (NaN,NaN)         | (0,0)             |            NaN
 (NaN,NaN)         | (-10,0)           |            NaN
 (NaN,NaN)         | (-3,4)            |            NaN
 (NaN,NaN)         | (5.1,34.5)        |            NaN
 (NaN,NaN)         | (-5,-12)          |            NaN
 (NaN,NaN)         | (1e-300,-1e-300)  |            NaN
 (NaN,NaN)         | (1e+300,Infinity) |            NaN
 (NaN,NaN)         | (Infinity,1e+300) |            NaN
 (NaN,NaN)         | (NaN,NaN)         |            NaN
 (NaN,NaN)         | (10,10)           |            NaN
 (10,10)           | (0,0)             |              1
 (10,10)           | (-10,0)           |            0.5
 (10,10)           | (-3,4)            | 0.461538461538
 (10,10)           | (5.1,34.5)        |             -5
 (10,10)           | (-5,-12)          |  1.46666666667
 (10,10)           | (1e-300,-1e-300)  |              1
 (10,10)           | (1e+300,Infinity) |       Infinity
 (10,10)           | (Infinity,1e+300) |              0
 (10,10)           | (NaN,NaN)         |            NaN
 (10,10)           | (10,10)           |       Infinity
(100 rows)

-- Add point
SELECT p1.f1, p2.f1, p1.f1 + p2.f1 FROM POINT_TBL p1, POINT_TBL p2;
        f1         |        f1         |      ?column?       
-------------------+-------------------+---------------------
 (0,0)             | (0,0)             | (0,0)
 (0,0)             | (-10,0)           | (-10,0)
 (0,0)             | (-3,4)            | (-3,4)
 (0,0)             | (5.1,34.5)        | (5.1,34.5)
 (0,0)             | (-5,-12)          | (-5,-12)
 (0,0)             | (1e-300,-1e-300)  | (1e-300,-1e-300)
 (0,0)             | (1e+300,Infinity) | (1e+300,Infinity)
 (0,0)             | (Infinity,1e+300) | (Infinity,1e+300)
 (0,0)             | (NaN,NaN)         | (NaN,NaN)
 (0,0)             | (10,10)           | (10,10)
 (-10,0)           | (0,0)             | (-10,0)
 (-10,0)           | (-10,0)           | (-20,0)
 (-10,0)           | (-3,4)            | (-13,4)
 (-10,0)           | (5.1,34.5)        | (-4.9,34.5)
 (-10,0)           | (-5,-12)          | (-15,-12)
 (-10,0)           | (1e-300,-1e-300)  | (-10,-1e-300)
 (-10,0)           | (1e+300,Infinity) | (1e+300,Infinity)
 (-10,0)           | (Infinity,1e+300) | (Infinity,1e+300)
 (-10,0)           | (NaN,NaN)         | (NaN,NaN)
 (-10,0)           | (10,10)           | (0,10)
 (-3,4)            | (0,0)             | (-3,4)
 (-3,4)            | (-10,0)           | (-13,4)
 (-3,4)            | (-3,4)            | (-6,8)
 (-3,4)            | (5.1,34.5)        | (2.1,38.5)
 (-3,4)            | (-5,-12)          | (-8,-8)
 (-3,4)            | (1e-300,-1e-300)  | (-3,4)
 (-3,4)            | (1e+300,Infinity) | (1e+300,Infinity)
 (-3,4)            | (Infinity,1e+300) | (Infinity,1e+300)
 (-3,4)            | (NaN,NaN)         | (NaN,NaN)
 (-3,4)            | (10,10)           | (7,14)
 (5.1,34.5)        | (0,0)             | (5.1,34.5)
 (5.1,34.5)        | (-10,0)           | (-4.9,34.5)
 (5.1,34.5)        | (-3,4)            | (2.1,38.5)
 (5.1,34.5)        | (5.1,34.5)        | (10.2,69)
 (5.1,34.5)        | (-5,-12)          | (0.1,22.5)
 (5.1,34.5)        | (1e-300,-1e-300)  | (5.1,34.5)
 (5.1,34.5)        | (1e+300,Infinity) | (1e+300,Infinity)
 (5.1,34.5)        | (Infinity,1e+300) | (Infinity,1e+300)
 (5.1,34.5)        | (NaN,NaN)         | (NaN,NaN)
 (5.1,34.5)        | (10,10)           | (15.1,44.5)
 (-5,-12)          | (0,0)             | (-5,-12)
 (-5,-12)          | (-10,0)           | (-15,-12)
 (-5,-12)          | (-3,4)            | (-8,-8)
 (-5,-12)          | (5.1,34.5)        | (0.1,22.5)
 (-5,-12)          | (-5,-12)          | (-10,-24)
 (-5,-12)          | (1e-300,-1e-300)  | (-5,-12)
 (-5,-12)          | (1e+300,Infinity) | (1e+300,Infinity)
 (-5,-12)          | (Infinity,1e+300) | (Infinity,1e+300)
 (-5,-12)          | (NaN,NaN)         | (NaN,NaN)
 (-5,-12)          | (10,10)           | (5,-2)
 (1e-300,-1e-300)  | (0,0)             | (1e-300,-1e-300)
 (1e-300,-1e-300)  | (-10,0)           | (-10,-1e-300)
 (1e-300,-1e-300)  | (-3,4)            | (-3,4)
 (1e-300,-1e-300)  | (5.1,34.5)        | (5.1,34.5)
 (1e-300,-1e-300)  | (-5,-12)          | (-5,-12)
 (1e-300,-1e-300)  | (1e-300,-1e-300)  | (2e-300,-2e-300)
 (1e-300,-1e-300)  | (1e+300,Infinity) | (1e+300,Infinity)
 (1e-300,-1e-300)  | (Infinity,1e+300) | (Infinity,1e+300)
 (1e-300,-1e-300)  | (NaN,NaN)         | (NaN,NaN)
 (1e-300,-1e-300)  | (10,10)           | (10,10)
 (1e+300,Infinity) | (0,0)             | (1e+300,Infinity)
 (1e+300,Infinity) | (-10,0)           | (1e+300,Infinity)
 (1e+300,Infinity) | (-3,4)            | (1e+300,Infinity)
 (1e+300,Infinity) | (5.1,34.5)        | (1e+300,Infinity)
 (1e+300,Infinity) | (-5,-12)          | (1e+300,Infinity)
 (1e+300,Infinity) | (1e-300,-1e-300)  | (1e+300,Infinity)
 (1e+300,Infinity) | (1e+300,Infinity) | (2e+300,Infinity)
 (1e+300,Infinity) | (Infinity,1e+300) | (Infinity,Infinity)
 (1e+300,Infinity) | (NaN,NaN)         | (NaN,NaN)
 (1e+300,Infinity) | (10,10)           | (1e+300,Infinity)
 (Infinity,1e+300) | (0,0)             | (Infinity,1e+300)
 (Infinity,1e+300) | (-10,0)           | (Infinity,1e+300)
 (Infinity,1e+300) | (-3,4)            | (Infinity,1e+300)
 (Infinity,1e+300) | (5.1,34.5)        | (Infinity,1e+300)
 (Infinity,1e+300) | (-5,-12)          | (Infinity,1e+300)
 (Infinity,1e+300) | (1e-300,-1e-300)  | (Infinity,1e+300)
 (Infinity,1e+300) | (1e+300,Infinity) | (Infinity,Infinity)
 (Infinity,1e+300) | (Infinity,1e+300) | (Infinity,2e+300)
 (Infinity,1e+300) | (NaN,NaN)         | (NaN,NaN)
 (Infinity,1e+300) | (10,10)           | (Infinity,1e+300)
 (NaN,NaN)         | (0,0)             | (NaN,NaN)
 (NaN,NaN)         | (-10,0)           | (NaN,NaN)
 (NaN,NaN)         | (-3,4)            | (NaN,NaN)
 (NaN,NaN)         | (5.1,34.5)        | (NaN,NaN)
 (NaN,NaN)         | (-5,-12)          | (NaN,NaN)
 (NaN,NaN)         | (1e-300,-1e-300)  | (NaN,NaN)
 (NaN,NaN)         | (1e+300,Infinity) | (NaN,NaN)
 (NaN,NaN)         | (Infinity,1e+300) | (NaN,NaN)
 (NaN,NaN)         | (NaN,NaN)         | (NaN,NaN)
 (NaN,NaN)         | (10,10)           | (NaN,NaN)
 (10,10)           | (0,0)             | (10,10)
 (10,10)           | (-10,0)           | (0,10)
 (10,10)           | (-3,4)            | (7,14)
 (10,10)           | (5.1,34.5)        | (15.1,44.5)
 (10,10)           | (-5,-12)          | (5,-2)
 (10,10)           | (1e-300,-1e-300)  | (10,10)
 (10,10)           | (1e+300,Infinity) | (1e+300,Infinity)
 (10,10)           | (Infinity,1e+300) | (Infinity,1e+300)
 (10,10)           | (NaN,NaN)         | (NaN,NaN)
 (10,10)           | (10,10)           | (20,20)
(100 rows)

-- Subtract point
SELECT p1.f1, p2.f1, p1.f1 - p2.f1 FROM POINT_TBL p1, POINT_TBL p2;
        f1         |        f1         |       ?column?       
-------------------+-------------------+----------------------
 (0,0)             | (0,0)             | (0,0)
 (0,0)             | (-10,0)           | (10,0)
 (0,0)             | (-3,4)            | (3,-4)
 (0,0)             | (5.1,34.5)        | (-5.1,-34.5)
 (0,0)             | (-5,-12)          | (5,12)
 (0,0)             | (1e-300,-1e-300)  | (-1e-300,1e-300)
 (0,0)             | (1e+300,Infinity) | (-1e+300,-Infinity)
 (0,0)             | (Infinity,1e+300) | (-Infinity,-1e+300)
 (0,0)             | (NaN,NaN)         | (NaN,NaN)
 (0,0)             | (10,10)           | (-10,-10)
 (-10,0)           | (0,0)             | (-10,0)
 (-10,0)           | (-10,0)           | (0,0)
 (-10,0)           | (-3,4)            | (-7,-4)
 (-10,0)           | (5.1,34.5)        | (-15.1,-34.5)
 (-10,0)           | (-5,-12)          | (-5,12)
 (-10,0)           | (1e-300,-1e-300)  | (-10,1e-300)
 (-10,0)           | (1e+300,Infinity) | (-1e+300,-Infinity)
 (-10,0)           | (Infinity,1e+300) | (-Infinity,-1e+300)
 (-10,0)           | (NaN,NaN)         | (NaN,NaN)
 (-10,0)           | (10,10)           | (-20,-10)
 (-3,4)            | (0,0)             | (-3,4)
 (-3,4)            | (-10,0)           | (7,4)
 (-3,4)            | (-3,4)            | (0,0)
 (-3,4)            | (5.1,34.5)        | (-8.1,-30.5)
 (-3,4)            | (-5,-12)          | (2,16)
 (-3,4)            | (1e-300,-1e-300)  | (-3,4)
 (-3,4)            | (1e+300,Infinity) | (-1e+300,-Infinity)
 (-3,4)            | (Infinity,1e+300) | (-Infinity,-1e+300)
 (-3,4)            | (NaN,NaN)         | (NaN,NaN)
 (-3,4)            | (10,10)           | (-13,-6)
 (5.1,34.5)        | (0,0)             | (5.1,34.5)
 (5.1,34.5)        | (-10,0)           | (15.1,34.5)
 (5.1,34.5)        | (-3,4)            | (8.1,30.5)
 (5.1,34.5)        | (5.1,34.5)        | (0,0)
 (5.1,34.5)        | (-5,-12)          | (10.1,46.5)
 (5.1,34.5)        | (1e-300,-1e-300)  | (5.1,34.5)
 (5.1,34.5)        | (1e+300,Infinity) | (-1e+300,-Infinity)
 (5.1,34.5)        | (Infinity,1e+300) | (-Infinity,-1e+300)
 (5.1,34.5)        | (NaN,NaN)         | (NaN,NaN)
 (5.1,34.5)        | (10,10)           | (-4.9,24.5)
 (-5,-12)          | (0,0)             | (-5,-12)
 (-5,-12)          | (-10,0)           | (5,-12)
 (-5,-12)          | (-3,4)            | (-2,-16)
 (-5,-12)          | (5.1,34.5)        | (-10.1,-46.5)
 (-5,-12)          | (-5,-12)          | (0,0)
 (-5,-12)          | (1e-300,-1e-300)  | (-5,-12)
 (-5,-12)          | (1e+300,Infinity) | (-1e+300,-Infinity)
 (-5,-12)          | (Infinity,1e+300) | (-Infinity,-1e+300)
 (-5,-12)          | (NaN,NaN)         | (NaN,NaN)
 (-5,-12)          | (10,10)           | (-15,-22)
 (1e-300,-1e-300)  | (0,0)             | (1e-300,-1e-300)
 (1e-300,-1e-300)  | (-10,0)           | (10,-1e-300)
 (1e-300,-1e-300)  | (-3,4)            | (3,-4)
 (1e-300,-1e-300)  | (5.1,34.5)        | (-5.1,-34.5)
 (1e-300,-1e-300)  | (-5,-12)          | (5,12)
 (1e-300,-1e-300)  | (1e-300,-1e-300)  | (0,0)
 (1e-300,-1e-300)  | (1e+300,Infinity) | (-1e+300,-Infinity)
 (1e-300,-1e-300)  | (Infinity,1e+300) | (-Infinity,-1e+300)
 (1e-300,-1e-300)  | (NaN,NaN)         | (NaN,NaN)
 (1e-300,-1e-300)  | (10,10)           | (-10,-10)
 (1e+300,Infinity) | (0,0)             | (1e+300,Infinity)
 (1e+300,Infinity) | (-10,0)           | (1e+300,Infinity)
 (1e+300,Infinity) | (-3,4)            | (1e+300,Infinity)
 (1e+300,Infinity) | (5.1,34.5)        | (1e+300,Infinity)
 (1e+300,Infinity) | (-5,-12)          | (1e+300,Infinity)
 (1e+300,Infinity) | (1e-300,-1e-300)  | (1e+300,Infinity)
 (1e+300,Infinity) | (1e+300,Infinity) | (0,NaN)
 (1e+300,Infinity) | (Infinity,1e+300) | (-Infinity,Infinity)
 (1e+300,Infinity) | (NaN,NaN)         | (NaN,NaN)
 (1e+300,Infinity) | (10,10)           | (1e+300,Infinity)
 (Infinity,1e+300) | (0,0)             | (Infinity,1e+300)
 (Infinity,1e+300) | (-10,0)           | (Infinity,1e+300)
 (Infinity,1e+300) | (-3,4)            | (Infinity,1e+300)
 (Infinity,1e+300) | (5.1,34.5)        | (Infinity,1e+300)
 (Infinity,1e+300) | (-5,-12)          | (Infinity,1e+300)
 (Infinity,1e+300) | (1e-300,-1e-300)  | (Infinity,1e+300)
 (Infinity,1e+300) | (1e+300,Infinity) | (Infinity,-Infinity)
 (Infinity,1e+300) | (Infinity,1e+300) | (NaN,0)
 (Infinity,1e+300) | (NaN,NaN)         | (NaN,NaN)
 (Infinity,1e+300) | (10,10)           | (Infinity,1e+300)
 (NaN,NaN)         | (0,0)             | (NaN,NaN)
 (NaN,NaN)         | (-10,0)           | (NaN,NaN)
 (NaN,NaN)         | (-3,4)            | (NaN,NaN)
 (NaN,NaN)         | (5.1,34.5)        | (NaN,NaN)
 (NaN,NaN)         | (-5,-12)          | (NaN,NaN)
 (NaN,NaN)         | (1e-300,-1e-300)  | (NaN,NaN)
 (NaN,NaN)         | (1e+300,Infinity) | (NaN,NaN)
 (NaN,NaN)         | (Infinity,1e+300) | (NaN,NaN)
 (NaN,NaN)         | (NaN,NaN)         | (NaN,NaN)
 (NaN,NaN)         | (10,10)           | (NaN,NaN)
 (10,10)           | (0,0)             | (10,10)
 (10,10)           | (-10,0)           | (20,10)
 (10,10)           | (-3,4)            | (13,6)
 (10,10)           | (5.1,34.5)        | (4.9,-24.5)
 (10,10)           | (-5,-12)          | (15,22)
 (10,10)           | (1e-300,-1e-300)  | (10,10)
 (10,10)           | (1e+300,Infinity) | (-1e+300,-Infinity)
 (10,10)           | (Infinity,1e+300) | (-Infinity,-1e+300)
 (10,10)           | (NaN,NaN)         | (NaN,NaN)
 (10,10)           | (10,10)           | (0,0)
(100 rows)

-- Multiply with point
SELECT p1.f1, p2.f1, p1.f1 * p2.f1 FROM POINT_TBL p1, POINT_TBL p2 WHERE p1.f1[0] BETWEEN 1 AND 1000;
     f1     |        f1         |       ?column?        
------------+-------------------+-----------------------
 (5.1,34.5) | (0,0)             | (0,0)
 (10,10)    | (0,0)             | (0,0)
 (5.1,34.5) | (-10,0)           | (-51,-345)
 (10,10)    | (-10,0)           | (-100,-100)
 (5.1,34.5) | (-3,4)            | (-153.3,-83.1)
 (10,10)    | (-3,4)            | (-70,10)
 (5.1,34.5) | (5.1,34.5)        | (-1164.24,351.9)
 (10,10)    | (5.1,34.5)        | (-294,396)
 (5.1,34.5) | (-5,-12)          | (388.5,-233.7)
 (10,10)    | (-5,-12)          | (70,-170)
 (5.1,34.5) | (1e-300,-1e-300)  | (3.96e-299,2.94e-299)
 (10,10)    | (1e-300,-1e-300)  | (2e-299,0)
 (5.1,34.5) | (1e+300,Infinity) | (-Infinity,Infinity)
 (10,10)    | (1e+300,Infinity) | (-Infinity,Infinity)
 (5.1,34.5) | (Infinity,1e+300) | (Infinity,Infinity)
 (10,10)    | (Infinity,1e+300) | (Infinity,Infinity)
 (5.1,34.5) | (NaN,NaN)         | (NaN,NaN)
 (10,10)    | (NaN,NaN)         | (NaN,NaN)
 (5.1,34.5) | (10,10)           | (-294,396)
 (10,10)    | (10,10)           | (0,200)
(20 rows)

-- Underflow error
SELECT p1.f1, p2.f1, p1.f1 * p2.f1 FROM POINT_TBL p1, POINT_TBL p2 WHERE p1.f1[0] < 1;
ERROR:  value out of range: underflow
-- Divide by point
SELECT p1.f1, p2.f1, p1.f1 / p2.f1 FROM POINT_TBL p1, POINT_TBL p2 WHERE p2.f1[0] BETWEEN 1 AND 1000;
        f1         |     f1     |                 ?column?                  
-------------------+------------+-------------------------------------------
 (0,0)             | (5.1,34.5) | (0,0)
 (0,0)             | (10,10)    | (0,0)
 (-10,0)           | (5.1,34.5) | (-0.0419318237877,0.283656455034)
 (-10,0)           | (10,10)    | (-0.5,0.5)
 (-3,4)            | (5.1,34.5) | (0.100883034877,0.101869666025)
 (-3,4)            | (10,10)    | (0.05,0.35)
 (5.1,34.5)        | (5.1,34.5) | (1,0)
 (5.1,34.5)        | (10,10)    | (1.98,1.47)
 (-5,-12)          | (5.1,34.5) | (-0.361353657935,0.0915100389719)
 (-5,-12)          | (10,10)    | (-0.85,-0.35)
 (1e-300,-1e-300)  | (5.1,34.5) | (-2.41724631247e-302,-3.25588278822e-302)
 (1e-300,-1e-300)  | (10,10)    | (0,-1e-301)
 (1e+300,Infinity) | (5.1,34.5) | (Infinity,Infinity)
 (1e+300,Infinity) | (10,10)    | (Infinity,Infinity)
 (Infinity,1e+300) | (5.1,34.5) | (Infinity,-Infinity)
 (Infinity,1e+300) | (10,10)    | (Infinity,-Infinity)
 (NaN,NaN)         | (5.1,34.5) | (NaN,NaN)
 (NaN,NaN)         | (10,10)    | (NaN,NaN)
 (10,10)           | (5.1,34.5) | (0.325588278822,-0.241724631247)
 (10,10)           | (10,10)    | (1,0)
(20 rows)

-- Overflow error
SELECT p1.f1, p2.f1, p1.f1 / p2.f1 FROM POINT_TBL p1, POINT_TBL p2 WHERE p2.f1[0] > 1000;
ERROR:  value out of range: overflow
-- Division by 0 error
SELECT p1.f1, p2.f1, p1.f1 / p2.f1 FROM POINT_TBL p1, POINT_TBL p2 WHERE p2.f1 ~= '(0,0)'::point;
ERROR:  division by zero
-- Distance to line
SELECT p.f1, l.s, p.f1 <-> l.s AS dist_pl, l.s <-> p.f1 AS dist_lp FROM POINT_TBL p, LINE_TBL l;
ERROR:  relation "line_tbl" does not exist
LINE 1: ...ist_pl, l.s <-> p.f1 AS dist_lp FROM POINT_TBL p, LINE_TBL l...
                                                             ^
-- Distance to line segment
SELECT p.f1, l.s, p.f1 <-> l.s AS dist_ps, l.s <-> p.f1 AS dist_sp FROM POINT_TBL p, LSEG_TBL l;
ERROR:  relation "lseg_tbl" does not exist
LINE 1: ...ist_ps, l.s <-> p.f1 AS dist_sp FROM POINT_TBL p, LSEG_TBL l...
                                                             ^
-- Distance to box
SELECT p.f1, b.f1, p.f1 <-> b.f1 AS dist_pb, b.f1 <-> p.f1 AS dist_bp FROM POINT_TBL p, BOX_TBL b;
ERROR:  relation "box_tbl" does not exist
LINE 1: ...st_pb, b.f1 <-> p.f1 AS dist_bp FROM POINT_TBL p, BOX_TBL b;
                                                             ^
-- Distance to path
SELECT p.f1, p1.f1, p.f1 <-> p1.f1 AS dist_ppath, p1.f1 <-> p.f1 AS dist_pathp FROM POINT_TBL p, PATH_TBL p1;
ERROR:  relation "path_tbl" does not exist
LINE 1: ...h, p1.f1 <-> p.f1 AS dist_pathp FROM POINT_TBL p, PATH_TBL p...
                                                             ^
-- Distance to polygon
SELECT p.f1, p1.f1, p.f1 <-> p1.f1 AS dist_ppoly, p1.f1 <-> p.f1 AS dist_polyp FROM POINT_TBL p, POLYGON_TBL p1;
ERROR:  relation "polygon_tbl" does not exist
LINE 1: ...y, p1.f1 <-> p.f1 AS dist_polyp FROM POINT_TBL p, POLYGON_TB...
                                                             ^
-- Construct line through two points
SELECT p1.f1, p2.f1, line(p1.f1, p2.f1)
  FROM POINT_TBL p1, POINT_TBL p2 WHERE p1.f1 <> p2.f1;
        f1         |        f1         |                  line                  
-------------------+-------------------+----------------------------------------
 (0,0)             | (-10,0)           | {0,-1,0}
 (0,0)             | (-3,4)            | {-1.33333333333,-1,0}
 (0,0)             | (5.1,34.5)        | {6.76470588235,-1,0}
 (0,0)             | (-5,-12)          | {2.4,-1,0}
 (0,0)             | (1e+300,Infinity) | {-1,0,0}
 (0,0)             | (Infinity,1e+300) | {0,-1,0}
 (0,0)             | (NaN,NaN)         | {NaN,-1,NaN}
 (0,0)             | (10,10)           | {1,-1,0}
 (-10,0)           | (0,0)             | {0,-1,0}
 (-10,0)           | (-3,4)            | {0.571428571429,-1,5.71428571429}
 (-10,0)           | (5.1,34.5)        | {2.28476821192,-1,22.8476821192}
 (-10,0)           | (-5,-12)          | {-2.4,-1,-24}
 (-10,0)           | (1e-300,-1e-300)  | {0,-1,0}
 (-10,0)           | (1e+300,Infinity) | {-1,0,-10}
 (-10,0)           | (Infinity,1e+300) | {0,-1,0}
 (-10,0)           | (NaN,NaN)         | {NaN,-1,NaN}
 (-10,0)           | (10,10)           | {0.5,-1,5}
 (-3,4)            | (0,0)             | {-1.33333333333,-1,0}
 (-3,4)            | (-10,0)           | {0.571428571429,-1,5.71428571429}
 (-3,4)            | (5.1,34.5)        | {3.76543209877,-1,15.2962962963}
 (-3,4)            | (-5,-12)          | {8,-1,28}
 (-3,4)            | (1e-300,-1e-300)  | {-1.33333333333,-1,0}
 (-3,4)            | (1e+300,Infinity) | {-1,0,-3}
 (-3,4)            | (Infinity,1e+300) | {0,-1,4}
 (-3,4)            | (NaN,NaN)         | {NaN,-1,NaN}
 (-3,4)            | (10,10)           | {0.461538461538,-1,5.38461538462}
 (5.1,34.5)        | (0,0)             | {6.76470588235,-1,0}
 (5.1,34.5)        | (-10,0)           | {2.28476821192,-1,22.8476821192}
 (5.1,34.5)        | (-3,4)            | {3.76543209877,-1,15.2962962963}
 (5.1,34.5)        | (-5,-12)          | {4.60396039604,-1,11.0198019802}
 (5.1,34.5)        | (1e-300,-1e-300)  | {6.76470588235,-1,0}
 (5.1,34.5)        | (1e+300,Infinity) | {-1,0,5.1}
 (5.1,34.5)        | (Infinity,1e+300) | {0,-1,34.5}
 (5.1,34.5)        | (NaN,NaN)         | {NaN,-1,NaN}
 (5.1,34.5)        | (10,10)           | {-5,-1,60}
 (-5,-12)          | (0,0)             | {2.4,-1,0}
 (-5,-12)          | (-10,0)           | {-2.4,-1,-24}
 (-5,-12)          | (-3,4)            | {8,-1,28}
 (-5,-12)          | (5.1,34.5)        | {4.60396039604,-1,11.0198019802}
 (-5,-12)          | (1e-300,-1e-300)  | {2.4,-1,0}
 (-5,-12)          | (1e+300,Infinity) | {-1,0,-5}
 (-5,-12)          | (Infinity,1e+300) | {0,-1,-12}
 (-5,-12)          | (NaN,NaN)         | {NaN,-1,NaN}
 (-5,-12)          | (10,10)           | {1.46666666667,-1,-4.66666666667}
 (1e-300,-1e-300)  | (-10,0)           | {0,-1,-1e-300}
 (1e-300,-1e-300)  | (-3,4)            | {-1.33333333333,-1,3.33333333333e-301}
 (1e-300,-1e-300)  | (5.1,34.5)        | {6.76470588235,-1,-7.76470588235e-300}
 (1e-300,-1e-300)  | (-5,-12)          | {2.4,-1,-3.4e-300}
 (1e-300,-1e-300)  | (1e+300,Infinity) | {-1,0,1e-300}
 (1e-300,-1e-300)  | (Infinity,1e+300) | {0,-1,-1e-300}
 (1e-300,-1e-300)  | (NaN,NaN)         | {NaN,-1,NaN}
 (1e-300,-1e-300)  | (10,10)           | {1,-1,-2e-300}
 (1e+300,Infinity) | (0,0)             | {-1,0,1e+300}
 (1e+300,Infinity) | (-10,0)           | {-1,0,1e+300}
 (1e+300,Infinity) | (-3,4)            | {-1,0,1e+300}
 (1e+300,Infinity) | (5.1,34.5)        | {-1,0,1e+300}
 (1e+300,Infinity) | (-5,-12)          | {-1,0,1e+300}
 (1e+300,Infinity) | (1e-300,-1e-300)  | {-1,0,1e+300}
 (1e+300,Infinity) | (Infinity,1e+300) | {NaN,-1,NaN}
 (1e+300,Infinity) | (NaN,NaN)         | {NaN,-1,NaN}
 (1e+300,Infinity) | (10,10)           | {-1,0,1e+300}
 (Infinity,1e+300) | (0,0)             | {0,-1,1e+300}
 (Infinity,1e+300) | (-10,0)           | {0,-1,1e+300}
 (Infinity,1e+300) | (-3,4)            | {0,-1,1e+300}
 (Infinity,1e+300) | (5.1,34.5)        | {0,-1,1e+300}
 (Infinity,1e+300) | (-5,-12)          | {0,-1,1e+300}
 (Infinity,1e+300) | (1e-300,-1e-300)  | {0,-1,1e+300}
 (Infinity,1e+300) | (1e+300,Infinity) | {NaN,-1,NaN}
 (Infinity,1e+300) | (NaN,NaN)         | {NaN,-1,NaN}
 (Infinity,1e+300) | (10,10)           | {0,-1,1e+300}
 (NaN,NaN)         | (0,0)             | {NaN,-1,NaN}
 (NaN,NaN)         | (-10,0)           | {NaN,-1,NaN}
 (NaN,NaN)         | (-3,4)            | {NaN,-1,NaN}
 (NaN,NaN)         | (5.1,34.5)        | {NaN,-1,NaN}
 (NaN,NaN)         | (-5,-12)          | {NaN,-1,NaN}
 (NaN,NaN)         | (1e-300,-1e-300)  | {NaN,-1,NaN}
 (NaN,NaN)         | (1e+300,Infinity) | {NaN,-1,NaN}
 (NaN,NaN)         | (Infinity,1e+300) | {NaN,-1,NaN}
 (NaN,NaN)         | (10,10)           | {NaN,-1,NaN}
 (10,10)           | (0,0)             | {1,-1,0}
 (10,10)           | (-10,0)           | {0.5,-1,5}
 (10,10)           | (-3,4)            | {0.461538461538,-1,5.38461538462}
 (10,10)           | (5.1,34.5)        | {-5,-1,60}
 (10,10)           | (-5,-12)          | {1.46666666667,-1,-4.66666666667}
 (10,10)           | (1e-300,-1e-300)  | {1,-1,0}
 (10,10)           | (1e+300,Infinity) | {-1,0,10}
 (10,10)           | (Infinity,1e+300) | {0,-1,10}
 (10,10)           | (NaN,NaN)         | {NaN,-1,NaN}
(88 rows)

-- Closest point to line
SELECT p.f1, l.s, p.f1 ## l.s FROM POINT_TBL p, LINE_TBL l;
ERROR:  relation "line_tbl" does not exist
LINE 1: SELECT p.f1, l.s, p.f1 ## l.s FROM POINT_TBL p, LINE_TBL l;
                                                        ^
-- Closest point to line segment
SELECT p.f1, l.s, p.f1 ## l.s FROM POINT_TBL p, LSEG_TBL l;
ERROR:  relation "lseg_tbl" does not exist
LINE 1: SELECT p.f1, l.s, p.f1 ## l.s FROM POINT_TBL p, LSEG_TBL l;
                                                        ^
-- Closest point to box
SELECT p.f1, b.f1, p.f1 ## b.f1 FROM POINT_TBL p, BOX_TBL b;
ERROR:  relation "box_tbl" does not exist
LINE 1: SELECT p.f1, b.f1, p.f1 ## b.f1 FROM POINT_TBL p, BOX_TBL b;
                                                          ^
-- On line
SELECT p.f1, l.s FROM POINT_TBL p, LINE_TBL l WHERE p.f1 <@ l.s;
ERROR:  relation "line_tbl" does not exist
LINE 1: SELECT p.f1, l.s FROM POINT_TBL p, LINE_TBL l WHERE p.f1 <@ ...
                                           ^
-- On line segment
SELECT p.f1, l.s FROM POINT_TBL p, LSEG_TBL l WHERE p.f1 <@ l.s;
ERROR:  relation "lseg_tbl" does not exist
LINE 1: SELECT p.f1, l.s FROM POINT_TBL p, LSEG_TBL l WHERE p.f1 <@ ...
                                           ^
-- On path
SELECT p.f1, p1.f1 FROM POINT_TBL p, PATH_TBL p1 WHERE p.f1 <@ p1.f1;
ERROR:  relation "path_tbl" does not exist
LINE 1: SELECT p.f1, p1.f1 FROM POINT_TBL p, PATH_TBL p1 WHERE p.f1 ...
                                             ^
--
-- Lines
--
-- Vertical
SELECT s FROM LINE_TBL WHERE ?| s;
ERROR:  relation "line_tbl" does not exist
LINE 1: SELECT s FROM LINE_TBL WHERE ?| s;
                      ^
-- Horizontal
SELECT s FROM LINE_TBL WHERE ?- s;
ERROR:  relation "line_tbl" does not exist
LINE 1: SELECT s FROM LINE_TBL WHERE ?- s;
                      ^
-- Same as line
SELECT l1.s, l2.s FROM LINE_TBL l1, LINE_TBL l2 WHERE l1.s = l2.s;
ERROR:  relation "line_tbl" does not exist
LINE 1: SELECT l1.s, l2.s FROM LINE_TBL l1, LINE_TBL l2 WHERE l1.s =...
                               ^
-- Parallel to line
SELECT l1.s, l2.s FROM LINE_TBL l1, LINE_TBL l2 WHERE l1.s ?|| l2.s;
ERROR:  relation "line_tbl" does not exist
LINE 1: SELECT l1.s, l2.s FROM LINE_TBL l1, LINE_TBL l2 WHERE l1.s ?...
                               ^
-- Perpendicular to line
SELECT l1.s, l2.s FROM LINE_TBL l1, LINE_TBL l2 WHERE l1.s ?-| l2.s;
ERROR:  relation "line_tbl" does not exist
LINE 1: SELECT l1.s, l2.s FROM LINE_TBL l1, LINE_TBL l2 WHERE l1.s ?...
                               ^
-- Distance to line
SELECT l1.s, l2.s, l1.s <-> l2.s FROM LINE_TBL l1, LINE_TBL l2;
ERROR:  relation "line_tbl" does not exist
LINE 1: SELECT l1.s, l2.s, l1.s <-> l2.s FROM LINE_TBL l1, LINE_TBL ...
                                              ^
-- Intersect with line
SELECT l1.s, l2.s FROM LINE_TBL l1, LINE_TBL l2 WHERE l1.s ?# l2.s;
ERROR:  relation "line_tbl" does not exist
LINE 1: SELECT l1.s, l2.s FROM LINE_TBL l1, LINE_TBL l2 WHERE l1.s ?...
                               ^
-- Intersect with box
SELECT l.s, b.f1 FROM LINE_TBL l, BOX_TBL b WHERE l.s ?# b.f1;
ERROR:  relation "line_tbl" does not exist
LINE 1: SELECT l.s, b.f1 FROM LINE_TBL l, BOX_TBL b WHERE l.s ?# b.f...
                              ^
-- Intersection point with line
SELECT l1.s, l2.s, l1.s # l2.s FROM LINE_TBL l1, LINE_TBL l2;
ERROR:  relation "line_tbl" does not exist
LINE 1: SELECT l1.s, l2.s, l1.s # l2.s FROM LINE_TBL l1, LINE_TBL l2...
                                            ^
-- Closest point to line segment
SELECT l.s, l1.s, l.s ## l1.s FROM LINE_TBL l, LSEG_TBL l1;
ERROR:  relation "line_tbl" does not exist
LINE 1: SELECT l.s, l1.s, l.s ## l1.s FROM LINE_TBL l, LSEG_TBL l1;
                                           ^
--
-- Line segments
--
-- intersection
SELECT p.f1, l.s, l.s # p.f1 AS intersection
   FROM LSEG_TBL l, POINT_TBL p;
ERROR:  relation "lseg_tbl" does not exist
LINE 2:    FROM LSEG_TBL l, POINT_TBL p;
                ^
-- Length
SELECT s, @-@ s FROM LSEG_TBL;
ERROR:  relation "lseg_tbl" does not exist
LINE 1: SELECT s, @-@ s FROM LSEG_TBL;
                             ^
-- Vertical
SELECT s FROM LSEG_TBL WHERE ?| s;
ERROR:  relation "lseg_tbl" does not exist
LINE 1: SELECT s FROM LSEG_TBL WHERE ?| s;
                      ^
-- Horizontal
SELECT s FROM LSEG_TBL WHERE ?- s;
ERROR:  relation "lseg_tbl" does not exist
LINE 1: SELECT s FROM LSEG_TBL WHERE ?- s;
                      ^
-- Center
SELECT s, @@ s FROM LSEG_TBL;
ERROR:  relation "lseg_tbl" does not exist
LINE 1: SELECT s, @@ s FROM LSEG_TBL;
                            ^
-- To point
SELECT s, s::point FROM LSEG_TBL;
ERROR:  relation "lseg_tbl" does not exist
LINE 1: SELECT s, s::point FROM LSEG_TBL;
                                ^
-- Has points less than line segment
SELECT l1.s, l2.s FROM LSEG_TBL l1, LSEG_TBL l2 WHERE l1.s < l2.s;
ERROR:  relation "lseg_tbl" does not exist
LINE 1: SELECT l1.s, l2.s FROM LSEG_TBL l1, LSEG_TBL l2 WHERE l1.s <...
                               ^
-- Has points less than or equal to line segment
SELECT l1.s, l2.s FROM LSEG_TBL l1, LSEG_TBL l2 WHERE l1.s <= l2.s;
ERROR:  relation "lseg_tbl" does not exist
LINE 1: SELECT l1.s, l2.s FROM LSEG_TBL l1, LSEG_TBL l2 WHERE l1.s <...
                               ^
-- Has points equal to line segment
SELECT l1.s, l2.s FROM LSEG_TBL l1, LSEG_TBL l2 WHERE l1.s = l2.s;
ERROR:  relation "lseg_tbl" does not exist
LINE 1: SELECT l1.s, l2.s FROM LSEG_TBL l1, LSEG_TBL l2 WHERE l1.s =...
                               ^
-- Has points greater than or equal to line segment
SELECT l1.s, l2.s FROM LSEG_TBL l1, LSEG_TBL l2 WHERE l1.s >= l2.s;
ERROR:  relation "lseg_tbl" does not exist
LINE 1: SELECT l1.s, l2.s FROM LSEG_TBL l1, LSEG_TBL l2 WHERE l1.s >...
                               ^
-- Has points greater than line segment
SELECT l1.s, l2.s FROM LSEG_TBL l1, LSEG_TBL l2 WHERE l1.s > l2.s;
ERROR:  relation "lseg_tbl" does not exist
LINE 1: SELECT l1.s, l2.s FROM LSEG_TBL l1, LSEG_TBL l2 WHERE l1.s >...
                               ^
-- Has points not equal to line segment
SELECT l1.s, l2.s FROM LSEG_TBL l1, LSEG_TBL l2 WHERE l1.s != l2.s;
ERROR:  relation "lseg_tbl" does not exist
LINE 1: SELECT l1.s, l2.s FROM LSEG_TBL l1, LSEG_TBL l2 WHERE l1.s !...
                               ^
-- Parallel with line segment
SELECT l1.s, l2.s FROM LSEG_TBL l1, LSEG_TBL l2 WHERE l1.s ?|| l2.s;
ERROR:  relation "lseg_tbl" does not exist
LINE 1: SELECT l1.s, l2.s FROM LSEG_TBL l1, LSEG_TBL l2 WHERE l1.s ?...
                               ^
-- Perpendicular with line segment
SELECT l1.s, l2.s FROM LSEG_TBL l1, LSEG_TBL l2 WHERE l1.s ?-| l2.s;
ERROR:  relation "lseg_tbl" does not exist
LINE 1: SELECT l1.s, l2.s FROM LSEG_TBL l1, LSEG_TBL l2 WHERE l1.s ?...
                               ^
-- Distance to line
SELECT l.s, l1.s, l.s <-> l1.s AS dist_sl, l1.s <-> l.s AS dist_ls FROM LSEG_TBL l, LINE_TBL l1;
ERROR:  relation "lseg_tbl" does not exist
LINE 1: ...<-> l1.s AS dist_sl, l1.s <-> l.s AS dist_ls FROM LSEG_TBL l...
                                                             ^
-- Distance to line segment
SELECT l1.s, l2.s, l1.s <-> l2.s FROM LSEG_TBL l1, LSEG_TBL l2;
ERROR:  relation "lseg_tbl" does not exist
LINE 1: SELECT l1.s, l2.s, l1.s <-> l2.s FROM LSEG_TBL l1, LSEG_TBL ...
                                              ^
-- Distance to box
SELECT l.s, b.f1, l.s <-> b.f1 AS dist_sb, b.f1 <-> l.s AS dist_bs FROM LSEG_TBL l, BOX_TBL b;
ERROR:  relation "lseg_tbl" does not exist
LINE 1: ...<-> b.f1 AS dist_sb, b.f1 <-> l.s AS dist_bs FROM LSEG_TBL l...
                                                             ^
-- Intersect with line segment
SELECT l.s, l1.s FROM LSEG_TBL l, LINE_TBL l1 WHERE l.s ?# l1.s;
ERROR:  relation "lseg_tbl" does not exist
LINE 1: SELECT l.s, l1.s FROM LSEG_TBL l, LINE_TBL l1 WHERE l.s ?# l...
                              ^
-- Intersect with box
SELECT l.s, b.f1 FROM LSEG_TBL l, BOX_TBL b WHERE l.s ?# b.f1;
ERROR:  relation "lseg_tbl" does not exist
LINE 1: SELECT l.s, b.f1 FROM LSEG_TBL l, BOX_TBL b WHERE l.s ?# b.f...
                              ^
-- Intersection point with line segment
SELECT l1.s, l2.s, l1.s # l2.s FROM LSEG_TBL l1, LSEG_TBL l2;
ERROR:  relation "lseg_tbl" does not exist
LINE 1: SELECT l1.s, l2.s, l1.s # l2.s FROM LSEG_TBL l1, LSEG_TBL l2...
                                            ^
-- Closest point to line segment
SELECT l1.s, l2.s, l1.s ## l2.s FROM LSEG_TBL l1, LSEG_TBL l2;
ERROR:  relation "lseg_tbl" does not exist
LINE 1: SELECT l1.s, l2.s, l1.s ## l2.s FROM LSEG_TBL l1, LSEG_TBL l...
                                             ^
-- Closest point to box
SELECT l.s, b.f1, l.s ## b.f1 FROM LSEG_TBL l, BOX_TBL b;
ERROR:  relation "lseg_tbl" does not exist
LINE 1: SELECT l.s, b.f1, l.s ## b.f1 FROM LSEG_TBL l, BOX_TBL b;
                                           ^
-- On line
SELECT l.s, l1.s FROM LSEG_TBL l, LINE_TBL l1 WHERE l.s <@ l1.s;
ERROR:  relation "lseg_tbl" does not exist
LINE 1: SELECT l.s, l1.s FROM LSEG_TBL l, LINE_TBL l1 WHERE l.s <@ l...
                              ^
-- On box
SELECT l.s, b.f1 FROM LSEG_TBL l, BOX_TBL b WHERE l.s <@ b.f1;
ERROR:  relation "lseg_tbl" does not exist
LINE 1: SELECT l.s, b.f1 FROM LSEG_TBL l, BOX_TBL b WHERE l.s <@ b.f...
                              ^
--
-- Boxes
--
SELECT box(f1) AS box FROM CIRCLE_TBL;
ERROR:  relation "circle_tbl" does not exist
LINE 1: SELECT box(f1) AS box FROM CIRCLE_TBL;
                                   ^
-- translation
SELECT b.f1 + p.f1 AS translation
   FROM BOX_TBL b, POINT_TBL p;
ERROR:  relation "box_tbl" does not exist
LINE 2:    FROM BOX_TBL b, POINT_TBL p;
                ^
SELECT b.f1 - p.f1 AS translation
   FROM BOX_TBL b, POINT_TBL p;
ERROR:  relation "box_tbl" does not exist
LINE 2:    FROM BOX_TBL b, POINT_TBL p;
                ^
-- Multiply with point
SELECT b.f1, p.f1, b.f1 * p.f1 FROM BOX_TBL b, POINT_TBL p WHERE p.f1[0] BETWEEN 1 AND 1000;
ERROR:  relation "box_tbl" does not exist
LINE 1: SELECT b.f1, p.f1, b.f1 * p.f1 FROM BOX_TBL b, POINT_TBL p W...
                                            ^
-- Overflow error
SELECT b.f1, p.f1, b.f1 * p.f1 FROM BOX_TBL b, POINT_TBL p WHERE p.f1[0] > 1000;
ERROR:  relation "box_tbl" does not exist
LINE 1: SELECT b.f1, p.f1, b.f1 * p.f1 FROM BOX_TBL b, POINT_TBL p W...
                                            ^
-- Divide by point
SELECT b.f1, p.f1, b.f1 / p.f1 FROM BOX_TBL b, POINT_TBL p WHERE p.f1[0] BETWEEN 1 AND 1000;
ERROR:  relation "box_tbl" does not exist
LINE 1: SELECT b.f1, p.f1, b.f1 / p.f1 FROM BOX_TBL b, POINT_TBL p W...
                                            ^
-- To box
SELECT f1::box
	FROM POINT_TBL;
                 f1                  
-------------------------------------
 (0,0),(0,0)
 (-10,0),(-10,0)
 (-3,4),(-3,4)
 (5.1,34.5),(5.1,34.5)
 (-5,-12),(-5,-12)
 (1e-300,-1e-300),(1e-300,-1e-300)
 (1e+300,Infinity),(1e+300,Infinity)
 (Infinity,1e+300),(Infinity,1e+300)
 (NaN,NaN),(NaN,NaN)
 (10,10),(10,10)
(10 rows)

SELECT bound_box(a.f1, b.f1)
	FROM BOX_TBL a, BOX_TBL b;
ERROR:  relation "box_tbl" does not exist
LINE 2:  FROM BOX_TBL a, BOX_TBL b;
              ^
-- Below box
SELECT b1.f1, b2.f1, b1.f1 <^ b2.f1 FROM BOX_TBL b1, BOX_TBL b2;
ERROR:  relation "box_tbl" does not exist
LINE 1: SELECT b1.f1, b2.f1, b1.f1 <^ b2.f1 FROM BOX_TBL b1, BOX_TBL...
                                                 ^
-- Above box
SELECT b1.f1, b2.f1, b1.f1 >^ b2.f1 FROM BOX_TBL b1, BOX_TBL b2;
ERROR:  relation "box_tbl" does not exist
LINE 1: SELECT b1.f1, b2.f1, b1.f1 >^ b2.f1 FROM BOX_TBL b1, BOX_TBL...
                                                 ^
-- Intersection point with box
SELECT b1.f1, b2.f1, b1.f1 # b2.f1 FROM BOX_TBL b1, BOX_TBL b2;
ERROR:  relation "box_tbl" does not exist
LINE 1: SELECT b1.f1, b2.f1, b1.f1 # b2.f1 FROM BOX_TBL b1, BOX_TBL ...
                                                ^
-- Diagonal
SELECT f1, diagonal(f1) FROM BOX_TBL;
ERROR:  relation "box_tbl" does not exist
LINE 1: SELECT f1, diagonal(f1) FROM BOX_TBL;
                                     ^
-- Distance to box
SELECT b1.f1, b2.f1, b1.f1 <-> b2.f1 FROM BOX_TBL b1, BOX_TBL b2;
ERROR:  relation "box_tbl" does not exist
LINE 1: SELECT b1.f1, b2.f1, b1.f1 <-> b2.f1 FROM BOX_TBL b1, BOX_TB...
                                                  ^
--
-- Paths
--
-- Points
SELECT f1, npoints(f1) FROM PATH_TBL;
ERROR:  relation "path_tbl" does not exist
LINE 1: SELECT f1, npoints(f1) FROM PATH_TBL;
                                    ^
-- Area
SELECT f1, area(f1) FROM PATH_TBL;
ERROR:  relation "path_tbl" does not exist
LINE 1: SELECT f1, area(f1) FROM PATH_TBL;
                                 ^
-- Length
SELECT f1, @-@ f1 FROM PATH_TBL;
ERROR:  relation "path_tbl" does not exist
LINE 1: SELECT f1, @-@ f1 FROM PATH_TBL;
                               ^
-- To polygon
SELECT f1, f1::polygon FROM PATH_TBL WHERE isclosed(f1);
ERROR:  relation "path_tbl" does not exist
LINE 1: SELECT f1, f1::polygon FROM PATH_TBL WHERE isclosed(f1);
                                    ^
-- Open path cannot be converted to polygon error
SELECT f1, f1::polygon FROM PATH_TBL WHERE isopen(f1);
ERROR:  relation "path_tbl" does not exist
LINE 1: SELECT f1, f1::polygon FROM PATH_TBL WHERE isopen(f1);
                                    ^
-- Has points less than path
SELECT p1.f1, p2.f1 FROM PATH_TBL p1, PATH_TBL p2 WHERE p1.f1 < p2.f1;
ERROR:  relation "path_tbl" does not exist
LINE 1: SELECT p1.f1, p2.f1 FROM PATH_TBL p1, PATH_TBL p2 WHERE p1.f...
                                 ^
-- Has points less than or equal to path
SELECT p1.f1, p2.f1 FROM PATH_TBL p1, PATH_TBL p2 WHERE p1.f1 <= p2.f1;
ERROR:  relation "path_tbl" does not exist
LINE 1: SELECT p1.f1, p2.f1 FROM PATH_TBL p1, PATH_TBL p2 WHERE p1.f...
                                 ^
-- Has points equal to path
SELECT p1.f1, p2.f1 FROM PATH_TBL p1, PATH_TBL p2 WHERE p1.f1 = p2.f1;
ERROR:  relation "path_tbl" does not exist
LINE 1: SELECT p1.f1, p2.f1 FROM PATH_TBL p1, PATH_TBL p2 WHERE p1.f...
                                 ^
-- Has points greater than or equal to path
SELECT p1.f1, p2.f1 FROM PATH_TBL p1, PATH_TBL p2 WHERE p1.f1 >= p2.f1;
ERROR:  relation "path_tbl" does not exist
LINE 1: SELECT p1.f1, p2.f1 FROM PATH_TBL p1, PATH_TBL p2 WHERE p1.f...
                                 ^
-- Has points greater than path
SELECT p1.f1, p2.f1 FROM PATH_TBL p1, PATH_TBL p2 WHERE p1.f1 > p2.f1;
ERROR:  relation "path_tbl" does not exist
LINE 1: SELECT p1.f1, p2.f1 FROM PATH_TBL p1, PATH_TBL p2 WHERE p1.f...
                                 ^
-- Add path
SELECT p1.f1, p2.f1, p1.f1 + p2.f1 FROM PATH_TBL p1, PATH_TBL p2;
ERROR:  relation "path_tbl" does not exist
LINE 1: SELECT p1.f1, p2.f1, p1.f1 + p2.f1 FROM PATH_TBL p1, PATH_TB...
                                                ^
-- Add point
SELECT p.f1, p1.f1, p.f1 + p1.f1 FROM PATH_TBL p, POINT_TBL p1;
ERROR:  relation "path_tbl" does not exist
LINE 1: SELECT p.f1, p1.f1, p.f1 + p1.f1 FROM PATH_TBL p, POINT_TBL ...
                                              ^
-- Subtract point
SELECT p.f1, p1.f1, p.f1 - p1.f1 FROM PATH_TBL p, POINT_TBL p1;
ERROR:  relation "path_tbl" does not exist
LINE 1: SELECT p.f1, p1.f1, p.f1 - p1.f1 FROM PATH_TBL p, POINT_TBL ...
                                              ^
-- Multiply with point
SELECT p.f1, p1.f1, p.f1 * p1.f1 FROM PATH_TBL p, POINT_TBL p1;
ERROR:  relation "path_tbl" does not exist
LINE 1: SELECT p.f1, p1.f1, p.f1 * p1.f1 FROM PATH_TBL p, POINT_TBL ...
                                              ^
-- Divide by point
SELECT p.f1, p1.f1, p.f1 / p1.f1 FROM PATH_TBL p, POINT_TBL p1 WHERE p1.f1[0] BETWEEN 1 AND 1000;
ERROR:  relation "path_tbl" does not exist
LINE 1: SELECT p.f1, p1.f1, p.f1 / p1.f1 FROM PATH_TBL p, POINT_TBL ...
                                              ^
-- Division by 0 error
SELECT p.f1, p1.f1, p.f1 / p1.f1 FROM PATH_TBL p, POINT_TBL p1 WHERE p1.f1 ~= '(0,0)'::point;
ERROR:  relation "path_tbl" does not exist
LINE 1: SELECT p.f1, p1.f1, p.f1 / p1.f1 FROM PATH_TBL p, POINT_TBL ...
                                              ^
-- Distance to path
SELECT p1.f1, p2.f1, p1.f1 <-> p2.f1 FROM PATH_TBL p1, PATH_TBL p2;
ERROR:  relation "path_tbl" does not exist
LINE 1: SELECT p1.f1, p2.f1, p1.f1 <-> p2.f1 FROM PATH_TBL p1, PATH_...
                                                  ^
--
-- Polygons
--
-- containment
SELECT p.f1, poly.f1, poly.f1 @> p.f1 AS contains
   FROM POLYGON_TBL poly, POINT_TBL p;
ERROR:  relation "polygon_tbl" does not exist
LINE 2:    FROM POLYGON_TBL poly, POINT_TBL p;
                ^
SELECT p.f1, poly.f1, p.f1 <@ poly.f1 AS contained
   FROM POLYGON_TBL poly, POINT_TBL p;
ERROR:  relation "polygon_tbl" does not exist
LINE 2:    FROM POLYGON_TBL poly, POINT_TBL p;
                ^
SELECT npoints(f1) AS npoints, f1 AS polygon
   FROM POLYGON_TBL;
ERROR:  relation "polygon_tbl" does not exist
LINE 2:    FROM POLYGON_TBL;
                ^
SELECT polygon(f1)
   FROM BOX_TBL;
ERROR:  relation "box_tbl" does not exist
LINE 2:    FROM BOX_TBL;
                ^
SELECT polygon(f1)
   FROM PATH_TBL WHERE isclosed(f1);
ERROR:  relation "path_tbl" does not exist
LINE 2:    FROM PATH_TBL WHERE isclosed(f1);
                ^
SELECT f1 AS open_path, polygon( pclose(f1)) AS polygon
   FROM PATH_TBL
   WHERE isopen(f1);
ERROR:  relation "path_tbl" does not exist
LINE 2:    FROM PATH_TBL
                ^
-- To box
SELECT f1, f1::box FROM POLYGON_TBL;
ERROR:  relation "polygon_tbl" does not exist
LINE 1: SELECT f1, f1::box FROM POLYGON_TBL;
                                ^
-- To path
SELECT f1, f1::path FROM POLYGON_TBL;
ERROR:  relation "polygon_tbl" does not exist
LINE 1: SELECT f1, f1::path FROM POLYGON_TBL;
                                 ^
-- Same as polygon
SELECT p1.f1, p2.f1 FROM POLYGON_TBL p1, POLYGON_TBL p2 WHERE p1.f1 ~= p2.f1;
ERROR:  relation "polygon_tbl" does not exist
LINE 1: SELECT p1.f1, p2.f1 FROM POLYGON_TBL p1, POLYGON_TBL p2 WHER...
                                 ^
-- Contained by polygon
SELECT p1.f1, p2.f1 FROM POLYGON_TBL p1, POLYGON_TBL p2 WHERE p1.f1 <@ p2.f1;
ERROR:  relation "polygon_tbl" does not exist
LINE 1: SELECT p1.f1, p2.f1 FROM POLYGON_TBL p1, POLYGON_TBL p2 WHER...
                                 ^
-- Contains polygon
SELECT p1.f1, p2.f1 FROM POLYGON_TBL p1, POLYGON_TBL p2 WHERE p1.f1 @> p2.f1;
ERROR:  relation "polygon_tbl" does not exist
LINE 1: SELECT p1.f1, p2.f1 FROM POLYGON_TBL p1, POLYGON_TBL p2 WHER...
                                 ^
-- Overlap with polygon
SELECT p1.f1, p2.f1 FROM POLYGON_TBL p1, POLYGON_TBL p2 WHERE p1.f1 && p2.f1;
ERROR:  relation "polygon_tbl" does not exist
LINE 1: SELECT p1.f1, p2.f1 FROM POLYGON_TBL p1, POLYGON_TBL p2 WHER...
                                 ^
-- Left of polygon
SELECT p1.f1, p2.f1 FROM POLYGON_TBL p1, POLYGON_TBL p2 WHERE p1.f1 << p2.f1;
ERROR:  relation "polygon_tbl" does not exist
LINE 1: SELECT p1.f1, p2.f1 FROM POLYGON_TBL p1, POLYGON_TBL p2 WHER...
                                 ^
-- Overlap of left of polygon
SELECT p1.f1, p2.f1 FROM POLYGON_TBL p1, POLYGON_TBL p2 WHERE p1.f1 &< p2.f1;
ERROR:  relation "polygon_tbl" does not exist
LINE 1: SELECT p1.f1, p2.f1 FROM POLYGON_TBL p1, POLYGON_TBL p2 WHER...
                                 ^
-- Right of polygon
SELECT p1.f1, p2.f1 FROM POLYGON_TBL p1, POLYGON_TBL p2 WHERE p1.f1 >> p2.f1;
ERROR:  relation "polygon_tbl" does not exist
LINE 1: SELECT p1.f1, p2.f1 FROM POLYGON_TBL p1, POLYGON_TBL p2 WHER...
                                 ^
-- Overlap of right of polygon
SELECT p1.f1, p2.f1 FROM POLYGON_TBL p1, POLYGON_TBL p2 WHERE p1.f1 &> p2.f1;
ERROR:  relation "polygon_tbl" does not exist
LINE 1: SELECT p1.f1, p2.f1 FROM POLYGON_TBL p1, POLYGON_TBL p2 WHER...
                                 ^
-- Below polygon
SELECT p1.f1, p2.f1 FROM POLYGON_TBL p1, POLYGON_TBL p2 WHERE p1.f1 <<| p2.f1;
ERROR:  relation "polygon_tbl" does not exist
LINE 1: SELECT p1.f1, p2.f1 FROM POLYGON_TBL p1, POLYGON_TBL p2 WHER...
                                 ^
-- Overlap or below polygon
SELECT p1.f1, p2.f1 FROM POLYGON_TBL p1, POLYGON_TBL p2 WHERE p1.f1 &<| p2.f1;
ERROR:  relation "polygon_tbl" does not exist
LINE 1: SELECT p1.f1, p2.f1 FROM POLYGON_TBL p1, POLYGON_TBL p2 WHER...
                                 ^
-- Above polygon
SELECT p1.f1, p2.f1 FROM POLYGON_TBL p1, POLYGON_TBL p2 WHERE p1.f1 |>> p2.f1;
ERROR:  relation "polygon_tbl" does not exist
LINE 1: SELECT p1.f1, p2.f1 FROM POLYGON_TBL p1, POLYGON_TBL p2 WHER...
                                 ^
-- Overlap or above polygon
SELECT p1.f1, p2.f1 FROM POLYGON_TBL p1, POLYGON_TBL p2 WHERE p1.f1 |&> p2.f1;
ERROR:  relation "polygon_tbl" does not exist
LINE 1: SELECT p1.f1, p2.f1 FROM POLYGON_TBL p1, POLYGON_TBL p2 WHER...
                                 ^
-- Distance to polygon
SELECT p1.f1, p2.f1, p1.f1 <-> p2.f1 FROM POLYGON_TBL p1, POLYGON_TBL p2;
ERROR:  relation "polygon_tbl" does not exist
LINE 1: SELECT p1.f1, p2.f1, p1.f1 <-> p2.f1 FROM POLYGON_TBL p1, PO...
                                                  ^
--
-- Circles
--
SELECT circle(f1, 50.0)
   FROM POINT_TBL;
         circle         
------------------------
 <(0,0),50>
 <(-10,0),50>
 <(-3,4),50>
 <(5.1,34.5),50>
 <(-5,-12),50>
 <(1e-300,-1e-300),50>
 <(1e+300,Infinity),50>
 <(Infinity,1e+300),50>
 <(NaN,NaN),50>
 <(10,10),50>
(10 rows)

SELECT circle(f1)
   FROM BOX_TBL;
ERROR:  relation "box_tbl" does not exist
LINE 2:    FROM BOX_TBL;
                ^
SELECT circle(f1)
   FROM POLYGON_TBL
   WHERE (# f1) >= 3;
ERROR:  relation "polygon_tbl" does not exist
LINE 2:    FROM POLYGON_TBL
                ^
SELECT c1.f1 AS circle, p1.f1 AS point, (p1.f1 <-> c1.f1) AS distance
   FROM CIRCLE_TBL c1, POINT_TBL p1
   WHERE (p1.f1 <-> c1.f1) > 0
   ORDER BY distance, area(c1.f1), p1.f1[0];
ERROR:  relation "circle_tbl" does not exist
LINE 2:    FROM CIRCLE_TBL c1, POINT_TBL p1
                ^
-- To polygon
SELECT f1, f1::polygon FROM CIRCLE_TBL WHERE f1 >= '<(0,0),1>';
ERROR:  relation "circle_tbl" does not exist
LINE 1: SELECT f1, f1::polygon FROM CIRCLE_TBL WHERE f1 >= '<(0,0),1...
                                    ^
-- To polygon with less points
SELECT f1, polygon(8, f1) FROM CIRCLE_TBL WHERE f1 >= '<(0,0),1>';
ERROR:  relation "circle_tbl" does not exist
LINE 1: SELECT f1, polygon(8, f1) FROM CIRCLE_TBL WHERE f1 >= '<(0,0...
                                       ^
-- Error for insufficient number of points
SELECT f1, polygon(1, f1) FROM CIRCLE_TBL WHERE f1 >= '<(0,0),1>';
ERROR:  relation "circle_tbl" does not exist
LINE 1: SELECT f1, polygon(1, f1) FROM CIRCLE_TBL WHERE f1 >= '<(0,0...
                                       ^
-- Zero radius error
SELECT f1, polygon(10, f1) FROM CIRCLE_TBL WHERE f1 < '<(0,0),1>';
ERROR:  relation "circle_tbl" does not exist
LINE 1: SELECT f1, polygon(10, f1) FROM CIRCLE_TBL WHERE f1 < '<(0,0...
                                        ^
-- Same as circle
SELECT c1.f1, c2.f1 FROM CIRCLE_TBL c1, CIRCLE_TBL c2 WHERE c1.f1 ~= c2.f1;
ERROR:  relation "circle_tbl" does not exist
LINE 1: SELECT c1.f1, c2.f1 FROM CIRCLE_TBL c1, CIRCLE_TBL c2 WHERE ...
                                 ^
-- Overlap with circle
SELECT c1.f1, c2.f1 FROM CIRCLE_TBL c1, CIRCLE_TBL c2 WHERE c1.f1 && c2.f1;
ERROR:  relation "circle_tbl" does not exist
LINE 1: SELECT c1.f1, c2.f1 FROM CIRCLE_TBL c1, CIRCLE_TBL c2 WHERE ...
                                 ^
-- Overlap or left of circle
SELECT c1.f1, c2.f1 FROM CIRCLE_TBL c1, CIRCLE_TBL c2 WHERE c1.f1 &< c2.f1;
ERROR:  relation "circle_tbl" does not exist
LINE 1: SELECT c1.f1, c2.f1 FROM CIRCLE_TBL c1, CIRCLE_TBL c2 WHERE ...
                                 ^
-- Left of circle
SELECT c1.f1, c2.f1 FROM CIRCLE_TBL c1, CIRCLE_TBL c2 WHERE c1.f1 << c2.f1;
ERROR:  relation "circle_tbl" does not exist
LINE 1: SELECT c1.f1, c2.f1 FROM CIRCLE_TBL c1, CIRCLE_TBL c2 WHERE ...
                                 ^
-- Right of circle
SELECT c1.f1, c2.f1 FROM CIRCLE_TBL c1, CIRCLE_TBL c2 WHERE c1.f1 >> c2.f1;
ERROR:  relation "circle_tbl" does not exist
LINE 1: SELECT c1.f1, c2.f1 FROM CIRCLE_TBL c1, CIRCLE_TBL c2 WHERE ...
                                 ^
-- Overlap or right of circle
SELECT c1.f1, c2.f1 FROM CIRCLE_TBL c1, CIRCLE_TBL c2 WHERE c1.f1 &> c2.f1;
ERROR:  relation "circle_tbl" does not exist
LINE 1: SELECT c1.f1, c2.f1 FROM CIRCLE_TBL c1, CIRCLE_TBL c2 WHERE ...
                                 ^
-- Contained by circle
SELECT c1.f1, c2.f1 FROM CIRCLE_TBL c1, CIRCLE_TBL c2 WHERE c1.f1 <@ c2.f1;
ERROR:  relation "circle_tbl" does not exist
LINE 1: SELECT c1.f1, c2.f1 FROM CIRCLE_TBL c1, CIRCLE_TBL c2 WHERE ...
                                 ^
-- Contain by circle
SELECT c1.f1, c2.f1 FROM CIRCLE_TBL c1, CIRCLE_TBL c2 WHERE c1.f1 @> c2.f1;
ERROR:  relation "circle_tbl" does not exist
LINE 1: SELECT c1.f1, c2.f1 FROM CIRCLE_TBL c1, CIRCLE_TBL c2 WHERE ...
                                 ^
-- Below circle
SELECT c1.f1, c2.f1 FROM CIRCLE_TBL c1, CIRCLE_TBL c2 WHERE c1.f1 <<| c2.f1;
ERROR:  relation "circle_tbl" does not exist
LINE 1: SELECT c1.f1, c2.f1 FROM CIRCLE_TBL c1, CIRCLE_TBL c2 WHERE ...
                                 ^
-- Above circle
SELECT c1.f1, c2.f1 FROM CIRCLE_TBL c1, CIRCLE_TBL c2 WHERE c1.f1 |>> c2.f1;
ERROR:  relation "circle_tbl" does not exist
LINE 1: SELECT c1.f1, c2.f1 FROM CIRCLE_TBL c1, CIRCLE_TBL c2 WHERE ...
                                 ^
-- Overlap or below circle
SELECT c1.f1, c2.f1 FROM CIRCLE_TBL c1, CIRCLE_TBL c2 WHERE c1.f1 &<| c2.f1;
ERROR:  relation "circle_tbl" does not exist
LINE 1: SELECT c1.f1, c2.f1 FROM CIRCLE_TBL c1, CIRCLE_TBL c2 WHERE ...
                                 ^
-- Overlap or above circle
SELECT c1.f1, c2.f1 FROM CIRCLE_TBL c1, CIRCLE_TBL c2 WHERE c1.f1 |&> c2.f1;
ERROR:  relation "circle_tbl" does not exist
LINE 1: SELECT c1.f1, c2.f1 FROM CIRCLE_TBL c1, CIRCLE_TBL c2 WHERE ...
                                 ^
-- Area equal with circle
SELECT c1.f1, c2.f1 FROM CIRCLE_TBL c1, CIRCLE_TBL c2 WHERE c1.f1 = c2.f1;
ERROR:  relation "circle_tbl" does not exist
LINE 1: SELECT c1.f1, c2.f1 FROM CIRCLE_TBL c1, CIRCLE_TBL c2 WHERE ...
                                 ^
-- Area not equal with circle
SELECT c1.f1, c2.f1 FROM CIRCLE_TBL c1, CIRCLE_TBL c2 WHERE c1.f1 != c2.f1;
ERROR:  relation "circle_tbl" does not exist
LINE 1: SELECT c1.f1, c2.f1 FROM CIRCLE_TBL c1, CIRCLE_TBL c2 WHERE ...
                                 ^
-- Area less than circle
SELECT c1.f1, c2.f1 FROM CIRCLE_TBL c1, CIRCLE_TBL c2 WHERE c1.f1 < c2.f1;
ERROR:  relation "circle_tbl" does not exist
LINE 1: SELECT c1.f1, c2.f1 FROM CIRCLE_TBL c1, CIRCLE_TBL c2 WHERE ...
                                 ^
-- Area greater than circle
SELECT c1.f1, c2.f1 FROM CIRCLE_TBL c1, CIRCLE_TBL c2 WHERE c1.f1 > c2.f1;
ERROR:  relation "circle_tbl" does not exist
LINE 1: SELECT c1.f1, c2.f1 FROM CIRCLE_TBL c1, CIRCLE_TBL c2 WHERE ...
                                 ^
-- Area less than or equal circle
SELECT c1.f1, c2.f1 FROM CIRCLE_TBL c1, CIRCLE_TBL c2 WHERE c1.f1 <= c2.f1;
ERROR:  relation "circle_tbl" does not exist
LINE 1: SELECT c1.f1, c2.f1 FROM CIRCLE_TBL c1, CIRCLE_TBL c2 WHERE ...
                                 ^
-- Area greater than or equal circle
SELECT c1.f1, c2.f1 FROM CIRCLE_TBL c1, CIRCLE_TBL c2 WHERE c1.f1 >= c2.f1;
ERROR:  relation "circle_tbl" does not exist
LINE 1: SELECT c1.f1, c2.f1 FROM CIRCLE_TBL c1, CIRCLE_TBL c2 WHERE ...
                                 ^
-- Area less than circle
SELECT c1.f1, c2.f1 FROM CIRCLE_TBL c1, CIRCLE_TBL c2 WHERE c1.f1 < c2.f1;
ERROR:  relation "circle_tbl" does not exist
LINE 1: SELECT c1.f1, c2.f1 FROM CIRCLE_TBL c1, CIRCLE_TBL c2 WHERE ...
                                 ^
-- Area greater than circle
SELECT c1.f1, c2.f1 FROM CIRCLE_TBL c1, CIRCLE_TBL c2 WHERE c1.f1 < c2.f1;
ERROR:  relation "circle_tbl" does not exist
LINE 1: SELECT c1.f1, c2.f1 FROM CIRCLE_TBL c1, CIRCLE_TBL c2 WHERE ...
                                 ^
-- Add point
SELECT c.f1, p.f1, c.f1 + p.f1 FROM CIRCLE_TBL c, POINT_TBL p;
ERROR:  relation "circle_tbl" does not exist
LINE 1: SELECT c.f1, p.f1, c.f1 + p.f1 FROM CIRCLE_TBL c, POINT_TBL ...
                                            ^
-- Subtract point
SELECT c.f1, p.f1, c.f1 - p.f1 FROM CIRCLE_TBL c, POINT_TBL p;
ERROR:  relation "circle_tbl" does not exist
LINE 1: SELECT c.f1, p.f1, c.f1 - p.f1 FROM CIRCLE_TBL c, POINT_TBL ...
                                            ^
-- Multiply with point
SELECT c.f1, p.f1, c.f1 * p.f1 FROM CIRCLE_TBL c, POINT_TBL p;
ERROR:  relation "circle_tbl" does not exist
LINE 1: SELECT c.f1, p.f1, c.f1 * p.f1 FROM CIRCLE_TBL c, POINT_TBL ...
                                            ^
-- Divide by point
SELECT c.f1, p.f1, c.f1 / p.f1 FROM CIRCLE_TBL c, POINT_TBL p WHERE p.f1[0] BETWEEN 1 AND 1000;
ERROR:  relation "circle_tbl" does not exist
LINE 1: SELECT c.f1, p.f1, c.f1 / p.f1 FROM CIRCLE_TBL c, POINT_TBL ...
                                            ^
-- Overflow error
SELECT c.f1, p.f1, c.f1 / p.f1 FROM CIRCLE_TBL c, POINT_TBL p WHERE p.f1[0] > 1000;
ERROR:  relation "circle_tbl" does not exist
LINE 1: SELECT c.f1, p.f1, c.f1 / p.f1 FROM CIRCLE_TBL c, POINT_TBL ...
                                            ^
-- Division by 0 error
SELECT c.f1, p.f1, c.f1 / p.f1 FROM CIRCLE_TBL c, POINT_TBL p WHERE p.f1 ~= '(0,0)'::point;
ERROR:  relation "circle_tbl" does not exist
LINE 1: SELECT c.f1, p.f1, c.f1 / p.f1 FROM CIRCLE_TBL c, POINT_TBL ...
                                            ^
-- Distance to polygon
SELECT c.f1, p.f1, c.f1 <-> p.f1 FROM CIRCLE_TBL c, POLYGON_TBL p;
ERROR:  relation "circle_tbl" does not exist
LINE 1: SELECT c.f1, p.f1, c.f1 <-> p.f1 FROM CIRCLE_TBL c, POLYGON_...
                                              ^
-- Check index behavior for circles
CREATE INDEX gcircleind ON circle_tbl USING gist (f1);
ERROR:  relation "circle_tbl" does not exist
SELECT * FROM circle_tbl WHERE f1 && circle(point(1,-2), 1)
    ORDER BY area(f1);
ERROR:  relation "circle_tbl" does not exist
LINE 1: SELECT * FROM circle_tbl WHERE f1 && circle(point(1,-2), 1)
                      ^
EXPLAIN (COSTS OFF)
SELECT * FROM circle_tbl WHERE f1 && circle(point(1,-2), 1)
    ORDER BY area(f1);
ERROR:  relation "circle_tbl" does not exist
LINE 2: SELECT * FROM circle_tbl WHERE f1 && circle(point(1,-2), 1)
                      ^
SELECT * FROM circle_tbl WHERE f1 && circle(point(1,-2), 1)
    ORDER BY area(f1);
ERROR:  relation "circle_tbl" does not exist
LINE 1: SELECT * FROM circle_tbl WHERE f1 && circle(point(1,-2), 1)
                      ^
-- Check index behavior for polygons
CREATE INDEX gpolygonind ON polygon_tbl USING gist (f1);
ERROR:  relation "polygon_tbl" does not exist
SELECT * FROM polygon_tbl WHERE f1 @> '((1,1),(2,2),(2,1))'::polygon
    ORDER BY (poly_center(f1))[0];
ERROR:  relation "polygon_tbl" does not exist
LINE 1: SELECT * FROM polygon_tbl WHERE f1 @> '((1,1),(2,2),(2,1))':...
                      ^
EXPLAIN (COSTS OFF)
SELECT * FROM polygon_tbl WHERE f1 @> '((1,1),(2,2),(2,1))'::polygon
    ORDER BY (poly_center(f1))[0];
ERROR:  relation "polygon_tbl" does not exist
LINE 2: SELECT * FROM polygon_tbl WHERE f1 @> '((1,1),(2,2),(2,1))':...
                      ^
SELECT * FROM polygon_tbl WHERE f1 @> '((1,1),(2,2),(2,1))'::polygon
    ORDER BY (poly_center(f1))[0];
ERROR:  relation "polygon_tbl" does not exist
LINE 1: SELECT * FROM polygon_tbl WHERE f1 @> '((1,1),(2,2),(2,1))':...
                      ^
-- test non-error-throwing API for some core types
SELECT pg_input_is_valid('(1', 'circle');
 pg_input_is_valid 
-------------------
 f
(1 row)

SELECT * FROM pg_input_error_info('1,', 'circle');
                  message                   | detail | hint | sql_error_code 
--------------------------------------------+--------+------+----------------
 invalid input syntax for type circle: "1," |        |      | 22P02
(1 row)

SELECT pg_input_is_valid('(1,2),-1', 'circle');
 pg_input_is_valid 
-------------------
 f
(1 row)

SELECT * FROM pg_input_error_info('(1,2),-1', 'circle');
                     message                      | detail | hint | sql_error_code 
--------------------------------------------------+--------+------+----------------
 invalid input syntax for type circle: "(1,2),-1" |        |      | 22P02
(1 row)

