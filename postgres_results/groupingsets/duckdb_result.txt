
-----------
QUERY:
--
-- grouping sets
--

-- test data sources

create temp view gstest1(a,b,v)
  as values (1,1,10),(1,1,11),(1,2,12),(1,2,13),(1,3,14),
            (2,3,15),
            (3,3,16),(3,4,17),
            (4,1,18),(4,1,19);
RESULT:
	[]

-----------
QUERY:


create temp table gstest2 (a integer, b integer, c integer, d integer,
                           e integer, f integer, g integer, h integer);
RESULT:
	[]

-----------
QUERY:

copy gstest2 from stdin;
RESULT:
	ERROR - IO Error: No files found that match the pattern "/dev/stdin"

-----------
QUERY:

1	1	1	1	1	1	1	1
1	1	1	1	1	1	1	2
1	1	1	1	1	1	2	2
1	1	1	1	1	2	2	2
1	1	1	1	2	2	2	2
1	1	1	2	2	2	2	2
1	1	2	2	2	2	2	2
1	2	2	2	2	2	2	2
2	2	2	2	2	2	2	2
-- \.

create temp table gstest3 (a integer, b integer, c integer, d integer);
RESULT:
	ERROR - Parser Error: syntax error at or near "1"

-----------
QUERY:

copy gstest3 from stdin;
RESULT:
	ERROR - Catalog Error: Table with name gstest3 does not exist!
Did you mean "gstest1"?

-----------
QUERY:

1	1	1	1
2	2	2	2
-- \.
alter table gstest3 add primary key (a);
RESULT:
	ERROR - Parser Error: syntax error at or near "1"

-----------
QUERY:


create temp table gstest4(id integer, v integer,
                          unhashable_col bit(4), unsortable_col xid);
RESULT:
	ERROR - Parser Error: Type BIT does not support any modifiers!

-----------
QUERY:

insert into gstest4
values (1,1,b'0000','1'), (2,2,b'0001','1'),
       (3,4,b'0010','2'), (4,8,b'0011','2'),
       (5,16,b'0000','2'), (6,32,b'0001','2'),
       (7,64,b'0010','1'), (8,128,b'0011','1');
RESULT:
	ERROR - Catalog Error: Table with name gstest4 does not exist!
Did you mean "gstest1"?

-----------
QUERY:


create temp table gstest_empty (a integer, b integer, v integer);
RESULT:
	[]

-----------
QUERY:


create function gstest_data(v integer, out a integer, out b integer)
  returns setof record
  as $f$
    begin
      return query select v, i from generate_series(1,3) i;
RESULT:
	ERROR - Parser Error: syntax error at or near "integer"

-----------
QUERY:

    end;
RESULT:
	ERROR - TransactionContext Error: cannot commit - no transaction is active

-----------
QUERY:

  $f$ language plpgsql;
RESULT:
	ERROR - Parser Error: unterminated dollar-quoted string at or near "$f$ language plpgsql;"

-----------
QUERY:


-- basic functionality

set enable_hashagg = false;
RESULT:
	ERROR - Catalog Error: unrecognized configuration parameter "enable_hashagg"

Did you mean: "enable_progress_bar"

-----------
QUERY:
  -- test hashing explicitly later

-- simple rollup with multiple plain aggregates, with and without ordering
-- (and with ordering differing from grouping)

select a, b, grouping(a,b), sum(v), count(*), max(v)
  from gstest1 group by rollup (a,b);
RESULT:
	[(None, None, 3, 145, 10, 19), (2, None, 1, 15, 1, 15), (1, None, 1, 60, 5, 14), (4, None, 1, 37, 2, 19), (3, None, 1, 33, 2, 17), (1, 1, 0, 21, 2, 11), (1, 3, 0, 14, 1, 14), (2, 3, 0, 15, 1, 15), (3, 3, 0, 16, 1, 16), (3, 4, 0, 17, 1, 17), (1, 2, 0, 25, 2, 13), (4, 1, 0, 37, 2, 19)]

-----------
QUERY:

select a, b, grouping(a,b), sum(v), count(*), max(v)
  from gstest1 group by rollup (a,b) order by a,b;
RESULT:
	[(1, 1, 0, 21, 2, 11), (1, 2, 0, 25, 2, 13), (1, 3, 0, 14, 1, 14), (1, None, 1, 60, 5, 14), (2, 3, 0, 15, 1, 15), (2, None, 1, 15, 1, 15), (3, 3, 0, 16, 1, 16), (3, 4, 0, 17, 1, 17), (3, None, 1, 33, 2, 17), (4, 1, 0, 37, 2, 19), (4, None, 1, 37, 2, 19), (None, None, 3, 145, 10, 19)]

-----------
QUERY:

select a, b, grouping(a,b), sum(v), count(*), max(v)
  from gstest1 group by rollup (a,b) order by b desc, a;
RESULT:
	[(3, 4, 0, 17, 1, 17), (1, 3, 0, 14, 1, 14), (2, 3, 0, 15, 1, 15), (3, 3, 0, 16, 1, 16), (1, 2, 0, 25, 2, 13), (1, 1, 0, 21, 2, 11), (4, 1, 0, 37, 2, 19), (1, None, 1, 60, 5, 14), (2, None, 1, 15, 1, 15), (3, None, 1, 33, 2, 17), (4, None, 1, 37, 2, 19), (None, None, 3, 145, 10, 19)]

-----------
QUERY:

select a, b, grouping(a,b), sum(v), count(*), max(v)
  from gstest1 group by rollup (a,b) order by coalesce(a,0)+coalesce(b,0);
RESULT:
	[(None, None, 3, 145, 10, 19), (1, None, 1, 60, 5, 14), (2, None, 1, 15, 1, 15), (1, 1, 0, 21, 2, 11), (1, 2, 0, 25, 2, 13), (3, None, 1, 33, 2, 17), (1, 3, 0, 14, 1, 14), (4, None, 1, 37, 2, 19), (4, 1, 0, 37, 2, 19), (2, 3, 0, 15, 1, 15), (3, 3, 0, 16, 1, 16), (3, 4, 0, 17, 1, 17)]

-----------
QUERY:


-- various types of ordered aggs
select a, b, grouping(a,b),
       array_agg(v order by v),
       string_agg(v::text, ':' order by v desc),
       percentile_disc(0.5) within group (order by v),
       rank(1,2,12) within group (order by a,b,v)
  from gstest1 group by rollup (a,b) order by a,b;
RESULT:
	ERROR - Parser Error: Cannot use multiple ORDER BY clauses with WITHIN GROUP

-----------
QUERY:


-- test usage of grouped columns in direct args of aggs
select grouping(a), a, array_agg(b),
       rank(a) within group (order by b nulls first),
       rank(a) within group (order by b nulls last)
  from (values (1,1),(1,4),(1,5),(3,1),(3,2)) v(a,b)
 group by rollup (a) order by a;
RESULT:
	ERROR - Parser Error: Unknown ordered aggregate "rank".

-----------
QUERY:


-- nesting with window functions
select a, b, sum(c), sum(sum(c)) over (order by a,b) as rsum
  from gstest2 group by rollup (a,b) order by rsum, a, b;
RESULT:
	[(None, None, None, None)]

-----------
QUERY:


-- nesting with grouping sets
select sum(c) from gstest2
  group by grouping sets((), grouping sets((), grouping sets(())))
  order by 1 desc;
RESULT:
	[(None,), (None,), (None,)]

-----------
QUERY:

select sum(c) from gstest2
  group by grouping sets((), grouping sets((), grouping sets(((a, b)))))
  order by 1 desc;
RESULT:
	[(None,), (None,)]

-----------
QUERY:

select sum(c) from gstest2
  group by grouping sets(grouping sets(rollup(c), grouping sets(cube(c))))
  order by 1 desc;
RESULT:
	[(None,), (None,)]

-----------
QUERY:

select sum(c) from gstest2
  group by grouping sets(a, grouping sets(a, cube(b)))
  order by 1 desc;
RESULT:
	[(None,)]

-----------
QUERY:

select sum(c) from gstest2
  group by grouping sets(grouping sets((a, (b))))
  order by 1 desc;
RESULT:
	[]

-----------
QUERY:

select sum(c) from gstest2
  group by grouping sets(grouping sets((a, b)))
  order by 1 desc;
RESULT:
	[]

-----------
QUERY:

select sum(c) from gstest2
  group by grouping sets(grouping sets(a, grouping sets(a), a))
  order by 1 desc;
RESULT:
	[]

-----------
QUERY:

select sum(c) from gstest2
  group by grouping sets(grouping sets(a, grouping sets(a, grouping sets(a), ((a)), a, grouping sets(a), (a)), a))
  order by 1 desc;
RESULT:
	[]

-----------
QUERY:

select sum(c) from gstest2
  group by grouping sets((a,(a,b)), grouping sets((a,(a,b)),a))
  order by 1 desc;
RESULT:
	[]

-----------
QUERY:


-- empty input: first is 0 rows, second 1, third 3 etc.
select a, b, sum(v), count(*) from gstest_empty group by grouping sets ((a,b),a);
RESULT:
	[]

-----------
QUERY:

select a, b, sum(v), count(*) from gstest_empty group by grouping sets ((a,b),());
RESULT:
	[(None, None, None, 0)]

-----------
QUERY:

select a, b, sum(v), count(*) from gstest_empty group by grouping sets ((a,b),(),(),());
RESULT:
	[(None, None, None, 0), (None, None, None, 0), (None, None, None, 0)]

-----------
QUERY:

select sum(v), count(*) from gstest_empty group by grouping sets ((),(),());
RESULT:
	[(None, 0), (None, 0), (None, 0)]

-----------
QUERY:


-- empty input with joins tests some important code paths
select t1.a, t2.b, sum(t1.v), count(*) from gstest_empty t1, gstest_empty t2
 group by grouping sets ((t1.a,t2.b),());
RESULT:
	[(None, None, None, 0)]

-----------
QUERY:


-- simple joins, var resolution, GROUPING on join vars
select t1.a, t2.b, grouping(t1.a, t2.b), sum(t1.v), max(t2.a)
  from gstest1 t1, gstest2 t2
 group by grouping sets ((t1.a, t2.b), ());
RESULT:
	[(None, None, 3, None, None)]

-----------
QUERY:


select t1.a, t2.b, grouping(t1.a, t2.b), sum(t1.v), max(t2.a)
  from gstest1 t1 join gstest2 t2 on (t1.a=t2.a)
 group by grouping sets ((t1.a, t2.b), ());
RESULT:
	[(None, None, 3, None, None)]

-----------
QUERY:


select a, b, grouping(a, b), sum(t1.v), max(t2.c)
  from gstest1 t1 join gstest2 t2 using (a,b)
 group by grouping sets ((a, b), ());
RESULT:
	[(None, None, 3, None, None)]

-----------
QUERY:


-- check that functionally dependent cols are not nulled
select a, d, grouping(a,b,c)
  from gstest3
 group by grouping sets ((a,b), (a,c));
RESULT:
	ERROR - Catalog Error: Table with name gstest3 does not exist!
Did you mean "gstest1"?

-----------
QUERY:


-- check that distinct grouping columns are kept separate
-- even if they are equal()
explain (costs off)
select g as alias1, g as alias2
  from generate_series(1,3) g
 group by alias1, rollup(alias2);
RESULT:
	ERROR - Not implemented Error: Unimplemented explain type: costs

-----------
QUERY:


select g as alias1, g as alias2
  from generate_series(1,3) g
 group by alias1, rollup(alias2);
RESULT:
	[({'generate_series': 3}, None), ({'generate_series': 1}, {'generate_series': 1}), ({'generate_series': 3}, {'generate_series': 3}), ({'generate_series': 1}, None), ({'generate_series': 2}, None), ({'generate_series': 2}, {'generate_series': 2})]

-----------
QUERY:


-- check that pulled-up subquery outputs still go to null when appropriate
select four, x
  from (select four, ten, 'foo'::text as x from tenk1) as t
  group by grouping sets (four, x)
  having x = 'foo';
RESULT:
	ERROR - Catalog Error: Table with name tenk1 does not exist!
Did you mean "gstest1"?

-----------
QUERY:


select four, x || 'x'
  from (select four, ten, 'foo'::text as x from tenk1) as t
  group by grouping sets (four, x)
  order by four;
RESULT:
	ERROR - Catalog Error: Table with name tenk1 does not exist!
Did you mean "gstest1"?

-----------
QUERY:


select (x+y)*1, sum(z)
 from (select 1 as x, 2 as y, 3 as z) s
 group by grouping sets (x+y, x);
RESULT:
	[(None, 3), (3, 3)]

-----------
QUERY:


select x, not x as not_x, q2 from
  (select *, q1 = 1 as x from int8_tbl i1) as t
  group by grouping sets(x, q2)
  order by x, q2;
RESULT:
	[(False, True, None), (None, None, -4567890123456789), (None, None, 123), (None, None, 456), (None, None, 4567890123456789)]

-----------
QUERY:


-- check qual push-down rules for a subquery with grouping sets
explain (verbose, costs off)
select * from (
  select 1 as x, q1, sum(q2)
  from int8_tbl i1
  group by grouping sets(1, 2)
) ss
where x = 1 and q1 = 123;
RESULT:
	ERROR - Not implemented Error: Unimplemented explain type: verbose

-----------
QUERY:


select * from (
  select 1 as x, q1, sum(q2)
  from int8_tbl i1
  group by grouping sets(1, 2)
) ss
where x = 1 and q1 = 123;
RESULT:
	[]

-----------
QUERY:


-- check handling of pulled-up SubPlan in GROUPING() argument (bug #17479)
explain (verbose, costs off)
select grouping(ss.x)
from int8_tbl i1
cross join lateral (select (select i1.q1) as x) ss
group by ss.x;
RESULT:
	ERROR - Not implemented Error: Unimplemented explain type: verbose

-----------
QUERY:


select grouping(ss.x)
from int8_tbl i1
cross join lateral (select (select i1.q1) as x) ss
group by ss.x;
RESULT:
	[(0,), (0,)]

-----------
QUERY:


explain (verbose, costs off)
select (select grouping(ss.x))
from int8_tbl i1
cross join lateral (select (select i1.q1) as x) ss
group by ss.x;
RESULT:
	ERROR - Not implemented Error: Unimplemented explain type: verbose

-----------
QUERY:


select (select grouping(ss.x))
from int8_tbl i1
cross join lateral (select (select i1.q1) as x) ss
group by ss.x;
RESULT:
	[(0,), (0,)]

-----------
QUERY:


-- simple rescan tests

select a, b, sum(v.x)
  from (values (1),(2)) v(x), gstest_data(v.x)
 group by rollup (a,b);
RESULT:
	ERROR - Catalog Error: Table Function with name gstest_data does not exist!
Did you mean "repeat"?

-----------
QUERY:


select *
  from (values (1),(2)) v(x),
       lateral (select a, b, sum(v.x) from gstest_data(v.x) group by rollup (a,b)) s;
RESULT:
	ERROR - Catalog Error: Table Function with name gstest_data does not exist!
Did you mean "repeat"?

-----------
QUERY:


-- min max optimization should still work with GROUP BY ()
explain (costs off)
  select min(unique1) from tenk1 GROUP BY ();
RESULT:
	ERROR - Not implemented Error: Unimplemented explain type: costs

-----------
QUERY:


-- Views with GROUPING SET queries
CREATE VIEW gstest_view AS select a, b, grouping(a,b), sum(c), count(*), max(c)
  from gstest2 group by rollup ((a,b,c),(c,d));
RESULT:
	[]

-----------
QUERY:


select pg_get_viewdef('gstest_view'::regclass, true);
RESULT:
	ERROR - Binder Error: Macro function 'pg_get_viewdef(oid)' requires a single positional argument, but 2 positional arguments were provided.

-----------
QUERY:


-- Nested queries with 3 or more levels of nesting
select(select (select grouping(a,b) from (values (1)) v2(c)) from (values (1,2)) v1(a,b) group by (a,b)) from (values(6,7)) v3(e,f) GROUP BY ROLLUP(e,f);
RESULT:
	[(0,), (0,), (0,)]

-----------
QUERY:

select(select (select grouping(e,f) from (values (1)) v2(c)) from (values (1,2)) v1(a,b) group by (a,b)) from (values(6,7)) v3(e,f) GROUP BY ROLLUP(e,f);
RESULT:
	[(0,), (3,), (1,)]

-----------
QUERY:

select(select (select grouping(c) from (values (1)) v2(c) GROUP BY c) from (values (1,2)) v1(a,b) group by (a,b)) from (values(6,7)) v3(e,f) GROUP BY ROLLUP(e,f);
RESULT:
	[(0,), (0,), (0,)]

-----------
QUERY:


-- Combinations of operations
select a, b, c, d from gstest2 group by rollup(a,b),grouping sets(c,d);
RESULT:
	[]

-----------
QUERY:

select a, b from (values (1,2),(2,3)) v(a,b) group by a,b, grouping sets(a);
RESULT:
	[(1, 2), (2, 3)]

-----------
QUERY:


-- Tests for chained aggregates
select a, b, grouping(a,b), sum(v), count(*), max(v)
  from gstest1 group by grouping sets ((a,b),(a+1,b+1),(a+2,b+2)) order by 3,6;
RESULT:
	[(1, 1, 0, 21, 2, 11), (1, 2, 0, 25, 2, 13), (1, 3, 0, 14, 1, 14), (2, 3, 0, 15, 1, 15), (3, 3, 0, 16, 1, 16), (3, 4, 0, 17, 1, 17), (4, 1, 0, 37, 2, 19), (None, None, 3, 21, 2, 11), (None, None, 3, 21, 2, 11), (None, None, 3, 25, 2, 13), (None, None, 3, 25, 2, 13), (None, None, 3, 14, 1, 14), (None, None, 3, 14, 1, 14), (None, None, 3, 15, 1, 15), (None, None, 3, 15, 1, 15), (None, None, 3, 16, 1, 16), (None, None, 3, 16, 1, 16), (None, None, 3, 17, 1, 17), (None, None, 3, 17, 1, 17), (None, None, 3, 37, 2, 19), (None, None, 3, 37, 2, 19)]

-----------
QUERY:

select(select (select grouping(a,b) from (values (1)) v2(c)) from (values (1,2)) v1(a,b) group by (a,b)) from (values(6,7)) v3(e,f) GROUP BY ROLLUP((e+1),(f+1));
RESULT:
	[(0,), (0,), (0,)]

-----------
QUERY:

select(select (select grouping(a,b) from (values (1)) v2(c)) from (values (1,2)) v1(a,b) group by (a,b)) from (values(6,7)) v3(e,f) GROUP BY CUBE((e+1),(f+1)) ORDER BY (e+1),(f+1);
RESULT:
	[(0,), (0,), (0,), (0,)]

-----------
QUERY:

select a, b, sum(c), sum(sum(c)) over (order by a,b) as rsum
  from gstest2 group by cube (a,b) order by rsum, a, b;
RESULT:
	[(None, None, None, None)]

-----------
QUERY:

select a, b, sum(c) from (values (1,1,10),(1,1,11),(1,2,12),(1,2,13),(1,3,14),(2,3,15),(3,3,16),(3,4,17),(4,1,18),(4,1,19)) v(a,b,c) group by rollup (a,b);
RESULT:
	[(4, None, 37), (1, None, 60), (None, None, 145), (3, None, 33), (1, 2, 25), (3, 4, 17), (1, 1, 21), (2, None, 15), (1, 3, 14), (2, 3, 15), (3, 3, 16), (4, 1, 37)]

-----------
QUERY:

select a, b, sum(v.x)
  from (values (1),(2)) v(x), gstest_data(v.x)
 group by cube (a,b) order by a,b;
RESULT:
	ERROR - Catalog Error: Table Function with name gstest_data does not exist!
Did you mean "repeat"?

-----------
QUERY:


-- Test reordering of grouping sets
explain (costs off)
select * from gstest1 group by grouping sets((a,b,v),(v)) order by v,b,a;
RESULT:
	ERROR - Not implemented Error: Unimplemented explain type: costs

-----------
QUERY:


-- Agg level check. This query should error out.
select (select grouping(a,b) from gstest2) from gstest2 group by a,b;
RESULT:
	[]

-----------
QUERY:


--Nested queries
select a, b, sum(c), count(*) from gstest2 group by grouping sets (rollup(a,b),a);
RESULT:
	[(None, None, None, 0)]

-----------
QUERY:


-- HAVING queries
select ten, sum(distinct four) from onek a
group by grouping sets((ten,four),(ten))
having exists (select 1 from onek b where sum(distinct a.four) = b.four);
RESULT:
	ERROR - Catalog Error: Table with name onek does not exist!
Did you mean "boolindex"?

-----------
QUERY:


-- Tests around pushdown of HAVING clauses, partially testing against previous bugs
select a,count(*) from gstest2 group by rollup(a) order by a;
RESULT:
	[(None, 0)]

-----------
QUERY:

select a,count(*) from gstest2 group by rollup(a) having a is distinct from 1 order by a;
RESULT:
	[(None, 0)]

-----------
QUERY:

explain (costs off)
  select a,count(*) from gstest2 group by rollup(a) having a is distinct from 1 order by a;
RESULT:
	ERROR - Not implemented Error: Unimplemented explain type: costs

-----------
QUERY:


select v.c, (select count(*) from gstest2 group by () having v.c)
  from (values (false),(true)) v(c) order by v.c;
RESULT:
	[(False, None), (True, 0)]

-----------
QUERY:

explain (costs off)
  select v.c, (select count(*) from gstest2 group by () having v.c)
    from (values (false),(true)) v(c) order by v.c;
RESULT:
	ERROR - Not implemented Error: Unimplemented explain type: costs

-----------
QUERY:


-- HAVING with GROUPING queries
select ten, grouping(ten) from onek
group by grouping sets(ten) having grouping(ten) >= 0
order by 2,1;
RESULT:
	ERROR - Catalog Error: Table with name onek does not exist!
Did you mean "boolindex"?

-----------
QUERY:

select ten, grouping(ten) from onek
group by grouping sets(ten, four) having grouping(ten) > 0
order by 2,1;
RESULT:
	ERROR - Catalog Error: Table with name onek does not exist!
Did you mean "boolindex"?

-----------
QUERY:

select ten, grouping(ten) from onek
group by rollup(ten) having grouping(ten) > 0
order by 2,1;
RESULT:
	ERROR - Catalog Error: Table with name onek does not exist!
Did you mean "boolindex"?

-----------
QUERY:

select ten, grouping(ten) from onek
group by cube(ten) having grouping(ten) > 0
order by 2,1;
RESULT:
	ERROR - Catalog Error: Table with name onek does not exist!
Did you mean "boolindex"?

-----------
QUERY:

select ten, grouping(ten) from onek
group by (ten) having grouping(ten) >= 0
order by 2,1;
RESULT:
	ERROR - Catalog Error: Table with name onek does not exist!
Did you mean "boolindex"?

-----------
QUERY:


-- FILTER queries
select ten, sum(distinct four) filter (where four::text ~ '123') from onek a
group by rollup(ten);
RESULT:
	ERROR - Catalog Error: Table with name onek does not exist!
Did you mean "boolindex"?

-----------
QUERY:


-- More rescan tests
select * from (values (1),(2)) v(a) left join lateral (select v.a, four, ten, count(*) from onek group by cube(four,ten)) s on true order by v.a,four,ten;
RESULT:
	ERROR - Catalog Error: Table with name onek does not exist!
Did you mean "boolindex"?

-----------
QUERY:

select array(select row(v.a,s1.*) from (select two,four, count(*) from onek group by cube(two,four) order by two,four) s1) from (values (1),(2)) v(a);
RESULT:
	ERROR - Catalog Error: Table with name onek does not exist!
Did you mean "boolindex"?

-----------
QUERY:


-- Grouping on text columns
select sum(ten) from onek group by two, rollup(four::text) order by 1;
RESULT:
	ERROR - Catalog Error: Table with name onek does not exist!
Did you mean "boolindex"?

-----------
QUERY:

select sum(ten) from onek group by rollup(four::text), two order by 1;
RESULT:
	ERROR - Catalog Error: Table with name onek does not exist!
Did you mean "boolindex"?

-----------
QUERY:


-- hashing support

set enable_hashagg = true;
RESULT:
	ERROR - Catalog Error: unrecognized configuration parameter "enable_hashagg"

Did you mean: "enable_progress_bar"

-----------
QUERY:


-- failure cases

select count(*) from gstest4 group by rollup(unhashable_col,unsortable_col);
RESULT:
	ERROR - Catalog Error: Table with name gstest4 does not exist!
Did you mean "gstest1"?

-----------
QUERY:

select array_agg(v order by v) from gstest4 group by grouping sets ((id,unsortable_col),(id));
RESULT:
	ERROR - Catalog Error: Table with name gstest4 does not exist!
Did you mean "gstest1"?

-----------
QUERY:


-- simple cases

select a, b, grouping(a,b), sum(v), count(*), max(v)
  from gstest1 group by grouping sets ((a),(b)) order by 3,1,2;
RESULT:
	[(1, None, 1, 60, 5, 14), (2, None, 1, 15, 1, 15), (3, None, 1, 33, 2, 17), (4, None, 1, 37, 2, 19), (None, 1, 2, 58, 4, 19), (None, 2, 2, 25, 2, 13), (None, 3, 2, 45, 3, 16), (None, 4, 2, 17, 1, 17)]

-----------
QUERY:

explain (costs off) select a, b, grouping(a,b), sum(v), count(*), max(v)
  from gstest1 group by grouping sets ((a),(b)) order by 3,1,2;
RESULT:
	ERROR - Not implemented Error: Unimplemented explain type: costs

-----------
QUERY:


select a, b, grouping(a,b), sum(v), count(*), max(v)
  from gstest1 group by cube(a,b) order by 3,1,2;
RESULT:
	[(1, 1, 0, 21, 2, 11), (1, 2, 0, 25, 2, 13), (1, 3, 0, 14, 1, 14), (2, 3, 0, 15, 1, 15), (3, 3, 0, 16, 1, 16), (3, 4, 0, 17, 1, 17), (4, 1, 0, 37, 2, 19), (1, None, 1, 60, 5, 14), (2, None, 1, 15, 1, 15), (3, None, 1, 33, 2, 17), (4, None, 1, 37, 2, 19), (None, 1, 2, 58, 4, 19), (None, 2, 2, 25, 2, 13), (None, 3, 2, 45, 3, 16), (None, 4, 2, 17, 1, 17), (None, None, 3, 145, 10, 19)]

-----------
QUERY:

explain (costs off) select a, b, grouping(a,b), sum(v), count(*), max(v)
  from gstest1 group by cube(a,b) order by 3,1,2;
RESULT:
	ERROR - Not implemented Error: Unimplemented explain type: costs

-----------
QUERY:


-- shouldn/* REPLACED */ ''t try and hash
explain (costs off)
  select a, b, grouping(a,b), array_agg(v order by v)
    from gstest1 group by cube(a,b);
RESULT:
	ERROR - Not implemented Error: Unimplemented explain type: costs

-----------
QUERY:


-- unsortable cases
select unsortable_col, count(*)
  from gstest4 group by grouping sets ((unsortable_col),(unsortable_col))
  order by unsortable_col::text;
RESULT:
	ERROR - Catalog Error: Table with name gstest4 does not exist!
Did you mean "gstest1"?

-----------
QUERY:


-- mixed hashable/sortable cases
select unhashable_col, unsortable_col,
       grouping(unhashable_col, unsortable_col),
       count(*), sum(v)
  from gstest4 group by grouping sets ((unhashable_col),(unsortable_col))
 order by 3, 5;
RESULT:
	ERROR - Catalog Error: Table with name gstest4 does not exist!
Did you mean "gstest1"?

-----------
QUERY:

explain (costs off)
  select unhashable_col, unsortable_col,
         grouping(unhashable_col, unsortable_col),
         count(*), sum(v)
    from gstest4 group by grouping sets ((unhashable_col),(unsortable_col))
   order by 3,5;
RESULT:
	ERROR - Not implemented Error: Unimplemented explain type: costs

-----------
QUERY:


select unhashable_col, unsortable_col,
       grouping(unhashable_col, unsortable_col),
       count(*), sum(v)
  from gstest4 group by grouping sets ((v,unhashable_col),(v,unsortable_col))
 order by 3,5;
RESULT:
	ERROR - Catalog Error: Table with name gstest4 does not exist!
Did you mean "gstest1"?

-----------
QUERY:

explain (costs off)
  select unhashable_col, unsortable_col,
         grouping(unhashable_col, unsortable_col),
         count(*), sum(v)
    from gstest4 group by grouping sets ((v,unhashable_col),(v,unsortable_col))
   order by 3,5;
RESULT:
	ERROR - Not implemented Error: Unimplemented explain type: costs

-----------
QUERY:


-- empty input: first is 0 rows, second 1, third 3 etc.
select a, b, sum(v), count(*) from gstest_empty group by grouping sets ((a,b),a);
RESULT:
	[]

-----------
QUERY:

explain (costs off)
  select a, b, sum(v), count(*) from gstest_empty group by grouping sets ((a,b),a);
RESULT:
	ERROR - Not implemented Error: Unimplemented explain type: costs

-----------
QUERY:

select a, b, sum(v), count(*) from gstest_empty group by grouping sets ((a,b),());
RESULT:
	[(None, None, None, 0)]

-----------
QUERY:

select a, b, sum(v), count(*) from gstest_empty group by grouping sets ((a,b),(),(),());
RESULT:
	[(None, None, None, 0), (None, None, None, 0), (None, None, None, 0)]

-----------
QUERY:

explain (costs off)
  select a, b, sum(v), count(*) from gstest_empty group by grouping sets ((a,b),(),(),());
RESULT:
	ERROR - Not implemented Error: Unimplemented explain type: costs

-----------
QUERY:

select sum(v), count(*) from gstest_empty group by grouping sets ((),(),());
RESULT:
	[(None, 0), (None, 0), (None, 0)]

-----------
QUERY:

explain (costs off)
  select sum(v), count(*) from gstest_empty group by grouping sets ((),(),());
RESULT:
	ERROR - Not implemented Error: Unimplemented explain type: costs

-----------
QUERY:


-- check that functionally dependent cols are not nulled
select a, d, grouping(a,b,c)
  from gstest3
 group by grouping sets ((a,b), (a,c));
RESULT:
	ERROR - Catalog Error: Table with name gstest3 does not exist!
Did you mean "gstest1"?

-----------
QUERY:

explain (costs off)
  select a, d, grouping(a,b,c)
    from gstest3
   group by grouping sets ((a,b), (a,c));
RESULT:
	ERROR - Not implemented Error: Unimplemented explain type: costs

-----------
QUERY:


-- simple rescan tests

select a, b, sum(v.x)
  from (values (1),(2)) v(x), gstest_data(v.x)
 group by grouping sets (a,b)
 order by 1, 2, 3;
RESULT:
	ERROR - Catalog Error: Table Function with name gstest_data does not exist!
Did you mean "repeat"?

-----------
QUERY:

explain (costs off)
  select a, b, sum(v.x)
    from (values (1),(2)) v(x), gstest_data(v.x)
   group by grouping sets (a,b)
   order by 3, 1, 2;
RESULT:
	ERROR - Not implemented Error: Unimplemented explain type: costs

-----------
QUERY:

select *
  from (values (1),(2)) v(x),
       lateral (select a, b, sum(v.x) from gstest_data(v.x) group by grouping sets (a,b)) s;
RESULT:
	ERROR - Catalog Error: Table Function with name gstest_data does not exist!
Did you mean "repeat"?

-----------
QUERY:

explain (costs off)
  select *
    from (values (1),(2)) v(x),
         lateral (select a, b, sum(v.x) from gstest_data(v.x) group by grouping sets (a,b)) s;
RESULT:
	ERROR - Not implemented Error: Unimplemented explain type: costs

-----------
QUERY:


-- Tests for chained aggregates
select a, b, grouping(a,b), sum(v), count(*), max(v)
  from gstest1 group by grouping sets ((a,b),(a+1,b+1),(a+2,b+2)) order by 3,6;
RESULT:
	[(1, 1, 0, 21, 2, 11), (1, 2, 0, 25, 2, 13), (1, 3, 0, 14, 1, 14), (2, 3, 0, 15, 1, 15), (3, 3, 0, 16, 1, 16), (3, 4, 0, 17, 1, 17), (4, 1, 0, 37, 2, 19), (None, None, 3, 21, 2, 11), (None, None, 3, 21, 2, 11), (None, None, 3, 25, 2, 13), (None, None, 3, 25, 2, 13), (None, None, 3, 14, 1, 14), (None, None, 3, 14, 1, 14), (None, None, 3, 15, 1, 15), (None, None, 3, 15, 1, 15), (None, None, 3, 16, 1, 16), (None, None, 3, 16, 1, 16), (None, None, 3, 17, 1, 17), (None, None, 3, 17, 1, 17), (None, None, 3, 37, 2, 19), (None, None, 3, 37, 2, 19)]

-----------
QUERY:

explain (costs off)
  select a, b, grouping(a,b), sum(v), count(*), max(v)
    from gstest1 group by grouping sets ((a,b),(a+1,b+1),(a+2,b+2)) order by 3,6;
RESULT:
	ERROR - Not implemented Error: Unimplemented explain type: costs

-----------
QUERY:

select a, b, sum(c), sum(sum(c)) over (order by a,b) as rsum
  from gstest2 group by cube (a,b) order by rsum, a, b;
RESULT:
	[(None, None, None, None)]

-----------
QUERY:

explain (costs off)
  select a, b, sum(c), sum(sum(c)) over (order by a,b) as rsum
    from gstest2 group by cube (a,b) order by rsum, a, b;
RESULT:
	ERROR - Not implemented Error: Unimplemented explain type: costs

-----------
QUERY:

select a, b, sum(v.x)
  from (values (1),(2)) v(x), gstest_data(v.x)
 group by cube (a,b) order by a,b;
RESULT:
	ERROR - Catalog Error: Table Function with name gstest_data does not exist!
Did you mean "repeat"?

-----------
QUERY:

explain (costs off)
  select a, b, sum(v.x)
    from (values (1),(2)) v(x), gstest_data(v.x)
   group by cube (a,b) order by a,b;
RESULT:
	ERROR - Not implemented Error: Unimplemented explain type: costs

-----------
QUERY:


-- Verify that we correctly handle the child node returning a
-- non-minimal slot, which happens if the input is pre-sorted,
-- e.g. due to an index scan.
BEGIN;
RESULT:
	[]

-----------
QUERY:

SET LOCAL enable_hashagg = false;
RESULT:
	ERROR - Not implemented Error: SET LOCAL is not implemented.

-----------
QUERY:

EXPLAIN (COSTS OFF) SELECT a, b, count(*), max(a), max(b) FROM gstest3 GROUP BY GROUPING SETS(a, b,()) ORDER BY a, b;
RESULT:
	ERROR - Not implemented Error: Unimplemented explain type: COSTS

-----------
QUERY:

SELECT a, b, count(*), max(a), max(b) FROM gstest3 GROUP BY GROUPING SETS(a, b,()) ORDER BY a, b;
RESULT:
	ERROR - Catalog Error: Table with name gstest3 does not exist!
Did you mean "gstest1"?

-----------
QUERY:

SET LOCAL enable_seqscan = false;
RESULT:
	ERROR - Not implemented Error: SET LOCAL is not implemented.

-----------
QUERY:

EXPLAIN (COSTS OFF) SELECT a, b, count(*), max(a), max(b) FROM gstest3 GROUP BY GROUPING SETS(a, b,()) ORDER BY a, b;
RESULT:
	ERROR - Not implemented Error: Unimplemented explain type: COSTS

-----------
QUERY:

SELECT a, b, count(*), max(a), max(b) FROM gstest3 GROUP BY GROUPING SETS(a, b,()) ORDER BY a, b;
RESULT:
	ERROR - Catalog Error: Table with name gstest3 does not exist!
Did you mean "gstest1"?

-----------
QUERY:

COMMIT;
RESULT:
	[]

-----------
QUERY:


-- More rescan tests
select * from (values (1),(2)) v(a) left join lateral (select v.a, four, ten, count(*) from onek group by cube(four,ten)) s on true order by v.a,four,ten;
RESULT:
	ERROR - Catalog Error: Table with name onek does not exist!
Did you mean "boolindex"?

-----------
QUERY:

select array(select row(v.a,s1.*) from (select two,four, count(*) from onek group by cube(two,four) order by two,four) s1) from (values (1),(2)) v(a);
RESULT:
	ERROR - Catalog Error: Table with name onek does not exist!
Did you mean "boolindex"?

-----------
QUERY:


-- Rescan logic changes when there are no empty grouping sets, so test
-- that too:
select * from (values (1),(2)) v(a) left join lateral (select v.a, four, ten, count(*) from onek group by grouping sets(four,ten)) s on true order by v.a,four,ten;
RESULT:
	ERROR - Catalog Error: Table with name onek does not exist!
Did you mean "boolindex"?

-----------
QUERY:

select array(select row(v.a,s1.*) from (select two,four, count(*) from onek group by grouping sets(two,four) order by two,four) s1) from (values (1),(2)) v(a);
RESULT:
	ERROR - Catalog Error: Table with name onek does not exist!
Did you mean "boolindex"?

-----------
QUERY:


-- test the knapsack

set enable_indexscan = false;
RESULT:
	ERROR - Catalog Error: unrecognized configuration parameter "enable_indexscan"

Did you mean: "Calendar"

-----------
QUERY:

set hash_mem_multiplier = 1.0;
RESULT:
	ERROR - Catalog Error: unrecognized configuration parameter "hash_mem_multiplier"

Did you mean: "user"

-----------
QUERY:

set work_mem = '64kB';
RESULT:
	ERROR - Catalog Error: unrecognized configuration parameter "work_mem"

Did you mean: "worker_threads"

-----------
QUERY:

explain (costs off)
  select unique1,
         count(two), count(four), count(ten),
         count(hundred), count(thousand), count(twothousand),
         count(*)
    from tenk1 group by grouping sets (unique1,twothousand,thousand,hundred,ten,four,two);
RESULT:
	ERROR - Not implemented Error: Unimplemented explain type: costs

-----------
QUERY:

explain (costs off)
  select unique1,
         count(two), count(four), count(ten),
         count(hundred), count(thousand), count(twothousand),
         count(*)
    from tenk1 group by grouping sets (unique1,hundred,ten,four,two);
RESULT:
	ERROR - Not implemented Error: Unimplemented explain type: costs

-----------
QUERY:


set work_mem = '384kB';
RESULT:
	ERROR - Catalog Error: unrecognized configuration parameter "work_mem"

Did you mean: "worker_threads"

-----------
QUERY:

explain (costs off)
  select unique1,
         count(two), count(four), count(ten),
         count(hundred), count(thousand), count(twothousand),
         count(*)
    from tenk1 group by grouping sets (unique1,twothousand,thousand,hundred,ten,four,two);
RESULT:
	ERROR - Not implemented Error: Unimplemented explain type: costs

-----------
QUERY:


-- check collation-sensitive matching between grouping expressions
-- (similar to a check for aggregates, but there are additional code
-- paths for GROUPING, so check again here)

select v||'a', case grouping(v||'a') when 1 then 1 else 0 end, count(*)
  from unnest(array[1,1], array['a','b']) u(i,v)
 group by rollup(i, v||'a') order by 1,3;
RESULT:
	ERROR - Binder Error: UNNEST requires a single list as input

-----------
QUERY:

select v||'a', case when grouping(v||'a') = 1 then 1 else 0 end, count(*)
  from unnest(array[1,1], array['a','b']) u(i,v)
 group by rollup(i, v||'a') order by 1,3;
RESULT:
	ERROR - Binder Error: UNNEST requires a single list as input

-----------
QUERY:


-- Bug #16784
create table bug_16784(i int, j int);
RESULT:
	[]

-----------
QUERY:

analyze bug_16784;
RESULT:
	[]

-----------
QUERY:

alter table bug_16784 set (autovacuum_enabled = 'false');
RESULT:
	ERROR - Not implemented Error: No support for that ALTER TABLE option yet!

-----------
QUERY:

update pg_class set reltuples = 10 where relname='bug_16784';
RESULT:
	ERROR - Binder Error: Can only update base table!

-----------
QUERY:


insert into bug_16784 select g/10, g from generate_series(1,40) g;
RESULT:
	ERROR - Binder Error: No function matches the given name and argument types '/(STRUCT(generate_series BIGINT), INTEGER_LITERAL)'. You might need to add explicit type casts.
	Candidate functions:
	/(FLOAT, FLOAT) -> FLOAT
	/(DOUBLE, DOUBLE) -> DOUBLE
	/(INTERVAL, BIGINT) -> INTERVAL

LINE 3: insert into bug_16784 select g/10, g from generate_series(1,40) g;
                                      ^

-----------
QUERY:


set work_mem='64kB';
RESULT:
	ERROR - Catalog Error: unrecognized configuration parameter "work_mem"

Did you mean: "worker_threads"

-----------
QUERY:

set enable_sort = false;
RESULT:
	ERROR - Catalog Error: unrecognized configuration parameter "enable_sort"

Did you mean: "enable_fsst_vectors"

-----------
QUERY:


select * from
  (values (1),(2)) v(a),
  lateral (select a, i, j, count(*) from
             bug_16784 group by cube(i,j)) s
  order by v.a, i, j;
RESULT:
	[(1, 1, None, None, 0), (2, 2, None, None, 0)]

-----------
QUERY:


--
-- Compare results between plans using sorting and plans using hash
-- aggregation. Force spilling in both cases by setting work_mem low
-- and altering the statistics.
--

create table gs_data_1 as
select g%1000 as g1000, g%100 as g100, g%10 as g10, g
   from generate_series(0,1999) g;
RESULT:
	ERROR - Binder Error: No function matches the given name and argument types '%(STRUCT(generate_series BIGINT), INTEGER_LITERAL)'. You might need to add explicit type casts.
	Candidate functions:
	%(TINYINT, TINYINT) -> TINYINT
	%(SMALLINT, SMALLINT) -> SMALLINT
	%(INTEGER, INTEGER) -> INTEGER
	%(BIGINT, BIGINT) -> BIGINT
	%(HUGEINT, HUGEINT) -> HUGEINT
	%(FLOAT, FLOAT) -> FLOAT
	%(DOUBLE, DOUBLE) -> DOUBLE
	%(UTINYINT, UTINYINT) -> UTINYINT
	%(USMALLINT, USMALLINT) -> USMALLINT
	%(UINTEGER, UINTEGER) -> UINTEGER
	%(UBIGINT, UBIGINT) -> UBIGINT
	%(UHUGEINT, UHUGEINT) -> UHUGEINT

LINE 10: select g%1000 as g1000, g%100 as g100, g%10 as g10, g
   from generate_series(0,1999) g;...
                 ^

-----------
QUERY:


analyze gs_data_1;
RESULT:
	ERROR - Catalog Error: Table with name gs_data_1 does not exist!
Did you mean "pg_am"?
LINE 3: analyze gs_data_1;
                ^

-----------
QUERY:

alter table gs_data_1 set (autovacuum_enabled = 'false');
RESULT:
	ERROR - Not implemented Error: No support for that ALTER TABLE option yet!

-----------
QUERY:

update pg_class set reltuples = 10 where relname='gs_data_1';
RESULT:
	ERROR - Binder Error: Can only update base table!

-----------
QUERY:


set work_mem='64kB';
RESULT:
	ERROR - Catalog Error: unrecognized configuration parameter "work_mem"

Did you mean: "worker_threads"

-----------
QUERY:


-- Produce results with sorting.

set enable_sort = true;
RESULT:
	ERROR - Catalog Error: unrecognized configuration parameter "enable_sort"

Did you mean: "enable_fsst_vectors"

-----------
QUERY:

set enable_hashagg = false;
RESULT:
	ERROR - Catalog Error: unrecognized configuration parameter "enable_hashagg"

Did you mean: "enable_progress_bar"

-----------
QUERY:

set jit_above_cost = 0;
RESULT:
	ERROR - Catalog Error: unrecognized configuration parameter "jit_above_cost"

Did you mean: "disabled_optimizers"

-----------
QUERY:


explain (costs off)
select g100, g10, sum(g::numeric), count(*), max(g::text)
from gs_data_1 group by cube (g1000, g100,g10);
RESULT:
	ERROR - Not implemented Error: Unimplemented explain type: costs

-----------
QUERY:


create table gs_group_1 as
select g100, g10, sum(g::numeric), count(*), max(g::text)
from gs_data_1 group by cube (g1000, g100,g10);
RESULT:
	ERROR - Catalog Error: Table with name gs_data_1 does not exist!
Did you mean "pg_am"?
LINE 5: from gs_data_1 group by cube (g1000, g100,g10);...
             ^

-----------
QUERY:


-- Produce results with hash aggregation.

set enable_hashagg = true;
RESULT:
	ERROR - Catalog Error: unrecognized configuration parameter "enable_hashagg"

Did you mean: "enable_progress_bar"

-----------
QUERY:

set enable_sort = false;
RESULT:
	ERROR - Catalog Error: unrecognized configuration parameter "enable_sort"

Did you mean: "enable_fsst_vectors"

-----------
QUERY:


explain (costs off)
select g100, g10, sum(g::numeric), count(*), max(g::text)
from gs_data_1 group by cube (g1000, g100,g10);
RESULT:
	ERROR - Not implemented Error: Unimplemented explain type: costs

-----------
QUERY:


create table gs_hash_1 as
select g100, g10, sum(g::numeric), count(*), max(g::text)
from gs_data_1 group by cube (g1000, g100,g10);
RESULT:
	ERROR - Catalog Error: Table with name gs_data_1 does not exist!
Did you mean "pg_am"?
LINE 5: from gs_data_1 group by cube (g1000, g100,g10);...
             ^

-----------
QUERY:


set enable_sort = true;
RESULT:
	ERROR - Catalog Error: unrecognized configuration parameter "enable_sort"

Did you mean: "enable_fsst_vectors"

-----------
QUERY:

set work_mem to default;
RESULT:
	ERROR - Catalog Error: unrecognized configuration parameter "work_mem"

Did you mean: "worker_threads"

-----------
QUERY:

set hash_mem_multiplier to default;
RESULT:
	ERROR - Catalog Error: unrecognized configuration parameter "hash_mem_multiplier"

Did you mean: "user"

-----------
QUERY:


-- Compare results

(select * from gs_hash_1 except select * from gs_group_1)
  union all
(select * from gs_group_1 except select * from gs_hash_1);
RESULT:
	ERROR - Catalog Error: Table with name gs_hash_1 does not exist!
Did you mean "pg_am"?

-----------
QUERY:


drop table gs_group_1;
RESULT:
	ERROR - Catalog Error: Table with name gs_group_1 does not exist!
Did you mean "pg_proc"?

-----------
QUERY:

drop table gs_hash_1;
RESULT:
	ERROR - Catalog Error: Table with name gs_hash_1 does not exist!
Did you mean "pg_am"?

-----------
QUERY:


-- GROUP BY DISTINCT

-- /* REPLACED */ ''normal/* REPLACED */ '' behavior...
select a, b, c
from (values (1, 2, 3), (4, null, 6), (7, 8, 9)) as t (a, b, c)
group by all rollup(a, b), rollup(a, c)
order by a, b, c;
RESULT:
	ERROR - Parser Error: syntax error at or near "rollup"

-----------
QUERY:


-- ...which is also the default
select a, b, c
from (values (1, 2, 3), (4, null, 6), (7, 8, 9)) as t (a, b, c)
group by rollup(a, b), rollup(a, c)
order by a, b, c;
RESULT:
	[(1, 2, 3), (1, 2, None), (1, 2, None), (1, None, 3), (1, None, 3), (1, None, None), (1, None, None), (1, None, None), (4, None, 6), (4, None, 6), (4, None, 6), (4, None, None), (4, None, None), (4, None, None), (4, None, None), (4, None, None), (7, 8, 9), (7, 8, None), (7, 8, None), (7, None, 9), (7, None, 9), (7, None, None), (7, None, None), (7, None, None), (None, None, None)]

-----------
QUERY:


-- /* REPLACED */ ''group by distinct/* REPLACED */ '' behavior...
select a, b, c
from (values (1, 2, 3), (4, null, 6), (7, 8, 9)) as t (a, b, c)
group by distinct rollup(a, b), rollup(a, c)
order by a, b, c;
RESULT:
	ERROR - Parser Error: syntax error at or near "distinct"

-----------
QUERY:


-- ...which is not the same as /* REPLACED */ ''select distinct/* REPLACED */ ''
select distinct a, b, c
from (values (1, 2, 3), (4, null, 6), (7, 8, 9)) as t (a, b, c)
group by rollup(a, b), rollup(a, c)
order by a, b, c;
RESULT:
	[(1, 2, 3), (1, 2, None), (1, None, 3), (1, None, None), (4, None, 6), (4, None, None), (7, 8, 9), (7, 8, None), (7, None, 9), (7, None, None), (None, None, None)]

-----------
QUERY:


-- test handling of outer GroupingFunc within subqueries
explain (costs off)
select (select grouping(v1)) from (values ((select 1))) v(v1) group by cube(v1);
RESULT:
	ERROR - Not implemented Error: Unimplemented explain type: costs

-----------
QUERY:

select (select grouping(v1)) from (values ((select 1))) v(v1) group by cube(v1);
RESULT:
	[(1,), (0,)]

-----------
QUERY:


explain (costs off)
select (select grouping(v1)) from (values ((select 1))) v(v1) group by v1;
RESULT:
	ERROR - Not implemented Error: Unimplemented explain type: costs

-----------
QUERY:

select (select grouping(v1)) from (values ((select 1))) v(v1) group by v1;
RESULT:
	[(0,)]
