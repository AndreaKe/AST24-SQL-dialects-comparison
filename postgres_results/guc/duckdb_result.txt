-- pg_regress should ensure that this default value applies /* REPLACED */, however
-- we can''t rely on any specific default value of vacuum_cost_delay
SHOW datestyle
ERROR: -- pg_regress should ensure that this default value applies /* REPLACED */, however
-- we can''t rely on any specific default value of vacuum_cost_delay
SHOW datestyle

Catalog Error: Table with name datestyle does not exist!
Did you mean "TEXT_TBL"?


-- SET to some nondefault value
SET vacuum_cost_delay TO 40
ERROR: 

-- SET to some nondefault value
SET vacuum_cost_delay TO 40

Catalog Error: unrecognized configuration parameter "vacuum_cost_delay"

Did you mean: "access_mode"

SET datestyle = 'ISO, YMD'
ERROR: 
SET datestyle = 'ISO, YMD'

Catalog Error: unrecognized configuration parameter "datestyle"

Did you mean: "user"

SHOW vacuum_cost_delay
ERROR: 
SHOW vacuum_cost_delay

Catalog Error: Table with name vacuum_cost_delay does not exist!
Did you mean "VARCHAR_TBL"?

SHOW datestyle
ERROR: 
SHOW datestyle

Catalog Error: Table with name datestyle does not exist!
Did you mean "TEXT_TBL"?

SELECT '2006-08-13 12:34:56'::timestamptz
RESULT: 
	[(datetime.datetime(2006, 8, 13, 12, 34, 56, tzinfo=<DstTzInfo 'Europe/Zurich' CEST+2:00:00 DST>),)]


-- SET LOCAL has no effect outside of a transaction
SET LOCAL vacuum_cost_delay TO 50
ERROR: 

-- SET LOCAL has no effect outside of a transaction
SET LOCAL vacuum_cost_delay TO 50

Not implemented Error: SET LOCAL is not implemented.

SHOW vacuum_cost_delay
ERROR: 
SHOW vacuum_cost_delay

Catalog Error: Table with name vacuum_cost_delay does not exist!
Did you mean "VARCHAR_TBL"?

SET LOCAL datestyle = 'SQL'
ERROR: 
SET LOCAL datestyle = 'SQL'

Not implemented Error: SET LOCAL is not implemented.

SHOW datestyle
ERROR: 
SHOW datestyle

Catalog Error: Table with name datestyle does not exist!
Did you mean "TEXT_TBL"?

SELECT '2006-08-13 12:34:56'::timestamptz
RESULT: 
	[(datetime.datetime(2006, 8, 13, 12, 34, 56, tzinfo=<DstTzInfo 'Europe/Zurich' CEST+2:00:00 DST>),)]


-- SET LOCAL within a transaction that commits
BEGIN

SET LOCAL vacuum_cost_delay TO 50
ERROR: 
SET LOCAL vacuum_cost_delay TO 50

Not implemented Error: SET LOCAL is not implemented.

SHOW vacuum_cost_delay
ERROR: 
SHOW vacuum_cost_delay

Catalog Error: Table with name vacuum_cost_delay does not exist!
Did you mean "VARCHAR_TBL"?

SET LOCAL datestyle = 'SQL'
ERROR: 
SET LOCAL datestyle = 'SQL'

Not implemented Error: SET LOCAL is not implemented.

SHOW datestyle
ERROR: 
SHOW datestyle

Catalog Error: Table with name datestyle does not exist!
Did you mean "TEXT_TBL"?

SELECT '2006-08-13 12:34:56'::timestamptz
RESULT: 
	[(datetime.datetime(2006, 8, 13, 12, 34, 56, tzinfo=<DstTzInfo 'Europe/Zurich' CEST+2:00:00 DST>),)]

COMMIT

SHOW vacuum_cost_delay
ERROR: 
SHOW vacuum_cost_delay

Catalog Error: Table with name vacuum_cost_delay does not exist!
Did you mean "VARCHAR_TBL"?

SHOW datestyle
ERROR: 
SHOW datestyle

Catalog Error: Table with name datestyle does not exist!
Did you mean "TEXT_TBL"?

SELECT '2006-08-13 12:34:56'::timestamptz
RESULT: 
	[(datetime.datetime(2006, 8, 13, 12, 34, 56, tzinfo=<DstTzInfo 'Europe/Zurich' CEST+2:00:00 DST>),)]


-- SET should be reverted after ROLLBACK
BEGIN

SET vacuum_cost_delay TO 60
ERROR: 
SET vacuum_cost_delay TO 60

Catalog Error: unrecognized configuration parameter "vacuum_cost_delay"

Did you mean: "access_mode"

SHOW vacuum_cost_delay
ERROR: 
SHOW vacuum_cost_delay

Catalog Error: Table with name vacuum_cost_delay does not exist!
Did you mean "VARCHAR_TBL"?

SET datestyle = 'German'
ERROR: 
SET datestyle = 'German'

Catalog Error: unrecognized configuration parameter "datestyle"

Did you mean: "user"

SHOW datestyle
ERROR: 
SHOW datestyle

Catalog Error: Table with name datestyle does not exist!
Did you mean "TEXT_TBL"?

SELECT '2006-08-13 12:34:56'::timestamptz
RESULT: 
	[(datetime.datetime(2006, 8, 13, 12, 34, 56, tzinfo=<DstTzInfo 'Europe/Zurich' CEST+2:00:00 DST>),)]

ROLLBACK

SHOW vacuum_cost_delay
ERROR: 
SHOW vacuum_cost_delay

Catalog Error: Table with name vacuum_cost_delay does not exist!
Did you mean "VARCHAR_TBL"?

SHOW datestyle
ERROR: 
SHOW datestyle

Catalog Error: Table with name datestyle does not exist!
Did you mean "TEXT_TBL"?

SELECT '2006-08-13 12:34:56'::timestamptz
RESULT: 
	[(datetime.datetime(2006, 8, 13, 12, 34, 56, tzinfo=<DstTzInfo 'Europe/Zurich' CEST+2:00:00 DST>),)]


-- Some tests with subtransactions
BEGIN

SET vacuum_cost_delay TO 70
ERROR: 
SET vacuum_cost_delay TO 70

Catalog Error: unrecognized configuration parameter "vacuum_cost_delay"

Did you mean: "access_mode"

SET datestyle = 'MDY'
ERROR: 
SET datestyle = 'MDY'

Catalog Error: unrecognized configuration parameter "datestyle"

Did you mean: "user"

SHOW datestyle
ERROR: 
SHOW datestyle

Catalog Error: Table with name datestyle does not exist!
Did you mean "TEXT_TBL"?

SELECT '2006-08-13 12:34:56'::timestamptz
RESULT: 
	[(datetime.datetime(2006, 8, 13, 12, 34, 56, tzinfo=<DstTzInfo 'Europe/Zurich' CEST+2:00:00 DST>),)]

SAVEPOINT first_sp
ERROR: 
SAVEPOINT first_sp

Parser Error: syntax error at or near "SAVEPOINT"

SET vacuum_cost_delay TO 80.1
ERROR: 
SET vacuum_cost_delay TO 80.1

Catalog Error: unrecognized configuration parameter "vacuum_cost_delay"

Did you mean: "access_mode"

SHOW vacuum_cost_delay
ERROR: 
SHOW vacuum_cost_delay

Catalog Error: Table with name vacuum_cost_delay does not exist!
Did you mean "VARCHAR_TBL"?

SET datestyle = 'German, DMY'
ERROR: 
SET datestyle = 'German, DMY'

Catalog Error: unrecognized configuration parameter "datestyle"

Did you mean: "user"

SHOW datestyle
ERROR: 
SHOW datestyle

Catalog Error: Table with name datestyle does not exist!
Did you mean "TEXT_TBL"?

SELECT '2006-08-13 12:34:56'::timestamptz
RESULT: 
	[(datetime.datetime(2006, 8, 13, 12, 34, 56, tzinfo=<DstTzInfo 'Europe/Zurich' CEST+2:00:00 DST>),)]

ROLLBACK TO first_sp
ERROR: 
ROLLBACK TO first_sp

Parser Error: syntax error at or near "TO"

SHOW datestyle
ERROR: 
SHOW datestyle

Catalog Error: Table with name datestyle does not exist!
Did you mean "TEXT_TBL"?

SELECT '2006-08-13 12:34:56'::timestamptz
RESULT: 
	[(datetime.datetime(2006, 8, 13, 12, 34, 56, tzinfo=<DstTzInfo 'Europe/Zurich' CEST+2:00:00 DST>),)]

SAVEPOINT second_sp
ERROR: 
SAVEPOINT second_sp

Parser Error: syntax error at or near "SAVEPOINT"

SET vacuum_cost_delay TO '900us'
ERROR: 
SET vacuum_cost_delay TO '900us'

Catalog Error: unrecognized configuration parameter "vacuum_cost_delay"

Did you mean: "access_mode"

SET datestyle = 'SQL, YMD'
ERROR: 
SET datestyle = 'SQL, YMD'

Catalog Error: unrecognized configuration parameter "datestyle"

Did you mean: "user"

SHOW datestyle
ERROR: 
SHOW datestyle

Catalog Error: Table with name datestyle does not exist!
Did you mean "TEXT_TBL"?

SELECT '2006-08-13 12:34:56'::timestamptz
RESULT: 
	[(datetime.datetime(2006, 8, 13, 12, 34, 56, tzinfo=<DstTzInfo 'Europe/Zurich' CEST+2:00:00 DST>),)]

SAVEPOINT third_sp
ERROR: 
SAVEPOINT third_sp

Parser Error: syntax error at or near "SAVEPOINT"

SET vacuum_cost_delay TO 100
ERROR: 
SET vacuum_cost_delay TO 100

Catalog Error: unrecognized configuration parameter "vacuum_cost_delay"

Did you mean: "access_mode"

SHOW vacuum_cost_delay
ERROR: 
SHOW vacuum_cost_delay

Catalog Error: Table with name vacuum_cost_delay does not exist!
Did you mean "VARCHAR_TBL"?

SET datestyle = 'Postgres, MDY'
ERROR: 
SET datestyle = 'Postgres, MDY'

Catalog Error: unrecognized configuration parameter "datestyle"

Did you mean: "user"

SHOW datestyle
ERROR: 
SHOW datestyle

Catalog Error: Table with name datestyle does not exist!
Did you mean "TEXT_TBL"?

SELECT '2006-08-13 12:34:56'::timestamptz
RESULT: 
	[(datetime.datetime(2006, 8, 13, 12, 34, 56, tzinfo=<DstTzInfo 'Europe/Zurich' CEST+2:00:00 DST>),)]

ROLLBACK TO third_sp
ERROR: 
ROLLBACK TO third_sp

Parser Error: syntax error at or near "TO"

SHOW vacuum_cost_delay
ERROR: 
SHOW vacuum_cost_delay

Catalog Error: Table with name vacuum_cost_delay does not exist!
Did you mean "VARCHAR_TBL"?

SHOW datestyle
ERROR: 
SHOW datestyle

Catalog Error: Table with name datestyle does not exist!
Did you mean "TEXT_TBL"?

SELECT '2006-08-13 12:34:56'::timestamptz
RESULT: 
	[(datetime.datetime(2006, 8, 13, 12, 34, 56, tzinfo=<DstTzInfo 'Europe/Zurich' CEST+2:00:00 DST>),)]

ROLLBACK TO second_sp
ERROR: 
ROLLBACK TO second_sp

Parser Error: syntax error at or near "TO"

SHOW vacuum_cost_delay
ERROR: 
SHOW vacuum_cost_delay

Catalog Error: Table with name vacuum_cost_delay does not exist!
Did you mean "VARCHAR_TBL"?

SHOW datestyle
ERROR: 
SHOW datestyle

Catalog Error: Table with name datestyle does not exist!
Did you mean "TEXT_TBL"?

SELECT '2006-08-13 12:34:56'::timestamptz
RESULT: 
	[(datetime.datetime(2006, 8, 13, 12, 34, 56, tzinfo=<DstTzInfo 'Europe/Zurich' CEST+2:00:00 DST>),)]

ROLLBACK

SHOW vacuum_cost_delay
ERROR: 
SHOW vacuum_cost_delay

Catalog Error: Table with name vacuum_cost_delay does not exist!
Did you mean "VARCHAR_TBL"?

SHOW datestyle
ERROR: 
SHOW datestyle

Catalog Error: Table with name datestyle does not exist!
Did you mean "TEXT_TBL"?

SELECT '2006-08-13 12:34:56'::timestamptz
RESULT: 
	[(datetime.datetime(2006, 8, 13, 12, 34, 56, tzinfo=<DstTzInfo 'Europe/Zurich' CEST+2:00:00 DST>),)]


-- SET LOCAL with Savepoints
BEGIN

SHOW vacuum_cost_delay
ERROR: 
SHOW vacuum_cost_delay

Catalog Error: Table with name vacuum_cost_delay does not exist!
Did you mean "VARCHAR_TBL"?

SHOW datestyle
ERROR: 
SHOW datestyle

Catalog Error: Table with name datestyle does not exist!
Did you mean "TEXT_TBL"?

SELECT '2006-08-13 12:34:56'::timestamptz
RESULT: 
	[(datetime.datetime(2006, 8, 13, 12, 34, 56, tzinfo=<DstTzInfo 'Europe/Zurich' CEST+2:00:00 DST>),)]

SAVEPOINT sp
ERROR: 
SAVEPOINT sp

Parser Error: syntax error at or near "SAVEPOINT"

SET LOCAL vacuum_cost_delay TO 30
ERROR: 
SET LOCAL vacuum_cost_delay TO 30

Not implemented Error: SET LOCAL is not implemented.

SHOW vacuum_cost_delay
ERROR: 
SHOW vacuum_cost_delay

Catalog Error: Table with name vacuum_cost_delay does not exist!
Did you mean "VARCHAR_TBL"?

SET LOCAL datestyle = 'Postgres, MDY'
ERROR: 
SET LOCAL datestyle = 'Postgres, MDY'

Not implemented Error: SET LOCAL is not implemented.

SHOW datestyle
ERROR: 
SHOW datestyle

Catalog Error: Table with name datestyle does not exist!
Did you mean "TEXT_TBL"?

SELECT '2006-08-13 12:34:56'::timestamptz
RESULT: 
	[(datetime.datetime(2006, 8, 13, 12, 34, 56, tzinfo=<DstTzInfo 'Europe/Zurich' CEST+2:00:00 DST>),)]

ROLLBACK TO sp
ERROR: 
ROLLBACK TO sp

Parser Error: syntax error at or near "TO"

SHOW vacuum_cost_delay
ERROR: 
SHOW vacuum_cost_delay

Catalog Error: Table with name vacuum_cost_delay does not exist!
Did you mean "VARCHAR_TBL"?

SHOW datestyle
ERROR: 
SHOW datestyle

Catalog Error: Table with name datestyle does not exist!
Did you mean "TEXT_TBL"?

SELECT '2006-08-13 12:34:56'::timestamptz
RESULT: 
	[(datetime.datetime(2006, 8, 13, 12, 34, 56, tzinfo=<DstTzInfo 'Europe/Zurich' CEST+2:00:00 DST>),)]

ROLLBACK

SHOW vacuum_cost_delay
ERROR: 
SHOW vacuum_cost_delay

Catalog Error: Table with name vacuum_cost_delay does not exist!
Did you mean "VARCHAR_TBL"?

SHOW datestyle
ERROR: 
SHOW datestyle

Catalog Error: Table with name datestyle does not exist!
Did you mean "TEXT_TBL"?

SELECT '2006-08-13 12:34:56'::timestamptz
RESULT: 
	[(datetime.datetime(2006, 8, 13, 12, 34, 56, tzinfo=<DstTzInfo 'Europe/Zurich' CEST+2:00:00 DST>),)]


-- SET LOCAL persists through RELEASE (which was not true in 8.0-8.2)
BEGIN

SHOW vacuum_cost_delay
ERROR: 
SHOW vacuum_cost_delay

Catalog Error: Table with name vacuum_cost_delay does not exist!
Did you mean "VARCHAR_TBL"?

SHOW datestyle
ERROR: 
SHOW datestyle

Catalog Error: Table with name datestyle does not exist!
Did you mean "TEXT_TBL"?

SELECT '2006-08-13 12:34:56'::timestamptz
RESULT: 
	[(datetime.datetime(2006, 8, 13, 12, 34, 56, tzinfo=<DstTzInfo 'Europe/Zurich' CEST+2:00:00 DST>),)]

SAVEPOINT sp
ERROR: 
SAVEPOINT sp

Parser Error: syntax error at or near "SAVEPOINT"

SET LOCAL vacuum_cost_delay TO 30
ERROR: 
SET LOCAL vacuum_cost_delay TO 30

Not implemented Error: SET LOCAL is not implemented.

SHOW vacuum_cost_delay
ERROR: 
SHOW vacuum_cost_delay

Catalog Error: Table with name vacuum_cost_delay does not exist!
Did you mean "VARCHAR_TBL"?

SET LOCAL datestyle = 'Postgres, MDY'
ERROR: 
SET LOCAL datestyle = 'Postgres, MDY'

Not implemented Error: SET LOCAL is not implemented.

SHOW datestyle
ERROR: 
SHOW datestyle

Catalog Error: Table with name datestyle does not exist!
Did you mean "TEXT_TBL"?

SELECT '2006-08-13 12:34:56'::timestamptz
RESULT: 
	[(datetime.datetime(2006, 8, 13, 12, 34, 56, tzinfo=<DstTzInfo 'Europe/Zurich' CEST+2:00:00 DST>),)]

RELEASE SAVEPOINT sp
ERROR: 
RELEASE SAVEPOINT sp

Parser Error: syntax error at or near "RELEASE"

SHOW vacuum_cost_delay
ERROR: 
SHOW vacuum_cost_delay

Catalog Error: Table with name vacuum_cost_delay does not exist!
Did you mean "VARCHAR_TBL"?

SHOW datestyle
ERROR: 
SHOW datestyle

Catalog Error: Table with name datestyle does not exist!
Did you mean "TEXT_TBL"?

SELECT '2006-08-13 12:34:56'::timestamptz
RESULT: 
	[(datetime.datetime(2006, 8, 13, 12, 34, 56, tzinfo=<DstTzInfo 'Europe/Zurich' CEST+2:00:00 DST>),)]

ROLLBACK

SHOW vacuum_cost_delay
ERROR: 
SHOW vacuum_cost_delay

Catalog Error: Table with name vacuum_cost_delay does not exist!
Did you mean "VARCHAR_TBL"?

SHOW datestyle
ERROR: 
SHOW datestyle

Catalog Error: Table with name datestyle does not exist!
Did you mean "TEXT_TBL"?

SELECT '2006-08-13 12:34:56'::timestamptz
RESULT: 
	[(datetime.datetime(2006, 8, 13, 12, 34, 56, tzinfo=<DstTzInfo 'Europe/Zurich' CEST+2:00:00 DST>),)]


-- SET followed by SET LOCAL
BEGIN

SET vacuum_cost_delay TO 40
ERROR: 
SET vacuum_cost_delay TO 40

Catalog Error: unrecognized configuration parameter "vacuum_cost_delay"

Did you mean: "access_mode"

SET LOCAL vacuum_cost_delay TO 50
ERROR: 
SET LOCAL vacuum_cost_delay TO 50

Not implemented Error: SET LOCAL is not implemented.

SHOW vacuum_cost_delay
ERROR: 
SHOW vacuum_cost_delay

Catalog Error: Table with name vacuum_cost_delay does not exist!
Did you mean "VARCHAR_TBL"?

SET datestyle = 'ISO, DMY'
ERROR: 
SET datestyle = 'ISO, DMY'

Catalog Error: unrecognized configuration parameter "datestyle"

Did you mean: "user"

SET LOCAL datestyle = 'Postgres, MDY'
ERROR: 
SET LOCAL datestyle = 'Postgres, MDY'

Not implemented Error: SET LOCAL is not implemented.

SHOW datestyle
ERROR: 
SHOW datestyle

Catalog Error: Table with name datestyle does not exist!
Did you mean "TEXT_TBL"?

SELECT '2006-08-13 12:34:56'::timestamptz
RESULT: 
	[(datetime.datetime(2006, 8, 13, 12, 34, 56, tzinfo=<DstTzInfo 'Europe/Zurich' CEST+2:00:00 DST>),)]

COMMIT

SHOW vacuum_cost_delay
ERROR: 
SHOW vacuum_cost_delay

Catalog Error: Table with name vacuum_cost_delay does not exist!
Did you mean "VARCHAR_TBL"?

SHOW datestyle
ERROR: 
SHOW datestyle

Catalog Error: Table with name datestyle does not exist!
Did you mean "TEXT_TBL"?

SELECT '2006-08-13 12:34:56'::timestamptz
RESULT: 
	[(datetime.datetime(2006, 8, 13, 12, 34, 56, tzinfo=<DstTzInfo 'Europe/Zurich' CEST+2:00:00 DST>),)]


--
-- Test RESET.  We use datestyle because the reset value is forced by
-- pg_regress, so it doesn''t depend on the installation''s configuration.
--
SET datestyle = iso, ymd
ERROR: 

--
-- Test RESET.  We use datestyle because the reset value is forced by
-- pg_regress, so it doesn''t depend on the installation''s configuration.
--
SET datestyle = iso, ymd

Parser Error: SET needs a single scalar value parameter

SHOW datestyle
ERROR: 
SHOW datestyle

Catalog Error: Table with name datestyle does not exist!
Did you mean "TEXT_TBL"?

SELECT '2006-08-13 12:34:56'::timestamptz
RESULT: 
	[(datetime.datetime(2006, 8, 13, 12, 34, 56, tzinfo=<DstTzInfo 'Europe/Zurich' CEST+2:00:00 DST>),)]

RESET datestyle
ERROR: 
RESET datestyle

Catalog Error: unrecognized configuration parameter "datestyle"

Did you mean: "user"

SHOW datestyle
ERROR: 
SHOW datestyle

Catalog Error: Table with name datestyle does not exist!
Did you mean "TEXT_TBL"?

SELECT '2006-08-13 12:34:56'::timestamptz
RESULT: 
	[(datetime.datetime(2006, 8, 13, 12, 34, 56, tzinfo=<DstTzInfo 'Europe/Zurich' CEST+2:00:00 DST>),)]


-- Test some simple error cases
SET seq_page_cost TO 'NaN'
ERROR: 

-- Test some simple error cases
SET seq_page_cost TO 'NaN'

Catalog Error: unrecognized configuration parameter "seq_page_cost"

Did you mean: "search_path"

SET vacuum_cost_delay TO '10s'
ERROR: 
SET vacuum_cost_delay TO '10s'

Catalog Error: unrecognized configuration parameter "vacuum_cost_delay"

Did you mean: "access_mode"

SET no_such_variable TO 42
ERROR: 
SET no_such_variable TO 42

Catalog Error: unrecognized configuration parameter "no_such_variable"

Did you mean: "schema"


-- Test ''custom'' GUCs created on the fly (which aren''t really an
-- intended feature, but many people use them).
SHOW custom.my_guc
ERROR: 

-- Test ''custom'' GUCs created on the fly (which aren''t really an
-- intended feature, but many people use them).
SHOW custom.my_guc

Catalog Error: Table with name my_guc does not exist!
Did you mean "temp.pg_catalog.pg_am"?
  -- error, not known yet
SET custom.my_guc = 42
ERROR:   -- error, not known yet
SET custom.my_guc = 42

Catalog Error: unrecognized configuration parameter "custom.my_guc"

Did you mean: "custom_user_agent"

SHOW custom.my_guc
ERROR: 
SHOW custom.my_guc

Catalog Error: Table with name my_guc does not exist!
Did you mean "temp.pg_catalog.pg_am"?

RESET custom.my_guc
ERROR: 
RESET custom.my_guc

Catalog Error: unrecognized configuration parameter "custom.my_guc"

Did you mean: "custom_user_agent"
  -- this makes it go to empty, not become unknown again
SHOW custom.my_guc
ERROR:   -- this makes it go to empty, not become unknown again
SHOW custom.my_guc

Catalog Error: Table with name my_guc does not exist!
Did you mean "temp.pg_catalog.pg_am"?

SET custom.my.qualified.guc = 'foo'
ERROR: 
SET custom.my.qualified.guc = 'foo'

Catalog Error: unrecognized configuration parameter "custom.my.qualified.guc"

Did you mean: "user"

SHOW custom.my.qualified.guc
ERROR: 
SHOW custom.my.qualified.guc

Parser Error: Expected catalog.entry, schema.entry or entry: too many entries found

SET custom."bad-guc" = 42
ERROR: 
SET custom."bad-guc" = 42

Catalog Error: unrecognized configuration parameter "custom.bad-guc"

Did you mean: "custom_user_agent"
  -- disallowed because -c cannot set this name
SHOW custom."bad-guc"
ERROR:   -- disallowed because -c cannot set this name
SHOW custom."bad-guc"

Catalog Error: Table with name bad-guc does not exist!
Did you mean "temp.pg_catalog.pg_am"?

SET special."weird name" = 'foo'
ERROR: 
SET special."weird name" = 'foo'

Catalog Error: unrecognized configuration parameter "special.weird name"

Did you mean: "username"
  -- could be allowed, but we choose not to
SHOW special."weird name"
ERROR:   -- could be allowed, but we choose not to
SHOW special."weird name"

Catalog Error: Table with name weird name does not exist!
Did you mean "temp.pg_catalog.pg_am"?


-- Check what happens when you try to set a ''custom'' GUC within the
-- namespace of an extension.
SET plpgsql.extra_foo_warnings = true
ERROR: 

-- Check what happens when you try to set a ''custom'' GUC within the
-- namespace of an extension.
SET plpgsql.extra_foo_warnings = true

Catalog Error: unrecognized configuration parameter "plpgsql.extra_foo_warnings"

Did you mean: "user"
  -- allowed if plpgsql is not loaded yet
LOAD 'plpgsql'
ERROR:   -- allowed if plpgsql is not loaded yet
LOAD 'plpgsql'

IO Error: Extension "/home/postgres/.duckdb/extensions/v0.10.2/linux_amd64_gcc4/plpgsql.duckdb_extension" not found.

Candidate extensions: "mysql"
  -- this will throw a warning and delete the variable
SET plpgsql.extra_foo_warnings = true
ERROR:   -- this will throw a warning and delete the variable
SET plpgsql.extra_foo_warnings = true

Catalog Error: unrecognized configuration parameter "plpgsql.extra_foo_warnings"

Did you mean: "user"
  -- now, it''s an error
SHOW plpgsql.extra_foo_warnings
ERROR:   -- now, it''s an error
SHOW plpgsql.extra_foo_warnings

Catalog Error: Table with name extra_foo_warnings does not exist!
Did you mean "temp.pg_catalog.pg_settings"?


--
-- Test DISCARD TEMP
--
CREATE TEMP TABLE reset_test ( data text ) ON COMMIT DELETE ROWS
ERROR: 

--
-- Test DISCARD TEMP
--
CREATE TEMP TABLE reset_test ( data text ) ON COMMIT DELETE ROWS

Not implemented Error: Only ON COMMIT PRESERVE ROWS is supported

SELECT relname FROM pg_class WHERE relname = 'reset_test'
RESULT: 
	[]

DISCARD TEMP
ERROR: 
DISCARD TEMP

Parser Error: syntax error at or near "DISCARD"

SELECT relname FROM pg_class WHERE relname = 'reset_test'
RESULT: 
	[]


--
-- Test DISCARD ALL
--

-- do changes
DECLARE foo CURSOR WITH HOLD FOR SELECT 1
ERROR: 

--
-- Test DISCARD ALL
--

-- do changes
DECLARE foo CURSOR WITH HOLD FOR SELECT 1

Parser Error: syntax error at or near "DECLARE"

PREPARE foo AS SELECT 1

LISTEN foo_event
ERROR: 
LISTEN foo_event

Parser Error: syntax error at or near "LISTEN"

SET vacuum_cost_delay = 13
ERROR: 
SET vacuum_cost_delay = 13

Catalog Error: unrecognized configuration parameter "vacuum_cost_delay"

Did you mean: "access_mode"

CREATE TEMP TABLE tmp_foo (data text) ON COMMIT DELETE ROWS
ERROR: 
CREATE TEMP TABLE tmp_foo (data text) ON COMMIT DELETE ROWS

Not implemented Error: Only ON COMMIT PRESERVE ROWS is supported

CREATE ROLE regress_guc_user
ERROR: 
CREATE ROLE regress_guc_user

Parser Error: syntax error at or near "ROLE"

SET SESSION AUTHORIZATION regress_guc_user
ERROR: 
SET SESSION AUTHORIZATION regress_guc_user

Parser Error: syntax error at or near "AUTHORIZATION"

-- look changes
SELECT pg_listening_channels()
ERROR: 
-- look changes
SELECT pg_listening_channels()

Catalog Error: Scalar Function with name pg_listening_channels does not exist!
Did you mean "list_has"?

SELECT name FROM pg_prepared_statements
ERROR: 
SELECT name FROM pg_prepared_statements

Catalog Error: Table with name pg_prepared_statements does not exist!
Did you mean "pg_am"?

SELECT name FROM pg_cursors
ERROR: 
SELECT name FROM pg_cursors

Catalog Error: Table with name pg_cursors does not exist!
Did you mean "pg_class"?

SHOW vacuum_cost_delay
ERROR: 
SHOW vacuum_cost_delay

Catalog Error: Table with name vacuum_cost_delay does not exist!
Did you mean "VARCHAR_TBL"?

SELECT relname from pg_class where relname = 'tmp_foo'
RESULT: 
	[]

SELECT current_user = 'regress_guc_user'
RESULT: 
	[(False,)]

-- discard everything
DISCARD ALL
ERROR: 
-- discard everything
DISCARD ALL

Parser Error: syntax error at or near "DISCARD"

-- look again
SELECT pg_listening_channels()
ERROR: 
-- look again
SELECT pg_listening_channels()

Catalog Error: Scalar Function with name pg_listening_channels does not exist!
Did you mean "list_has"?

SELECT name FROM pg_prepared_statements
ERROR: 
SELECT name FROM pg_prepared_statements

Catalog Error: Table with name pg_prepared_statements does not exist!
Did you mean "pg_am"?

SELECT name FROM pg_cursors
ERROR: 
SELECT name FROM pg_cursors

Catalog Error: Table with name pg_cursors does not exist!
Did you mean "pg_class"?

SHOW vacuum_cost_delay
ERROR: 
SHOW vacuum_cost_delay

Catalog Error: Table with name vacuum_cost_delay does not exist!
Did you mean "VARCHAR_TBL"?

SELECT relname from pg_class where relname = 'tmp_foo'
RESULT: 
	[]

SELECT current_user = 'regress_guc_user'
RESULT: 
	[(False,)]

DROP ROLE regress_guc_user
ERROR: 
DROP ROLE regress_guc_user

Parser Error: syntax error at or near "ROLE"


--
-- search_path should react to changes in pg_namespace
--

set search_path = foo, public, not_there_initially
ERROR: 

--
-- search_path should react to changes in pg_namespace
--

set search_path = foo, public, not_there_initially

Parser Error: SET needs a single scalar value parameter

select current_schemas(false)
RESULT: 
	[(['main'],)]

create schema not_there_initially

select current_schemas(false)
RESULT: 
	[(['main'],)]

drop schema not_there_initially

select current_schemas(false)
RESULT: 
	[(['main'],)]

reset search_path


--
-- Tests for function-local GUC settings
--

set work_mem = '3MB'
ERROR: 

--
-- Tests for function-local GUC settings
--

set work_mem = '3MB'

Catalog Error: unrecognized configuration parameter "work_mem"

Did you mean: "worker_threads"


create function report_guc(text) returns text as
$$ select current_setting($1) $$ language sql
set work_mem = '1MB'
ERROR: 

create function report_guc(text) returns text as
$$ select current_setting($1) $$ language sql
set work_mem = '1MB'

Parser Error: syntax error at or near "returns"


select report_guc('work_mem'), current_setting('work_mem')
ERROR: 

select report_guc('work_mem'), current_setting('work_mem')

Catalog Error: Scalar Function with name report_guc does not exist!
Did you mean "epoch"?


alter function report_guc(text) set work_mem = '2MB'
ERROR: 

alter function report_guc(text) set work_mem = '2MB'

Parser Error: syntax error at or near "function"


select report_guc('work_mem'), current_setting('work_mem')
ERROR: 

select report_guc('work_mem'), current_setting('work_mem')

Catalog Error: Scalar Function with name report_guc does not exist!
Did you mean "epoch"?


alter function report_guc(text) reset all
ERROR: 

alter function report_guc(text) reset all

Parser Error: syntax error at or near "function"


select report_guc('work_mem'), current_setting('work_mem')
ERROR: 

select report_guc('work_mem'), current_setting('work_mem')

Catalog Error: Scalar Function with name report_guc does not exist!
Did you mean "epoch"?


-- SET LOCAL is restricted by a function SET option
create or replace function myfunc(int) returns text as $$
begin
  set local work_mem = '2MB';
  return current_setting('work_mem');
end $$
language plpgsql
set work_mem = '1MB'
ERROR: 

-- SET LOCAL is restricted by a function SET option
create or replace function myfunc(int) returns text as $$
begin
  set local work_mem = '2MB';
  return current_setting('work_mem');
end $$
language plpgsql
set work_mem = '1MB'

Parser Error: syntax error at or near "returns"


select myfunc(0), current_setting('work_mem')
ERROR: 

select myfunc(0), current_setting('work_mem')

Catalog Error: Scalar Function with name myfunc does not exist!
Did you mean "min"?


alter function myfunc(int) reset all
ERROR: 

alter function myfunc(int) reset all

Parser Error: syntax error at or near "function"


select myfunc(0), current_setting('work_mem')
ERROR: 

select myfunc(0), current_setting('work_mem')

Catalog Error: Scalar Function with name myfunc does not exist!
Did you mean "min"?


set work_mem = '3MB'
ERROR: 

set work_mem = '3MB'

Catalog Error: unrecognized configuration parameter "work_mem"

Did you mean: "worker_threads"


-- but SET isn''t
create or replace function myfunc(int) returns text as $$
begin
  set work_mem = '2MB';
  return current_setting('work_mem');
end $$
language plpgsql
set work_mem = '1MB'
ERROR: 

-- but SET isn''t
create or replace function myfunc(int) returns text as $$
begin
  set work_mem = '2MB';
  return current_setting('work_mem');
end $$
language plpgsql
set work_mem = '1MB'

Parser Error: syntax error at or near "returns"


select myfunc(0), current_setting('work_mem')
ERROR: 

select myfunc(0), current_setting('work_mem')

Catalog Error: Scalar Function with name myfunc does not exist!
Did you mean "min"?


set work_mem = '3MB'
ERROR: 

set work_mem = '3MB'

Catalog Error: unrecognized configuration parameter "work_mem"

Did you mean: "worker_threads"


-- it should roll back on error, though
create or replace function myfunc(int) returns text as $$
begin
  set work_mem = '2MB';
  perform 1/$1;
  return current_setting('work_mem');
end $$
language plpgsql
set work_mem = '1MB'
ERROR: 

-- it should roll back on error, though
create or replace function myfunc(int) returns text as $$
begin
  set work_mem = '2MB';
  perform 1/$1;
  return current_setting('work_mem');
end $$
language plpgsql
set work_mem = '1MB'

Parser Error: syntax error at or near "returns"


select myfunc(0)
ERROR: 

select myfunc(0)

Catalog Error: Scalar Function with name myfunc does not exist!
Did you mean "min"?

select current_setting('work_mem')
ERROR: 
select current_setting('work_mem')

Catalog Error: unrecognized configuration parameter "work_mem"

Did you mean: "worker_threads"

select myfunc(1), current_setting('work_mem')
ERROR: 
select myfunc(1), current_setting('work_mem')

Catalog Error: Scalar Function with name myfunc does not exist!
Did you mean "min"?


-- check current_setting()''s behavior with invalid setting name

select current_setting('nosuch.setting')
ERROR: 

-- check current_setting()''s behavior with invalid setting name

select current_setting('nosuch.setting')

Catalog Error: unrecognized configuration parameter "nosuch.setting"

Did you mean: "user"
  -- FAIL
select current_setting('nosuch.setting', false)
ERROR:   -- FAIL
select current_setting('nosuch.setting', false)

Binder Error: No function matches the given name and argument types 'current_setting(STRING_LITERAL, BOOLEAN)'. You might need to add explicit type casts.
	Candidate functions:
	current_setting(VARCHAR) -> ANY

  -- FAIL
select current_setting('nosuch.setting', true) is null
ERROR:   -- FAIL
select current_setting('nosuch.setting', true) is null

Binder Error: No function matches the given name and argument types 'current_setting(STRING_LITERAL, BOOLEAN)'. You might need to add explicit type casts.
	Candidate functions:
	current_setting(VARCHAR) -> ANY



-- after this, all three cases should yield ''nada''
set nosuch.setting = 'nada'
ERROR: 

-- after this, all three cases should yield ''nada''
set nosuch.setting = 'nada'

Catalog Error: unrecognized configuration parameter "nosuch.setting"

Did you mean: "user"


select current_setting('nosuch.setting')
ERROR: 

select current_setting('nosuch.setting')

Catalog Error: unrecognized configuration parameter "nosuch.setting"

Did you mean: "user"

select current_setting('nosuch.setting', false)
ERROR: 
select current_setting('nosuch.setting', false)

Binder Error: No function matches the given name and argument types 'current_setting(STRING_LITERAL, BOOLEAN)'. You might need to add explicit type casts.
	Candidate functions:
	current_setting(VARCHAR) -> ANY


select current_setting('nosuch.setting', true)
ERROR: 
select current_setting('nosuch.setting', true)

Binder Error: No function matches the given name and argument types 'current_setting(STRING_LITERAL, BOOLEAN)'. You might need to add explicit type casts.
	Candidate functions:
	current_setting(VARCHAR) -> ANY



-- Normally, CREATE FUNCTION should complain about invalid values in
-- function SET options /* REPLACED */, but not if check_function_bodies is off,
-- because that creates ordering hazards for pg_dump

create function func_with_bad_set() returns int as $$ select 1 $$
language sql
set default_text_search_config = no_such_config
ERROR: 

-- Normally, CREATE FUNCTION should complain about invalid values in
-- function SET options /* REPLACED */, but not if check_function_bodies is off,
-- because that creates ordering hazards for pg_dump

create function func_with_bad_set() returns int as $$ select 1 $$
language sql
set default_text_search_config = no_such_config

Parser Error: syntax error at or near "returns"


set check_function_bodies = off
ERROR: 

set check_function_bodies = off

Catalog Error: unrecognized configuration parameter "check_function_bodies"

Did you mean: "default_order"


create function func_with_bad_set() returns int as $$ select 1 $$
language sql
set default_text_search_config = no_such_config
ERROR: 

create function func_with_bad_set() returns int as $$ select 1 $$
language sql
set default_text_search_config = no_such_config

Parser Error: syntax error at or near "returns"


select func_with_bad_set()
ERROR: 

select func_with_bad_set()

Catalog Error: Scalar Function with name func_with_bad_set does not exist!
Did you mean "to_base"?


reset check_function_bodies
ERROR: 

reset check_function_bodies

Catalog Error: unrecognized configuration parameter "check_function_bodies"

Did you mean: "default_order"


set default_with_oids to f
ERROR: 

set default_with_oids to f

Catalog Error: unrecognized configuration parameter "default_with_oids"

Did you mean: "default_order"

-- Should not allow to set it to true.
set default_with_oids to t
ERROR: 
-- Should not allow to set it to true.
set default_with_oids to t

Catalog Error: unrecognized configuration parameter "default_with_oids"

Did you mean: "default_order"


-- Test GUC categories and flag patterns
SELECT pg_settings_get_flags(NULL)
ERROR: 

-- Test GUC categories and flag patterns
SELECT pg_settings_get_flags(NULL)

Catalog Error: Scalar Function with name pg_settings_get_flags does not exist!
Did you mean "string_agg"?

SELECT pg_settings_get_flags('does_not_exist')
ERROR: 
SELECT pg_settings_get_flags('does_not_exist')

Catalog Error: Scalar Function with name pg_settings_get_flags does not exist!
Did you mean "string_agg"?

CREATE TABLE tab_settings_flags AS SELECT name, category,
    'EXPLAIN'          = ANY(flags) AS explain,
    'NO_RESET'         = ANY(flags) AS no_reset,
    'NO_RESET_ALL'     = ANY(flags) AS no_reset_all,
    'NOT_IN_SAMPLE'    = ANY(flags) AS not_in_sample,
    'RUNTIME_COMPUTED' = ANY(flags) AS runtime_computed
  FROM pg_show_all_settings() AS psas,
    pg_settings_get_flags(psas.name) AS flags
ERROR: 
CREATE TABLE tab_settings_flags AS SELECT name, category,
    'EXPLAIN'          = ANY(flags) AS explain,
    'NO_RESET'         = ANY(flags) AS no_reset,
    'NO_RESET_ALL'     = ANY(flags) AS no_reset_all,
    'NOT_IN_SAMPLE'    = ANY(flags) AS not_in_sample,
    'RUNTIME_COMPUTED' = ANY(flags) AS runtime_computed
  FROM pg_show_all_settings() AS psas,
    pg_settings_get_flags(psas.name) AS flags

Catalog Error: Table Function with name pg_show_all_settings does not exist!
Did you mean "duckdb_settings"?
LINE 8:   FROM pg_show_all_settings() AS psas,
               ^


-- Developer GUCs should be flagged with GUC_NOT_IN_SAMPLE:
SELECT name FROM tab_settings_flags
  WHERE category = 'Developer Options' AND NOT not_in_sample
  ORDER BY 1
ERROR: 

-- Developer GUCs should be flagged with GUC_NOT_IN_SAMPLE:
SELECT name FROM tab_settings_flags
  WHERE category = 'Developer Options' AND NOT not_in_sample
  ORDER BY 1

Catalog Error: Table with name tab_settings_flags does not exist!
Did you mean "pg_settings"?

-- Most query-tuning GUCs are flagged as valid for EXPLAIN.
-- default_statistics_target is an exception.
SELECT name FROM tab_settings_flags
  WHERE category ~ '^Query Tuning' AND NOT explain
  ORDER BY 1
ERROR: 
-- Most query-tuning GUCs are flagged as valid for EXPLAIN.
-- default_statistics_target is an exception.
SELECT name FROM tab_settings_flags
  WHERE category ~ '^Query Tuning' AND NOT explain
  ORDER BY 1

Catalog Error: Table with name tab_settings_flags does not exist!
Did you mean "pg_settings"?

-- Runtime-computed GUCs should be part of the preset category.
SELECT name FROM tab_settings_flags
  WHERE NOT category = 'Preset Options' AND runtime_computed
  ORDER BY 1
ERROR: 
-- Runtime-computed GUCs should be part of the preset category.
SELECT name FROM tab_settings_flags
  WHERE NOT category = 'Preset Options' AND runtime_computed
  ORDER BY 1

Catalog Error: Table with name tab_settings_flags does not exist!
Did you mean "pg_settings"?

-- Preset GUCs are flagged as NOT_IN_SAMPLE.
SELECT name FROM tab_settings_flags
  WHERE category = 'Preset Options' AND NOT not_in_sample
  ORDER BY 1
ERROR: 
-- Preset GUCs are flagged as NOT_IN_SAMPLE.
SELECT name FROM tab_settings_flags
  WHERE category = 'Preset Options' AND NOT not_in_sample
  ORDER BY 1

Catalog Error: Table with name tab_settings_flags does not exist!
Did you mean "pg_settings"?

-- NO_RESET implies NO_RESET_ALL.
SELECT name FROM tab_settings_flags
  WHERE no_reset AND NOT no_reset_all
  ORDER BY 1
ERROR: 
-- NO_RESET implies NO_RESET_ALL.
SELECT name FROM tab_settings_flags
  WHERE no_reset AND NOT no_reset_all
  ORDER BY 1

Catalog Error: Table with name tab_settings_flags does not exist!
Did you mean "pg_settings"?

DROP TABLE tab_settings_flags
ERROR: 
DROP TABLE tab_settings_flags

Catalog Error: Table with name tab_settings_flags does not exist!
Did you mean "pg_settings"?


