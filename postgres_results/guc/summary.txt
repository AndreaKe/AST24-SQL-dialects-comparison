Guest DBMS identified: postgres
-----------
QUERY:
-- pg_regress should ensure that this default value applies /* REPLACED */ , however
-- we can/* REPLACED */ ''t rely on any specific default value of vacuum_cost_delay
SHOW datestyle;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:


-- SET to some nondefault value
SET vacuum_cost_delay TO 40;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SET datestyle = 'ISO, YMD';
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SHOW vacuum_cost_delay;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SHOW datestyle;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SELECT '2006-08-13 12:34:56'::timestamptz;
RESULT: [duckdb: SAME, mysql: ERROR]

-----------
QUERY:


-- SET LOCAL has no effect outside of a transaction
SET LOCAL vacuum_cost_delay TO 50;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SHOW vacuum_cost_delay;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SET LOCAL datestyle = 'SQL';
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SHOW datestyle;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SELECT '2006-08-13 12:34:56'::timestamptz;
RESULT: [duckdb: SAME, mysql: ERROR]

-----------
QUERY:


-- SET LOCAL within a transaction that commits
BEGIN;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

SET LOCAL vacuum_cost_delay TO 50;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SHOW vacuum_cost_delay;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SET LOCAL datestyle = 'SQL';
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SHOW datestyle;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SELECT '2006-08-13 12:34:56'::timestamptz;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:

COMMIT;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

SHOW vacuum_cost_delay;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SHOW datestyle;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SELECT '2006-08-13 12:34:56'::timestamptz;
RESULT: [duckdb: SAME, mysql: ERROR]

-----------
QUERY:


-- SET should be reverted after ROLLBACK
BEGIN;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

SET vacuum_cost_delay TO 60;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SHOW vacuum_cost_delay;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SET datestyle = 'German';
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SHOW datestyle;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SELECT '2006-08-13 12:34:56'::timestamptz;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:

ROLLBACK;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

SHOW vacuum_cost_delay;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SHOW datestyle;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SELECT '2006-08-13 12:34:56'::timestamptz;
RESULT: [duckdb: SAME, mysql: ERROR]

-----------
QUERY:


-- Some tests with subtransactions
BEGIN;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

SET vacuum_cost_delay TO 70;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SET datestyle = 'MDY';
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SHOW datestyle;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SELECT '2006-08-13 12:34:56'::timestamptz;
RESULT: [duckdb: SAME, mysql: ERROR]

-----------
QUERY:

SAVEPOINT first_sp;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:

SET vacuum_cost_delay TO 80.1;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SHOW vacuum_cost_delay;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SET datestyle = 'German, DMY';
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SHOW datestyle;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SELECT '2006-08-13 12:34:56'::timestamptz;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:

ROLLBACK TO first_sp;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:

SHOW datestyle;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SELECT '2006-08-13 12:34:56'::timestamptz;
RESULT: [duckdb: SAME, mysql: ERROR]

-----------
QUERY:

SAVEPOINT second_sp;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:

SET vacuum_cost_delay TO '900us';
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SET datestyle = 'SQL, YMD';
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SHOW datestyle;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SELECT '2006-08-13 12:34:56'::timestamptz;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:

SAVEPOINT third_sp;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:

SET vacuum_cost_delay TO 100;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SHOW vacuum_cost_delay;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SET datestyle = 'Postgres, MDY';
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SHOW datestyle;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SELECT '2006-08-13 12:34:56'::timestamptz;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:

ROLLBACK TO third_sp;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:

SHOW vacuum_cost_delay;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SHOW datestyle;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SELECT '2006-08-13 12:34:56'::timestamptz;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:

ROLLBACK TO second_sp;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:

SHOW vacuum_cost_delay;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SHOW datestyle;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SELECT '2006-08-13 12:34:56'::timestamptz;
RESULT: [duckdb: SAME, mysql: ERROR]

-----------
QUERY:

ROLLBACK;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

SHOW vacuum_cost_delay;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SHOW datestyle;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SELECT '2006-08-13 12:34:56'::timestamptz;
RESULT: [duckdb: SAME, mysql: ERROR]

-----------
QUERY:


-- SET LOCAL with Savepoints
BEGIN;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

SHOW vacuum_cost_delay;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SHOW datestyle;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SELECT '2006-08-13 12:34:56'::timestamptz;
RESULT: [duckdb: SAME, mysql: ERROR]

-----------
QUERY:

SAVEPOINT sp;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:

SET LOCAL vacuum_cost_delay TO 30;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SHOW vacuum_cost_delay;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SET LOCAL datestyle = 'Postgres, MDY';
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SHOW datestyle;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SELECT '2006-08-13 12:34:56'::timestamptz;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:

ROLLBACK TO sp;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:

SHOW vacuum_cost_delay;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SHOW datestyle;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SELECT '2006-08-13 12:34:56'::timestamptz;
RESULT: [duckdb: SAME, mysql: ERROR]

-----------
QUERY:

ROLLBACK;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

SHOW vacuum_cost_delay;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SHOW datestyle;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SELECT '2006-08-13 12:34:56'::timestamptz;
RESULT: [duckdb: SAME, mysql: ERROR]

-----------
QUERY:


-- SET LOCAL persists through RELEASE (which was not true in 8.0-8.2)
BEGIN;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

SHOW vacuum_cost_delay;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SHOW datestyle;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SELECT '2006-08-13 12:34:56'::timestamptz;
RESULT: [duckdb: SAME, mysql: ERROR]

-----------
QUERY:

SAVEPOINT sp;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:

SET LOCAL vacuum_cost_delay TO 30;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SHOW vacuum_cost_delay;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SET LOCAL datestyle = 'Postgres, MDY';
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SHOW datestyle;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SELECT '2006-08-13 12:34:56'::timestamptz;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:

RELEASE SAVEPOINT sp;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:

SHOW vacuum_cost_delay;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SHOW datestyle;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SELECT '2006-08-13 12:34:56'::timestamptz;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:

ROLLBACK;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

SHOW vacuum_cost_delay;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SHOW datestyle;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SELECT '2006-08-13 12:34:56'::timestamptz;
RESULT: [duckdb: SAME, mysql: ERROR]

-----------
QUERY:


-- SET followed by SET LOCAL
BEGIN;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

SET vacuum_cost_delay TO 40;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SET LOCAL vacuum_cost_delay TO 50;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SHOW vacuum_cost_delay;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SET datestyle = 'ISO, DMY';
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SET LOCAL datestyle = 'Postgres, MDY';
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SHOW datestyle;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SELECT '2006-08-13 12:34:56'::timestamptz;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:

COMMIT;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

SHOW vacuum_cost_delay;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SHOW datestyle;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SELECT '2006-08-13 12:34:56'::timestamptz;
RESULT: [duckdb: SAME, mysql: ERROR]

-----------
QUERY:


--
-- Test RESET.  We use datestyle because the reset value is forced by
-- pg_regress, so it doesn/* REPLACED */ ''t depend on the installation/* REPLACED */ ''s configuration.
--
SET datestyle = iso, ymd;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SHOW datestyle;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SELECT '2006-08-13 12:34:56'::timestamptz;
RESULT: [duckdb: SAME, mysql: ERROR]

-----------
QUERY:

RESET datestyle;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SHOW datestyle;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SELECT '2006-08-13 12:34:56'::timestamptz;
RESULT: [duckdb: SAME, mysql: ERROR]

-----------
QUERY:


-- Test some simple error cases
SET seq_page_cost TO 'NaN';
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

SET vacuum_cost_delay TO '10s';
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

SET no_such_variable TO 42;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:


-- Test /* REPLACED */ ''custom/* REPLACED */ '' GUCs created on the fly (which aren/* REPLACED */ ''t really an
-- intended feature, but many people use them).
SHOW custom.my_guc;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:
  -- error, not known yet
SET custom.my_guc = 42;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SHOW custom.my_guc;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

RESET custom.my_guc;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:
  -- this makes it go to empty, not become unknown again
SHOW custom.my_guc;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SET custom.my.qualified.guc = 'foo';
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SHOW custom.my.qualified.guc;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SET custom."bad-guc" = 42;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:
  -- disallowed because -c cannot set this name
SHOW custom."bad-guc";
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

SET special."weird name" = 'foo';
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:
  -- could be allowed, but we choose not to
SHOW special."weird name";
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:


-- Check what happens when you try to set a /* REPLACED */ ''custom/* REPLACED */ '' GUC within the
-- namespace of an extension.
SET plpgsql.extra_foo_warnings = true;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:
  -- allowed if plpgsql is not loaded yet
LOAD 'plpgsql';
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:
  -- this will throw a warning and delete the variable
SET plpgsql.extra_foo_warnings = true;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:
  -- now, it/* REPLACED */ ''s an error
SHOW plpgsql.extra_foo_warnings;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:


--
-- Test DISCARD TEMP
--
CREATE TEMP TABLE reset_test ( data text ) ON COMMIT DELETE ROWS;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SELECT relname FROM pg_class WHERE relname = 'reset_test';
RESULT: [duckdb: DIFFERENT, mysql: ERROR]

-----------
QUERY:

DISCARD TEMP;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SELECT relname FROM pg_class WHERE relname = 'reset_test';
RESULT: [duckdb: SAME, mysql: ERROR]

-----------
QUERY:


--
-- Test DISCARD ALL
--

-- do changes
DECLARE foo CURSOR WITH HOLD FOR SELECT 1;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

PREPARE foo AS SELECT 1;
RESULT: [duckdb: SAME, mysql: ERROR]

-----------
QUERY:

LISTEN foo_event;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SET vacuum_cost_delay = 13;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

CREATE TEMP TABLE tmp_foo (data text) ON COMMIT DELETE ROWS;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

CREATE ROLE regress_guc_user;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:

SET SESSION AUTHORIZATION regress_guc_user;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

-- look changes
SELECT pg_listening_channels();
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SELECT name FROM pg_prepared_statements;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SELECT name FROM pg_cursors;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SHOW vacuum_cost_delay;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SELECT relname from pg_class where relname = 'tmp_foo';
RESULT: [duckdb: DIFFERENT, mysql: ERROR]

-----------
QUERY:

SELECT current_user = 'regress_guc_user';
RESULT: [duckdb: DIFFERENT, mysql: DIFFERENT]

-----------
QUERY:

-- discard everything
DISCARD ALL;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

-- look again
SELECT pg_listening_channels();
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SELECT name FROM pg_prepared_statements;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SELECT name FROM pg_cursors;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SHOW vacuum_cost_delay;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SELECT relname from pg_class where relname = 'tmp_foo';
RESULT: [duckdb: SAME, mysql: ERROR]

-----------
QUERY:

SELECT current_user = 'regress_guc_user';
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

DROP ROLE regress_guc_user;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:


--
-- search_path should react to changes in pg_namespace
--

set search_path = foo, public, not_there_initially;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

select current_schemas(false);
RESULT: [duckdb: DIFFERENT, mysql: ERROR]

-----------
QUERY:

create schema not_there_initially;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

select current_schemas(false);
RESULT: [duckdb: DIFFERENT, mysql: ERROR]

-----------
QUERY:

drop schema not_there_initially;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

select current_schemas(false);
RESULT: [duckdb: DIFFERENT, mysql: ERROR]

-----------
QUERY:

reset search_path;
RESULT: [duckdb: SAME, mysql: ERROR]

-----------
QUERY:


--
-- Tests for function-local GUC settings
--

set work_mem = '3MB';
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:


create function report_guc(text) returns text as
$$ select current_setting($1) $$ language sql
set work_mem = '1MB';
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:


select report_guc('work_mem'), current_setting('work_mem');
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:


alter function report_guc(text) set work_mem = '2MB';
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:


select report_guc('work_mem'), current_setting('work_mem');
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:


alter function report_guc(text) reset all;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:


select report_guc('work_mem'), current_setting('work_mem');
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:


-- SET LOCAL is restricted by a function SET option
create or replace function myfunc(int) returns text as $$
begin
  set local work_mem = '2MB';
  return current_setting('work_mem');
end $$
language plpgsql
set work_mem = '1MB';
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:


select myfunc(0), current_setting('work_mem');
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:


alter function myfunc(int) reset all;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:


select myfunc(0), current_setting('work_mem');
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:


set work_mem = '3MB';
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:


-- but SET isn/* REPLACED */ ''t
create or replace function myfunc(int) returns text as $$
begin
  set work_mem = '2MB';
  return current_setting('work_mem');
end $$
language plpgsql
set work_mem = '1MB';
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:


select myfunc(0), current_setting('work_mem');
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:


set work_mem = '3MB';
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:


-- it should roll back on error, though
create or replace function myfunc(int) returns text as $$
begin
  set work_mem = '2MB';
  perform 1/$1;
  return current_setting('work_mem');
end $$
language plpgsql
set work_mem = '1MB';
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:


select myfunc(0);
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

select current_setting('work_mem');
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

select myfunc(1), current_setting('work_mem');
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:


-- check current_setting()/* REPLACED */ ''s behavior with invalid setting name

select current_setting('nosuch.setting');
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:
  -- FAIL
select current_setting('nosuch.setting', false);
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:
  -- FAIL
select current_setting('nosuch.setting', true) is null;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:


-- after this, all three cases should yield /* REPLACED */ ''nada/* REPLACED */ ''
set nosuch.setting = 'nada';
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:


select current_setting('nosuch.setting');
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

select current_setting('nosuch.setting', false);
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

select current_setting('nosuch.setting', true);
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:


-- Normally, CREATE FUNCTION should complain about invalid values in
-- function SET options /* REPLACED */ , but not if check_function_bodies is off,
-- because that creates ordering hazards for pg_dump

create function func_with_bad_set() returns int as $$ select 1 $$
language sql
set default_text_search_config = no_such_config;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:


set check_function_bodies = off;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:


create function func_with_bad_set() returns int as $$ select 1 $$
language sql
set default_text_search_config = no_such_config;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:


select func_with_bad_set();
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:


reset check_function_bodies;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:


set default_with_oids to f;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

-- Should not allow to set it to true.
set default_with_oids to t;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:


-- Test GUC categories and flag patterns
SELECT pg_settings_get_flags(NULL);
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SELECT pg_settings_get_flags('does_not_exist');
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

CREATE TABLE tab_settings_flags AS SELECT name, category,
    'EXPLAIN'          = ANY(flags) AS explain,
    'NO_RESET'         = ANY(flags) AS no_reset,
    'NO_RESET_ALL'     = ANY(flags) AS no_reset_all,
    'NOT_IN_SAMPLE'    = ANY(flags) AS not_in_sample,
    'RUNTIME_COMPUTED' = ANY(flags) AS runtime_computed
  FROM pg_show_all_settings() AS psas,
    pg_settings_get_flags(psas.name) AS flags;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:


-- Developer GUCs should be flagged with GUC_NOT_IN_SAMPLE:
SELECT name FROM tab_settings_flags
  WHERE category = 'Developer Options' AND NOT not_in_sample
  ORDER BY 1;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

-- Most query-tuning GUCs are flagged as valid for EXPLAIN.
-- default_statistics_target is an exception.
SELECT name FROM tab_settings_flags
  WHERE category ~ '^Query Tuning' AND NOT explain
  ORDER BY 1;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

-- Runtime-computed GUCs should be part of the preset category.
SELECT name FROM tab_settings_flags
  WHERE NOT category = 'Preset Options' AND runtime_computed
  ORDER BY 1;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

-- Preset GUCs are flagged as NOT_IN_SAMPLE.
SELECT name FROM tab_settings_flags
  WHERE category = 'Preset Options' AND NOT not_in_sample
  ORDER BY 1;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

-- NO_RESET implies NO_RESET_ALL.
SELECT name FROM tab_settings_flags
  WHERE no_reset AND NOT no_reset_all
  ORDER BY 1;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

DROP TABLE tab_settings_flags;
RESULT: [duckdb: ERROR, mysql: ERROR]


=========================================
Summary for test case guc/test.sql of postgres
=========================================

=================
Results for duckdb
SAME: 52 queries, which is 24.30%
DIFFERENT: 6 queries, which is 2.80%
ERROR: 156 queries, which is 72.90%

=================
Results for mysql
SAME: 54 queries, which is 25.23%
DIFFERENT: 1 queries, which is 0.47%
ERROR: 159 queries, which is 74.30%
