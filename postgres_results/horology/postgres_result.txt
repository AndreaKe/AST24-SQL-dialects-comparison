
-----------
QUERY:
--
-- HOROLOGY
--
SET DateStyle = 'Postgres, MDY';
RESULT:
	[]

-----------
QUERY:


SHOW TimeZone;
RESULT:
	[('Europe/Zurich',)]

-----------
QUERY:
  -- Many of these tests depend on the prevailing setting

--
-- Test various input formats
--
SELECT timestamp with time zone '20011227 040506+08';
RESULT:
	ERROR - month must be in 1..12

-----------
QUERY:

SELECT timestamp with time zone '20011227 040506-08';
RESULT:
	ERROR - year -1 is out of range

-----------
QUERY:

SELECT timestamp with time zone '20011227 040506.789+08';
RESULT:
	ERROR - month must be in 1..12

-----------
QUERY:

SELECT timestamp with time zone '20011227 040506.789-08';
RESULT:
	ERROR - year -1 is out of range

-----------
QUERY:

SELECT timestamp with time zone '20011227T040506+08';
RESULT:
	ERROR - month must be in 1..12

-----------
QUERY:

SELECT timestamp with time zone '20011227T040506-08';
RESULT:
	ERROR - year -1 is out of range

-----------
QUERY:

SELECT timestamp with time zone '20011227T040506.789+08';
RESULT:
	ERROR - month must be in 1..12

-----------
QUERY:

SELECT timestamp with time zone '20011227T040506.789-08';
RESULT:
	ERROR - year -1 is out of range

-----------
QUERY:

SELECT timestamp with time zone '2001-12-27 04:05:06.789-08';
RESULT:
	ERROR - year -1 is out of range

-----------
QUERY:

SELECT timestamp with time zone '2001.12.27 04:05:06.789-08';
RESULT:
	ERROR - year -1 is out of range

-----------
QUERY:

SELECT timestamp with time zone '2001/12/27 04:05:06.789-08';
RESULT:
	ERROR - year -1 is out of range

-----------
QUERY:

SELECT timestamp with time zone '12/27/2001 04:05:06.789-08';
RESULT:
	ERROR - year -1 is out of range

-----------
QUERY:

SELECT timestamp with time zone '2001-12-27 04:05:06.789 MET DST';
RESULT:
	ERROR - year -1 is out of range

-----------
QUERY:

SELECT timestamp with time zone '2001-12-27 allballs';
RESULT:
	ERROR - year -1 is out of range

-----------
QUERY:

-- should fail in mdy mode:
SELECT timestamp with time zone '27/12/2001 04:05:06.789-08';
RESULT:
	ERROR - date/time field value out of range: "27/12/2001 04:05:06.789-08"
LINE 3: SELECT timestamp with time zone '27/12/2001 04:05:06.789-08'...
                                        ^
HINT:  Perhaps you need a different "datestyle" setting.


-----------
QUERY:

set datestyle to dmy;
RESULT:
	[]

-----------
QUERY:

SELECT timestamp with time zone '27/12/2001 04:05:06.789-08';
RESULT:
	ERROR - year -1 is out of range

-----------
QUERY:

reset datestyle;
RESULT:
	[]

-----------
QUERY:

SELECT timestamp with time zone 'J2452271+08';
RESULT:
	[(datetime.datetime(2001, 12, 26, 17, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),)]

-----------
QUERY:

SELECT timestamp with time zone 'J2452271-08';
RESULT:
	[(datetime.datetime(2001, 12, 27, 9, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),)]

-----------
QUERY:

SELECT timestamp with time zone 'J2452271.5+08';
RESULT:
	[(datetime.datetime(2001, 12, 27, 5, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),)]

-----------
QUERY:

SELECT timestamp with time zone 'J2452271.5-08';
RESULT:
	[(datetime.datetime(2001, 12, 27, 21, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),)]

-----------
QUERY:

SELECT timestamp with time zone 'J2452271 04:05:06+08';
RESULT:
	[(datetime.datetime(2001, 12, 26, 21, 5, 6, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),)]

-----------
QUERY:

SELECT timestamp with time zone 'J2452271 04:05:06-08';
RESULT:
	[(datetime.datetime(2001, 12, 27, 13, 5, 6, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),)]

-----------
QUERY:

SELECT timestamp with time zone 'J2452271T040506+08';
RESULT:
	[(datetime.datetime(2001, 12, 26, 21, 5, 6, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),)]

-----------
QUERY:

SELECT timestamp with time zone 'J2452271T040506-08';
RESULT:
	[(datetime.datetime(2001, 12, 27, 13, 5, 6, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),)]

-----------
QUERY:

SELECT timestamp with time zone 'J2452271T040506.789+08';
RESULT:
	[(datetime.datetime(2001, 12, 26, 21, 5, 6, 789000, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),)]

-----------
QUERY:

SELECT timestamp with time zone 'J2452271T040506.789-08';
RESULT:
	[(datetime.datetime(2001, 12, 27, 13, 5, 6, 789000, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),)]

-----------
QUERY:

-- German/European-style dates with periods as delimiters
SELECT timestamp with time zone '12.27.2001 04:05:06.789+08';
RESULT:
	ERROR - date/time field value out of range: "12.27.2001 04:05:06.789+08"
LINE 3: SELECT timestamp with time zone '12.27.2001 04:05:06.789+08'...
                                        ^
HINT:  Perhaps you need a different "datestyle" setting.


-----------
QUERY:

SELECT timestamp with time zone '12.27.2001 04:05:06.789-08';
RESULT:
	ERROR - date/time field value out of range: "12.27.2001 04:05:06.789-08"
LINE 2: SELECT timestamp with time zone '12.27.2001 04:05:06.789-08'...
                                        ^
HINT:  Perhaps you need a different "datestyle" setting.


-----------
QUERY:

SET DateStyle = 'German';
RESULT:
	[]

-----------
QUERY:

SELECT timestamp with time zone '27.12.2001 04:05:06.789+08';
RESULT:
	ERROR - year -1713785295 is out of range

-----------
QUERY:

SELECT timestamp with time zone '27.12.2001 04:05:06.789-08';
RESULT:
	ERROR - year -1613785295 is out of range

-----------
QUERY:

SET DateStyle = 'ISO';
RESULT:
	[]

-----------
QUERY:

-- As of 7.4, allow time without time zone having a time zone specified
SELECT time without time zone '040506.789+08';
RESULT:
	[(datetime.time(4, 5, 6, 789000),)]

-----------
QUERY:

SELECT time without time zone '040506.789-08';
RESULT:
	[(datetime.time(4, 5, 6, 789000),)]

-----------
QUERY:

SELECT time without time zone 'T040506.789+08';
RESULT:
	[(datetime.time(4, 5, 6, 789000),)]

-----------
QUERY:

SELECT time without time zone 'T040506.789-08';
RESULT:
	[(datetime.time(4, 5, 6, 789000),)]

-----------
QUERY:

SELECT time with time zone '040506.789+08';
RESULT:
	[(datetime.time(4, 5, 6, 789000, tzinfo=datetime.timezone(datetime.timedelta(seconds=28800))),)]

-----------
QUERY:

SELECT time with time zone '040506.789-08';
RESULT:
	[(datetime.time(4, 5, 6, 789000, tzinfo=datetime.timezone(datetime.timedelta(days=-1, seconds=57600))),)]

-----------
QUERY:

SELECT time with time zone 'T040506.789+08';
RESULT:
	[(datetime.time(4, 5, 6, 789000, tzinfo=datetime.timezone(datetime.timedelta(seconds=28800))),)]

-----------
QUERY:

SELECT time with time zone 'T040506.789-08';
RESULT:
	[(datetime.time(4, 5, 6, 789000, tzinfo=datetime.timezone(datetime.timedelta(days=-1, seconds=57600))),)]

-----------
QUERY:

SELECT time with time zone 'T040506.789 +08';
RESULT:
	[(datetime.time(4, 5, 6, 789000, tzinfo=datetime.timezone(datetime.timedelta(seconds=28800))),)]

-----------
QUERY:

SELECT time with time zone 'T040506.789 -08';
RESULT:
	[(datetime.time(4, 5, 6, 789000, tzinfo=datetime.timezone(datetime.timedelta(days=-1, seconds=57600))),)]

-----------
QUERY:

-- time with time zone should accept a date for DST resolution purposes
SELECT time with time zone 'T040506.789 America/Los_Angeles';
RESULT:
	ERROR - invalid input syntax for type time with time zone: "T040506.789 America/Los_Angeles"
LINE 3: SELECT time with time zone 'T040506.789 America/Los_Angeles'...
                                   ^


-----------
QUERY:

SELECT time with time zone '2001-12-27 T040506.789 America/Los_Angeles';
RESULT:
	[(datetime.time(4, 5, 6, 789000, tzinfo=datetime.timezone(datetime.timedelta(days=-1, seconds=57600))),)]

-----------
QUERY:

SELECT time with time zone 'J2452271 T040506.789 America/Los_Angeles';
RESULT:
	[(datetime.time(4, 5, 6, 789000, tzinfo=datetime.timezone(datetime.timedelta(days=-1, seconds=57600))),)]

-----------
QUERY:

SET DateStyle = 'Postgres, MDY';
RESULT:
	[]

-----------
QUERY:

-- Check Julian dates BC
SELECT date 'J1520447' AS "Confucius' Birthday";
RESULT:
	ERROR - year -9 is out of range

-----------
QUERY:

SELECT date 'J0' AS "Julian Epoch";
RESULT:
	ERROR - year -11 is out of range

-----------
QUERY:


-- test error on dangling Julian units
SELECT date '1995-08-06  J J J';
RESULT:
	ERROR - invalid input syntax for type date: "1995-08-06  J J J"
LINE 4: SELECT date '1995-08-06  J J J';
                    ^


-----------
QUERY:

SELECT date 'J J 1520447';
RESULT:
	ERROR - invalid input syntax for type date: "J J 1520447"
LINE 2: SELECT date 'J J 1520447';
                    ^


-----------
QUERY:


-- We used to accept this input style, but it was based on a misreading
-- of ISO8601, and it was never documented anyway
SELECT timestamp with time zone 'Y2001M12D27H04M05S06.789+08';
RESULT:
	ERROR - invalid input syntax for type timestamp with time zone: "Y2001M12D27H04M05S06.789+08"
LINE 5: SELECT timestamp with time zone 'Y2001M12D27H04M05S06.789+08...
                                        ^


-----------
QUERY:

SELECT timestamp with time zone 'Y2001M12D27H04MM05S06.789-08';
RESULT:
	ERROR - invalid input syntax for type timestamp with time zone: "Y2001M12D27H04MM05S06.789-08"
LINE 2: SELECT timestamp with time zone 'Y2001M12D27H04MM05S06.789-0...
                                        ^


-----------
QUERY:


-- conflicting fields should throw errors
SELECT date '1995-08-06 epoch';
RESULT:
	ERROR - invalid input syntax for type date: "1995-08-06 epoch"
LINE 4: SELECT date '1995-08-06 epoch';
                    ^


-----------
QUERY:

SELECT date '1995-08-06 infinity';
RESULT:
	ERROR - invalid input syntax for type date: "1995-08-06 infinity"
LINE 2: SELECT date '1995-08-06 infinity';
                    ^


-----------
QUERY:

SELECT date '1995-08-06 -infinity';
RESULT:
	ERROR - invalid input syntax for type date: "1995-08-06 -infinity"
LINE 2: SELECT date '1995-08-06 -infinity';
                    ^


-----------
QUERY:

SELECT date 'today infinity';
RESULT:
	ERROR - invalid input syntax for type date: "today infinity"
LINE 2: SELECT date 'today infinity';
                    ^


-----------
QUERY:

SELECT date '-infinity infinity';
RESULT:
	ERROR - invalid input syntax for type date: "-infinity infinity"
LINE 2: SELECT date '-infinity infinity';
                    ^


-----------
QUERY:

SELECT timestamp '1995-08-06 epoch';
RESULT:
	ERROR - invalid input syntax for type timestamp: "1995-08-06 epoch"
LINE 2: SELECT timestamp '1995-08-06 epoch';
                         ^


-----------
QUERY:

SELECT timestamp '1995-08-06 infinity';
RESULT:
	ERROR - invalid input syntax for type timestamp: "1995-08-06 infinity"
LINE 2: SELECT timestamp '1995-08-06 infinity';
                         ^


-----------
QUERY:

SELECT timestamp '1995-08-06 -infinity';
RESULT:
	ERROR - invalid input syntax for type timestamp: "1995-08-06 -infinity"
LINE 2: SELECT timestamp '1995-08-06 -infinity';
                         ^


-----------
QUERY:

SELECT timestamp 'epoch 01:01:01';
RESULT:
	ERROR - invalid input syntax for type timestamp: "epoch 01:01:01"
LINE 2: SELECT timestamp 'epoch 01:01:01';
                         ^


-----------
QUERY:

SELECT timestamp 'infinity 01:01:01';
RESULT:
	ERROR - invalid input syntax for type timestamp: "infinity 01:01:01"
LINE 2: SELECT timestamp 'infinity 01:01:01';
                         ^


-----------
QUERY:

SELECT timestamp '-infinity 01:01:01';
RESULT:
	ERROR - invalid input syntax for type timestamp: "-infinity 01:01:01"
LINE 2: SELECT timestamp '-infinity 01:01:01';
                         ^


-----------
QUERY:

SELECT timestamp 'now epoch';
RESULT:
	ERROR - invalid input syntax for type timestamp: "now epoch"
LINE 2: SELECT timestamp 'now epoch';
                         ^


-----------
QUERY:

SELECT timestamp '-infinity infinity';
RESULT:
	ERROR - invalid input syntax for type timestamp: "-infinity infinity"
LINE 2: SELECT timestamp '-infinity infinity';
                         ^


-----------
QUERY:

SELECT timestamptz '1995-08-06 epoch';
RESULT:
	ERROR - invalid input syntax for type timestamp with time zone: "1995-08-06 epoch"
LINE 2: SELECT timestamptz '1995-08-06 epoch';
                           ^


-----------
QUERY:

SELECT timestamptz '1995-08-06 infinity';
RESULT:
	ERROR - invalid input syntax for type timestamp with time zone: "1995-08-06 infinity"
LINE 2: SELECT timestamptz '1995-08-06 infinity';
                           ^


-----------
QUERY:

SELECT timestamptz '1995-08-06 -infinity';
RESULT:
	ERROR - invalid input syntax for type timestamp with time zone: "1995-08-06 -infinity"
LINE 2: SELECT timestamptz '1995-08-06 -infinity';
                           ^


-----------
QUERY:

SELECT timestamptz 'epoch 01:01:01';
RESULT:
	ERROR - invalid input syntax for type timestamp with time zone: "epoch 01:01:01"
LINE 2: SELECT timestamptz 'epoch 01:01:01';
                           ^


-----------
QUERY:

SELECT timestamptz 'infinity 01:01:01';
RESULT:
	ERROR - invalid input syntax for type timestamp with time zone: "infinity 01:01:01"
LINE 2: SELECT timestamptz 'infinity 01:01:01';
                           ^


-----------
QUERY:

SELECT timestamptz '-infinity 01:01:01';
RESULT:
	ERROR - invalid input syntax for type timestamp with time zone: "-infinity 01:01:01"
LINE 2: SELECT timestamptz '-infinity 01:01:01';
                           ^


-----------
QUERY:

SELECT timestamptz 'now epoch';
RESULT:
	ERROR - invalid input syntax for type timestamp with time zone: "now epoch"
LINE 2: SELECT timestamptz 'now epoch';
                           ^


-----------
QUERY:

SELECT timestamptz '-infinity infinity';
RESULT:
	ERROR - invalid input syntax for type timestamp with time zone: "-infinity infinity"
LINE 2: SELECT timestamptz '-infinity infinity';
                           ^


-----------
QUERY:


--
-- date, time arithmetic
--

SELECT date '1981-02-03' + time '04:05:06' AS "Date + Time";
RESULT:
	ERROR - year -1 is out of range

-----------
QUERY:

SELECT date '1991-02-03' + time with time zone '04:05:06 PST' AS "Date + Time PST";
RESULT:
	ERROR - month must be in 1..12

-----------
QUERY:

SELECT date '2001-02-03' + time with time zone '04:05:06 UTC' AS "Date + Time UTC";
RESULT:
	ERROR - month must be in 1..12

-----------
QUERY:

SELECT date '1991-02-03' + interval '2 years' AS "Add Two Years";
RESULT:
	ERROR - month must be in 1..12

-----------
QUERY:

SELECT date '2001-12-13' - interval '2 years' AS "Subtract Two Years";
RESULT:
	ERROR - month must be in 1..12

-----------
QUERY:

-- subtract time from date should not make sense /* REPLACED */ , use interval instead
SELECT date '1991-02-03' - time '04:05:06' AS "Subtract Time";
RESULT:
	ERROR - month must be in 1..12

-----------
QUERY:

SELECT date '1991-02-03' - time with time zone '04:05:06 UTC' AS "Subtract Time UTC";
RESULT:
	ERROR - operator does not exist: date - time with time zone
LINE 2: SELECT date '1991-02-03' - time with time zone '04:05:06 UTC...
                                 ^
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.


-----------
QUERY:


--
-- timestamp, interval arithmetic
--

SELECT timestamp without time zone '1996-03-01' - interval '1 second' AS "Feb 29";
RESULT:
	ERROR - year -1 is out of range

-----------
QUERY:

SELECT timestamp without time zone '1999-03-01' - interval '1 second' AS "Feb 28";
RESULT:
	ERROR - month must be in 1..12

-----------
QUERY:

SELECT timestamp without time zone '2000-03-01' - interval '1 second' AS "Feb 29";
RESULT:
	ERROR - year -1 is out of range

-----------
QUERY:

SELECT timestamp without time zone '1999-12-01' + interval '1 month - 1 second' AS "Dec 31";
RESULT:
	ERROR - month must be in 1..12

-----------
QUERY:

SELECT timestamp without time zone 'Jan 1, 4713 BC' + interval '106000000 days' AS "Feb 23, 285506";
RESULT:
	ERROR - month must be in 1..12

-----------
QUERY:

SELECT timestamp without time zone 'Jan 1, 4713 BC' + interval '107000000 days' AS "Jan 20, 288244";
RESULT:
	ERROR - month must be in 1..12

-----------
QUERY:

SELECT timestamp without time zone 'Jan 1, 4713 BC' + interval '109203489 days' AS "Dec 31, 294276";
RESULT:
	ERROR - month must be in 1..12

-----------
QUERY:

SELECT timestamp without time zone '2000-01-01' - interval '2483590 days' AS "out of range";
RESULT:
	ERROR - timestamp out of range


-----------
QUERY:

SELECT timestamp without time zone '12/31/294276' - timestamp without time zone '12/23/1999' AS "106751991 Days";
RESULT:
	[(datetime.timedelta(days=106751991),)]

-----------
QUERY:


-- Shorthand values
-- Not directly usable for regression testing since these are not constants.
-- So, just try to test parser and hope for the best - thomas 97/04/26
SELECT (timestamp without time zone 'today' = (timestamp without time zone 'yesterday' + interval '1 day')) as "True";
RESULT:
	[(True,)]

-----------
QUERY:

SELECT (timestamp without time zone 'today' = (timestamp without time zone 'tomorrow' - interval '1 day')) as "True";
RESULT:
	[(True,)]

-----------
QUERY:

SELECT (timestamp without time zone 'today 10:30' = (timestamp without time zone 'yesterday' + interval '1 day 10 hr 30 min')) as "True";
RESULT:
	[(True,)]

-----------
QUERY:

SELECT (timestamp without time zone '10:30 today' = (timestamp without time zone 'yesterday' + interval '1 day 10 hr 30 min')) as "True";
RESULT:
	[(True,)]

-----------
QUERY:

SELECT (timestamp without time zone 'tomorrow' = (timestamp without time zone 'yesterday' + interval '2 days')) as "True";
RESULT:
	[(True,)]

-----------
QUERY:

SELECT (timestamp without time zone 'tomorrow 16:00:00' = (timestamp without time zone 'today' + interval '1 day 16 hours')) as "True";
RESULT:
	[(True,)]

-----------
QUERY:

SELECT (timestamp without time zone '16:00:00 tomorrow' = (timestamp without time zone 'today' + interval '1 day 16 hours')) as "True";
RESULT:
	[(True,)]

-----------
QUERY:

SELECT (timestamp without time zone 'yesterday 12:34:56' = (timestamp without time zone 'tomorrow' - interval '2 days - 12:34:56')) as "True";
RESULT:
	[(True,)]

-----------
QUERY:

SELECT (timestamp without time zone '12:34:56 yesterday' = (timestamp without time zone 'tomorrow' - interval '2 days - 12:34:56')) as "True";
RESULT:
	[(True,)]

-----------
QUERY:

SELECT (timestamp without time zone 'tomorrow' > 'now') as "True";
RESULT:
	[(True,)]

-----------
QUERY:


-- Convert from date and time to timestamp
-- This test used to be timestamp(date,time) but no longer allowed by grammar
-- to enable support for SQL99 timestamp type syntax.
SELECT date '1994-01-01' + time '11:00' AS "Jan_01_1994_11am";
RESULT:
	ERROR - month must be in 1..12

-----------
QUERY:

SELECT date '1994-01-01' + time '10:00' AS "Jan_01_1994_10am";
RESULT:
	ERROR - month must be in 1..12

-----------
QUERY:

SELECT date '1994-01-01' + timetz '11:00-5' AS "Jan_01_1994_8am";
RESULT:
	ERROR - month must be in 1..12

-----------
QUERY:

SELECT timestamptz(date '1994-01-01', time with time zone '11:00-5') AS "Jan_01_1994_8am";
RESULT:
	ERROR - month must be in 1..12

-----------
QUERY:


SELECT d1 + interval '1 year' AS one_year FROM TIMESTAMP_TBL;
RESULT:
	ERROR - month must be in 1..12

-----------
QUERY:

SELECT d1 - interval '1 year' AS one_year FROM TIMESTAMP_TBL;
RESULT:
	ERROR - month must be in 1..12

-----------
QUERY:


SELECT timestamp with time zone '1996-03-01' - interval '1 second' AS "Feb 29";
RESULT:
	ERROR - year -1 is out of range

-----------
QUERY:

SELECT timestamp with time zone '1999-03-01' - interval '1 second' AS "Feb 28";
RESULT:
	ERROR - month must be in 1..12

-----------
QUERY:

SELECT timestamp with time zone '2000-03-01' - interval '1 second' AS "Feb 29";
RESULT:
	ERROR - year -1 is out of range

-----------
QUERY:

SELECT timestamp with time zone '1999-12-01' + interval '1 month - 1 second' AS "Dec 31";
RESULT:
	ERROR - month must be in 1..12

-----------
QUERY:

SELECT timestamp with time zone '2000-01-01' - interval '2483590 days' AS "out of range";
RESULT:
	ERROR - timestamp out of range


-----------
QUERY:


SELECT (timestamp with time zone 'today' = (timestamp with time zone 'yesterday' + interval '1 day')) as "True";
RESULT:
	[(True,)]

-----------
QUERY:

SELECT (timestamp with time zone 'today' = (timestamp with time zone 'tomorrow' - interval '1 day')) as "True";
RESULT:
	[(True,)]

-----------
QUERY:

SELECT (timestamp with time zone 'tomorrow' = (timestamp with time zone 'yesterday' + interval '2 days')) as "True";
RESULT:
	[(True,)]

-----------
QUERY:

SELECT (timestamp with time zone 'tomorrow' > 'now') as "True";
RESULT:
	[(True,)]

-----------
QUERY:


-- timestamp with time zone, interval arithmetic around DST change
-- (just for fun, let/* REPLACED */ ''s use an intentionally nonstandard POSIX zone spec)
SET TIME ZONE 'CST7CDT,M4.1.0,M10.5.0';
RESULT:
	[]

-----------
QUERY:

SELECT timestamp with time zone '2005-04-02 12:00-07' + interval '1 day' as "Apr 3, 12:00";
RESULT:
	ERROR - month must be in 1..12

-----------
QUERY:

SELECT timestamp with time zone '2005-04-02 12:00-07' + interval '24 hours' as "Apr 3, 13:00";
RESULT:
	ERROR - month must be in 1..12

-----------
QUERY:

SELECT timestamp with time zone '2005-04-03 12:00-06' - interval '1 day' as "Apr 2, 12:00";
RESULT:
	ERROR - month must be in 1..12

-----------
QUERY:

SELECT timestamp with time zone '2005-04-03 12:00-06' - interval '24 hours' as "Apr 2, 11:00";
RESULT:
	ERROR - month must be in 1..12

-----------
QUERY:

RESET TIME ZONE;
RESULT:
	[]

-----------
QUERY:



SELECT timestamptz(date '1994-01-01', time '11:00') AS "Jan_01_1994_10am";
RESULT:
	ERROR - month must be in 1..12

-----------
QUERY:

SELECT timestamptz(date '1994-01-01', time '10:00') AS "Jan_01_1994_9am";
RESULT:
	ERROR - month must be in 1..12

-----------
QUERY:

SELECT timestamptz(date '1994-01-01', time with time zone '11:00-8') AS "Jan_01_1994_11am";
RESULT:
	ERROR - month must be in 1..12

-----------
QUERY:

SELECT timestamptz(date '1994-01-01', time with time zone '10:00-8') AS "Jan_01_1994_10am";
RESULT:
	ERROR - month must be in 1..12

-----------
QUERY:

SELECT timestamptz(date '1994-01-01', time with time zone '11:00-5') AS "Jan_01_1994_8am";
RESULT:
	ERROR - month must be in 1..12

-----------
QUERY:


SELECT d1 + interval '1 year' AS one_year FROM TIMESTAMPTZ_TBL;
RESULT:
	ERROR - month must be in 1..12

-----------
QUERY:

SELECT d1 - interval '1 year' AS one_year FROM TIMESTAMPTZ_TBL;
RESULT:
	ERROR - month must be in 1..12

-----------
QUERY:


--
-- time, interval arithmetic
--

SELECT CAST(time '01:02' AS interval) AS "+01:02";
RESULT:
	[(datetime.timedelta(days=360),)]

-----------
QUERY:

SELECT CAST(interval '02:03' AS time) AS "02:03:00";
RESULT:
	[(datetime.time(2, 3),)]

-----------
QUERY:

SELECT CAST(interval '-02:03' AS time) AS "21:57:00";
RESULT:
	[(datetime.time(21, 57),)]

-----------
QUERY:

SELECT CAST(interval '-9223372022400000000 us' AS time) AS "00:00:00";
RESULT:
	[(datetime.time(0, 0),)]

-----------
QUERY:

SELECT time '01:30' + interval '02:01' AS "03:31:00";
RESULT:
	[(datetime.time(3, 31),)]

-----------
QUERY:

SELECT time '01:30' - interval '02:01' AS "23:29:00";
RESULT:
	[(datetime.time(23, 29),)]

-----------
QUERY:

SELECT time '02:30' + interval '36:01' AS "14:31:00";
RESULT:
	[(datetime.time(14, 31),)]

-----------
QUERY:

SELECT time '03:30' + interval '1 month 04:01' AS "07:31:00";
RESULT:
	[(datetime.time(7, 31),)]

-----------
QUERY:

SELECT CAST(time with time zone '01:02-08' AS interval) AS "+00:01";
RESULT:
	ERROR - cannot cast type time with time zone to interval
LINE 2: SELECT CAST(time with time zone '01:02-08' AS interval) AS "...
               ^


-----------
QUERY:

SELECT CAST(interval '02:03' AS time with time zone) AS "02:03:00-08";
RESULT:
	ERROR - cannot cast type interval to time with time zone
LINE 2: SELECT CAST(interval '02:03' AS time with time zone) AS "02:...
               ^


-----------
QUERY:

SELECT time with time zone '01:30-08' - interval '02:01' AS "23:29:00-08";
RESULT:
	[(datetime.time(23, 29, tzinfo=datetime.timezone(datetime.timedelta(days=-1, seconds=57600))),)]

-----------
QUERY:

SELECT time with time zone '02:30-08' + interval '36:01' AS "14:31:00-08";
RESULT:
	[(datetime.time(14, 31, tzinfo=datetime.timezone(datetime.timedelta(days=-1, seconds=57600))),)]

-----------
QUERY:


-- These two tests cannot be used because they default to current timezone,
-- which may be either -08 or -07 depending on the time of year.
-- SELECT time with time zone /* REPLACED */ ''01:30/* REPLACED */ '' + interval /* REPLACED */ ''02:01/* REPLACED */ '' AS /* REPLACED */ ''03:31:00-08/* REPLACED */ '' /* REPLACED */ ,
-- SELECT time with time zone /* REPLACED */ ''03:30/* REPLACED */ '' + interval /* REPLACED */ ''1 month 04:01/* REPLACED */ '' AS /* REPLACED */ ''07:31:00-08/* REPLACED */ '' /* REPLACED */ ,
-- Try the following two tests instead, as a poor substitute

SELECT CAST(CAST(date 'today' + time with time zone '05:30'
            + interval '02:01' AS time with time zone) AS time) AS "07:31:00";
RESULT:
	[(datetime.time(7, 31),)]

-----------
QUERY:


SELECT CAST(cast(date 'today' + time with time zone '03:30'
  + interval '1 month 04:01' as timestamp without time zone) AS time) AS "07:31:00";
RESULT:
	[(datetime.time(7, 31),)]

-----------
QUERY:


SELECT t.d1 AS t, i.f1 AS i, t.d1 + i.f1 AS "add", t.d1 - i.f1 AS "subtract"
  FROM TIMESTAMP_TBL t, INTERVAL_TBL i
  WHERE t.d1 BETWEEN '1990-01-01' AND '2001-01-01'
    AND i.f1 BETWEEN '00:00' AND '23:00'
  ORDER BY 1,2;
RESULT:
	ERROR - month must be in 1..12

-----------
QUERY:


SELECT t.f1 AS t, i.f1 AS i, t.f1 + i.f1 AS "add", t.f1 - i.f1 AS "subtract"
  FROM TIME_TBL t, INTERVAL_TBL i
  WHERE isfinite(i.f1)
  ORDER BY 1,2;
RESULT:
	ERROR - invalid literal for int() with base 10: '@ 14 secs ago'

-----------
QUERY:


SELECT t.f1 AS t, i.f1 AS i, t.f1 + i.f1 AS "add", t.f1 - i.f1 AS "subtract"
  FROM TIMETZ_TBL t, INTERVAL_TBL i
  WHERE isfinite(i.f1)
  ORDER BY 1,2;
RESULT:
	ERROR - invalid literal for int() with base 10: '@ 14 secs ago'

-----------
QUERY:


-- SQL9x OVERLAPS operator
-- test with time zone
SELECT (timestamp with time zone '2000-11-27', timestamp with time zone '2000-11-28')
  OVERLAPS (timestamp with time zone '2000-11-27 12:00', timestamp with time zone '2000-11-30') AS "True";
RESULT:
	[(True,)]

-----------
QUERY:


SELECT (timestamp with time zone '2000-11-26', timestamp with time zone '2000-11-27')
  OVERLAPS (timestamp with time zone '2000-11-27 12:00', timestamp with time zone '2000-11-30') AS "False";
RESULT:
	[(False,)]

-----------
QUERY:


SELECT (timestamp with time zone '2000-11-27', timestamp with time zone '2000-11-28')
  OVERLAPS (timestamp with time zone '2000-11-27 12:00', interval '1 day') AS "True";
RESULT:
	[(True,)]

-----------
QUERY:


SELECT (timestamp with time zone '2000-11-27', interval '12 hours')
  OVERLAPS (timestamp with time zone '2000-11-27 12:00', timestamp with time zone '2000-11-30') AS "False";
RESULT:
	[(False,)]

-----------
QUERY:


SELECT (timestamp with time zone '2000-11-27', interval '12 hours')
  OVERLAPS (timestamp with time zone '2000-11-27', interval '12 hours') AS "True";
RESULT:
	[(True,)]

-----------
QUERY:


SELECT (timestamp with time zone '2000-11-27', interval '12 hours')
  OVERLAPS (timestamp with time zone '2000-11-27 12:00', interval '12 hours') AS "False";
RESULT:
	[(False,)]

-----------
QUERY:


-- test without time zone
SELECT (timestamp without time zone '2000-11-27', timestamp without time zone '2000-11-28')
  OVERLAPS (timestamp without time zone '2000-11-27 12:00', timestamp without time zone '2000-11-30') AS "True";
RESULT:
	[(True,)]

-----------
QUERY:


SELECT (timestamp without time zone '2000-11-26', timestamp without time zone '2000-11-27')
  OVERLAPS (timestamp without time zone '2000-11-27 12:00', timestamp without time zone '2000-11-30') AS "False";
RESULT:
	[(False,)]

-----------
QUERY:


SELECT (timestamp without time zone '2000-11-27', timestamp without time zone '2000-11-28')
  OVERLAPS (timestamp without time zone '2000-11-27 12:00', interval '1 day') AS "True";
RESULT:
	[(True,)]

-----------
QUERY:


SELECT (timestamp without time zone '2000-11-27', interval '12 hours')
  OVERLAPS (timestamp without time zone '2000-11-27 12:00', timestamp without time zone '2000-11-30') AS "False";
RESULT:
	[(False,)]

-----------
QUERY:


SELECT (timestamp without time zone '2000-11-27', interval '12 hours')
  OVERLAPS (timestamp without time zone '2000-11-27', interval '12 hours') AS "True";
RESULT:
	[(True,)]

-----------
QUERY:


SELECT (timestamp without time zone '2000-11-27', interval '12 hours')
  OVERLAPS (timestamp without time zone '2000-11-27 12:00', interval '12 hours') AS "False";
RESULT:
	[(False,)]

-----------
QUERY:


-- test time and interval
SELECT (time '00:00', time '01:00')
  OVERLAPS (time '00:30', time '01:30') AS "True";
RESULT:
	[(True,)]

-----------
QUERY:


SELECT (time '00:00', interval '1 hour')
  OVERLAPS (time '00:30', interval '1 hour') AS "True";
RESULT:
	[(True,)]

-----------
QUERY:


SELECT (time '00:00', interval '1 hour')
  OVERLAPS (time '01:30', interval '1 hour') AS "False";
RESULT:
	[(False,)]

-----------
QUERY:


-- SQL99 seems to want this to be false (and we conform to the spec).
-- istm that this *should* return true, on the theory that time
-- intervals can wrap around the day boundary - thomas 2001-09-25
SELECT (time '00:00', interval '1 hour')
  OVERLAPS (time '01:30', interval '1 day') AS "False";
RESULT:
	[(False,)]

-----------
QUERY:


CREATE TABLE TEMP_TIMESTAMP (f1 timestamp with time zone);
RESULT:
	[]

-----------
QUERY:


-- get some candidate input values

INSERT INTO TEMP_TIMESTAMP (f1)
  SELECT d1 FROM TIMESTAMP_TBL
  WHERE d1 BETWEEN '13-jun-1957' AND '1-jan-1997'
   OR d1 BETWEEN '1-jan-1999' AND '1-jan-2010';
RESULT:
	[]

-----------
QUERY:


SELECT f1 AS "timestamp"
  FROM TEMP_TIMESTAMP
  ORDER BY "timestamp";
RESULT:
	ERROR - year -1 is out of range

-----------
QUERY:


SELECT d.f1 AS "timestamp", t.f1 AS "interval", d.f1 + t.f1 AS plus
  FROM TEMP_TIMESTAMP d, INTERVAL_TBL t
  ORDER BY plus, "timestamp", "interval";
RESULT:
	ERROR - year -1 is out of range

-----------
QUERY:


SELECT d.f1 AS "timestamp", t.f1 AS "interval", d.f1 - t.f1 AS minus
  FROM TEMP_TIMESTAMP d, INTERVAL_TBL t
  ORDER BY minus, "timestamp", "interval";
RESULT:
	ERROR - year -1 is out of range

-----------
QUERY:


SELECT d.f1 AS "timestamp",
   timestamp with time zone '1980-01-06 00:00 GMT' AS gpstime_zero,
   d.f1 - timestamp with time zone '1980-01-06 00:00 GMT' AS difference
  FROM TEMP_TIMESTAMP d
  ORDER BY difference;
RESULT:
	ERROR - year -1 is out of range

-----------
QUERY:


SELECT d1.f1 AS timestamp1, d2.f1 AS timestamp2, d1.f1 - d2.f1 AS difference
  FROM TEMP_TIMESTAMP d1, TEMP_TIMESTAMP d2
  ORDER BY timestamp1, timestamp2, difference;
RESULT:
	ERROR - year -1 is out of range

-----------
QUERY:


--
-- Conversions
--

SELECT f1 AS "timestamp", date(f1) AS date
  FROM TEMP_TIMESTAMP
  WHERE f1 <> timestamp 'now'
  ORDER BY date, "timestamp";
RESULT:
	ERROR - year -1 is out of range

-----------
QUERY:


DROP TABLE TEMP_TIMESTAMP;
RESULT:
	[]

-----------
QUERY:


--
-- Comparisons between datetime types, especially overflow cases
---

SELECT '2202020-10-05'::date::timestamp;
RESULT:
	ERROR - date out of range for timestamp


-----------
QUERY:
  -- fail
SELECT '2202020-10-05'::date > '2020-10-05'::timestamp as t;
RESULT:
	[(True,)]

-----------
QUERY:

SELECT '2020-10-05'::timestamp > '2202020-10-05'::date as f;
RESULT:
	[(False,)]

-----------
QUERY:


SELECT '2202020-10-05'::date::timestamptz;
RESULT:
	ERROR - date out of range for timestamp


-----------
QUERY:
  -- fail
SELECT '2202020-10-05'::date > '2020-10-05'::timestamptz as t;
RESULT:
	[(True,)]

-----------
QUERY:

SELECT '2020-10-05'::timestamptz > '2202020-10-05'::date as f;
RESULT:
	[(False,)]

-----------
QUERY:


-- This conversion may work depending on timezone
SELECT '4714-11-24 BC'::date::timestamptz;
RESULT:
	ERROR - date out of range for timestamp


-----------
QUERY:

SET TimeZone = 'UTC-2';
RESULT:
	[]

-----------
QUERY:

SELECT '4714-11-24 BC'::date::timestamptz;
RESULT:
	ERROR - date out of range for timestamp


-----------
QUERY:
  -- fail

SELECT '4714-11-24 BC'::date < '2020-10-05'::timestamptz as t;
RESULT:
	[(True,)]

-----------
QUERY:

SELECT '2020-10-05'::timestamptz >= '4714-11-24 BC'::date as t;
RESULT:
	[(True,)]

-----------
QUERY:


SELECT '4714-11-24 BC'::timestamp < '2020-10-05'::timestamptz as t;
RESULT:
	[(True,)]

-----------
QUERY:

SELECT '2020-10-05'::timestamptz >= '4714-11-24 BC'::timestamp as t;
RESULT:
	[(True,)]

-----------
QUERY:


RESET TimeZone;
RESULT:
	[]

-----------
QUERY:


--
-- Tests for BETWEEN
--

explain (costs off)
select count(*) from date_tbl
  where f1 between '1997-01-01' and '1998-01-01';
RESULT:
	[('Aggregate',), ('  ->  Seq Scan on date_tbl',), ("        Filter: ((f1 >= '01-01-1997'::date) AND (f1 <= '01-01-1998'::date))",)]

-----------
QUERY:

select count(*) from date_tbl
  where f1 between '1997-01-01' and '1998-01-01';
RESULT:
	[(3,)]

-----------
QUERY:


explain (costs off)
select count(*) from date_tbl
  where f1 not between '1997-01-01' and '1998-01-01';
RESULT:
	[('Aggregate',), ('  ->  Seq Scan on date_tbl',), ("        Filter: ((f1 < '01-01-1997'::date) OR (f1 > '01-01-1998'::date))",)]

-----------
QUERY:

select count(*) from date_tbl
  where f1 not between '1997-01-01' and '1998-01-01';
RESULT:
	[(13,)]

-----------
QUERY:


explain (costs off)
select count(*) from date_tbl
  where f1 between symmetric '1997-01-01' and '1998-01-01';
RESULT:
	[('Aggregate',), ('  ->  Seq Scan on date_tbl',), ("        Filter: (((f1 >= '01-01-1997'::date) AND (f1 <= '01-01-1998'::date)) OR ((f1 >= '01-01-1998'::date) AND (f1 <= '01-01-1997'::date)))",)]

-----------
QUERY:

select count(*) from date_tbl
  where f1 between symmetric '1997-01-01' and '1998-01-01';
RESULT:
	[(3,)]

-----------
QUERY:


explain (costs off)
select count(*) from date_tbl
  where f1 not between symmetric '1997-01-01' and '1998-01-01';
RESULT:
	[('Aggregate',), ('  ->  Seq Scan on date_tbl',), ("        Filter: (((f1 < '01-01-1997'::date) OR (f1 > '01-01-1998'::date)) AND ((f1 < '01-01-1998'::date) OR (f1 > '01-01-1997'::date)))",)]

-----------
QUERY:

select count(*) from date_tbl
  where f1 not between symmetric '1997-01-01' and '1998-01-01';
RESULT:
	[(13,)]

-----------
QUERY:


--
-- Formats
--

SET DateStyle TO 'US,Postgres';
RESULT:
	[]

-----------
QUERY:


SHOW DateStyle;
RESULT:
	[('Postgres, MDY',)]

-----------
QUERY:


SELECT d1 AS us_postgres FROM TIMESTAMP_TBL;
RESULT:
	ERROR - year -1 is out of range

-----------
QUERY:


SET DateStyle TO 'US,ISO';
RESULT:
	[]

-----------
QUERY:


SELECT d1 AS us_iso FROM TIMESTAMP_TBL;
RESULT:
	ERROR - year -97 is out of range

-----------
QUERY:


SET DateStyle TO 'US,SQL';
RESULT:
	[]

-----------
QUERY:


SHOW DateStyle;
RESULT:
	[('SQL, MDY',)]

-----------
QUERY:


SELECT d1 AS us_sql FROM TIMESTAMP_TBL;
RESULT:
	ERROR - unable to parse date

-----------
QUERY:


SET DateStyle TO 'European,Postgres';
RESULT:
	[]

-----------
QUERY:


SHOW DateStyle;
RESULT:
	[('Postgres, DMY',)]

-----------
QUERY:


INSERT INTO TIMESTAMP_TBL VALUES('13/06/1957');
RESULT:
	[]

-----------
QUERY:


SELECT count(*) as one FROM TIMESTAMP_TBL WHERE d1 = 'Jun 13 1957';
RESULT:
	[(1,)]

-----------
QUERY:


SELECT d1 AS european_postgres FROM TIMESTAMP_TBL;
RESULT:
	ERROR - year -1 is out of range

-----------
QUERY:


SET DateStyle TO 'European,ISO';
RESULT:
	[]

-----------
QUERY:


SHOW DateStyle;
RESULT:
	[('ISO, DMY',)]

-----------
QUERY:


SELECT d1 AS european_iso FROM TIMESTAMP_TBL;
RESULT:
	ERROR - year -97 is out of range

-----------
QUERY:


SET DateStyle TO 'European,SQL';
RESULT:
	[]

-----------
QUERY:


SHOW DateStyle;
RESULT:
	[('SQL, DMY',)]

-----------
QUERY:


SELECT d1 AS european_sql FROM TIMESTAMP_TBL;
RESULT:
	ERROR - unable to parse date

-----------
QUERY:


RESET DateStyle;
RESULT:
	[]

-----------
QUERY:


--
-- to_timestamp()
--

SELECT to_timestamp('0097/Feb/16 --> 08:14:30', 'YYYY/Mon/DD --> HH:MI:SS');
RESULT:
	[(datetime.datetime(97, 2, 16, 8, 14, 30, tzinfo=datetime.timezone(datetime.timedelta(seconds=2048))),)]

-----------
QUERY:


SELECT to_timestamp('97/2/16 8:14:30', 'FMYYYY/FMMM/FMDD FMHH:FMMI:FMSS');
RESULT:
	[(datetime.datetime(97, 2, 16, 8, 14, 30, tzinfo=datetime.timezone(datetime.timedelta(seconds=2048))),)]

-----------
QUERY:


SELECT to_timestamp('2011$03!18 23_38_15', 'YYYY-MM-DD HH24:MI:SS');
RESULT:
	[(datetime.datetime(2011, 3, 18, 23, 38, 15, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),)]

-----------
QUERY:


SELECT to_timestamp('1985 January 12', 'YYYY FMMonth DD');
RESULT:
	[(datetime.datetime(1985, 1, 12, 0, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),)]

-----------
QUERY:


SELECT to_timestamp('1985 FMMonth 12', 'YYYY "FMMonth" DD');
RESULT:
	[(datetime.datetime(1985, 1, 12, 0, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),)]

-----------
QUERY:


SELECT to_timestamp('1985 \ 12', 'YYYY \\ DD');
RESULT:
	[(datetime.datetime(1985, 1, 12, 0, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),)]

-----------
QUERY:


SELECT to_timestamp('My birthday-> Year: 1976, Month: May, Day: 16',
                    '"My birthday-> Year:" YYYY, "Month:" FMMonth, "Day:" DD');
RESULT:
	[(datetime.datetime(1976, 5, 16, 0, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),)]

-----------
QUERY:


SELECT to_timestamp('1,582nd VIII 21', 'Y,YYYth FMRM DD');
RESULT:
	[(datetime.datetime(1582, 8, 21, 0, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=2048))),)]

-----------
QUERY:


SELECT to_timestamp('15 "text between quote marks" 98 54 45',
                    E'HH24 "\\"text between quote marks\\"" YY MI SS');
RESULT:
	[(datetime.datetime(1998, 1, 1, 15, 54, 45, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),)]

-----------
QUERY:


SELECT to_timestamp('05121445482000', 'MMDDHH24MISSYYYY');
RESULT:
	[(datetime.datetime(2000, 5, 12, 14, 45, 48, tzinfo=datetime.timezone(datetime.timedelta(seconds=7200))),)]

-----------
QUERY:


SELECT to_timestamp('2000January09Sunday', 'YYYYFMMonthDDFMDay');
RESULT:
	[(datetime.datetime(2000, 1, 9, 0, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),)]

-----------
QUERY:


SELECT to_timestamp('97/Feb/16', 'YYMonDD');
RESULT:
	ERROR - invalid value "/Feb/16" for "Mon"
DETAIL:  The given value did not match any of the allowed values for this field.


-----------
QUERY:


SELECT to_timestamp('97/Feb/16', 'YY:Mon:DD');
RESULT:
	[(datetime.datetime(1997, 2, 16, 0, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),)]

-----------
QUERY:


SELECT to_timestamp('97/Feb/16', 'FXYY:Mon:DD');
RESULT:
	[(datetime.datetime(1997, 2, 16, 0, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),)]

-----------
QUERY:


SELECT to_timestamp('97/Feb/16', 'FXYY/Mon/DD');
RESULT:
	[(datetime.datetime(1997, 2, 16, 0, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),)]

-----------
QUERY:


SELECT to_timestamp('19971116', 'YYYYMMDD');
RESULT:
	[(datetime.datetime(1997, 11, 16, 0, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),)]

-----------
QUERY:


SELECT to_timestamp('20000-1116', 'YYYY-MMDD');
RESULT:
	ERROR - year 20000 is out of range

-----------
QUERY:


SELECT to_timestamp('1997 AD 11 16', 'YYYY BC MM DD');
RESULT:
	[(datetime.datetime(1997, 11, 16, 0, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),)]

-----------
QUERY:

SELECT to_timestamp('1997 BC 11 16', 'YYYY BC MM DD');
RESULT:
	ERROR - year -1997 is out of range

-----------
QUERY:


SELECT to_timestamp('1997 A.D. 11 16', 'YYYY B.C. MM DD');
RESULT:
	[(datetime.datetime(1997, 11, 16, 0, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),)]

-----------
QUERY:

SELECT to_timestamp('1997 B.C. 11 16', 'YYYY B.C. MM DD');
RESULT:
	ERROR - year -1997 is out of range

-----------
QUERY:


SELECT to_timestamp('9-1116', 'Y-MMDD');
RESULT:
	[(datetime.datetime(2009, 11, 16, 0, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),)]

-----------
QUERY:


SELECT to_timestamp('95-1116', 'YY-MMDD');
RESULT:
	[(datetime.datetime(1995, 11, 16, 0, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),)]

-----------
QUERY:


SELECT to_timestamp('995-1116', 'YYY-MMDD');
RESULT:
	[(datetime.datetime(1995, 11, 16, 0, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),)]

-----------
QUERY:


SELECT to_timestamp('2005426', 'YYYYWWD');
RESULT:
	[(datetime.datetime(2005, 10, 15, 0, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=7200))),)]

-----------
QUERY:


SELECT to_timestamp('2005300', 'YYYYDDD');
RESULT:
	[(datetime.datetime(2005, 10, 27, 0, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=7200))),)]

-----------
QUERY:


SELECT to_timestamp('2005527', 'IYYYIWID');
RESULT:
	[(datetime.datetime(2006, 1, 1, 0, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),)]

-----------
QUERY:


SELECT to_timestamp('005527', 'IYYIWID');
RESULT:
	[(datetime.datetime(2006, 1, 1, 0, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),)]

-----------
QUERY:


SELECT to_timestamp('05527', 'IYIWID');
RESULT:
	[(datetime.datetime(2006, 1, 1, 0, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),)]

-----------
QUERY:


SELECT to_timestamp('5527', 'IIWID');
RESULT:
	[(datetime.datetime(2006, 1, 1, 0, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),)]

-----------
QUERY:


SELECT to_timestamp('2005364', 'IYYYIDDD');
RESULT:
	[(datetime.datetime(2006, 1, 1, 0, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),)]

-----------
QUERY:


SELECT to_timestamp('20050302', 'YYYYMMDD');
RESULT:
	[(datetime.datetime(2005, 3, 2, 0, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),)]

-----------
QUERY:


SELECT to_timestamp('2005 03 02', 'YYYYMMDD');
RESULT:
	[(datetime.datetime(2005, 3, 2, 0, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),)]

-----------
QUERY:


SELECT to_timestamp(' 2005 03 02', 'YYYYMMDD');
RESULT:
	[(datetime.datetime(2005, 3, 2, 0, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),)]

-----------
QUERY:


SELECT to_timestamp('  20050302', 'YYYYMMDD');
RESULT:
	[(datetime.datetime(2005, 3, 2, 0, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),)]

-----------
QUERY:


SELECT to_timestamp('2011-12-18 11:38 AM', 'YYYY-MM-DD HH12:MI PM');
RESULT:
	[(datetime.datetime(2011, 12, 18, 11, 38, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),)]

-----------
QUERY:

SELECT to_timestamp('2011-12-18 11:38 PM', 'YYYY-MM-DD HH12:MI PM');
RESULT:
	[(datetime.datetime(2011, 12, 18, 23, 38, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),)]

-----------
QUERY:


SELECT to_timestamp('2011-12-18 11:38 A.M.', 'YYYY-MM-DD HH12:MI P.M.');
RESULT:
	[(datetime.datetime(2011, 12, 18, 11, 38, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),)]

-----------
QUERY:

SELECT to_timestamp('2011-12-18 11:38 P.M.', 'YYYY-MM-DD HH12:MI P.M.');
RESULT:
	[(datetime.datetime(2011, 12, 18, 23, 38, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),)]

-----------
QUERY:


SELECT to_timestamp('2011-12-18 11:38 +05',    'YYYY-MM-DD HH12:MI TZH');
RESULT:
	[(datetime.datetime(2011, 12, 18, 7, 38, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),)]

-----------
QUERY:

SELECT to_timestamp('2011-12-18 11:38 -05',    'YYYY-MM-DD HH12:MI TZH');
RESULT:
	[(datetime.datetime(2011, 12, 18, 17, 38, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),)]

-----------
QUERY:

SELECT to_timestamp('2011-12-18 11:38 +05:20', 'YYYY-MM-DD HH12:MI TZH:TZM');
RESULT:
	[(datetime.datetime(2011, 12, 18, 7, 18, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),)]

-----------
QUERY:

SELECT to_timestamp('2011-12-18 11:38 -05:20', 'YYYY-MM-DD HH12:MI TZH:TZM');
RESULT:
	[(datetime.datetime(2011, 12, 18, 17, 58, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),)]

-----------
QUERY:

SELECT to_timestamp('2011-12-18 11:38 20',     'YYYY-MM-DD HH12:MI TZM');
RESULT:
	[(datetime.datetime(2011, 12, 18, 12, 18, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),)]

-----------
QUERY:


SELECT to_timestamp('2011-12-18 11:38 EST', 'YYYY-MM-DD HH12:MI TZ');
RESULT:
	[(datetime.datetime(2011, 12, 18, 17, 38, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),)]

-----------
QUERY:

SELECT to_timestamp('2011-12-18 11:38 -05', 'YYYY-MM-DD HH12:MI TZ');
RESULT:
	[(datetime.datetime(2011, 12, 18, 17, 38, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),)]

-----------
QUERY:

SELECT to_timestamp('2011-12-18 11:38 +01:30', 'YYYY-MM-DD HH12:MI TZ');
RESULT:
	[(datetime.datetime(2011, 12, 18, 11, 8, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),)]

-----------
QUERY:

SELECT to_timestamp('2011-12-18 11:38 MSK', 'YYYY-MM-DD HH12:MI TZ');
RESULT:
	[(datetime.datetime(2011, 12, 18, 8, 38, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),)]

-----------
QUERY:
  -- dyntz
SELECT to_timestamp('2011-12-18 11:38ESTFOO24', 'YYYY-MM-DD HH12:MITZFOOSS');
RESULT:
	[(datetime.datetime(2011, 12, 18, 17, 38, 24, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),)]

-----------
QUERY:

SELECT to_timestamp('2011-12-18 11:38-05FOO24', 'YYYY-MM-DD HH12:MITZFOOSS');
RESULT:
	[(datetime.datetime(2011, 12, 18, 17, 38, 24, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),)]

-----------
QUERY:

SELECT to_timestamp('2011-12-18 11:38 JUNK', 'YYYY-MM-DD HH12:MI TZ');
RESULT:
	ERROR - invalid value "JUNK" for "TZ"
DETAIL:  Time zone abbreviation is not recognized.


-----------
QUERY:
  -- error
SELECT to_timestamp('2011-12-18 11:38 ...', 'YYYY-MM-DD HH12:MI TZ');
RESULT:
	ERROR - invalid value ".." for "TZ"
DETAIL:  Value must be an integer.


-----------
QUERY:
  -- error

SELECT to_timestamp('2011-12-18 11:38 -05', 'YYYY-MM-DD HH12:MI OF');
RESULT:
	[(datetime.datetime(2011, 12, 18, 17, 38, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),)]

-----------
QUERY:

SELECT to_timestamp('2011-12-18 11:38 +01:30', 'YYYY-MM-DD HH12:MI OF');
RESULT:
	[(datetime.datetime(2011, 12, 18, 11, 8, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),)]

-----------
QUERY:

SELECT to_timestamp('2011-12-18 11:38 +xyz', 'YYYY-MM-DD HH12:MI OF');
RESULT:
	ERROR - invalid value "xy" for "OF"
DETAIL:  Value must be an integer.


-----------
QUERY:
  -- error
SELECT to_timestamp('2011-12-18 11:38 +01:xyz', 'YYYY-MM-DD HH12:MI OF');
RESULT:
	ERROR - invalid value "xy" for "OF"
DETAIL:  Value must be an integer.


-----------
QUERY:
  -- error

SELECT to_timestamp('2018-11-02 12:34:56.025', 'YYYY-MM-DD HH24:MI:SS.MS');
RESULT:
	[(datetime.datetime(2018, 11, 2, 12, 34, 56, 25000, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),)]

-----------
QUERY:


SELECT i, to_timestamp('2018-11-02 12:34:56', 'YYYY-MM-DD HH24:MI:SS.FF' || i) FROM generate_series(1, 6) i;
RESULT:
	[(1, datetime.datetime(2018, 11, 2, 12, 34, 56, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600)))), (2, datetime.datetime(2018, 11, 2, 12, 34, 56, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600)))), (3, datetime.datetime(2018, 11, 2, 12, 34, 56, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600)))), (4, datetime.datetime(2018, 11, 2, 12, 34, 56, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600)))), (5, datetime.datetime(2018, 11, 2, 12, 34, 56, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600)))), (6, datetime.datetime(2018, 11, 2, 12, 34, 56, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))))]

-----------
QUERY:

SELECT i, to_timestamp('2018-11-02 12:34:56.1', 'YYYY-MM-DD HH24:MI:SS.FF' || i) FROM generate_series(1, 6) i;
RESULT:
	[(1, datetime.datetime(2018, 11, 2, 12, 34, 56, 100000, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600)))), (2, datetime.datetime(2018, 11, 2, 12, 34, 56, 100000, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600)))), (3, datetime.datetime(2018, 11, 2, 12, 34, 56, 100000, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600)))), (4, datetime.datetime(2018, 11, 2, 12, 34, 56, 100000, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600)))), (5, datetime.datetime(2018, 11, 2, 12, 34, 56, 100000, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600)))), (6, datetime.datetime(2018, 11, 2, 12, 34, 56, 100000, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))))]

-----------
QUERY:

SELECT i, to_timestamp('2018-11-02 12:34:56.12', 'YYYY-MM-DD HH24:MI:SS.FF' || i) FROM generate_series(1, 6) i;
RESULT:
	[(1, datetime.datetime(2018, 11, 2, 12, 34, 56, 100000, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600)))), (2, datetime.datetime(2018, 11, 2, 12, 34, 56, 120000, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600)))), (3, datetime.datetime(2018, 11, 2, 12, 34, 56, 120000, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600)))), (4, datetime.datetime(2018, 11, 2, 12, 34, 56, 120000, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600)))), (5, datetime.datetime(2018, 11, 2, 12, 34, 56, 120000, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600)))), (6, datetime.datetime(2018, 11, 2, 12, 34, 56, 120000, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))))]

-----------
QUERY:

SELECT i, to_timestamp('2018-11-02 12:34:56.123', 'YYYY-MM-DD HH24:MI:SS.FF' || i) FROM generate_series(1, 6) i;
RESULT:
	[(1, datetime.datetime(2018, 11, 2, 12, 34, 56, 100000, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600)))), (2, datetime.datetime(2018, 11, 2, 12, 34, 56, 120000, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600)))), (3, datetime.datetime(2018, 11, 2, 12, 34, 56, 123000, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600)))), (4, datetime.datetime(2018, 11, 2, 12, 34, 56, 123000, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600)))), (5, datetime.datetime(2018, 11, 2, 12, 34, 56, 123000, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600)))), (6, datetime.datetime(2018, 11, 2, 12, 34, 56, 123000, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))))]

-----------
QUERY:

SELECT i, to_timestamp('2018-11-02 12:34:56.1234', 'YYYY-MM-DD HH24:MI:SS.FF' || i) FROM generate_series(1, 6) i;
RESULT:
	[(1, datetime.datetime(2018, 11, 2, 12, 34, 56, 100000, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600)))), (2, datetime.datetime(2018, 11, 2, 12, 34, 56, 120000, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600)))), (3, datetime.datetime(2018, 11, 2, 12, 34, 56, 123000, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600)))), (4, datetime.datetime(2018, 11, 2, 12, 34, 56, 123400, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600)))), (5, datetime.datetime(2018, 11, 2, 12, 34, 56, 123400, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600)))), (6, datetime.datetime(2018, 11, 2, 12, 34, 56, 123400, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))))]

-----------
QUERY:

SELECT i, to_timestamp('2018-11-02 12:34:56.12345', 'YYYY-MM-DD HH24:MI:SS.FF' || i) FROM generate_series(1, 6) i;
RESULT:
	[(1, datetime.datetime(2018, 11, 2, 12, 34, 56, 100000, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600)))), (2, datetime.datetime(2018, 11, 2, 12, 34, 56, 120000, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600)))), (3, datetime.datetime(2018, 11, 2, 12, 34, 56, 123000, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600)))), (4, datetime.datetime(2018, 11, 2, 12, 34, 56, 123500, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600)))), (5, datetime.datetime(2018, 11, 2, 12, 34, 56, 123450, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600)))), (6, datetime.datetime(2018, 11, 2, 12, 34, 56, 123450, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))))]

-----------
QUERY:

SELECT i, to_timestamp('2018-11-02 12:34:56.123456', 'YYYY-MM-DD HH24:MI:SS.FF' || i) FROM generate_series(1, 6) i;
RESULT:
	[(1, datetime.datetime(2018, 11, 2, 12, 34, 56, 100000, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600)))), (2, datetime.datetime(2018, 11, 2, 12, 34, 56, 120000, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600)))), (3, datetime.datetime(2018, 11, 2, 12, 34, 56, 123000, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600)))), (4, datetime.datetime(2018, 11, 2, 12, 34, 56, 123500, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600)))), (5, datetime.datetime(2018, 11, 2, 12, 34, 56, 123460, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600)))), (6, datetime.datetime(2018, 11, 2, 12, 34, 56, 123456, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))))]

-----------
QUERY:

SELECT i, to_timestamp('2018-11-02 12:34:56.123456789', 'YYYY-MM-DD HH24:MI:SS.FF' || i) FROM generate_series(1, 6) i;
RESULT:
	ERROR - date/time field value out of range: "2018-11-02 12:34:56.123456789"


-----------
QUERY:


SELECT to_date('1 4 1902', 'Q MM YYYY');
RESULT:
	[(datetime.date(1902, 4, 1),)]

-----------
QUERY:
  -- Q is ignored
SELECT to_date('3 4 21 01', 'W MM CC YY');
RESULT:
	[(datetime.date(2001, 4, 15),)]

-----------
QUERY:

SELECT to_date('2458872', 'J');
RESULT:
	[(datetime.date(2020, 1, 23),)]

-----------
QUERY:


--
-- Check handling of BC dates
--

SELECT to_date('44-02-01 BC','YYYY-MM-DD BC');
RESULT:
	ERROR - year -44 is out of range

-----------
QUERY:

SELECT to_date('-44-02-01','YYYY-MM-DD');
RESULT:
	ERROR - year -44 is out of range

-----------
QUERY:

SELECT to_date('-44-02-01 BC','YYYY-MM-DD BC');
RESULT:
	[(datetime.date(44, 2, 1),)]

-----------
QUERY:

SELECT to_timestamp('44-02-01 11:12:13 BC','YYYY-MM-DD HH24:MI:SS BC');
RESULT:
	ERROR - year -44 is out of range

-----------
QUERY:

SELECT to_timestamp('-44-02-01 11:12:13','YYYY-MM-DD HH24:MI:SS');
RESULT:
	ERROR - year -44 is out of range

-----------
QUERY:

SELECT to_timestamp('-44-02-01 11:12:13 BC','YYYY-MM-DD HH24:MI:SS BC');
RESULT:
	[(datetime.datetime(44, 2, 1, 11, 12, 13, tzinfo=datetime.timezone(datetime.timedelta(seconds=2048))),)]

-----------
QUERY:


--
-- Check handling of multiple spaces in format and/or input
--

SELECT to_timestamp('2011-12-18 23:38:15', 'YYYY-MM-DD  HH24:MI:SS');
RESULT:
	[(datetime.datetime(2011, 12, 18, 23, 38, 15, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),)]

-----------
QUERY:

SELECT to_timestamp('2011-12-18  23:38:15', 'YYYY-MM-DD  HH24:MI:SS');
RESULT:
	[(datetime.datetime(2011, 12, 18, 23, 38, 15, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),)]

-----------
QUERY:

SELECT to_timestamp('2011-12-18   23:38:15', 'YYYY-MM-DD  HH24:MI:SS');
RESULT:
	[(datetime.datetime(2011, 12, 18, 23, 38, 15, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),)]

-----------
QUERY:


SELECT to_timestamp('2011-12-18  23:38:15', 'YYYY-MM-DD HH24:MI:SS');
RESULT:
	[(datetime.datetime(2011, 12, 18, 23, 38, 15, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),)]

-----------
QUERY:

SELECT to_timestamp('2011-12-18  23:38:15', 'YYYY-MM-DD  HH24:MI:SS');
RESULT:
	[(datetime.datetime(2011, 12, 18, 23, 38, 15, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),)]

-----------
QUERY:

SELECT to_timestamp('2011-12-18  23:38:15', 'YYYY-MM-DD   HH24:MI:SS');
RESULT:
	[(datetime.datetime(2011, 12, 18, 23, 38, 15, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),)]

-----------
QUERY:


SELECT to_timestamp('2000+   JUN', 'YYYY/MON');
RESULT:
	[(datetime.datetime(2000, 6, 1, 0, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=7200))),)]

-----------
QUERY:

SELECT to_timestamp('  2000 +JUN', 'YYYY/MON');
RESULT:
	[(datetime.datetime(2000, 6, 1, 0, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=7200))),)]

-----------
QUERY:

SELECT to_timestamp(' 2000 +JUN', 'YYYY//MON');
RESULT:
	[(datetime.datetime(2000, 6, 1, 0, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=7200))),)]

-----------
QUERY:

SELECT to_timestamp('2000  +JUN', 'YYYY//MON');
RESULT:
	[(datetime.datetime(2000, 6, 1, 0, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=7200))),)]

-----------
QUERY:

SELECT to_timestamp('2000 + JUN', 'YYYY MON');
RESULT:
	[(datetime.datetime(2000, 6, 1, 0, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=7200))),)]

-----------
QUERY:

SELECT to_timestamp('2000 ++ JUN', 'YYYY  MON');
RESULT:
	[(datetime.datetime(2000, 6, 1, 0, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=7200))),)]

-----------
QUERY:

SELECT to_timestamp('2000 + + JUN', 'YYYY  MON');
RESULT:
	ERROR - invalid value "+" for "MON"
DETAIL:  The given value did not match any of the allowed values for this field.


-----------
QUERY:

SELECT to_timestamp('2000 + + JUN', 'YYYY   MON');
RESULT:
	[(datetime.datetime(2000, 6, 1, 0, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=7200))),)]

-----------
QUERY:

SELECT to_timestamp('2000 -10', 'YYYY TZH');
RESULT:
	[(datetime.datetime(2000, 1, 1, 11, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),)]

-----------
QUERY:

SELECT to_timestamp('2000 -10', 'YYYY  TZH');
RESULT:
	[(datetime.datetime(1999, 12, 31, 15, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),)]

-----------
QUERY:


SELECT to_date('2011 12  18', 'YYYY MM DD');
RESULT:
	[(datetime.date(2011, 12, 18),)]

-----------
QUERY:

SELECT to_date('2011 12  18', 'YYYY MM  DD');
RESULT:
	[(datetime.date(2011, 12, 18),)]

-----------
QUERY:

SELECT to_date('2011 12  18', 'YYYY MM   DD');
RESULT:
	[(datetime.date(2011, 12, 18),)]

-----------
QUERY:


SELECT to_date('2011 12 18', 'YYYY  MM DD');
RESULT:
	[(datetime.date(2011, 12, 18),)]

-----------
QUERY:

SELECT to_date('2011  12 18', 'YYYY  MM DD');
RESULT:
	[(datetime.date(2011, 12, 18),)]

-----------
QUERY:

SELECT to_date('2011   12 18', 'YYYY  MM DD');
RESULT:
	[(datetime.date(2011, 12, 18),)]

-----------
QUERY:


SELECT to_date('2011 12 18', 'YYYYxMMxDD');
RESULT:
	[(datetime.date(2011, 12, 18),)]

-----------
QUERY:

SELECT to_date('2011x 12x 18', 'YYYYxMMxDD');
RESULT:
	[(datetime.date(2011, 12, 18),)]

-----------
QUERY:

SELECT to_date('2011 x12 x18', 'YYYYxMMxDD');
RESULT:
	ERROR - invalid value "x1" for "MM"
DETAIL:  Value must be an integer.


-----------
QUERY:


--
-- Check errors for some incorrect usages of to_timestamp() and to_date()
--

-- Mixture of date conventions (ISO week and Gregorian):
SELECT to_timestamp('2005527', 'YYYYIWID');
RESULT:
	ERROR - invalid combination of date conventions
HINT:  Do not mix Gregorian and ISO week date conventions in a formatting template.


-----------
QUERY:


-- Insufficient characters in the source string:
SELECT to_timestamp('19971', 'YYYYMMDD');
RESULT:
	ERROR - source string too short for "MM" formatting field
DETAIL:  Field requires 2 characters, but only 1 remain.
HINT:  If your source string is not fixed-width, try using the "FM" modifier.


-----------
QUERY:


-- Insufficient digit characters for a single node:
SELECT to_timestamp('19971)24', 'YYYYMMDD');
RESULT:
	ERROR - invalid value "1)" for "MM"
DETAIL:  Field requires 2 characters, but only 1 could be parsed.
HINT:  If your source string is not fixed-width, try using the "FM" modifier.


-----------
QUERY:


-- We don/* REPLACED */ ''t accept full-length day or month names if short form is specified:
SELECT to_timestamp('Friday 1-January-1999', 'DY DD MON YYYY');
RESULT:
	ERROR - invalid value "da" for "DD"
DETAIL:  Value must be an integer.


-----------
QUERY:

SELECT to_timestamp('Fri 1-January-1999', 'DY DD MON YYYY');
RESULT:
	ERROR - invalid value "uary" for "YYYY"
DETAIL:  Value must be an integer.


-----------
QUERY:

SELECT to_timestamp('Fri 1-Jan-1999', 'DY DD MON YYYY');
RESULT:
	[(datetime.datetime(1999, 1, 1, 0, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),)]

-----------
QUERY:
  -- ok

-- Value clobbering:
SELECT to_timestamp('1997-11-Jan-16', 'YYYY-MM-Mon-DD');
RESULT:
	ERROR - conflicting values for "Mon" field in formatting string
DETAIL:  This value contradicts a previous setting for the same field type.


-----------
QUERY:


-- Non-numeric input:
SELECT to_timestamp('199711xy', 'YYYYMMDD');
RESULT:
	ERROR - invalid value "xy" for "DD"
DETAIL:  Value must be an integer.


-----------
QUERY:


-- Input that doesn/* REPLACED */ ''t fit in an int:
SELECT to_timestamp('10000000000', 'FMYYYY');
RESULT:
	ERROR - value for "YYYY" in source string is out of range
DETAIL:  Value must be in the range -2147483648 to 2147483647.


-----------
QUERY:


-- Out-of-range and not-quite-out-of-range fields:
SELECT to_timestamp('2016-06-13 25:00:00', 'YYYY-MM-DD HH24:MI:SS');
RESULT:
	ERROR - date/time field value out of range: "2016-06-13 25:00:00"


-----------
QUERY:

SELECT to_timestamp('2016-06-13 15:60:00', 'YYYY-MM-DD HH24:MI:SS');
RESULT:
	ERROR - date/time field value out of range: "2016-06-13 15:60:00"


-----------
QUERY:

SELECT to_timestamp('2016-06-13 15:50:60', 'YYYY-MM-DD HH24:MI:SS');
RESULT:
	ERROR - date/time field value out of range: "2016-06-13 15:50:60"


-----------
QUERY:

SELECT to_timestamp('2016-06-13 15:50:55', 'YYYY-MM-DD HH24:MI:SS');
RESULT:
	[(datetime.datetime(2016, 6, 13, 15, 50, 55, tzinfo=datetime.timezone(datetime.timedelta(seconds=7200))),)]

-----------
QUERY:
  -- ok
SELECT to_timestamp('2016-06-13 15:50:55', 'YYYY-MM-DD HH:MI:SS');
RESULT:
	ERROR - hour "15" is invalid for the 12-hour clock
HINT:  Use the 24-hour clock, or give an hour between 1 and 12.


-----------
QUERY:

SELECT to_timestamp('2016-13-01 15:50:55', 'YYYY-MM-DD HH24:MI:SS');
RESULT:
	ERROR - date/time field value out of range: "2016-13-01 15:50:55"


-----------
QUERY:

SELECT to_timestamp('2016-02-30 15:50:55', 'YYYY-MM-DD HH24:MI:SS');
RESULT:
	ERROR - date/time field value out of range: "2016-02-30 15:50:55"


-----------
QUERY:

SELECT to_timestamp('2016-02-29 15:50:55', 'YYYY-MM-DD HH24:MI:SS');
RESULT:
	[(datetime.datetime(2016, 2, 29, 15, 50, 55, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),)]

-----------
QUERY:
  -- ok
SELECT to_timestamp('2015-02-29 15:50:55', 'YYYY-MM-DD HH24:MI:SS');
RESULT:
	ERROR - date/time field value out of range: "2015-02-29 15:50:55"


-----------
QUERY:

SELECT to_timestamp('2015-02-11 86000', 'YYYY-MM-DD SSSS');
RESULT:
	[(datetime.datetime(2015, 2, 11, 23, 53, 20, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),)]

-----------
QUERY:
  -- ok
SELECT to_timestamp('2015-02-11 86400', 'YYYY-MM-DD SSSS');
RESULT:
	ERROR - date/time field value out of range: "2015-02-11 86400"


-----------
QUERY:

SELECT to_timestamp('2015-02-11 86000', 'YYYY-MM-DD SSSSS');
RESULT:
	[(datetime.datetime(2015, 2, 11, 23, 53, 20, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),)]

-----------
QUERY:
  -- ok
SELECT to_timestamp('2015-02-11 86400', 'YYYY-MM-DD SSSSS');
RESULT:
	ERROR - date/time field value out of range: "2015-02-11 86400"


-----------
QUERY:

SELECT to_date('2016-13-10', 'YYYY-MM-DD');
RESULT:
	ERROR - date/time field value out of range: "2016-13-10"


-----------
QUERY:

SELECT to_date('2016-02-30', 'YYYY-MM-DD');
RESULT:
	ERROR - date/time field value out of range: "2016-02-30"


-----------
QUERY:

SELECT to_date('2016-02-29', 'YYYY-MM-DD');
RESULT:
	[(datetime.date(2016, 2, 29),)]

-----------
QUERY:
  -- ok
SELECT to_date('2015-02-29', 'YYYY-MM-DD');
RESULT:
	ERROR - date/time field value out of range: "2015-02-29"


-----------
QUERY:

SELECT to_date('2015 365', 'YYYY DDD');
RESULT:
	[(datetime.date(2015, 12, 31),)]

-----------
QUERY:
  -- ok
SELECT to_date('2015 366', 'YYYY DDD');
RESULT:
	ERROR - date/time field value out of range: "2015 366"


-----------
QUERY:

SELECT to_date('2016 365', 'YYYY DDD');
RESULT:
	[(datetime.date(2016, 12, 30),)]

-----------
QUERY:
  -- ok
SELECT to_date('2016 366', 'YYYY DDD');
RESULT:
	[(datetime.date(2016, 12, 31),)]

-----------
QUERY:
  -- ok
SELECT to_date('2016 367', 'YYYY DDD');
RESULT:
	ERROR - date/time field value out of range: "2016 367"


-----------
QUERY:

SELECT to_date('0000-02-01','YYYY-MM-DD');
RESULT:
	ERROR - year -1 is out of range

-----------
QUERY:
  -- allowed, though it shouldn/* REPLACED */ ''t be

-- to_char/* REPLACED */ ''s TZ format code produces zone abbrev if known
SELECT to_char('2012-12-12 12:00'::timestamptz, 'YYYY-MM-DD HH:MI:SS TZ');
RESULT:
	[('2012-12-12 12:00:00 CET',)]

-----------
QUERY:

SELECT to_char('2012-12-12 12:00'::timestamptz, 'YYYY-MM-DD HH:MI:SS tz');
RESULT:
	[('2012-12-12 12:00:00 cet',)]

-----------
QUERY:


--
-- Check behavior with SQL-style fixed-GMT-offset time zone (cf bug #8572)
--

SET TIME ZONE 'America/New_York';
RESULT:
	[]

-----------
QUERY:

SET TIME ZONE '-1.5';
RESULT:
	[]

-----------
QUERY:


SHOW TIME ZONE;
RESULT:
	[('<-01:30>+01:30',)]

-----------
QUERY:


SELECT '2012-12-12 12:00'::timestamptz;
RESULT:
	[(datetime.datetime(2012, 12, 12, 12, 0, tzinfo=datetime.timezone(datetime.timedelta(days=-1, seconds=81000))),)]

-----------
QUERY:

SELECT '2012-12-12 12:00 America/New_York'::timestamptz;
RESULT:
	[(datetime.datetime(2012, 12, 12, 15, 30, tzinfo=datetime.timezone(datetime.timedelta(days=-1, seconds=81000))),)]

-----------
QUERY:


SELECT to_char('2012-12-12 12:00'::timestamptz, 'YYYY-MM-DD HH:MI:SS TZ');
RESULT:
	[('2012-12-12 12:00:00 -01:30',)]

-----------
QUERY:

SELECT to_char('2012-12-12 12:00'::timestamptz, 'YYYY-MM-DD SSSS');
RESULT:
	[('2012-12-12 43200',)]

-----------
QUERY:

SELECT to_char('2012-12-12 12:00'::timestamptz, 'YYYY-MM-DD SSSSS');
RESULT:
	[('2012-12-12 43200',)]

-----------
QUERY:


SET TIME ZONE '+2';
RESULT:
	[]

-----------
QUERY:


SELECT to_char('2012-12-12 12:00'::timestamptz, 'YYYY-MM-DD HH:MI:SS TZ');
RESULT:
	[('2012-12-12 12:00:00 +02',)]

-----------
QUERY:


RESET TIME ZONE;
RESULT:
	[]
