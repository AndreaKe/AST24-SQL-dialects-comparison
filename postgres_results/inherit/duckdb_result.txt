
-----------
QUERY:
--
-- Test inheritance features
--
CREATE TABLE a (aa TEXT);
RESULT:
	[]

-----------
QUERY:

CREATE TABLE b (bb TEXT) INHERITS (a);
RESULT:
	ERROR - Parser Error: syntax error at or near "INHERITS"

-----------
QUERY:

CREATE TABLE c (cc TEXT) INHERITS (a);
RESULT:
	ERROR - Parser Error: syntax error at or near "INHERITS"

-----------
QUERY:

CREATE TABLE d (dd TEXT) INHERITS (b,c,a);
RESULT:
	ERROR - Parser Error: syntax error at or near "INHERITS"

-----------
QUERY:


INSERT INTO a(aa) VALUES('aaa');
RESULT:
	[]

-----------
QUERY:

INSERT INTO a(aa) VALUES('aaaa');
RESULT:
	[]

-----------
QUERY:

INSERT INTO a(aa) VALUES('aaaaa');
RESULT:
	[]

-----------
QUERY:

INSERT INTO a(aa) VALUES('aaaaaa');
RESULT:
	[]

-----------
QUERY:

INSERT INTO a(aa) VALUES('aaaaaaa');
RESULT:
	[]

-----------
QUERY:

INSERT INTO a(aa) VALUES('aaaaaaaa');
RESULT:
	[]

-----------
QUERY:


INSERT INTO b(aa) VALUES('bbb');
RESULT:
	ERROR - Catalog Error: Table with name b does not exist!
Did you mean "a"?

-----------
QUERY:

INSERT INTO b(aa) VALUES('bbbb');
RESULT:
	ERROR - Catalog Error: Table with name b does not exist!
Did you mean "a"?

-----------
QUERY:

INSERT INTO b(aa) VALUES('bbbbb');
RESULT:
	ERROR - Catalog Error: Table with name b does not exist!
Did you mean "a"?

-----------
QUERY:

INSERT INTO b(aa) VALUES('bbbbbb');
RESULT:
	ERROR - Catalog Error: Table with name b does not exist!
Did you mean "a"?

-----------
QUERY:

INSERT INTO b(aa) VALUES('bbbbbbb');
RESULT:
	ERROR - Catalog Error: Table with name b does not exist!
Did you mean "a"?

-----------
QUERY:

INSERT INTO b(aa) VALUES('bbbbbbbb');
RESULT:
	ERROR - Catalog Error: Table with name b does not exist!
Did you mean "a"?

-----------
QUERY:


INSERT INTO c(aa) VALUES('ccc');
RESULT:
	ERROR - Catalog Error: Table with name c does not exist!
Did you mean "a"?

-----------
QUERY:

INSERT INTO c(aa) VALUES('cccc');
RESULT:
	ERROR - Catalog Error: Table with name c does not exist!
Did you mean "a"?

-----------
QUERY:

INSERT INTO c(aa) VALUES('ccccc');
RESULT:
	ERROR - Catalog Error: Table with name c does not exist!
Did you mean "a"?

-----------
QUERY:

INSERT INTO c(aa) VALUES('cccccc');
RESULT:
	ERROR - Catalog Error: Table with name c does not exist!
Did you mean "a"?

-----------
QUERY:

INSERT INTO c(aa) VALUES('ccccccc');
RESULT:
	ERROR - Catalog Error: Table with name c does not exist!
Did you mean "a"?

-----------
QUERY:

INSERT INTO c(aa) VALUES('cccccccc');
RESULT:
	ERROR - Catalog Error: Table with name c does not exist!
Did you mean "a"?

-----------
QUERY:


INSERT INTO d(aa) VALUES('ddd');
RESULT:
	ERROR - Catalog Error: Table with name d does not exist!
Did you mean "a"?

-----------
QUERY:

INSERT INTO d(aa) VALUES('dddd');
RESULT:
	ERROR - Catalog Error: Table with name d does not exist!
Did you mean "a"?

-----------
QUERY:

INSERT INTO d(aa) VALUES('ddddd');
RESULT:
	ERROR - Catalog Error: Table with name d does not exist!
Did you mean "a"?

-----------
QUERY:

INSERT INTO d(aa) VALUES('dddddd');
RESULT:
	ERROR - Catalog Error: Table with name d does not exist!
Did you mean "a"?

-----------
QUERY:

INSERT INTO d(aa) VALUES('ddddddd');
RESULT:
	ERROR - Catalog Error: Table with name d does not exist!
Did you mean "a"?

-----------
QUERY:

INSERT INTO d(aa) VALUES('dddddddd');
RESULT:
	ERROR - Catalog Error: Table with name d does not exist!
Did you mean "a"?

-----------
QUERY:


SELECT relname, a.* FROM a, pg_class where a.tableoid = pg_class.oid;
RESULT:
	ERROR - Binder Error: Table "a" does not have a column named "tableoid"

-----------
QUERY:

SELECT relname, b.* FROM b, pg_class where b.tableoid = pg_class.oid;
RESULT:
	ERROR - Catalog Error: Table with name b does not exist!
Did you mean "a"?

-----------
QUERY:

SELECT relname, c.* FROM c, pg_class where c.tableoid = pg_class.oid;
RESULT:
	ERROR - Catalog Error: Table with name c does not exist!
Did you mean "a"?

-----------
QUERY:

SELECT relname, d.* FROM d, pg_class where d.tableoid = pg_class.oid;
RESULT:
	ERROR - Catalog Error: Table with name d does not exist!
Did you mean "a"?

-----------
QUERY:

SELECT relname, a.* FROM ONLY a, pg_class where a.tableoid = pg_class.oid;
RESULT:
	ERROR - Binder Error: Table "a" does not have a column named "tableoid"

-----------
QUERY:

SELECT relname, b.* FROM ONLY b, pg_class where b.tableoid = pg_class.oid;
RESULT:
	ERROR - Catalog Error: Table with name b does not exist!
Did you mean "a"?

-----------
QUERY:

SELECT relname, c.* FROM ONLY c, pg_class where c.tableoid = pg_class.oid;
RESULT:
	ERROR - Catalog Error: Table with name c does not exist!
Did you mean "a"?

-----------
QUERY:

SELECT relname, d.* FROM ONLY d, pg_class where d.tableoid = pg_class.oid;
RESULT:
	ERROR - Catalog Error: Table with name d does not exist!
Did you mean "a"?

-----------
QUERY:


UPDATE a SET aa='zzzz' WHERE aa='aaaa';
RESULT:
	[]

-----------
QUERY:

UPDATE ONLY a SET aa='zzzzz' WHERE aa='aaaaa';
RESULT:
	[]

-----------
QUERY:

UPDATE b SET aa='zzz' WHERE aa='aaa';
RESULT:
	ERROR - Catalog Error: Table with name b does not exist!
Did you mean "a"?
LINE 2: UPDATE b SET aa='zzz' WHERE aa='aaa';
               ^

-----------
QUERY:

UPDATE ONLY b SET aa='zzz' WHERE aa='aaa';
RESULT:
	ERROR - Catalog Error: Table with name b does not exist!
Did you mean "a"?
LINE 2: UPDATE ONLY b SET aa='zzz' WHERE aa='aaa';
                    ^

-----------
QUERY:

UPDATE a SET aa='zzzzzz' WHERE aa LIKE 'aaa%';
RESULT:
	[]

-----------
QUERY:


SELECT relname, a.* FROM a, pg_class where a.tableoid = pg_class.oid;
RESULT:
	ERROR - Binder Error: Table "a" does not have a column named "tableoid"

-----------
QUERY:

SELECT relname, b.* FROM b, pg_class where b.tableoid = pg_class.oid;
RESULT:
	ERROR - Catalog Error: Table with name b does not exist!
Did you mean "a"?

-----------
QUERY:

SELECT relname, c.* FROM c, pg_class where c.tableoid = pg_class.oid;
RESULT:
	ERROR - Catalog Error: Table with name c does not exist!
Did you mean "a"?

-----------
QUERY:

SELECT relname, d.* FROM d, pg_class where d.tableoid = pg_class.oid;
RESULT:
	ERROR - Catalog Error: Table with name d does not exist!
Did you mean "a"?

-----------
QUERY:

SELECT relname, a.* FROM ONLY a, pg_class where a.tableoid = pg_class.oid;
RESULT:
	ERROR - Binder Error: Table "a" does not have a column named "tableoid"

-----------
QUERY:

SELECT relname, b.* FROM ONLY b, pg_class where b.tableoid = pg_class.oid;
RESULT:
	ERROR - Catalog Error: Table with name b does not exist!
Did you mean "a"?

-----------
QUERY:

SELECT relname, c.* FROM ONLY c, pg_class where c.tableoid = pg_class.oid;
RESULT:
	ERROR - Catalog Error: Table with name c does not exist!
Did you mean "a"?

-----------
QUERY:

SELECT relname, d.* FROM ONLY d, pg_class where d.tableoid = pg_class.oid;
RESULT:
	ERROR - Catalog Error: Table with name d does not exist!
Did you mean "a"?

-----------
QUERY:


UPDATE b SET aa='new';
RESULT:
	ERROR - Catalog Error: Table with name b does not exist!
Did you mean "a"?
LINE 3: UPDATE b SET aa='new';
               ^

-----------
QUERY:


SELECT relname, a.* FROM a, pg_class where a.tableoid = pg_class.oid;
RESULT:
	ERROR - Binder Error: Table "a" does not have a column named "tableoid"

-----------
QUERY:

SELECT relname, b.* FROM b, pg_class where b.tableoid = pg_class.oid;
RESULT:
	ERROR - Catalog Error: Table with name b does not exist!
Did you mean "a"?

-----------
QUERY:

SELECT relname, c.* FROM c, pg_class where c.tableoid = pg_class.oid;
RESULT:
	ERROR - Catalog Error: Table with name c does not exist!
Did you mean "a"?

-----------
QUERY:

SELECT relname, d.* FROM d, pg_class where d.tableoid = pg_class.oid;
RESULT:
	ERROR - Catalog Error: Table with name d does not exist!
Did you mean "a"?

-----------
QUERY:

SELECT relname, a.* FROM ONLY a, pg_class where a.tableoid = pg_class.oid;
RESULT:
	ERROR - Binder Error: Table "a" does not have a column named "tableoid"

-----------
QUERY:

SELECT relname, b.* FROM ONLY b, pg_class where b.tableoid = pg_class.oid;
RESULT:
	ERROR - Catalog Error: Table with name b does not exist!
Did you mean "a"?

-----------
QUERY:

SELECT relname, c.* FROM ONLY c, pg_class where c.tableoid = pg_class.oid;
RESULT:
	ERROR - Catalog Error: Table with name c does not exist!
Did you mean "a"?

-----------
QUERY:

SELECT relname, d.* FROM ONLY d, pg_class where d.tableoid = pg_class.oid;
RESULT:
	ERROR - Catalog Error: Table with name d does not exist!
Did you mean "a"?

-----------
QUERY:


UPDATE a SET aa='new';
RESULT:
	[]

-----------
QUERY:


DELETE FROM ONLY c WHERE aa='new';
RESULT:
	ERROR - Catalog Error: Table with name c does not exist!
Did you mean "a"?
LINE 3: DELETE FROM ONLY c WHERE aa='new';
                         ^

-----------
QUERY:


SELECT relname, a.* FROM a, pg_class where a.tableoid = pg_class.oid;
RESULT:
	ERROR - Binder Error: Table "a" does not have a column named "tableoid"

-----------
QUERY:

SELECT relname, b.* FROM b, pg_class where b.tableoid = pg_class.oid;
RESULT:
	ERROR - Catalog Error: Table with name b does not exist!
Did you mean "a"?

-----------
QUERY:

SELECT relname, c.* FROM c, pg_class where c.tableoid = pg_class.oid;
RESULT:
	ERROR - Catalog Error: Table with name c does not exist!
Did you mean "a"?

-----------
QUERY:

SELECT relname, d.* FROM d, pg_class where d.tableoid = pg_class.oid;
RESULT:
	ERROR - Catalog Error: Table with name d does not exist!
Did you mean "a"?

-----------
QUERY:

SELECT relname, a.* FROM ONLY a, pg_class where a.tableoid = pg_class.oid;
RESULT:
	ERROR - Binder Error: Table "a" does not have a column named "tableoid"

-----------
QUERY:

SELECT relname, b.* FROM ONLY b, pg_class where b.tableoid = pg_class.oid;
RESULT:
	ERROR - Catalog Error: Table with name b does not exist!
Did you mean "a"?

-----------
QUERY:

SELECT relname, c.* FROM ONLY c, pg_class where c.tableoid = pg_class.oid;
RESULT:
	ERROR - Catalog Error: Table with name c does not exist!
Did you mean "a"?

-----------
QUERY:

SELECT relname, d.* FROM ONLY d, pg_class where d.tableoid = pg_class.oid;
RESULT:
	ERROR - Catalog Error: Table with name d does not exist!
Did you mean "a"?

-----------
QUERY:


DELETE FROM a;
RESULT:
	[]

-----------
QUERY:


SELECT relname, a.* FROM a, pg_class where a.tableoid = pg_class.oid;
RESULT:
	ERROR - Binder Error: Table "a" does not have a column named "tableoid"

-----------
QUERY:

SELECT relname, b.* FROM b, pg_class where b.tableoid = pg_class.oid;
RESULT:
	ERROR - Catalog Error: Table with name b does not exist!
Did you mean "a"?

-----------
QUERY:

SELECT relname, c.* FROM c, pg_class where c.tableoid = pg_class.oid;
RESULT:
	ERROR - Catalog Error: Table with name c does not exist!
Did you mean "a"?

-----------
QUERY:

SELECT relname, d.* FROM d, pg_class where d.tableoid = pg_class.oid;
RESULT:
	ERROR - Catalog Error: Table with name d does not exist!
Did you mean "a"?

-----------
QUERY:

SELECT relname, a.* FROM ONLY a, pg_class where a.tableoid = pg_class.oid;
RESULT:
	ERROR - Binder Error: Table "a" does not have a column named "tableoid"

-----------
QUERY:

SELECT relname, b.* FROM ONLY b, pg_class where b.tableoid = pg_class.oid;
RESULT:
	ERROR - Catalog Error: Table with name b does not exist!
Did you mean "a"?

-----------
QUERY:

SELECT relname, c.* FROM ONLY c, pg_class where c.tableoid = pg_class.oid;
RESULT:
	ERROR - Catalog Error: Table with name c does not exist!
Did you mean "a"?

-----------
QUERY:

SELECT relname, d.* FROM ONLY d, pg_class where d.tableoid = pg_class.oid;
RESULT:
	ERROR - Catalog Error: Table with name d does not exist!
Did you mean "a"?

-----------
QUERY:


-- Confirm PRIMARY KEY adds NOT NULL constraint to child table
CREATE TEMP TABLE z (b TEXT, PRIMARY KEY(aa, b)) inherits (a);
RESULT:
	ERROR - Parser Error: syntax error at or near "inherits"

-----------
QUERY:

INSERT INTO z VALUES (NULL, 'text');
RESULT:
	ERROR - Catalog Error: Table with name z does not exist!
Did you mean "a"?

-----------
QUERY:
 -- should fail

-- Check inherited UPDATE with first child excluded
create table some_tab (f1 int, f2 int, f3 int, check (f1 < 10) no inherit);
RESULT:
	[]

-----------
QUERY:

create table some_tab_child () inherits(some_tab);
RESULT:
	ERROR - Parser Error: syntax error at or near "inherits"

-----------
QUERY:

insert into some_tab_child select i, i+1, 0 from generate_series(1,1000) i;
RESULT:
	ERROR - Catalog Error: Table with name some_tab_child does not exist!
Did you mean "some_tab"?

-----------
QUERY:

create index on some_tab_child(f1, f2);
RESULT:
	ERROR - Not implemented Error: Please provide an index name, e.g., CREATE INDEX my_name ...

-----------
QUERY:

-- while at it, also check that statement-level triggers fire
create function some_tab_stmt_trig_func() returns trigger as
$$begin raise notice 'updating some_tab'; return NULL; end;$$
language plpgsql;
RESULT:
	ERROR - Parser Error: syntax error at or near "returns"

-----------
QUERY:

create trigger some_tab_stmt_trig
  before update on some_tab execute function some_tab_stmt_trig_func();
RESULT:
	ERROR - Parser Error: syntax error at or near "trigger"

-----------
QUERY:


explain (costs off)
update some_tab set f3 = 11 where f1 = 12 and f2 = 13;
RESULT:
	ERROR - Not implemented Error: Unimplemented explain type: costs

-----------
QUERY:

update some_tab set f3 = 11 where f1 = 12 and f2 = 13;
RESULT:
	[]

-----------
QUERY:


drop table some_tab cascade;
RESULT:
	[]

-----------
QUERY:

drop function some_tab_stmt_trig_func();
RESULT:
	ERROR - Parser Error: syntax error at or near "("

-----------
QUERY:


-- Check inherited UPDATE with all children excluded
create table some_tab (a int, b int);
RESULT:
	[]

-----------
QUERY:

create table some_tab_child () inherits (some_tab);
RESULT:
	ERROR - Parser Error: syntax error at or near "inherits"

-----------
QUERY:

insert into some_tab_child values(1,2);
RESULT:
	ERROR - Catalog Error: Table with name some_tab_child does not exist!
Did you mean "some_tab"?

-----------
QUERY:


explain (verbose, costs off)
update some_tab set a = a + 1 where false;
RESULT:
	ERROR - Not implemented Error: Unimplemented explain type: verbose

-----------
QUERY:

update some_tab set a = a + 1 where false;
RESULT:
	[]

-----------
QUERY:

explain (verbose, costs off)
update some_tab set a = a + 1 where false returning b, a;
RESULT:
	ERROR - Not implemented Error: Unimplemented explain type: verbose

-----------
QUERY:

update some_tab set a = a + 1 where false returning b, a;
RESULT:
	[]

-----------
QUERY:

table some_tab;
RESULT:
	[]

-----------
QUERY:


drop table some_tab cascade;
RESULT:
	[]

-----------
QUERY:


-- Check UPDATE with inherited target and an inherited source table
create temp table foo(f1 int, f2 int);
RESULT:
	[]

-----------
QUERY:

create temp table foo2(f3 int) inherits (foo);
RESULT:
	ERROR - Parser Error: syntax error at or near "inherits"

-----------
QUERY:

create temp table bar(f1 int, f2 int);
RESULT:
	[]

-----------
QUERY:

create temp table bar2(f3 int) inherits (bar);
RESULT:
	ERROR - Parser Error: syntax error at or near "inherits"

-----------
QUERY:


insert into foo values(1,1);
RESULT:
	[]

-----------
QUERY:

insert into foo values(3,3);
RESULT:
	[]

-----------
QUERY:

insert into foo2 values(2,2,2);
RESULT:
	ERROR - Catalog Error: Table with name foo2 does not exist!
Did you mean "foo"?

-----------
QUERY:

insert into foo2 values(3,3,3);
RESULT:
	ERROR - Catalog Error: Table with name foo2 does not exist!
Did you mean "foo"?

-----------
QUERY:

insert into bar values(1,1);
RESULT:
	[]

-----------
QUERY:

insert into bar values(2,2);
RESULT:
	[]

-----------
QUERY:

insert into bar values(3,3);
RESULT:
	[]

-----------
QUERY:

insert into bar values(4,4);
RESULT:
	[]

-----------
QUERY:

insert into bar2 values(1,1,1);
RESULT:
	ERROR - Catalog Error: Table with name bar2 does not exist!
Did you mean "bar"?

-----------
QUERY:

insert into bar2 values(2,2,2);
RESULT:
	ERROR - Catalog Error: Table with name bar2 does not exist!
Did you mean "bar"?

-----------
QUERY:

insert into bar2 values(3,3,3);
RESULT:
	ERROR - Catalog Error: Table with name bar2 does not exist!
Did you mean "bar"?

-----------
QUERY:

insert into bar2 values(4,4,4);
RESULT:
	ERROR - Catalog Error: Table with name bar2 does not exist!
Did you mean "bar"?

-----------
QUERY:


update bar set f2 = f2 + 100 where f1 in (select f1 from foo);
RESULT:
	[]

-----------
QUERY:


select tableoid::regclass::text as relname, bar.* from bar order by 1,2;
RESULT:
	ERROR - Binder Error: Referenced column "tableoid" not found in FROM clause!
Candidate bindings: "bar.f1"

-----------
QUERY:


-- Check UPDATE with inherited target and an appendrel subquery
update bar set f2 = f2 + 100
from
  ( select f1 from foo union all select f1+3 from foo ) ss
where bar.f1 = ss.f1;
RESULT:
	[]

-----------
QUERY:


select tableoid::regclass::text as relname, bar.* from bar order by 1,2;
RESULT:
	ERROR - Binder Error: Referenced column "tableoid" not found in FROM clause!
Candidate bindings: "bar.f1"

-----------
QUERY:


-- Check UPDATE with *partitioned* inherited target and an appendrel subquery
create table some_tab (a int);
RESULT:
	[]

-----------
QUERY:

insert into some_tab values (0);
RESULT:
	[]

-----------
QUERY:

create table some_tab_child () inherits (some_tab);
RESULT:
	ERROR - Parser Error: syntax error at or near "inherits"

-----------
QUERY:

insert into some_tab_child values (1);
RESULT:
	ERROR - Catalog Error: Table with name some_tab_child does not exist!
Did you mean "some_tab"?

-----------
QUERY:

create table parted_tab (a int, b char) partition by list (a);
RESULT:
	ERROR - Parser Error: syntax error at or near "partition"

-----------
QUERY:

create table parted_tab_part1 partition of parted_tab for values in (1);
RESULT:
	ERROR - Parser Error: syntax error at or near "partition"

-----------
QUERY:

create table parted_tab_part2 partition of parted_tab for values in (2);
RESULT:
	ERROR - Parser Error: syntax error at or near "partition"

-----------
QUERY:

create table parted_tab_part3 partition of parted_tab for values in (3);
RESULT:
	ERROR - Parser Error: syntax error at or near "partition"

-----------
QUERY:

insert into parted_tab values (1, 'a'), (2, 'a'), (3, 'a');
RESULT:
	ERROR - Catalog Error: Table with name parted_tab does not exist!
Did you mean "some_tab"?

-----------
QUERY:


update parted_tab set b = 'b'
from
  (select a from some_tab union all select a+1 from some_tab) ss (a)
where parted_tab.a = ss.a;
RESULT:
	ERROR - Catalog Error: Table with name parted_tab does not exist!
Did you mean "some_tab"?
LINE 3: update parted_tab set b = 'b'
               ^

-----------
QUERY:

select tableoid::regclass::text as relname, parted_tab.* from parted_tab order by 1,2;
RESULT:
	ERROR - Catalog Error: Table with name parted_tab does not exist!
Did you mean "some_tab"?

-----------
QUERY:


truncate parted_tab;
RESULT:
	ERROR - Catalog Error: Table with name parted_tab does not exist!
Did you mean "some_tab"?
LINE 3: truncate parted_tab;
                 ^

-----------
QUERY:

insert into parted_tab values (1, 'a'), (2, 'a'), (3, 'a');
RESULT:
	ERROR - Catalog Error: Table with name parted_tab does not exist!
Did you mean "some_tab"?

-----------
QUERY:

update parted_tab set b = 'b'
from
  (select 0 from parted_tab union all select 1 from parted_tab) ss (a)
where parted_tab.a = ss.a;
RESULT:
	ERROR - Catalog Error: Table with name parted_tab does not exist!
Did you mean "some_tab"?
LINE 2: update parted_tab set b = 'b'
               ^

-----------
QUERY:

select tableoid::regclass::text as relname, parted_tab.* from parted_tab order by 1,2;
RESULT:
	ERROR - Catalog Error: Table with name parted_tab does not exist!
Did you mean "some_tab"?

-----------
QUERY:


-- modifies partition key, but no rows will actually be updated
explain update parted_tab set a = 2 where false;
RESULT:
	ERROR - Catalog Error: Table with name parted_tab does not exist!
Did you mean "some_tab"?
LINE 4: explain update parted_tab set a = 2 where false;
                       ^

-----------
QUERY:


drop table parted_tab;
RESULT:
	ERROR - Catalog Error: Table with name parted_tab does not exist!
Did you mean "some_tab"?

-----------
QUERY:


-- Check UPDATE with multi-level partitioned inherited target
create table mlparted_tab (a int, b char, c text) partition by list (a);
RESULT:
	ERROR - Parser Error: syntax error at or near "partition"

-----------
QUERY:

create table mlparted_tab_part1 partition of mlparted_tab for values in (1);
RESULT:
	ERROR - Parser Error: syntax error at or near "partition"

-----------
QUERY:

create table mlparted_tab_part2 partition of mlparted_tab for values in (2) partition by list (b);
RESULT:
	ERROR - Parser Error: syntax error at or near "partition"

-----------
QUERY:

create table mlparted_tab_part3 partition of mlparted_tab for values in (3);
RESULT:
	ERROR - Parser Error: syntax error at or near "partition"

-----------
QUERY:

create table mlparted_tab_part2a partition of mlparted_tab_part2 for values in ('a');
RESULT:
	ERROR - Parser Error: syntax error at or near "partition"

-----------
QUERY:

create table mlparted_tab_part2b partition of mlparted_tab_part2 for values in ('b');
RESULT:
	ERROR - Parser Error: syntax error at or near "partition"

-----------
QUERY:

insert into mlparted_tab values (1, 'a'), (2, 'a'), (2, 'b'), (3, 'a');
RESULT:
	ERROR - Catalog Error: Table with name mlparted_tab does not exist!
Did you mean "some_tab"?

-----------
QUERY:


update mlparted_tab mlp set c = 'xxx'
from
  (select a from some_tab union all select a+1 from some_tab) ss (a)
where (mlp.a = ss.a and mlp.b = 'b') or mlp.a = 3;
RESULT:
	ERROR - Catalog Error: Table with name mlparted_tab does not exist!
Did you mean "some_tab"?
LINE 3: update mlparted_tab mlp set c = 'xxx'
               ^

-----------
QUERY:

select tableoid::regclass::text as relname, mlparted_tab.* from mlparted_tab order by 1,2;
RESULT:
	ERROR - Catalog Error: Table with name mlparted_tab does not exist!
Did you mean "some_tab"?

-----------
QUERY:


drop table mlparted_tab;
RESULT:
	ERROR - Catalog Error: Table with name mlparted_tab does not exist!
Did you mean "some_tab"?

-----------
QUERY:

drop table some_tab cascade;
RESULT:
	[]

-----------
QUERY:


/* Test multiple inheritance of column defaults */

CREATE TABLE firstparent (tomorrow date default now()::date + 1);
RESULT:
	[]

-----------
QUERY:

CREATE TABLE secondparent (tomorrow date default  now() :: date  +  1);
RESULT:
	[]

-----------
QUERY:

CREATE TABLE jointchild () INHERITS (firstparent, secondparent);
RESULT:
	ERROR - Parser Error: syntax error at or near "INHERITS"

-----------
QUERY:
  -- ok
CREATE TABLE thirdparent (tomorrow date default now()::date - 1);
RESULT:
	[]

-----------
QUERY:

CREATE TABLE otherchild () INHERITS (firstparent, thirdparent);
RESULT:
	ERROR - Parser Error: syntax error at or near "INHERITS"

-----------
QUERY:
  -- not ok
CREATE TABLE otherchild (tomorrow date default now())
  INHERITS (firstparent, thirdparent);
RESULT:
	ERROR - Parser Error: syntax error at or near "INHERITS"

-----------
QUERY:
  -- ok, child resolves ambiguous default

DROP TABLE firstparent, secondparent, jointchild, thirdparent, otherchild;
RESULT:
	ERROR - Not implemented Error: Can only drop one object at a time

-----------
QUERY:


-- Test changing the type of inherited columns
insert into d values('test','one','two','three');
RESULT:
	ERROR - Catalog Error: Table with name d does not exist!
Did you mean "a"?

-----------
QUERY:

alter table a alter column aa type integer using bit_length(aa);
RESULT:
	[]

-----------
QUERY:

select * from d;
RESULT:
	ERROR - Catalog Error: Table with name d does not exist!
Did you mean "a"?

-----------
QUERY:


-- The above verified that we can change the type of a multiply-inherited
-- column /* REPLACED */ , but we should reject that if any definition was inherited from
-- an unrelated parent.
create temp table parent1(f1 int, f2 int);
RESULT:
	[]

-----------
QUERY:

create temp table parent2(f1 int, f3 bigint);
RESULT:
	[]

-----------
QUERY:

create temp table childtab(f4 int) inherits(parent1, parent2);
RESULT:
	ERROR - Parser Error: syntax error at or near "inherits"

-----------
QUERY:

alter table parent1 alter column f1 type bigint;
RESULT:
	[]

-----------
QUERY:
  -- fail, conflict w/parent2
alter table parent1 alter column f2 type bigint;
RESULT:
	[]

-----------
QUERY:
  -- ok

-- Test non-inheritable parent constraints
create table p1(ff1 int);
RESULT:
	[]

-----------
QUERY:

alter table p1 add constraint p1chk check (ff1 > 0) no inherit;
RESULT:
	ERROR - Not implemented Error: No support for that ALTER TABLE option yet!

-----------
QUERY:

alter table p1 add constraint p2chk check (ff1 > 10);
RESULT:
	ERROR - Not implemented Error: No support for that ALTER TABLE option yet!

-----------
QUERY:

-- connoinherit should be true for NO INHERIT constraint
select pc.relname, pgc.conname, pgc.contype, pgc.conislocal, pgc.coninhcount, pgc.connoinherit from pg_class as pc inner join pg_constraint as pgc on (pgc.conrelid = pc.oid) where pc.relname = 'p1' order by 1,2;
RESULT:
	[]

-----------
QUERY:


-- Test that child does not inherit NO INHERIT constraints
create table c1 () inherits (p1);
RESULT:
	ERROR - Parser Error: syntax error at or near "inherits"

-----------
QUERY:

-- \d p1
-- \d c1

-- Test that child does not override inheritable constraints of the parent
create table c2 (constraint p2chk check (ff1 > 10) no inherit) inherits (p1);
RESULT:
	ERROR - Parser Error: syntax error at or near "inherits"

-----------
QUERY:
	--fails

drop table p1 cascade;
RESULT:
	[]

-----------
QUERY:


-- Tests for casting between the rowtypes of parent and child
-- tables. See the pgsql-hackers thread beginning Dec. 4/04
create table base (i integer);
RESULT:
	[]

-----------
QUERY:

create table derived () inherits (base);
RESULT:
	ERROR - Parser Error: syntax error at or near "inherits"

-----------
QUERY:

create table more_derived (like derived, b int) inherits (derived);
RESULT:
	ERROR - Parser Error: syntax error at or near "inherits"

-----------
QUERY:

insert into derived (i) values (0);
RESULT:
	ERROR - Catalog Error: Table with name derived does not exist!
Did you mean "pg_depend"?

-----------
QUERY:

select derived::base from derived;
RESULT:
	ERROR - Catalog Error: Table with name derived does not exist!
Did you mean "pg_depend"?

-----------
QUERY:

select NULL::derived::base;
RESULT:
	ERROR - Catalog Error: Type with name derived does not exist!
Did you mean "dec"?

-----------
QUERY:

-- remove redundant conversions.
explain (verbose on, costs off) select row(i, b)::more_derived::derived::base from more_derived;
RESULT:
	ERROR - Not implemented Error: Unimplemented explain type: verbose

-----------
QUERY:

explain (verbose on, costs off) select (1, 2)::more_derived::derived::base;
RESULT:
	ERROR - Not implemented Error: Unimplemented explain type: verbose

-----------
QUERY:

drop table more_derived;
RESULT:
	ERROR - Catalog Error: Table with name more_derived does not exist!
Did you mean "pg_depend"?

-----------
QUERY:

drop table derived;
RESULT:
	ERROR - Catalog Error: Table with name derived does not exist!
Did you mean "pg_depend"?

-----------
QUERY:

drop table base;
RESULT:
	[]

-----------
QUERY:


create table p1(ff1 int);
RESULT:
	[]

-----------
QUERY:

create table p2(f1 text);
RESULT:
	[]

-----------
QUERY:

create function p2text(p2) returns text as 'select $1.f1' language sql;
RESULT:
	ERROR - Parser Error: syntax error at or near "returns"

-----------
QUERY:

create table c1(f3 int) inherits(p1,p2);
RESULT:
	ERROR - Parser Error: syntax error at or near "inherits"

-----------
QUERY:

insert into c1 values(123456789, 'hi', 42);
RESULT:
	ERROR - Catalog Error: Table with name c1 does not exist!
Did you mean "p1"?

-----------
QUERY:

select p2text(c1.*) from c1;
RESULT:
	ERROR - Catalog Error: Table with name c1 does not exist!
Did you mean "p1"?

-----------
QUERY:

drop function p2text(p2);
RESULT:
	ERROR - Parser Error: syntax error at or near "("

-----------
QUERY:

drop table c1;
RESULT:
	ERROR - Catalog Error: Table with name c1 does not exist!
Did you mean "p1"?

-----------
QUERY:

drop table p2;
RESULT:
	[]

-----------
QUERY:

drop table p1;
RESULT:
	[]

-----------
QUERY:


CREATE TABLE ac (aa TEXT);
RESULT:
	[]

-----------
QUERY:

alter table ac add constraint ac_check check (aa is not null);
RESULT:
	ERROR - Not implemented Error: No support for that ALTER TABLE option yet!

-----------
QUERY:

CREATE TABLE bc (bb TEXT) INHERITS (ac);
RESULT:
	ERROR - Parser Error: syntax error at or near "INHERITS"

-----------
QUERY:

select pc.relname, pgc.conname, pgc.contype, pgc.conislocal, pgc.coninhcount, pg_get_expr(pgc.conbin, pc.oid) as consrc from pg_class as pc inner join pg_constraint as pgc on (pgc.conrelid = pc.oid) where pc.relname in ('ac', 'bc') order by 1,2;
RESULT:
	[]

-----------
QUERY:


insert into ac (aa) values (NULL);
RESULT:
	[]

-----------
QUERY:

insert into bc (aa) values (NULL);
RESULT:
	ERROR - Catalog Error: Table with name bc does not exist!
Did you mean "ac"?

-----------
QUERY:


alter table bc drop constraint ac_check;
RESULT:
	ERROR - Not implemented Error: No support for that ALTER TABLE option yet!

-----------
QUERY:
  -- fail, disallowed
alter table ac drop constraint ac_check;
RESULT:
	ERROR - Not implemented Error: No support for that ALTER TABLE option yet!

-----------
QUERY:

select pc.relname, pgc.conname, pgc.contype, pgc.conislocal, pgc.coninhcount, pg_get_expr(pgc.conbin, pc.oid) as consrc from pg_class as pc inner join pg_constraint as pgc on (pgc.conrelid = pc.oid) where pc.relname in ('ac', 'bc') order by 1,2;
RESULT:
	[]

-----------
QUERY:


-- try the unnamed-constraint case
alter table ac add check (aa is not null);
RESULT:
	ERROR - Not implemented Error: No support for that ALTER TABLE option yet!

-----------
QUERY:

select pc.relname, pgc.conname, pgc.contype, pgc.conislocal, pgc.coninhcount, pg_get_expr(pgc.conbin, pc.oid) as consrc from pg_class as pc inner join pg_constraint as pgc on (pgc.conrelid = pc.oid) where pc.relname in ('ac', 'bc') order by 1,2;
RESULT:
	[]

-----------
QUERY:


insert into ac (aa) values (NULL);
RESULT:
	[]

-----------
QUERY:

insert into bc (aa) values (NULL);
RESULT:
	ERROR - Catalog Error: Table with name bc does not exist!
Did you mean "ac"?

-----------
QUERY:


alter table bc drop constraint ac_aa_check;
RESULT:
	ERROR - Not implemented Error: No support for that ALTER TABLE option yet!

-----------
QUERY:
  -- fail, disallowed
alter table ac drop constraint ac_aa_check;
RESULT:
	ERROR - Not implemented Error: No support for that ALTER TABLE option yet!

-----------
QUERY:

select pc.relname, pgc.conname, pgc.contype, pgc.conislocal, pgc.coninhcount, pg_get_expr(pgc.conbin, pc.oid) as consrc from pg_class as pc inner join pg_constraint as pgc on (pgc.conrelid = pc.oid) where pc.relname in ('ac', 'bc') order by 1,2;
RESULT:
	[]

-----------
QUERY:


alter table ac add constraint ac_check check (aa is not null);
RESULT:
	ERROR - Not implemented Error: No support for that ALTER TABLE option yet!

-----------
QUERY:

alter table bc no inherit ac;
RESULT:
	ERROR - Parser Error: syntax error at or near "no"

-----------
QUERY:

select pc.relname, pgc.conname, pgc.contype, pgc.conislocal, pgc.coninhcount, pg_get_expr(pgc.conbin, pc.oid) as consrc from pg_class as pc inner join pg_constraint as pgc on (pgc.conrelid = pc.oid) where pc.relname in ('ac', 'bc') order by 1,2;
RESULT:
	[]

-----------
QUERY:

alter table bc drop constraint ac_check;
RESULT:
	ERROR - Not implemented Error: No support for that ALTER TABLE option yet!

-----------
QUERY:

select pc.relname, pgc.conname, pgc.contype, pgc.conislocal, pgc.coninhcount, pg_get_expr(pgc.conbin, pc.oid) as consrc from pg_class as pc inner join pg_constraint as pgc on (pgc.conrelid = pc.oid) where pc.relname in ('ac', 'bc') order by 1,2;
RESULT:
	[]

-----------
QUERY:

alter table ac drop constraint ac_check;
RESULT:
	ERROR - Not implemented Error: No support for that ALTER TABLE option yet!

-----------
QUERY:

select pc.relname, pgc.conname, pgc.contype, pgc.conislocal, pgc.coninhcount, pg_get_expr(pgc.conbin, pc.oid) as consrc from pg_class as pc inner join pg_constraint as pgc on (pgc.conrelid = pc.oid) where pc.relname in ('ac', 'bc') order by 1,2;
RESULT:
	[]

-----------
QUERY:


drop table bc;
RESULT:
	ERROR - Catalog Error: Table with name bc does not exist!
Did you mean "ac"?

-----------
QUERY:

drop table ac;
RESULT:
	[]

-----------
QUERY:


create table ac (a int constraint check_a check (a <> 0));
RESULT:
	[]

-----------
QUERY:

create table bc (a int constraint check_a check (a <> 0), b int constraint check_b check (b <> 0)) inherits (ac);
RESULT:
	ERROR - Parser Error: syntax error at or near "inherits"

-----------
QUERY:

select pc.relname, pgc.conname, pgc.contype, pgc.conislocal, pgc.coninhcount, pg_get_expr(pgc.conbin, pc.oid) as consrc from pg_class as pc inner join pg_constraint as pgc on (pgc.conrelid = pc.oid) where pc.relname in ('ac', 'bc') order by 1,2;
RESULT:
	[('ac', 'CHECK((a != 0))', 'c', True, 0, '(a != 0)')]

-----------
QUERY:


drop table bc;
RESULT:
	ERROR - Catalog Error: Table with name bc does not exist!
Did you mean "ac"?

-----------
QUERY:

drop table ac;
RESULT:
	[]

-----------
QUERY:


create table ac (a int constraint check_a check (a <> 0));
RESULT:
	[]

-----------
QUERY:

create table bc (b int constraint check_b check (b <> 0));
RESULT:
	[]

-----------
QUERY:

create table cc (c int constraint check_c check (c <> 0)) inherits (ac, bc);
RESULT:
	ERROR - Parser Error: syntax error at or near "inherits"

-----------
QUERY:

select pc.relname, pgc.conname, pgc.contype, pgc.conislocal, pgc.coninhcount, pg_get_expr(pgc.conbin, pc.oid) as consrc from pg_class as pc inner join pg_constraint as pgc on (pgc.conrelid = pc.oid) where pc.relname in ('ac', 'bc', 'cc') order by 1,2;
RESULT:
	[('ac', 'CHECK((a != 0))', 'c', True, 0, '(a != 0)'), ('bc', 'CHECK((b != 0))', 'c', True, 0, '(b != 0)')]

-----------
QUERY:


alter table cc no inherit bc;
RESULT:
	ERROR - Parser Error: syntax error at or near "no"

-----------
QUERY:

select pc.relname, pgc.conname, pgc.contype, pgc.conislocal, pgc.coninhcount, pg_get_expr(pgc.conbin, pc.oid) as consrc from pg_class as pc inner join pg_constraint as pgc on (pgc.conrelid = pc.oid) where pc.relname in ('ac', 'bc', 'cc') order by 1,2;
RESULT:
	[('ac', 'CHECK((a != 0))', 'c', True, 0, '(a != 0)'), ('bc', 'CHECK((b != 0))', 'c', True, 0, '(b != 0)')]

-----------
QUERY:


drop table cc;
RESULT:
	ERROR - Catalog Error: Table with name cc does not exist!
Did you mean "ac"?

-----------
QUERY:

drop table bc;
RESULT:
	[]

-----------
QUERY:

drop table ac;
RESULT:
	[]

-----------
QUERY:


create table p1(f1 int);
RESULT:
	[]

-----------
QUERY:

create table p2(f2 int);
RESULT:
	[]

-----------
QUERY:

create table c1(f3 int) inherits(p1,p2);
RESULT:
	ERROR - Parser Error: syntax error at or near "inherits"

-----------
QUERY:

insert into c1 values(1,-1,2);
RESULT:
	ERROR - Catalog Error: Table with name c1 does not exist!
Did you mean "p1"?

-----------
QUERY:

alter table p2 add constraint cc check (f2>0);
RESULT:
	ERROR - Not implemented Error: No support for that ALTER TABLE option yet!

-----------
QUERY:
  -- fail
alter table p2 add check (f2>0);
RESULT:
	ERROR - Not implemented Error: No support for that ALTER TABLE option yet!

-----------
QUERY:
  -- check it without a name, too
delete from c1;
RESULT:
	ERROR - Catalog Error: Table with name c1 does not exist!
Did you mean "p1"?
LINE 2: delete from c1;
                    ^

-----------
QUERY:

insert into c1 values(1,1,2);
RESULT:
	ERROR - Catalog Error: Table with name c1 does not exist!
Did you mean "p1"?

-----------
QUERY:

alter table p2 add check (f2>0);
RESULT:
	ERROR - Not implemented Error: No support for that ALTER TABLE option yet!

-----------
QUERY:

insert into c1 values(1,-1,2);
RESULT:
	ERROR - Catalog Error: Table with name c1 does not exist!
Did you mean "p1"?

-----------
QUERY:
  -- fail
create table c2(f3 int) inherits(p1,p2);
RESULT:
	ERROR - Parser Error: syntax error at or near "inherits"

-----------
QUERY:

-- \d c2
create table c3 (f4 int) inherits(c1,c2);
RESULT:
	ERROR - Parser Error: syntax error at or near "inherits"

-----------
QUERY:

-- \d c3
drop table p1 cascade;
RESULT:
	[]

-----------
QUERY:

drop table p2 cascade;
RESULT:
	[]

-----------
QUERY:


create table pp1 (f1 int);
RESULT:
	[]

-----------
QUERY:

create table cc1 (f2 text, f3 int) inherits (pp1);
RESULT:
	ERROR - Parser Error: syntax error at or near "inherits"

-----------
QUERY:

alter table pp1 add column a1 int check (a1 > 0);
RESULT:
	ERROR - Parser Error: Adding columns with constraints not yet supported

-----------
QUERY:

-- \d cc1
create table cc2(f4 float) inherits(pp1,cc1);
RESULT:
	ERROR - Parser Error: syntax error at or near "inherits"

-----------
QUERY:

-- \d cc2
alter table pp1 add column a2 int check (a2 > 0);
RESULT:
	ERROR - Parser Error: Adding columns with constraints not yet supported

-----------
QUERY:

-- \d cc2
drop table pp1 cascade;
RESULT:
	[]

-----------
QUERY:


-- Test for renaming in simple multiple inheritance
CREATE TABLE inht1 (a int, b int);
RESULT:
	[]

-----------
QUERY:

CREATE TABLE inhs1 (b int, c int);
RESULT:
	[]

-----------
QUERY:

CREATE TABLE inhts (d int) INHERITS (inht1, inhs1);
RESULT:
	ERROR - Parser Error: syntax error at or near "INHERITS"

-----------
QUERY:


ALTER TABLE inht1 RENAME a TO aa;
RESULT:
	[]

-----------
QUERY:

ALTER TABLE inht1 RENAME b TO bb;
RESULT:
	[]

-----------
QUERY:
                -- to be failed
ALTER TABLE inhts RENAME aa TO aaa;
RESULT:
	ERROR - Catalog Error: Table with name inhts does not exist!
Did you mean "inhs1"?

-----------
QUERY:
      -- to be failed
ALTER TABLE inhts RENAME d TO dd;
RESULT:
	ERROR - Catalog Error: Table with name inhts does not exist!
Did you mean "inhs1"?

-----------
QUERY:

-- \d+ inhts

DROP TABLE inhts;
RESULT:
	ERROR - Catalog Error: Table with name inhts does not exist!
Did you mean "inhs1"?

-----------
QUERY:


-- Test for adding a column to a parent table with complex inheritance
CREATE TABLE inhta ();
RESULT:
	ERROR - Parser Error: Table must have at least one column!

-----------
QUERY:

CREATE TABLE inhtb () INHERITS (inhta);
RESULT:
	ERROR - Parser Error: syntax error at or near "INHERITS"

-----------
QUERY:

CREATE TABLE inhtc () INHERITS (inhtb);
RESULT:
	ERROR - Parser Error: syntax error at or near "INHERITS"

-----------
QUERY:

CREATE TABLE inhtd () INHERITS (inhta, inhtb, inhtc);
RESULT:
	ERROR - Parser Error: syntax error at or near "INHERITS"

-----------
QUERY:

ALTER TABLE inhta ADD COLUMN i int;
RESULT:
	ERROR - Catalog Error: Table with name inhta does not exist!
Did you mean "inht1"?

-----------
QUERY:

-- \d+ inhta
DROP TABLE inhta, inhtb, inhtc, inhtd;
RESULT:
	ERROR - Not implemented Error: Can only drop one object at a time

-----------
QUERY:


-- Test for renaming in diamond inheritance
CREATE TABLE inht2 (x int) INHERITS (inht1);
RESULT:
	ERROR - Parser Error: syntax error at or near "INHERITS"

-----------
QUERY:

CREATE TABLE inht3 (y int) INHERITS (inht1);
RESULT:
	ERROR - Parser Error: syntax error at or near "INHERITS"

-----------
QUERY:

CREATE TABLE inht4 (z int) INHERITS (inht2, inht3);
RESULT:
	ERROR - Parser Error: syntax error at or near "INHERITS"

-----------
QUERY:


ALTER TABLE inht1 RENAME aa TO aaa;
RESULT:
	[]

-----------
QUERY:

-- \d+ inht4

CREATE TABLE inhts (d int) INHERITS (inht2, inhs1);
RESULT:
	ERROR - Parser Error: syntax error at or near "INHERITS"

-----------
QUERY:

ALTER TABLE inht1 RENAME aaa TO aaaa;
RESULT:
	[]

-----------
QUERY:

ALTER TABLE inht1 RENAME b TO bb;
RESULT:
	ERROR - Binder Error: Table "inht1" does not have a column with name "b"

-----------
QUERY:
                -- to be failed
-- \d+ inhts

WITH RECURSIVE r AS (
  SELECT 'inht1'::regclass AS inhrelid
UNION ALL
  SELECT c.inhrelid FROM pg_inherits c, r WHERE r.inhrelid = c.inhparent
)
SELECT a.attrelid::regclass, a.attname, a.attinhcount, e.expected
  FROM (SELECT inhrelid, count(*) AS expected FROM pg_inherits
        WHERE inhparent IN (SELECT inhrelid FROM r) GROUP BY inhrelid) e
  JOIN pg_attribute a ON e.inhrelid = a.attrelid WHERE NOT attislocal
  ORDER BY a.attrelid::regclass::name, a.attnum;
RESULT:
	ERROR - Catalog Error: Table with name pg_inherits does not exist!
Did you mean "pg_index"?

-----------
QUERY:


DROP TABLE inht1, inhs1 CASCADE;
RESULT:
	ERROR - Not implemented Error: Can only drop one object at a time

-----------
QUERY:



-- Test non-inheritable indices [UNIQUE, EXCLUDE] constraints
CREATE TABLE test_constraints (id int, val1 varchar, val2 int, UNIQUE(val1, val2));
RESULT:
	[]

-----------
QUERY:

CREATE TABLE test_constraints_inh () INHERITS (test_constraints);
RESULT:
	ERROR - Parser Error: syntax error at or near "INHERITS"

-----------
QUERY:

-- \d+ test_constraints
ALTER TABLE ONLY test_constraints DROP CONSTRAINT test_constraints_val1_val2_key;
RESULT:
	ERROR - Not implemented Error: No support for that ALTER TABLE option yet!

-----------
QUERY:

-- \d+ test_constraints
-- \d+ test_constraints_inh
DROP TABLE test_constraints_inh;
RESULT:
	ERROR - Catalog Error: Table with name test_constraints_inh does not exist!
Did you mean "test_constraints"?

-----------
QUERY:

DROP TABLE test_constraints;
RESULT:
	[]

-----------
QUERY:


CREATE TABLE test_ex_constraints (
    c circle,
    EXCLUDE USING gist (c WITH &&)
);
RESULT:
	ERROR - Parser Error: syntax error at or near "USING"

-----------
QUERY:

CREATE TABLE test_ex_constraints_inh () INHERITS (test_ex_constraints);
RESULT:
	ERROR - Parser Error: syntax error at or near "INHERITS"

-----------
QUERY:

-- \d+ test_ex_constraints
ALTER TABLE test_ex_constraints DROP CONSTRAINT test_ex_constraints_c_excl;
RESULT:
	ERROR - Not implemented Error: No support for that ALTER TABLE option yet!

-----------
QUERY:

-- \d+ test_ex_constraints
-- \d+ test_ex_constraints_inh
DROP TABLE test_ex_constraints_inh;
RESULT:
	ERROR - Catalog Error: Table with name test_ex_constraints_inh does not exist!
Did you mean "temp.information_schema.table_constraints"?

-----------
QUERY:

DROP TABLE test_ex_constraints;
RESULT:
	ERROR - Catalog Error: Table with name test_ex_constraints does not exist!
Did you mean "temp.information_schema.table_constraints"?

-----------
QUERY:


-- Test non-inheritable foreign key constraints
CREATE TABLE test_primary_constraints(id int PRIMARY KEY);
RESULT:
	[]

-----------
QUERY:

CREATE TABLE test_foreign_constraints(id1 int REFERENCES test_primary_constraints(id));
RESULT:
	[]

-----------
QUERY:

CREATE TABLE test_foreign_constraints_inh () INHERITS (test_foreign_constraints);
RESULT:
	ERROR - Parser Error: syntax error at or near "INHERITS"

-----------
QUERY:

-- \d+ test_primary_constraints
-- \d+ test_foreign_constraints
ALTER TABLE test_foreign_constraints DROP CONSTRAINT test_foreign_constraints_id1_fkey;
RESULT:
	ERROR - Not implemented Error: No support for that ALTER TABLE option yet!

-----------
QUERY:

-- \d+ test_foreign_constraints
-- \d+ test_foreign_constraints_inh
DROP TABLE test_foreign_constraints_inh;
RESULT:
	ERROR - Catalog Error: Table with name test_foreign_constraints_inh does not exist!
Did you mean "test_foreign_constraints"?

-----------
QUERY:

DROP TABLE test_foreign_constraints;
RESULT:
	[]

-----------
QUERY:

DROP TABLE test_primary_constraints;
RESULT:
	[]

-----------
QUERY:


-- Test foreign key behavior
create table inh_fk_1 (a int primary key);
RESULT:
	[]

-----------
QUERY:

insert into inh_fk_1 values (1), (2), (3);
RESULT:
	[]

-----------
QUERY:

create table inh_fk_2 (x int primary key, y int references inh_fk_1 on delete cascade);
RESULT:
	ERROR - Parser Error: FOREIGN KEY constraints cannot use CASCADE, SET NULL or SET DEFAULT

-----------
QUERY:

insert into inh_fk_2 values (11, 1), (22, 2), (33, 3);
RESULT:
	ERROR - Catalog Error: Table with name inh_fk_2 does not exist!
Did you mean "inh_fk_1"?

-----------
QUERY:

create table inh_fk_2_child () inherits (inh_fk_2);
RESULT:
	ERROR - Parser Error: syntax error at or near "inherits"

-----------
QUERY:

insert into inh_fk_2_child values (111, 1), (222, 2);
RESULT:
	ERROR - Catalog Error: Table with name inh_fk_2_child does not exist!
Did you mean "inh_fk_1"?

-----------
QUERY:

delete from inh_fk_1 where a = 1;
RESULT:
	[]

-----------
QUERY:

select * from inh_fk_1 order by 1;
RESULT:
	[(2,), (3,)]

-----------
QUERY:

select * from inh_fk_2 order by 1, 2;
RESULT:
	ERROR - Catalog Error: Table with name inh_fk_2 does not exist!
Did you mean "inh_fk_1"?

-----------
QUERY:

drop table inh_fk_1, inh_fk_2, inh_fk_2_child;
RESULT:
	ERROR - Not implemented Error: Can only drop one object at a time

-----------
QUERY:


-- Test that parent and child CHECK constraints can be created in either order
create table p1(f1 int);
RESULT:
	[]

-----------
QUERY:

create table p1_c1() inherits(p1);
RESULT:
	ERROR - Parser Error: syntax error at or near "inherits"

-----------
QUERY:


alter table p1 add constraint inh_check_constraint1 check (f1 > 0);
RESULT:
	ERROR - Not implemented Error: No support for that ALTER TABLE option yet!

-----------
QUERY:

alter table p1_c1 add constraint inh_check_constraint1 check (f1 > 0);
RESULT:
	ERROR - Not implemented Error: No support for that ALTER TABLE option yet!

-----------
QUERY:


alter table p1_c1 add constraint inh_check_constraint2 check (f1 < 10);
RESULT:
	ERROR - Not implemented Error: No support for that ALTER TABLE option yet!

-----------
QUERY:

alter table p1 add constraint inh_check_constraint2 check (f1 < 10);
RESULT:
	ERROR - Not implemented Error: No support for that ALTER TABLE option yet!

-----------
QUERY:


select conrelid::regclass::text as relname, conname, conislocal, coninhcount
from pg_constraint where conname like 'inh\_check\_constraint%'
order by 1, 2;
RESULT:
	ERROR - Catalog Error: Type with name regclass does not exist!
Did you mean "real"?

-----------
QUERY:


drop table p1 cascade;
RESULT:
	[]

-----------
QUERY:


--
-- Test DROP behavior of multiply-defined CHECK constraints
--
create table p1(f1 int constraint f1_pos CHECK (f1 > 0));
RESULT:
	[]

-----------
QUERY:

create table p1_c1 (f1 int constraint f1_pos CHECK (f1 > 0)) inherits (p1);
RESULT:
	ERROR - Parser Error: syntax error at or near "inherits"

-----------
QUERY:

alter table p1_c1 drop constraint f1_pos;
RESULT:
	ERROR - Not implemented Error: No support for that ALTER TABLE option yet!

-----------
QUERY:

alter table p1 drop constraint f1_pos;
RESULT:
	ERROR - Not implemented Error: No support for that ALTER TABLE option yet!

-----------
QUERY:

-- \d p1_c1
drop table p1 cascade;
RESULT:
	[]

-----------
QUERY:


create table p1(f1 int constraint f1_pos CHECK (f1 > 0));
RESULT:
	[]

-----------
QUERY:

create table p2(f1 int constraint f1_pos CHECK (f1 > 0));
RESULT:
	[]

-----------
QUERY:

create table p1p2_c1 (f1 int) inherits (p1, p2);
RESULT:
	ERROR - Parser Error: syntax error at or near "inherits"

-----------
QUERY:

create table p1p2_c2 (f1 int constraint f1_pos CHECK (f1 > 0)) inherits (p1, p2);
RESULT:
	ERROR - Parser Error: syntax error at or near "inherits"

-----------
QUERY:

alter table p2 drop constraint f1_pos;
RESULT:
	ERROR - Not implemented Error: No support for that ALTER TABLE option yet!

-----------
QUERY:

alter table p1 drop constraint f1_pos;
RESULT:
	ERROR - Not implemented Error: No support for that ALTER TABLE option yet!

-----------
QUERY:

-- \d p1p2_c*
drop table p1, p2 cascade;
RESULT:
	ERROR - Not implemented Error: Can only drop one object at a time

-----------
QUERY:


create table p1(f1 int constraint f1_pos CHECK (f1 > 0));
RESULT:
	ERROR - Catalog Error: Table with name "p1" already exists!

-----------
QUERY:

create table p1_c1() inherits (p1);
RESULT:
	ERROR - Parser Error: syntax error at or near "inherits"

-----------
QUERY:

create table p1_c2() inherits (p1);
RESULT:
	ERROR - Parser Error: syntax error at or near "inherits"

-----------
QUERY:

create table p1_c1c2() inherits (p1_c1, p1_c2);
RESULT:
	ERROR - Parser Error: syntax error at or near "inherits"

-----------
QUERY:

-- \d p1_c1c2
alter table p1 drop constraint f1_pos;
RESULT:
	ERROR - Not implemented Error: No support for that ALTER TABLE option yet!

-----------
QUERY:

-- \d p1_c1c2
drop table p1 cascade;
RESULT:
	[]

-----------
QUERY:


create table p1(f1 int constraint f1_pos CHECK (f1 > 0));
RESULT:
	[]

-----------
QUERY:

create table p1_c1() inherits (p1);
RESULT:
	ERROR - Parser Error: syntax error at or near "inherits"

-----------
QUERY:

create table p1_c2(constraint f1_pos CHECK (f1 > 0)) inherits (p1);
RESULT:
	ERROR - Parser Error: syntax error at or near "inherits"

-----------
QUERY:

create table p1_c1c2() inherits (p1_c1, p1_c2, p1);
RESULT:
	ERROR - Parser Error: syntax error at or near "inherits"

-----------
QUERY:

alter table p1_c2 drop constraint f1_pos;
RESULT:
	ERROR - Not implemented Error: No support for that ALTER TABLE option yet!

-----------
QUERY:

alter table p1 drop constraint f1_pos;
RESULT:
	ERROR - Not implemented Error: No support for that ALTER TABLE option yet!

-----------
QUERY:

alter table p1_c1c2 drop constraint f1_pos;
RESULT:
	ERROR - Not implemented Error: No support for that ALTER TABLE option yet!

-----------
QUERY:

alter table p1_c2 drop constraint f1_pos;
RESULT:
	ERROR - Not implemented Error: No support for that ALTER TABLE option yet!

-----------
QUERY:

-- \d p1_c1c2
drop table p1 cascade;
RESULT:
	[]

-----------
QUERY:


-- Test that a valid child can have not-valid parent, but not vice versa
create table invalid_check_con(f1 int);
RESULT:
	[]

-----------
QUERY:

create table invalid_check_con_child() inherits(invalid_check_con);
RESULT:
	ERROR - Parser Error: syntax error at or near "inherits"

-----------
QUERY:


alter table invalid_check_con_child add constraint inh_check_constraint check(f1 > 0) not valid;
RESULT:
	ERROR - Not implemented Error: No support for that ALTER TABLE option yet!

-----------
QUERY:

alter table invalid_check_con add constraint inh_check_constraint check(f1 > 0);
RESULT:
	ERROR - Not implemented Error: No support for that ALTER TABLE option yet!

-----------
QUERY:
 -- fail
alter table invalid_check_con_child drop constraint inh_check_constraint;
RESULT:
	ERROR - Not implemented Error: No support for that ALTER TABLE option yet!

-----------
QUERY:


insert into invalid_check_con values(0);
RESULT:
	[]

-----------
QUERY:


alter table invalid_check_con_child add constraint inh_check_constraint check(f1 > 0);
RESULT:
	ERROR - Not implemented Error: No support for that ALTER TABLE option yet!

-----------
QUERY:

alter table invalid_check_con add constraint inh_check_constraint check(f1 > 0) not valid;
RESULT:
	ERROR - Not implemented Error: No support for that ALTER TABLE option yet!

-----------
QUERY:


insert into invalid_check_con values(0);
RESULT:
	[]

-----------
QUERY:
 -- fail
insert into invalid_check_con_child values(0);
RESULT:
	ERROR - Catalog Error: Table with name invalid_check_con_child does not exist!
Did you mean "invalid_check_con"?

-----------
QUERY:
 -- fail

select conrelid::regclass::text as relname, conname,
       convalidated, conislocal, coninhcount, connoinherit
from pg_constraint where conname like 'inh\_check\_constraint%'
order by 1, 2;
RESULT:
	ERROR - Catalog Error: Type with name regclass does not exist!
Did you mean "real"?

-----------
QUERY:


-- We don/* REPLACED */ ''t drop the invalid_check_con* tables, to test dump/reload with

--
-- Test parameterized append plans for inheritance trees
--

create temp table patest0 (id, x) as
  select x, x from generate_series(0,1000) x;
RESULT:
	ERROR - Not implemented Error: Unimplemented features for CREATE TABLE as

-----------
QUERY:

create temp table patest1() inherits (patest0);
RESULT:
	ERROR - Parser Error: syntax error at or near "inherits"

-----------
QUERY:

insert into patest1
  select x, x from generate_series(0,1000) x;
RESULT:
	ERROR - Catalog Error: Table with name patest1 does not exist!
Did you mean "parent1"?

-----------
QUERY:

create temp table patest2() inherits (patest0);
RESULT:
	ERROR - Parser Error: syntax error at or near "inherits"

-----------
QUERY:

insert into patest2
  select x, x from generate_series(0,1000) x;
RESULT:
	ERROR - Catalog Error: Table with name patest2 does not exist!
Did you mean "parent2"?

-----------
QUERY:

create index patest0i on patest0(id);
RESULT:
	ERROR - Catalog Error: Table with name patest0 does not exist!
Did you mean "a"?

-----------
QUERY:

create index patest1i on patest1(id);
RESULT:
	ERROR - Catalog Error: Table with name patest1 does not exist!
Did you mean "parent1"?

-----------
QUERY:

create index patest2i on patest2(id);
RESULT:
	ERROR - Catalog Error: Table with name patest2 does not exist!
Did you mean "parent2"?

-----------
QUERY:

analyze patest0;
RESULT:
	ERROR - Catalog Error: Table with name patest0 does not exist!
Did you mean "a"?
LINE 2: analyze patest0;
                ^

-----------
QUERY:

analyze patest1;
RESULT:
	ERROR - Catalog Error: Table with name patest1 does not exist!
Did you mean "parent1"?
LINE 2: analyze patest1;
                ^

-----------
QUERY:

analyze patest2;
RESULT:
	ERROR - Catalog Error: Table with name patest2 does not exist!
Did you mean "parent2"?
LINE 2: analyze patest2;
                ^

-----------
QUERY:


explain (costs off)
select * from patest0 join (select f1 from int4_tbl limit 1) ss on id = f1;
RESULT:
	ERROR - Not implemented Error: Unimplemented explain type: costs

-----------
QUERY:

select * from patest0 join (select f1 from int4_tbl limit 1) ss on id = f1;
RESULT:
	ERROR - Catalog Error: Table with name patest0 does not exist!
Did you mean "a"?

-----------
QUERY:


drop index patest2i;
RESULT:
	ERROR - Catalog Error: Index with name patest2i does not exist!
Did you mean "concur_temp_ind_1"?

-----------
QUERY:


explain (costs off)
select * from patest0 join (select f1 from int4_tbl limit 1) ss on id = f1;
RESULT:
	ERROR - Not implemented Error: Unimplemented explain type: costs

-----------
QUERY:

select * from patest0 join (select f1 from int4_tbl limit 1) ss on id = f1;
RESULT:
	ERROR - Catalog Error: Table with name patest0 does not exist!
Did you mean "a"?

-----------
QUERY:


drop table patest0 cascade;
RESULT:
	ERROR - Catalog Error: Table with name patest0 does not exist!
Did you mean "a"?

-----------
QUERY:


--
-- Test merge-append plans for inheritance trees
--

create table matest0 (id serial primary key, name text);
RESULT:
	ERROR - Catalog Error: Type with name serial does not exist!
Did you mean "real"?

-----------
QUERY:

create table matest1 (id integer primary key) inherits (matest0);
RESULT:
	ERROR - Parser Error: syntax error at or near "inherits"

-----------
QUERY:

create table matest2 (id integer primary key) inherits (matest0);
RESULT:
	ERROR - Parser Error: syntax error at or near "inherits"

-----------
QUERY:

create table matest3 (id integer primary key) inherits (matest0);
RESULT:
	ERROR - Parser Error: syntax error at or near "inherits"

-----------
QUERY:


create index matest0i on matest0 ((1-id));
RESULT:
	ERROR - Catalog Error: Table with name matest0 does not exist!
Did you mean "a"?

-----------
QUERY:

create index matest1i on matest1 ((1-id));
RESULT:
	ERROR - Catalog Error: Table with name matest1 does not exist!
Did you mean "a"?

-----------
QUERY:

-- create index matest2i on matest2 ((1-id)) /* REPLACED */ ,  -- intentionally missing
create index matest3i on matest3 ((1-id));
RESULT:
	ERROR - Catalog Error: Table with name matest3 does not exist!
Did you mean "a"?

-----------
QUERY:


insert into matest1 (name) values ('Test 1');
RESULT:
	ERROR - Catalog Error: Table with name matest1 does not exist!
Did you mean "a"?

-----------
QUERY:

insert into matest1 (name) values ('Test 2');
RESULT:
	ERROR - Catalog Error: Table with name matest1 does not exist!
Did you mean "a"?

-----------
QUERY:

insert into matest2 (name) values ('Test 3');
RESULT:
	ERROR - Catalog Error: Table with name matest2 does not exist!
Did you mean "a"?

-----------
QUERY:

insert into matest2 (name) values ('Test 4');
RESULT:
	ERROR - Catalog Error: Table with name matest2 does not exist!
Did you mean "a"?

-----------
QUERY:

insert into matest3 (name) values ('Test 5');
RESULT:
	ERROR - Catalog Error: Table with name matest3 does not exist!
Did you mean "a"?

-----------
QUERY:

insert into matest3 (name) values ('Test 6');
RESULT:
	ERROR - Catalog Error: Table with name matest3 does not exist!
Did you mean "a"?

-----------
QUERY:


set enable_indexscan = off;
RESULT:
	ERROR - Catalog Error: unrecognized configuration parameter "enable_indexscan"

Did you mean: "Calendar"

-----------
QUERY:
  -- force use of seqscan/sort, so no merge
explain (verbose, costs off) select * from matest0 order by 1-id;
RESULT:
	ERROR - Not implemented Error: Unimplemented explain type: verbose

-----------
QUERY:

select * from matest0 order by 1-id;
RESULT:
	ERROR - Catalog Error: Table with name matest0 does not exist!
Did you mean "a"?

-----------
QUERY:

explain (verbose, costs off) select min(1-id) from matest0;
RESULT:
	ERROR - Not implemented Error: Unimplemented explain type: verbose

-----------
QUERY:

select min(1-id) from matest0;
RESULT:
	ERROR - Catalog Error: Table with name matest0 does not exist!
Did you mean "a"?

-----------
QUERY:

reset enable_indexscan;
RESULT:
	ERROR - Catalog Error: unrecognized configuration parameter "enable_indexscan"

Did you mean: "Calendar"

-----------
QUERY:


set enable_seqscan = off;
RESULT:
	ERROR - Catalog Error: unrecognized configuration parameter "enable_seqscan"

Did you mean: "enable_object_cache"

-----------
QUERY:
  -- plan with fewest seqscans should be merge
set enable_parallel_append = off;
RESULT:
	ERROR - Catalog Error: unrecognized configuration parameter "enable_parallel_append"

Did you mean: "enable_profiling"

-----------
QUERY:
 -- Don/* REPLACED */ ''t let parallel-append interfere
explain (verbose, costs off) select * from matest0 order by 1-id;
RESULT:
	ERROR - Not implemented Error: Unimplemented explain type: verbose

-----------
QUERY:

select * from matest0 order by 1-id;
RESULT:
	ERROR - Catalog Error: Table with name matest0 does not exist!
Did you mean "a"?

-----------
QUERY:

explain (verbose, costs off) select min(1-id) from matest0;
RESULT:
	ERROR - Not implemented Error: Unimplemented explain type: verbose

-----------
QUERY:

select min(1-id) from matest0;
RESULT:
	ERROR - Catalog Error: Table with name matest0 does not exist!
Did you mean "a"?

-----------
QUERY:

reset enable_seqscan;
RESULT:
	ERROR - Catalog Error: unrecognized configuration parameter "enable_seqscan"

Did you mean: "enable_object_cache"

-----------
QUERY:

reset enable_parallel_append;
RESULT:
	ERROR - Catalog Error: unrecognized configuration parameter "enable_parallel_append"

Did you mean: "enable_profiling"

-----------
QUERY:


drop table matest0 cascade;
RESULT:
	ERROR - Catalog Error: Table with name matest0 does not exist!
Did you mean "a"?

-----------
QUERY:


--
-- Check that use of an index with an extraneous column doesn/* REPLACED */ ''t produce
-- a plan with extraneous sorting
--

create table matest0 (a int, b int, c int, d int);
RESULT:
	[]

-----------
QUERY:

create table matest1 () inherits(matest0);
RESULT:
	ERROR - Parser Error: syntax error at or near "inherits"

-----------
QUERY:

create index matest0i on matest0 (b, c);
RESULT:
	[]

-----------
QUERY:

create index matest1i on matest1 (b, c);
RESULT:
	ERROR - Catalog Error: Table with name matest1 does not exist!
Did you mean "matest0"?

-----------
QUERY:


set enable_nestloop = off;
RESULT:
	ERROR - Catalog Error: unrecognized configuration parameter "enable_nestloop"

Did you mean: "enable_external_access"

-----------
QUERY:
  -- we want a plan with two MergeAppends

explain (costs off)
select t1.* from matest0 t1, matest0 t2
where t1.b = t2.b and t2.c = t2.d
order by t1.b limit 10;
RESULT:
	ERROR - Not implemented Error: Unimplemented explain type: costs

-----------
QUERY:


reset enable_nestloop;
RESULT:
	ERROR - Catalog Error: unrecognized configuration parameter "enable_nestloop"

Did you mean: "enable_external_access"

-----------
QUERY:


drop table matest0 cascade;
RESULT:
	[]

-----------
QUERY:


-- Test a MergeAppend plan where one child requires a sort
create table matest0(a int primary key);
RESULT:
	[]

-----------
QUERY:

create table matest1() inherits (matest0);
RESULT:
	ERROR - Parser Error: syntax error at or near "inherits"

-----------
QUERY:

insert into matest0 select generate_series(1, 400);
RESULT:
	ERROR - Conversion Error: Unimplemented type for cast (BIGINT[] -> INTEGER)
LINE 2: insert into matest0 select generate_series(1, 400);
                                   ^

-----------
QUERY:

insert into matest1 select generate_series(1, 200);
RESULT:
	ERROR - Catalog Error: Table with name matest1 does not exist!
Did you mean "matest0"?

-----------
QUERY:

analyze matest0;
RESULT:
	[]

-----------
QUERY:

analyze matest1;
RESULT:
	ERROR - Catalog Error: Table with name matest1 does not exist!
Did you mean "matest0"?
LINE 2: analyze matest1;
                ^

-----------
QUERY:


explain (costs off)
select * from matest0 where a < 100 order by a;
RESULT:
	ERROR - Not implemented Error: Unimplemented explain type: costs

-----------
QUERY:


drop table matest0 cascade;
RESULT:
	[]

-----------
QUERY:


--
-- Test merge-append for UNION ALL append relations
--

set enable_seqscan = off;
RESULT:
	ERROR - Catalog Error: unrecognized configuration parameter "enable_seqscan"

Did you mean: "enable_object_cache"

-----------
QUERY:

set enable_indexscan = on;
RESULT:
	ERROR - Parser Error: syntax error at or near "on"

-----------
QUERY:

set enable_bitmapscan = off;
RESULT:
	ERROR - Catalog Error: unrecognized configuration parameter "enable_bitmapscan"

Did you mean: "enable_object_cache"

-----------
QUERY:


-- Check handling of duplicated, constant, or volatile targetlist items
explain (costs off)
SELECT thousand, tenthous FROM tenk1
UNION ALL
SELECT thousand, thousand FROM tenk1
ORDER BY thousand, tenthous;
RESULT:
	ERROR - Not implemented Error: Unimplemented explain type: costs

-----------
QUERY:


explain (costs off)
SELECT thousand, tenthous, thousand+tenthous AS x FROM tenk1
UNION ALL
SELECT 42, 42, hundred FROM tenk1
ORDER BY thousand, tenthous;
RESULT:
	ERROR - Not implemented Error: Unimplemented explain type: costs

-----------
QUERY:


explain (costs off)
SELECT thousand, tenthous FROM tenk1
UNION ALL
SELECT thousand, random()::integer FROM tenk1
ORDER BY thousand, tenthous;
RESULT:
	ERROR - Not implemented Error: Unimplemented explain type: costs

-----------
QUERY:


-- Check min/max aggregate optimization
explain (costs off)
SELECT min(x) FROM
  (SELECT unique1 AS x FROM tenk1 a
   UNION ALL
   SELECT unique2 AS x FROM tenk1 b) s;
RESULT:
	ERROR - Not implemented Error: Unimplemented explain type: costs

-----------
QUERY:


explain (costs off)
SELECT min(y) FROM
  (SELECT unique1 AS x, unique1 AS y FROM tenk1 a
   UNION ALL
   SELECT unique2 AS x, unique2 AS y FROM tenk1 b) s;
RESULT:
	ERROR - Not implemented Error: Unimplemented explain type: costs

-----------
QUERY:


-- XXX planner doesn/* REPLACED */ ''t recognize that index on unique2 is sufficiently sorted
explain (costs off)
SELECT x, y FROM
  (SELECT thousand AS x, tenthous AS y FROM tenk1 a
   UNION ALL
   SELECT unique2 AS x, unique2 AS y FROM tenk1 b) s
ORDER BY x, y;
RESULT:
	ERROR - Not implemented Error: Unimplemented explain type: costs

-----------
QUERY:


-- exercise rescan code path via a repeatedly-evaluated subquery
explain (costs off)
SELECT
    ARRAY(SELECT f.i FROM (
        (SELECT d + g.i FROM generate_series(4, 30, 3) d ORDER BY 1)
        UNION ALL
        (SELECT d + g.i FROM generate_series(0, 30, 5) d ORDER BY 1)
    ) f(i)
    ORDER BY f.i LIMIT 10)
FROM generate_series(1, 3) g(i);
RESULT:
	ERROR - Not implemented Error: Unimplemented explain type: costs

-----------
QUERY:


SELECT
    ARRAY(SELECT f.i FROM (
        (SELECT d + g.i FROM generate_series(4, 30, 3) d ORDER BY 1)
        UNION ALL
        (SELECT d + g.i FROM generate_series(0, 30, 5) d ORDER BY 1)
    ) f(i)
    ORDER BY f.i LIMIT 10)
FROM generate_series(1, 3) g(i);
RESULT:
	ERROR - Binder Error: No function matches the given name and argument types '+(STRUCT(generate_series BIGINT), BIGINT)'. You might need to add explicit type casts.
	Candidate functions:
	+(TINYINT) -> TINYINT
	+(TINYINT, TINYINT) -> TINYINT
	+(SMALLINT) -> SMALLINT
	+(SMALLINT, SMALLINT) -> SMALLINT
	+(INTEGER) -> INTEGER
	+(INTEGER, INTEGER) -> INTEGER
	+(BIGINT) -> BIGINT
	+(BIGINT, BIGINT) -> BIGINT
	+(HUGEINT) -> HUGEINT
	+(HUGEINT, HUGEINT) -> HUGEINT
	+(FLOAT) -> FLOAT
	+(FLOAT, FLOAT) -> FLOAT
	+(DOUBLE) -> DOUBLE
	+(DOUBLE, DOUBLE) -> DOUBLE
	+(DECIMAL) -> DECIMAL
	+(DECIMAL, DECIMAL) -> DECIMAL
	+(UTINYINT) -> UTINYINT
	+(UTINYINT, UTINYINT) -> UTINYINT
	+(USMALLINT) -> USMALLINT
	+(USMALLINT, USMALLINT) -> USMALLINT
	+(UINTEGER) -> UINTEGER
	+(UINTEGER, UINTEGER) -> UINTEGER
	+(UBIGINT) -> UBIGINT
	+(UBIGINT, UBIGINT) -> UBIGINT
	+(UHUGEINT) -> UHUGEINT
	+(UHUGEINT, UHUGEINT) -> UHUGEINT
	+(DATE, INTEGER) -> DATE
	+(INTEGER, DATE) -> DATE
	+(INTERVAL, INTERVAL) -> INTERVAL
	+(DATE, INTERVAL) -> TIMESTAMP
	+(INTERVAL, DATE) -> TIMESTAMP
	+(TIME, INTERVAL) -> TIME
	+(INTERVAL, TIME) -> TIME
	+(TIMESTAMP, INTERVAL) -> TIMESTAMP
	+(INTERVAL, TIMESTAMP) -> TIMESTAMP
	+(TIME WITH TIME ZONE, INTERVAL) -> TIME WITH TIME ZONE
	+(INTERVAL, TIME WITH TIME ZONE) -> TIME WITH TIME ZONE
	+(TIME, DATE) -> TIMESTAMP
	+(DATE, TIME) -> TIMESTAMP
	+(TIME WITH TIME ZONE, DATE) -> TIMESTAMP WITH TIME ZONE
	+(DATE, TIME WITH TIME ZONE) -> TIMESTAMP WITH TIME ZONE
	+(ANY[], ANY[]) -> ANY[]
	+(TIMESTAMP WITH TIME ZONE, INTERVAL) -> TIMESTAMP WITH TIME ZONE
	+(INTERVAL, TIMESTAMP WITH TIME ZONE) -> TIMESTAMP WITH TIME ZONE


-----------
QUERY:


reset enable_seqscan;
RESULT:
	ERROR - Catalog Error: unrecognized configuration parameter "enable_seqscan"

Did you mean: "enable_object_cache"

-----------
QUERY:

reset enable_indexscan;
RESULT:
	ERROR - Catalog Error: unrecognized configuration parameter "enable_indexscan"

Did you mean: "Calendar"

-----------
QUERY:

reset enable_bitmapscan;
RESULT:
	ERROR - Catalog Error: unrecognized configuration parameter "enable_bitmapscan"

Did you mean: "enable_object_cache"

-----------
QUERY:


--
-- Check handling of MULTIEXPR SubPlans in inherited updates
--
create table inhpar(f1 int, f2 name);
RESULT:
	ERROR - Catalog Error: Type with name name does not exist!
Did you mean "date"?

-----------
QUERY:

create table inhcld(f2 name, f1 int);
RESULT:
	ERROR - Catalog Error: Type with name name does not exist!
Did you mean "date"?

-----------
QUERY:

alter table inhcld inherit inhpar;
RESULT:
	ERROR - Parser Error: syntax error at or near "inherit"

-----------
QUERY:

insert into inhpar select x, x::text from generate_series(1,5) x;
RESULT:
	ERROR - Catalog Error: Table with name inhpar does not exist!
Did you mean "a"?

-----------
QUERY:

insert into inhcld select x::text, x from generate_series(6,10) x;
RESULT:
	ERROR - Catalog Error: Table with name inhcld does not exist!
Did you mean "inhs1"?

-----------
QUERY:


explain (verbose, costs off)
update inhpar i set (f1, f2) = (select i.f1, i.f2 || '-' from int4_tbl limit 1);
RESULT:
	ERROR - Not implemented Error: Unimplemented explain type: verbose

-----------
QUERY:

update inhpar i set (f1, f2) = (select i.f1, i.f2 || '-' from int4_tbl limit 1);
RESULT:
	ERROR - Catalog Error: Table with name inhpar does not exist!
Did you mean "a"?
LINE 2: update inhpar i set (f1, f2) = (select i.f1, ...
               ^

-----------
QUERY:

select * from inhpar;
RESULT:
	ERROR - Catalog Error: Table with name inhpar does not exist!
Did you mean "a"?

-----------
QUERY:


drop table inhpar cascade;
RESULT:
	ERROR - Catalog Error: Table with name inhpar does not exist!
Did you mean "a"?

-----------
QUERY:


--
-- And the same for partitioned cases
--
create table inhpar(f1 int primary key, f2 name) partition by range (f1);
RESULT:
	ERROR - Parser Error: syntax error at or near "partition"

-----------
QUERY:

create table inhcld1(f2 name, f1 int primary key);
RESULT:
	ERROR - Catalog Error: Type with name name does not exist!
Did you mean "date"?

-----------
QUERY:

create table inhcld2(f1 int primary key, f2 name);
RESULT:
	ERROR - Catalog Error: Type with name name does not exist!
Did you mean "date"?

-----------
QUERY:

alter table inhpar attach partition inhcld1 for values from (1) to (5);
RESULT:
	ERROR - Parser Error: syntax error at or near "attach"

-----------
QUERY:

alter table inhpar attach partition inhcld2 for values from (5) to (100);
RESULT:
	ERROR - Parser Error: syntax error at or near "attach"

-----------
QUERY:

insert into inhpar select x, x::text from generate_series(1,10) x;
RESULT:
	ERROR - Catalog Error: Table with name inhpar does not exist!
Did you mean "a"?

-----------
QUERY:


explain (verbose, costs off)
update inhpar i set (f1, f2) = (select i.f1, i.f2 || '-' from int4_tbl limit 1);
RESULT:
	ERROR - Not implemented Error: Unimplemented explain type: verbose

-----------
QUERY:

update inhpar i set (f1, f2) = (select i.f1, i.f2 || '-' from int4_tbl limit 1);
RESULT:
	ERROR - Catalog Error: Table with name inhpar does not exist!
Did you mean "a"?
LINE 2: update inhpar i set (f1, f2) = (select i.f1, ...
               ^

-----------
QUERY:

select * from inhpar;
RESULT:
	ERROR - Catalog Error: Table with name inhpar does not exist!
Did you mean "a"?

-----------
QUERY:


-- Also check ON CONFLICT
insert into inhpar as i values (3), (7) on conflict (f1)
  do update set (f1, f2) = (select i.f1, i.f2 || '+');
RESULT:
	ERROR - Catalog Error: Table with name inhpar does not exist!
Did you mean "a"?

-----------
QUERY:

select * from inhpar order by f1;
RESULT:
	ERROR - Catalog Error: Table with name inhpar does not exist!
Did you mean "a"?

-----------
QUERY:
  -- tuple order might be unstable here

drop table inhpar cascade;
RESULT:
	ERROR - Catalog Error: Table with name inhpar does not exist!
Did you mean "a"?

-----------
QUERY:


--
-- Check handling of a constant-null CHECK constraint
--
create table cnullparent (f1 int);
RESULT:
	[]

-----------
QUERY:

create table cnullchild (check (f1 = 1 or f1 = null)) inherits(cnullparent);
RESULT:
	ERROR - Parser Error: syntax error at or near "inherits"

-----------
QUERY:

insert into cnullchild values(1);
RESULT:
	ERROR - Catalog Error: Table with name cnullchild does not exist!
Did you mean "a"?

-----------
QUERY:

insert into cnullchild values(2);
RESULT:
	ERROR - Catalog Error: Table with name cnullchild does not exist!
Did you mean "a"?

-----------
QUERY:

insert into cnullchild values(null);
RESULT:
	ERROR - Catalog Error: Table with name cnullchild does not exist!
Did you mean "a"?

-----------
QUERY:

select * from cnullparent;
RESULT:
	[]

-----------
QUERY:

select * from cnullparent where f1 = 2;
RESULT:
	[]

-----------
QUERY:

drop table cnullparent cascade;
RESULT:
	[]

-----------
QUERY:


--
-- Test inheritance of NOT NULL constraints
--
create table pp1 (f1 int);
RESULT:
	[]

-----------
QUERY:

create table cc1 (f2 text, f3 int) inherits (pp1);
RESULT:
	ERROR - Parser Error: syntax error at or near "inherits"

-----------
QUERY:

-- \d cc1
create table cc2(f4 float) inherits(pp1,cc1);
RESULT:
	ERROR - Parser Error: syntax error at or near "inherits"

-----------
QUERY:

-- \d cc2

-- named NOT NULL constraint
alter table cc1 add column a2 int constraint nn not null;
RESULT:
	ERROR - Parser Error: Adding columns with constraints not yet supported

-----------
QUERY:

-- \d+ cc1
-- \d+ cc2
alter table pp1 alter column f1 set not null;
RESULT:
	[]

-----------
QUERY:

-- \d+ pp1
-- \d+ cc1
-- \d+ cc2

-- cannot create table with inconsistent NO INHERIT constraint
create table cc3 (a2 int not null no inherit) inherits (cc1);
RESULT:
	ERROR - Parser Error: syntax error at or near "no"

-----------
QUERY:


-- change NO INHERIT status of inherited constraint: no dice, it/* REPLACED */ ''s inherited
alter table cc2 add not null a2 no inherit;
RESULT:
	ERROR - Parser Error: syntax error at or near "not"

-----------
QUERY:


-- remove constraint from cc2: no dice, it/* REPLACED */ ''s inherited
alter table cc2 alter column a2 drop not null;
RESULT:
	ERROR - Catalog Error: Table with name cc2 does not exist!
Did you mean "p2"?

-----------
QUERY:


-- remove constraint cc1, should succeed
alter table cc1 alter column a2 drop not null;
RESULT:
	ERROR - Catalog Error: Table with name cc1 does not exist!
Did you mean "a"?

-----------
QUERY:

-- \d+ cc1

-- same for cc2
alter table cc2 alter column f1 drop not null;
RESULT:
	ERROR - Catalog Error: Table with name cc2 does not exist!
Did you mean "p2"?

-----------
QUERY:

-- \d+ cc2

-- remove from cc1, should fail again
alter table cc1 alter column f1 drop not null;
RESULT:
	ERROR - Catalog Error: Table with name cc1 does not exist!
Did you mean "a"?

-----------
QUERY:


-- remove from pp1, should succeed
alter table pp1 alter column f1 drop not null;
RESULT:
	[]

-----------
QUERY:

-- \d+ pp1

alter table pp1 add primary key (f1);
RESULT:
	ERROR - Not implemented Error: No support for that ALTER TABLE option yet!

-----------
QUERY:

-- Leave these tables around, for pg_upgrade testing

-- Test the same constraint name for different columns in different parents
create table inh_parent1(a int constraint nn not null);
RESULT:
	[]

-----------
QUERY:

create table inh_parent2(b int constraint nn not null);
RESULT:
	[]

-----------
QUERY:

create table inh_child () inherits (inh_parent1, inh_parent2);
RESULT:
	ERROR - Parser Error: syntax error at or near "inherits"

-----------
QUERY:

-- \d+ inh_child
drop table inh_parent1, inh_parent2, inh_child;
RESULT:
	ERROR - Not implemented Error: Can only drop one object at a time

-----------
QUERY:


-- Test multiple parents with overlapping primary keys
create table inh_parent1(a int, b int, c int, primary key (a, b));
RESULT:
	ERROR - Catalog Error: Table with name "inh_parent1" already exists!

-----------
QUERY:

create table inh_parent2(d int, e int, b int, primary key (d, b));
RESULT:
	ERROR - Catalog Error: Table with name "inh_parent2" already exists!

-----------
QUERY:

create table inh_child() inherits (inh_parent1, inh_parent2);
RESULT:
	ERROR - Parser Error: syntax error at or near "inherits"

-----------
QUERY:

select conrelid::regclass, conname, contype, conkey,
 coninhcount, conislocal, connoinherit
 from pg_constraint where contype in ('n','p') and
 conrelid::regclass::text in ('inh_child', 'inh_parent1', 'inh_parent2')
 order by 1, 2;
RESULT:
	ERROR - Catalog Error: Type with name regclass does not exist!
Did you mean "real"?

-----------
QUERY:

-- \d+ inh_child
drop table inh_parent1, inh_parent2, inh_child;
RESULT:
	ERROR - Not implemented Error: Can only drop one object at a time

-----------
QUERY:


-- NOT NULL NO INHERIT
create table inh_nn_parent(a int);
RESULT:
	[]

-----------
QUERY:

create table inh_nn_child() inherits (inh_nn_parent);
RESULT:
	ERROR - Parser Error: syntax error at or near "inherits"

-----------
QUERY:

alter table inh_nn_parent add not null a no inherit;
RESULT:
	ERROR - Parser Error: syntax error at or near "not"

-----------
QUERY:

create table inh_nn_child2() inherits (inh_nn_parent);
RESULT:
	ERROR - Parser Error: syntax error at or near "inherits"

-----------
QUERY:

select conrelid::regclass, conname, contype, conkey,
 (select attname from pg_attribute where attrelid = conrelid and attnum = conkey[1]),
 coninhcount, conislocal, connoinherit
 from pg_constraint where contype = 'n' and
 conrelid::regclass::text like 'inh\_nn\_%'
 order by 2, 1;
RESULT:
	ERROR - Catalog Error: Type with name regclass does not exist!
Did you mean "real"?

-----------
QUERY:

-- \d+ inh_nn*
drop table inh_nn_parent, inh_nn_child, inh_nn_child2;
RESULT:
	ERROR - Not implemented Error: Can only drop one object at a time

-----------
QUERY:


--
-- test inherit/deinherit
--
create table inh_parent(f1 int);
RESULT:
	[]

-----------
QUERY:

create table inh_child1(f1 int not null);
RESULT:
	[]

-----------
QUERY:

create table inh_child2(f1 int);
RESULT:
	[]

-----------
QUERY:


-- inh_child1 should have not null constraint
alter table inh_child1 inherit inh_parent;
RESULT:
	ERROR - Parser Error: syntax error at or near "inherit"

-----------
QUERY:


-- should fail, missing NOT NULL constraint
alter table inh_child2 inherit inh_child1;
RESULT:
	ERROR - Parser Error: syntax error at or near "inherit"

-----------
QUERY:


alter table inh_child2 alter column f1 set not null;
RESULT:
	[]

-----------
QUERY:

alter table inh_child2 inherit inh_child1;
RESULT:
	ERROR - Parser Error: syntax error at or near "inherit"

-----------
QUERY:


-- add NOT NULL constraint recursively
alter table inh_parent alter column f1 set not null;
RESULT:
	[]

-----------
QUERY:


-- \d+ inh_parent
-- \d+ inh_child1
-- \d+ inh_child2

select conrelid::regclass, conname, contype, coninhcount, conislocal
 from pg_constraint where contype = 'n' and
 conrelid in ('inh_parent'::regclass, 'inh_child1'::regclass, 'inh_child2'::regclass)
 order by 2, 1;
RESULT:
	ERROR - Catalog Error: Type with name regclass does not exist!
Did you mean "real"?

-----------
QUERY:


--
-- test deinherit procedure
--

-- deinherit inh_child1
create table inh_child3 () inherits (inh_child1);
RESULT:
	ERROR - Parser Error: syntax error at or near "inherits"

-----------
QUERY:

alter table inh_child1 no inherit inh_parent;
RESULT:
	ERROR - Parser Error: syntax error at or near "no"

-----------
QUERY:

-- \d+ inh_parent
-- \d+ inh_child1
-- \d+ inh_child2
select conrelid::regclass, conname, contype, coninhcount, conislocal
 from pg_constraint where contype = 'n' and
 conrelid::regclass::text in ('inh_parent', 'inh_child1', 'inh_child2', 'inh_child3')
 order by 2, 1;
RESULT:
	ERROR - Catalog Error: Type with name regclass does not exist!
Did you mean "real"?

-----------
QUERY:

drop table inh_parent, inh_child1, inh_child2, inh_child3;
RESULT:
	ERROR - Not implemented Error: Can only drop one object at a time

-----------
QUERY:


-- a PK in parent must have a not-null in child that it can mark inherited
create table inh_parent (a int primary key);
RESULT:
	ERROR - Catalog Error: Table with name "inh_parent" already exists!

-----------
QUERY:

create table inh_child (a int primary key);
RESULT:
	[]

-----------
QUERY:

alter table inh_child inherit inh_parent;
RESULT:
	ERROR - Parser Error: syntax error at or near "inherit"

-----------
QUERY:
		-- nope
alter table inh_child alter a set not null;
RESULT:
	[]

-----------
QUERY:

alter table inh_child inherit inh_parent;
RESULT:
	ERROR - Parser Error: syntax error at or near "inherit"

-----------
QUERY:
		-- now it works

-- don/* REPLACED */ ''t interfere with other types of constraints
alter table inh_parent add constraint inh_parent_excl exclude ((1) with =);
RESULT:
	ERROR - Parser Error: syntax error at or near "exclude"

-----------
QUERY:

alter table inh_parent add constraint inh_parent_uq unique (a);
RESULT:
	ERROR - Not implemented Error: No support for that ALTER TABLE option yet!

-----------
QUERY:

alter table inh_parent add constraint inh_parent_fk foreign key (a) references inh_parent (a);
RESULT:
	ERROR - Not implemented Error: No support for that ALTER TABLE option yet!

-----------
QUERY:

create table inh_child2 () inherits (inh_parent);
RESULT:
	ERROR - Parser Error: syntax error at or near "inherits"

-----------
QUERY:

create table inh_child3 (like inh_parent);
RESULT:
	ERROR - Not implemented Error: ColumnDef type not handled yet

-----------
QUERY:

alter table inh_child3 inherit inh_parent;
RESULT:
	ERROR - Parser Error: syntax error at or near "inherit"

-----------
QUERY:

select conrelid::regclass, conname, contype, coninhcount, conislocal
 from pg_constraint
 where conrelid::regclass::text in ('inh_parent', 'inh_child', 'inh_child2', 'inh_child3')
 order by 2, 1;
RESULT:
	ERROR - Catalog Error: Type with name regclass does not exist!
Did you mean "real"?

-----------
QUERY:


drop table inh_parent, inh_child, inh_child2, inh_child3;
RESULT:
	ERROR - Not implemented Error: Can only drop one object at a time

-----------
QUERY:


--
-- test multi inheritance tree
--
create table inh_parent(f1 int not null);
RESULT:
	ERROR - Catalog Error: Table with name "inh_parent" already exists!

-----------
QUERY:

create table inh_child1() inherits(inh_parent);
RESULT:
	ERROR - Parser Error: syntax error at or near "inherits"

-----------
QUERY:

create table inh_child2() inherits(inh_parent);
RESULT:
	ERROR - Parser Error: syntax error at or near "inherits"

-----------
QUERY:

create table inh_child3() inherits(inh_child1, inh_child2);
RESULT:
	ERROR - Parser Error: syntax error at or near "inherits"

-----------
QUERY:


-- show constraint info
select conrelid::regclass, conname, contype, coninhcount, conislocal
 from pg_constraint where contype = 'n' and
 conrelid in ('inh_parent'::regclass, 'inh_child1'::regclass, 'inh_child2'::regclass, 'inh_child3'::regclass)
 order by 2, conrelid::regclass::text;
RESULT:
	ERROR - Catalog Error: Type with name regclass does not exist!
Did you mean "real"?

-----------
QUERY:


drop table inh_parent cascade;
RESULT:
	[]

-----------
QUERY:


-- test child table with inherited columns and
-- with explicitly specified not null constraints
create table inh_parent_1(f1 int);
RESULT:
	[]

-----------
QUERY:

create table inh_parent_2(f2 text);
RESULT:
	[]

-----------
QUERY:

create table inh_child(f1 int not null, f2 text not null) inherits(inh_parent_1, inh_parent_2);
RESULT:
	ERROR - Parser Error: syntax error at or near "inherits"

-----------
QUERY:


-- show constraint info
select conrelid::regclass, conname, contype, coninhcount, conislocal
 from pg_constraint where contype = 'n' and
 conrelid in ('inh_parent_1'::regclass, 'inh_parent_2'::regclass, 'inh_child'::regclass)
 order by 2, conrelid::regclass::text;
RESULT:
	ERROR - Catalog Error: Type with name regclass does not exist!
Did you mean "real"?

-----------
QUERY:


-- also drops inh_child table
drop table inh_parent_1 cascade;
RESULT:
	[]

-----------
QUERY:

drop table inh_parent_2;
RESULT:
	[]

-----------
QUERY:


-- test multi layer inheritance tree
create table inh_p1(f1 int not null);
RESULT:
	[]

-----------
QUERY:

create table inh_p2(f1 int not null);
RESULT:
	[]

-----------
QUERY:

create table inh_p3(f2 int);
RESULT:
	[]

-----------
QUERY:

create table inh_p4(f1 int not null, f3 text not null);
RESULT:
	[]

-----------
QUERY:


create table inh_multiparent() inherits(inh_p1, inh_p2, inh_p3, inh_p4);
RESULT:
	ERROR - Parser Error: syntax error at or near "inherits"

-----------
QUERY:


-- constraint on f1 should have three parents
select conrelid::regclass, contype, conname,
  (select attname from pg_attribute where attrelid = conrelid and attnum = conkey[1]),
  coninhcount, conislocal
 from pg_constraint where contype = 'n' and
 conrelid::regclass in ('inh_p1', 'inh_p2', 'inh_p3', 'inh_p4',
	'inh_multiparent')
 order by conrelid::regclass::text, conname;
RESULT:
	ERROR - Catalog Error: Type with name regclass does not exist!
Did you mean "real"?

-----------
QUERY:


create table inh_multiparent2 (a int not null, f1 int) inherits(inh_p3, inh_multiparent);
RESULT:
	ERROR - Parser Error: syntax error at or near "inherits"

-----------
QUERY:

select conrelid::regclass, contype, conname,
  (select attname from pg_attribute where attrelid = conrelid and attnum = conkey[1]),
  coninhcount, conislocal
 from pg_constraint where contype = 'n' and
 conrelid::regclass in ('inh_p3', 'inh_multiparent', 'inh_multiparent2')
 order by conrelid::regclass::text, conname;
RESULT:
	ERROR - Catalog Error: Type with name regclass does not exist!
Did you mean "real"?

-----------
QUERY:


drop table inh_p1, inh_p2, inh_p3, inh_p4 cascade;
RESULT:
	ERROR - Not implemented Error: Can only drop one object at a time

-----------
QUERY:


--
-- Mixed ownership inheritance tree
--
create role regress_alice;
RESULT:
	ERROR - Parser Error: syntax error at or near "role"

-----------
QUERY:

create role regress_bob;
RESULT:
	ERROR - Parser Error: syntax error at or near "role"

-----------
QUERY:

grant all on schema public to regress_alice, regress_bob;
RESULT:
	ERROR - Parser Error: syntax error at or near "grant"

-----------
QUERY:

grant regress_alice to regress_bob;
RESULT:
	ERROR - Parser Error: syntax error at or near "grant"

-----------
QUERY:

set session authorization regress_alice;
RESULT:
	ERROR - Parser Error: syntax error at or near "authorization"

-----------
QUERY:

create table inh_parent (a int not null);
RESULT:
	[]

-----------
QUERY:

set session authorization regress_bob;
RESULT:
	ERROR - Parser Error: syntax error at or near "authorization"

-----------
QUERY:

create table inh_child () inherits (inh_parent);
RESULT:
	ERROR - Parser Error: syntax error at or near "inherits"

-----------
QUERY:

set session authorization regress_alice;
RESULT:
	ERROR - Parser Error: syntax error at or near "authorization"

-----------
QUERY:

-- alice can/* REPLACED */ ''t do this: she doesn/* REPLACED */ ''t own inh_child
alter table inh_parent alter a drop not null;
RESULT:
	[]

-----------
QUERY:

set session authorization regress_bob;
RESULT:
	ERROR - Parser Error: syntax error at or near "authorization"

-----------
QUERY:

alter table inh_parent alter a drop not null;
RESULT:
	[]

-----------
QUERY:

reset session authorization;
RESULT:
	ERROR - Parser Error: syntax error at or near "authorization"

-----------
QUERY:

drop table inh_parent, inh_child;
RESULT:
	ERROR - Not implemented Error: Can only drop one object at a time

-----------
QUERY:

revoke all on schema public from regress_alice, regress_bob;
RESULT:
	ERROR - Parser Error: syntax error at or near "revoke"

-----------
QUERY:

drop role regress_alice, regress_bob;
RESULT:
	ERROR - Parser Error: syntax error at or near "role"

-----------
QUERY:


--
-- Check use of temporary tables with inheritance trees
--
create table inh_perm_parent (a1 int);
RESULT:
	[]

-----------
QUERY:

create temp table inh_temp_parent (a1 int);
RESULT:
	[]

-----------
QUERY:

create temp table inh_temp_child () inherits (inh_perm_parent);
RESULT:
	ERROR - Parser Error: syntax error at or near "inherits"

-----------
QUERY:
 -- ok
create table inh_perm_child () inherits (inh_temp_parent);
RESULT:
	ERROR - Parser Error: syntax error at or near "inherits"

-----------
QUERY:
 -- error
create temp table inh_temp_child_2 () inherits (inh_temp_parent);
RESULT:
	ERROR - Parser Error: syntax error at or near "inherits"

-----------
QUERY:
 -- ok
insert into inh_perm_parent values (1);
RESULT:
	[]

-----------
QUERY:

insert into inh_temp_parent values (2);
RESULT:
	[]

-----------
QUERY:

insert into inh_temp_child values (3);
RESULT:
	ERROR - Catalog Error: Table with name inh_temp_child does not exist!
Did you mean "inh_child"?

-----------
QUERY:

insert into inh_temp_child_2 values (4);
RESULT:
	ERROR - Catalog Error: Table with name inh_temp_child_2 does not exist!
Did you mean "inh_child2"?

-----------
QUERY:

select tableoid::regclass, a1 from inh_perm_parent;
RESULT:
	ERROR - Binder Error: Referenced column "tableoid" not found in FROM clause!
Candidate bindings: "inh_perm_parent.a1"

-----------
QUERY:

select tableoid::regclass, a1 from inh_temp_parent;
RESULT:
	ERROR - Binder Error: Referenced column "tableoid" not found in FROM clause!
Candidate bindings: "inh_temp_parent.a1"

-----------
QUERY:

drop table inh_perm_parent cascade;
RESULT:
	[]

-----------
QUERY:

drop table inh_temp_parent cascade;
RESULT:
	[]

-----------
QUERY:


--
-- Check that constraint exclusion works correctly with partitions using
-- implicit constraints generated from the partition bound information.
--
create table list_parted (
	a	varchar
) partition by list (a);
RESULT:
	ERROR - Parser Error: syntax error at or near "partition"

-----------
QUERY:

create table part_ab_cd partition of list_parted for values in ('ab', 'cd');
RESULT:
	ERROR - Parser Error: syntax error at or near "partition"

-----------
QUERY:

create table part_ef_gh partition of list_parted for values in ('ef', 'gh');
RESULT:
	ERROR - Parser Error: syntax error at or near "partition"

-----------
QUERY:

create table part_null_xy partition of list_parted for values in (null, 'xy');
RESULT:
	ERROR - Parser Error: syntax error at or near "partition"

-----------
QUERY:


explain (costs off) select * from list_parted;
RESULT:
	ERROR - Not implemented Error: Unimplemented explain type: costs

-----------
QUERY:

explain (costs off) select * from list_parted where a is null;
RESULT:
	ERROR - Not implemented Error: Unimplemented explain type: costs

-----------
QUERY:

explain (costs off) select * from list_parted where a is not null;
RESULT:
	ERROR - Not implemented Error: Unimplemented explain type: costs

-----------
QUERY:

explain (costs off) select * from list_parted where a in ('ab', 'cd', 'ef');
RESULT:
	ERROR - Not implemented Error: Unimplemented explain type: costs

-----------
QUERY:

explain (costs off) select * from list_parted where a = 'ab' or a in (null, 'cd');
RESULT:
	ERROR - Not implemented Error: Unimplemented explain type: costs

-----------
QUERY:

explain (costs off) select * from list_parted where a = 'ab';
RESULT:
	ERROR - Not implemented Error: Unimplemented explain type: costs

-----------
QUERY:


create table range_list_parted (
	a	int,
	b	char(2)
) partition by range (a);
RESULT:
	ERROR - Parser Error: syntax error at or near "partition"

-----------
QUERY:

create table part_1_10 partition of range_list_parted for values from (1) to (10) partition by list (b);
RESULT:
	ERROR - Parser Error: syntax error at or near "partition"

-----------
QUERY:

create table part_1_10_ab partition of part_1_10 for values in ('ab');
RESULT:
	ERROR - Parser Error: syntax error at or near "partition"

-----------
QUERY:

create table part_1_10_cd partition of part_1_10 for values in ('cd');
RESULT:
	ERROR - Parser Error: syntax error at or near "partition"

-----------
QUERY:

create table part_10_20 partition of range_list_parted for values from (10) to (20) partition by list (b);
RESULT:
	ERROR - Parser Error: syntax error at or near "partition"

-----------
QUERY:

create table part_10_20_ab partition of part_10_20 for values in ('ab');
RESULT:
	ERROR - Parser Error: syntax error at or near "partition"

-----------
QUERY:

create table part_10_20_cd partition of part_10_20 for values in ('cd');
RESULT:
	ERROR - Parser Error: syntax error at or near "partition"

-----------
QUERY:

create table part_21_30 partition of range_list_parted for values from (21) to (30) partition by list (b);
RESULT:
	ERROR - Parser Error: syntax error at or near "partition"

-----------
QUERY:

create table part_21_30_ab partition of part_21_30 for values in ('ab');
RESULT:
	ERROR - Parser Error: syntax error at or near "partition"

-----------
QUERY:

create table part_21_30_cd partition of part_21_30 for values in ('cd');
RESULT:
	ERROR - Parser Error: syntax error at or near "partition"

-----------
QUERY:

create table part_40_inf partition of range_list_parted for values from (40) to (maxvalue) partition by list (b);
RESULT:
	ERROR - Parser Error: syntax error at or near "partition"

-----------
QUERY:

create table part_40_inf_ab partition of part_40_inf for values in ('ab');
RESULT:
	ERROR - Parser Error: syntax error at or near "partition"

-----------
QUERY:

create table part_40_inf_cd partition of part_40_inf for values in ('cd');
RESULT:
	ERROR - Parser Error: syntax error at or near "partition"

-----------
QUERY:

create table part_40_inf_null partition of part_40_inf for values in (null);
RESULT:
	ERROR - Parser Error: syntax error at or near "partition"

-----------
QUERY:


explain (costs off) select * from range_list_parted;
RESULT:
	ERROR - Not implemented Error: Unimplemented explain type: costs

-----------
QUERY:

explain (costs off) select * from range_list_parted where a = 5;
RESULT:
	ERROR - Not implemented Error: Unimplemented explain type: costs

-----------
QUERY:

explain (costs off) select * from range_list_parted where b = 'ab';
RESULT:
	ERROR - Not implemented Error: Unimplemented explain type: costs

-----------
QUERY:

explain (costs off) select * from range_list_parted where a between 3 and 23 and b in ('ab');
RESULT:
	ERROR - Not implemented Error: Unimplemented explain type: costs

-----------
QUERY:


/* Should select no rows because range partition key cannot be null */
explain (costs off) select * from range_list_parted where a is null;
RESULT:
	ERROR - Not implemented Error: Unimplemented explain type: costs

-----------
QUERY:


/* Should only select rows from the null-accepting partition */
explain (costs off) select * from range_list_parted where b is null;
RESULT:
	ERROR - Not implemented Error: Unimplemented explain type: costs

-----------
QUERY:

explain (costs off) select * from range_list_parted where a is not null and a < 67;
RESULT:
	ERROR - Not implemented Error: Unimplemented explain type: costs

-----------
QUERY:

explain (costs off) select * from range_list_parted where a >= 30;
RESULT:
	ERROR - Not implemented Error: Unimplemented explain type: costs

-----------
QUERY:


drop table list_parted;
RESULT:
	ERROR - Catalog Error: Table with name list_parted does not exist!
Did you mean "firstparent"?

-----------
QUERY:

drop table range_list_parted;
RESULT:
	ERROR - Catalog Error: Table with name range_list_parted does not exist!
Did you mean "pg_type"?

-----------
QUERY:


-- check that constraint exclusion is able to cope with the partition
-- constraint emitted for multi-column range partitioned tables
create table mcrparted (a int, b int, c int) partition by range (a, abs(b), c);
RESULT:
	ERROR - Parser Error: syntax error at or near "partition"

-----------
QUERY:

create table mcrparted_def partition of mcrparted default;
RESULT:
	ERROR - Parser Error: syntax error at or near "partition"

-----------
QUERY:

create table mcrparted0 partition of mcrparted for values from (minvalue, minvalue, minvalue) to (1, 1, 1);
RESULT:
	ERROR - Parser Error: syntax error at or near "partition"

-----------
QUERY:

create table mcrparted1 partition of mcrparted for values from (1, 1, 1) to (10, 5, 10);
RESULT:
	ERROR - Parser Error: syntax error at or near "partition"

-----------
QUERY:

create table mcrparted2 partition of mcrparted for values from (10, 5, 10) to (10, 10, 10);
RESULT:
	ERROR - Parser Error: syntax error at or near "partition"

-----------
QUERY:

create table mcrparted3 partition of mcrparted for values from (11, 1, 1) to (20, 10, 10);
RESULT:
	ERROR - Parser Error: syntax error at or near "partition"

-----------
QUERY:

create table mcrparted4 partition of mcrparted for values from (20, 10, 10) to (20, 20, 20);
RESULT:
	ERROR - Parser Error: syntax error at or near "partition"

-----------
QUERY:

create table mcrparted5 partition of mcrparted for values from (20, 20, 20) to (maxvalue, maxvalue, maxvalue);
RESULT:
	ERROR - Parser Error: syntax error at or near "partition"

-----------
QUERY:

explain (costs off) select * from mcrparted where a = 0;
RESULT:
	ERROR - Not implemented Error: Unimplemented explain type: costs

-----------
QUERY:
	-- scans mcrparted0, mcrparted_def
explain (costs off) select * from mcrparted where a = 10 and abs(b) < 5;
RESULT:
	ERROR - Not implemented Error: Unimplemented explain type: costs

-----------
QUERY:
	-- scans mcrparted1, mcrparted_def
explain (costs off) select * from mcrparted where a = 10 and abs(b) = 5;
RESULT:
	ERROR - Not implemented Error: Unimplemented explain type: costs

-----------
QUERY:
	-- scans mcrparted1, mcrparted2, mcrparted_def
explain (costs off) select * from mcrparted where abs(b) = 5;
RESULT:
	ERROR - Not implemented Error: Unimplemented explain type: costs

-----------
QUERY:
	-- scans all partitions
explain (costs off) select * from mcrparted where a > -1;
RESULT:
	ERROR - Not implemented Error: Unimplemented explain type: costs

-----------
QUERY:
	-- scans all partitions
explain (costs off) select * from mcrparted where a = 20 and abs(b) = 10 and c > 10;
RESULT:
	ERROR - Not implemented Error: Unimplemented explain type: costs

-----------
QUERY:
	-- scans mcrparted4
explain (costs off) select * from mcrparted where a = 20 and c > 20;
RESULT:
	ERROR - Not implemented Error: Unimplemented explain type: costs

-----------
QUERY:
 -- scans mcrparted3, mcrparte4, mcrparte5, mcrparted_def

-- check that partitioned table Appends cope with being referenced in
-- subplans
create table parted_minmax (a int, b varchar(16)) partition by range (a);
RESULT:
	ERROR - Parser Error: syntax error at or near "partition"

-----------
QUERY:

create table parted_minmax1 partition of parted_minmax for values from (1) to (10);
RESULT:
	ERROR - Parser Error: syntax error at or near "partition"

-----------
QUERY:

create index parted_minmax1i on parted_minmax1 (a, b);
RESULT:
	ERROR - Catalog Error: Table with name parted_minmax1 does not exist!
Did you mean "parent1"?

-----------
QUERY:

insert into parted_minmax values (1,'12345');
RESULT:
	ERROR - Catalog Error: Table with name parted_minmax does not exist!
Did you mean "parent1"?

-----------
QUERY:

explain (costs off) select min(a), max(a) from parted_minmax where b = '12345';
RESULT:
	ERROR - Not implemented Error: Unimplemented explain type: costs

-----------
QUERY:

select min(a), max(a) from parted_minmax where b = '12345';
RESULT:
	ERROR - Catalog Error: Table with name parted_minmax does not exist!
Did you mean "parent1"?

-----------
QUERY:

drop table parted_minmax;
RESULT:
	ERROR - Catalog Error: Table with name parted_minmax does not exist!
Did you mean "parent1"?

-----------
QUERY:


-- Test code that uses Append nodes in place of MergeAppend when the
-- partition ordering matches the desired ordering.

create index mcrparted_a_abs_c_idx on mcrparted (a, abs(b), c);
RESULT:
	ERROR - Catalog Error: Table with name mcrparted does not exist!
Did you mean "a"?

-----------
QUERY:


-- MergeAppend must be used when a default partition exists
explain (costs off) select * from mcrparted order by a, abs(b), c;
RESULT:
	ERROR - Not implemented Error: Unimplemented explain type: costs

-----------
QUERY:


drop table mcrparted_def;
RESULT:
	ERROR - Catalog Error: Table with name mcrparted_def does not exist!
Did you mean "pg_attrdef"?

-----------
QUERY:


-- Append is used for a RANGE partitioned table with no default
-- and no subpartitions
explain (costs off) select * from mcrparted order by a, abs(b), c;
RESULT:
	ERROR - Not implemented Error: Unimplemented explain type: costs

-----------
QUERY:


-- Append is used with subpaths in reverse order with backwards index scans
explain (costs off) select * from mcrparted order by a desc, abs(b) desc, c desc;
RESULT:
	ERROR - Not implemented Error: Unimplemented explain type: costs

-----------
QUERY:


-- check that Append plan is used containing a MergeAppend for sub-partitions
-- that are unordered.
drop table mcrparted5;
RESULT:
	ERROR - Catalog Error: Table with name mcrparted5 does not exist!
Did you mean "a"?

-----------
QUERY:

create table mcrparted5 partition of mcrparted for values from (20, 20, 20) to (maxvalue, maxvalue, maxvalue) partition by list (a);
RESULT:
	ERROR - Parser Error: syntax error at or near "partition"

-----------
QUERY:

create table mcrparted5a partition of mcrparted5 for values in(20);
RESULT:
	ERROR - Parser Error: syntax error at or near "partition"

-----------
QUERY:

create table mcrparted5_def partition of mcrparted5 default;
RESULT:
	ERROR - Parser Error: syntax error at or near "partition"

-----------
QUERY:


explain (costs off) select * from mcrparted order by a, abs(b), c;
RESULT:
	ERROR - Not implemented Error: Unimplemented explain type: costs

-----------
QUERY:


drop table mcrparted5_def;
RESULT:
	ERROR - Catalog Error: Table with name mcrparted5_def does not exist!
Did you mean "pg_attrdef"?

-----------
QUERY:


-- check that an Append plan is used and the sub-partitions are flattened
-- into the main Append when the sub-partition is unordered but contains
-- just a single sub-partition.
explain (costs off) select a, abs(b) from mcrparted order by a, abs(b), c;
RESULT:
	ERROR - Not implemented Error: Unimplemented explain type: costs

-----------
QUERY:


-- check that Append is used when the sub-partitioned tables are pruned
-- during planning.
explain (costs off) select * from mcrparted where a < 20 order by a, abs(b), c;
RESULT:
	ERROR - Not implemented Error: Unimplemented explain type: costs

-----------
QUERY:


set enable_bitmapscan to off;
RESULT:
	ERROR - Catalog Error: unrecognized configuration parameter "enable_bitmapscan"

Did you mean: "enable_object_cache"

-----------
QUERY:

set enable_sort to off;
RESULT:
	ERROR - Catalog Error: unrecognized configuration parameter "enable_sort"

Did you mean: "enable_fsst_vectors"

-----------
QUERY:

create table mclparted (a int) partition by list(a);
RESULT:
	ERROR - Parser Error: syntax error at or near "partition"

-----------
QUERY:

create table mclparted1 partition of mclparted for values in(1);
RESULT:
	ERROR - Parser Error: syntax error at or near "partition"

-----------
QUERY:

create table mclparted2 partition of mclparted for values in(2);
RESULT:
	ERROR - Parser Error: syntax error at or near "partition"

-----------
QUERY:

create index on mclparted (a);
RESULT:
	ERROR - Not implemented Error: Please provide an index name, e.g., CREATE INDEX my_name ...

-----------
QUERY:


-- Ensure an Append is used for a list partition with an order by.
explain (costs off) select * from mclparted order by a;
RESULT:
	ERROR - Not implemented Error: Unimplemented explain type: costs

-----------
QUERY:


-- Ensure a MergeAppend is used when a partition exists with interleaved
-- datums in the partition bound.
create table mclparted3_5 partition of mclparted for values in(3,5);
RESULT:
	ERROR - Parser Error: syntax error at or near "partition"

-----------
QUERY:

create table mclparted4 partition of mclparted for values in(4);
RESULT:
	ERROR - Parser Error: syntax error at or near "partition"

-----------
QUERY:


explain (costs off) select * from mclparted order by a;
RESULT:
	ERROR - Not implemented Error: Unimplemented explain type: costs

-----------
QUERY:

explain (costs off) select * from mclparted where a in(3,4,5) order by a;
RESULT:
	ERROR - Not implemented Error: Unimplemented explain type: costs

-----------
QUERY:


-- Introduce a NULL and DEFAULT partition so we can test more complex cases
create table mclparted_null partition of mclparted for values in(null);
RESULT:
	ERROR - Parser Error: syntax error at or near "partition"

-----------
QUERY:

create table mclparted_def partition of mclparted default;
RESULT:
	ERROR - Parser Error: syntax error at or near "partition"

-----------
QUERY:


-- Append can be used providing we don/* REPLACED */ ''t scan the interleaved partition
explain (costs off) select * from mclparted where a in(1,2,4) order by a;
RESULT:
	ERROR - Not implemented Error: Unimplemented explain type: costs

-----------
QUERY:

explain (costs off) select * from mclparted where a in(1,2,4) or a is null order by a;
RESULT:
	ERROR - Not implemented Error: Unimplemented explain type: costs

-----------
QUERY:


-- Test a more complex case where the NULL partition allows some other value
drop table mclparted_null;
RESULT:
	ERROR - Catalog Error: Table with name mclparted_null does not exist!
Did you mean "parent1"?

-----------
QUERY:

create table mclparted_0_null partition of mclparted for values in(0,null);
RESULT:
	ERROR - Parser Error: syntax error at or near "partition"

-----------
QUERY:


-- Ensure MergeAppend is used since 0 and NULLs are in the same partition.
explain (costs off) select * from mclparted where a in(1,2,4) or a is null order by a;
RESULT:
	ERROR - Not implemented Error: Unimplemented explain type: costs

-----------
QUERY:

explain (costs off) select * from mclparted where a in(0,1,2,4) order by a;
RESULT:
	ERROR - Not implemented Error: Unimplemented explain type: costs

-----------
QUERY:


-- Ensure Append is used when the null partition is pruned
explain (costs off) select * from mclparted where a in(1,2,4) order by a;
RESULT:
	ERROR - Not implemented Error: Unimplemented explain type: costs

-----------
QUERY:


-- Ensure MergeAppend is used when the default partition is not pruned
explain (costs off) select * from mclparted where a in(1,2,4,100) order by a;
RESULT:
	ERROR - Not implemented Error: Unimplemented explain type: costs

-----------
QUERY:


drop table mclparted;
RESULT:
	ERROR - Catalog Error: Table with name mclparted does not exist!
Did you mean "a"?

-----------
QUERY:

reset enable_sort;
RESULT:
	ERROR - Catalog Error: unrecognized configuration parameter "enable_sort"

Did you mean: "enable_fsst_vectors"

-----------
QUERY:

reset enable_bitmapscan;
RESULT:
	ERROR - Catalog Error: unrecognized configuration parameter "enable_bitmapscan"

Did you mean: "enable_object_cache"

-----------
QUERY:


-- Ensure subplans which don/* REPLACED */ ''t have a path with the correct pathkeys get
-- sorted correctly.
drop index mcrparted_a_abs_c_idx;
RESULT:
	ERROR - Catalog Error: Index with name mcrparted_a_abs_c_idx does not exist!
Did you mean "concur_temp_ind_1"?

-----------
QUERY:

create index on mcrparted1 (a, abs(b), c);
RESULT:
	ERROR - Not implemented Error: Please provide an index name, e.g., CREATE INDEX my_name ...

-----------
QUERY:

create index on mcrparted2 (a, abs(b), c);
RESULT:
	ERROR - Not implemented Error: Please provide an index name, e.g., CREATE INDEX my_name ...

-----------
QUERY:

create index on mcrparted3 (a, abs(b), c);
RESULT:
	ERROR - Not implemented Error: Please provide an index name, e.g., CREATE INDEX my_name ...

-----------
QUERY:

create index on mcrparted4 (a, abs(b), c);
RESULT:
	ERROR - Not implemented Error: Please provide an index name, e.g., CREATE INDEX my_name ...

-----------
QUERY:


explain (costs off) select * from mcrparted where a < 20 order by a, abs(b), c limit 1;
RESULT:
	ERROR - Not implemented Error: Unimplemented explain type: costs

-----------
QUERY:


set enable_bitmapscan = 0;
RESULT:
	ERROR - Catalog Error: unrecognized configuration parameter "enable_bitmapscan"

Did you mean: "enable_object_cache"

-----------
QUERY:

-- Ensure Append node can be used when the partition is ordered by some
-- pathkeys which were deemed redundant.
explain (costs off) select * from mcrparted where a = 10 order by a, abs(b), c;
RESULT:
	ERROR - Not implemented Error: Unimplemented explain type: costs

-----------
QUERY:

reset enable_bitmapscan;
RESULT:
	ERROR - Catalog Error: unrecognized configuration parameter "enable_bitmapscan"

Did you mean: "enable_object_cache"

-----------
QUERY:


drop table mcrparted;
RESULT:
	ERROR - Catalog Error: Table with name mcrparted does not exist!
Did you mean "a"?

-----------
QUERY:


-- Ensure LIST partitions allow an Append to be used instead of a MergeAppend
create table bool_lp (b bool) partition by list(b);
RESULT:
	ERROR - Parser Error: syntax error at or near "partition"

-----------
QUERY:

create table bool_lp_true partition of bool_lp for values in(true);
RESULT:
	ERROR - Parser Error: syntax error at or near "partition"

-----------
QUERY:

create table bool_lp_false partition of bool_lp for values in(false);
RESULT:
	ERROR - Parser Error: syntax error at or near "partition"

-----------
QUERY:

create index on bool_lp (b);
RESULT:
	ERROR - Not implemented Error: Please provide an index name, e.g., CREATE INDEX my_name ...

-----------
QUERY:


explain (costs off) select * from bool_lp order by b;
RESULT:
	ERROR - Not implemented Error: Unimplemented explain type: costs

-----------
QUERY:


drop table bool_lp;
RESULT:
	ERROR - Catalog Error: Table with name bool_lp does not exist!
Did you mean "foo"?

-----------
QUERY:


-- Ensure const bool quals can be properly detected as redundant
create table bool_rp (b bool, a int) partition by range(b,a);
RESULT:
	ERROR - Parser Error: syntax error at or near "partition"

-----------
QUERY:

create table bool_rp_false_1k partition of bool_rp for values from (false,0) to (false,1000);
RESULT:
	ERROR - Parser Error: syntax error at or near "partition"

-----------
QUERY:

create table bool_rp_true_1k partition of bool_rp for values from (true,0) to (true,1000);
RESULT:
	ERROR - Parser Error: syntax error at or near "partition"

-----------
QUERY:

create table bool_rp_false_2k partition of bool_rp for values from (false,1000) to (false,2000);
RESULT:
	ERROR - Parser Error: syntax error at or near "partition"

-----------
QUERY:

create table bool_rp_true_2k partition of bool_rp for values from (true,1000) to (true,2000);
RESULT:
	ERROR - Parser Error: syntax error at or near "partition"

-----------
QUERY:

create index on bool_rp (b,a);
RESULT:
	ERROR - Not implemented Error: Please provide an index name, e.g., CREATE INDEX my_name ...

-----------
QUERY:

explain (costs off) select * from bool_rp where b = true order by b,a;
RESULT:
	ERROR - Not implemented Error: Unimplemented explain type: costs

-----------
QUERY:

explain (costs off) select * from bool_rp where b = false order by b,a;
RESULT:
	ERROR - Not implemented Error: Unimplemented explain type: costs

-----------
QUERY:

explain (costs off) select * from bool_rp where b = true order by a;
RESULT:
	ERROR - Not implemented Error: Unimplemented explain type: costs

-----------
QUERY:

explain (costs off) select * from bool_rp where b = false order by a;
RESULT:
	ERROR - Not implemented Error: Unimplemented explain type: costs

-----------
QUERY:


drop table bool_rp;
RESULT:
	ERROR - Catalog Error: Table with name bool_rp does not exist!
Did you mean "bar"?

-----------
QUERY:


-- Ensure an Append scan is chosen when the partition order is a subset of
-- the required order.
create table range_parted (a int, b int, c int) partition by range(a, b);
RESULT:
	ERROR - Parser Error: syntax error at or near "partition"

-----------
QUERY:

create table range_parted1 partition of range_parted for values from (0,0) to (10,10);
RESULT:
	ERROR - Parser Error: syntax error at or near "partition"

-----------
QUERY:

create table range_parted2 partition of range_parted for values from (10,10) to (20,20);
RESULT:
	ERROR - Parser Error: syntax error at or near "partition"

-----------
QUERY:

create index on range_parted (a,b,c);
RESULT:
	ERROR - Not implemented Error: Please provide an index name, e.g., CREATE INDEX my_name ...

-----------
QUERY:


explain (costs off) select * from range_parted order by a,b,c;
RESULT:
	ERROR - Not implemented Error: Unimplemented explain type: costs

-----------
QUERY:

explain (costs off) select * from range_parted order by a desc,b desc,c desc;
RESULT:
	ERROR - Not implemented Error: Unimplemented explain type: costs

-----------
QUERY:


drop table range_parted;
RESULT:
	ERROR - Catalog Error: Table with name range_parted does not exist!
Did you mean "inh_parent"?

-----------
QUERY:


-- Check that we allow access to a child table/* REPLACED */ ''s statistics when the user
-- has permissions only for the parent table.
create table permtest_parent (a int, b text, c text) partition by list (a);
RESULT:
	ERROR - Parser Error: syntax error at or near "partition"

-----------
QUERY:

create table permtest_child (b text, c text, a int) partition by list (b);
RESULT:
	ERROR - Parser Error: syntax error at or near "partition"

-----------
QUERY:

create table permtest_grandchild (c text, b text, a int);
RESULT:
	[]

-----------
QUERY:

alter table permtest_child attach partition permtest_grandchild for values in ('a');
RESULT:
	ERROR - Parser Error: syntax error at or near "attach"

-----------
QUERY:

alter table permtest_parent attach partition permtest_child for values in (1);
RESULT:
	ERROR - Parser Error: syntax error at or near "attach"

-----------
QUERY:

create index on permtest_parent (left(c, 3));
RESULT:
	ERROR - Not implemented Error: Please provide an index name, e.g., CREATE INDEX my_name ...

-----------
QUERY:

insert into permtest_parent
  select 1, 'a', left(fipshash(i::text), 5) from generate_series(0, 100) i;
RESULT:
	ERROR - Catalog Error: Table with name permtest_parent does not exist!
Did you mean "firstparent"?

-----------
QUERY:

analyze permtest_parent;
RESULT:
	ERROR - Catalog Error: Table with name permtest_parent does not exist!
Did you mean "firstparent"?
LINE 2: analyze permtest_parent;
                ^

-----------
QUERY:

create role regress_no_child_access;
RESULT:
	ERROR - Parser Error: syntax error at or near "role"

-----------
QUERY:

revoke all on permtest_grandchild from regress_no_child_access;
RESULT:
	ERROR - Parser Error: syntax error at or near "revoke"

-----------
QUERY:

grant select on permtest_parent to regress_no_child_access;
RESULT:
	ERROR - Parser Error: syntax error at or near "grant"

-----------
QUERY:

set session authorization regress_no_child_access;
RESULT:
	ERROR - Parser Error: syntax error at or near "authorization"

-----------
QUERY:

-- without stats access, these queries would produce hash join plans:
explain (costs off)
  select * from permtest_parent p1 inner join permtest_parent p2
  on p1.a = p2.a and p1.c ~ 'a1$';
RESULT:
	ERROR - Not implemented Error: Unimplemented explain type: costs

-----------
QUERY:

explain (costs off)
  select * from permtest_parent p1 inner join permtest_parent p2
  on p1.a = p2.a and left(p1.c, 3) ~ 'a1$';
RESULT:
	ERROR - Not implemented Error: Unimplemented explain type: costs

-----------
QUERY:

reset session authorization;
RESULT:
	ERROR - Parser Error: syntax error at or near "authorization"

-----------
QUERY:

revoke all on permtest_parent from regress_no_child_access;
RESULT:
	ERROR - Parser Error: syntax error at or near "revoke"

-----------
QUERY:

grant select(a,c) on permtest_parent to regress_no_child_access;
RESULT:
	ERROR - Parser Error: syntax error at or near "grant"

-----------
QUERY:

set session authorization regress_no_child_access;
RESULT:
	ERROR - Parser Error: syntax error at or near "authorization"

-----------
QUERY:

explain (costs off)
  select p2.a, p1.c from permtest_parent p1 inner join permtest_parent p2
  on p1.a = p2.a and p1.c ~ 'a1$';
RESULT:
	ERROR - Not implemented Error: Unimplemented explain type: costs

-----------
QUERY:

-- we will not have access to the expression index/* REPLACED */ ''s stats here:
explain (costs off)
  select p2.a, p1.c from permtest_parent p1 inner join permtest_parent p2
  on p1.a = p2.a and left(p1.c, 3) ~ 'a1$';
RESULT:
	ERROR - Not implemented Error: Unimplemented explain type: costs

-----------
QUERY:

reset session authorization;
RESULT:
	ERROR - Parser Error: syntax error at or near "authorization"

-----------
QUERY:

revoke all on permtest_parent from regress_no_child_access;
RESULT:
	ERROR - Parser Error: syntax error at or near "revoke"

-----------
QUERY:

drop role regress_no_child_access;
RESULT:
	ERROR - Parser Error: syntax error at or near "role"

-----------
QUERY:

drop table permtest_parent;
RESULT:
	ERROR - Catalog Error: Table with name permtest_parent does not exist!
Did you mean "firstparent"?

-----------
QUERY:


-- Verify that constraint errors across partition root / child are
-- handled correctly (Bug #16293)
CREATE TABLE errtst_parent (
    partid int not null,
    shdata int not null,
    data int NOT NULL DEFAULT 0,
    CONSTRAINT shdata_small CHECK(shdata < 3)
) PARTITION BY RANGE (partid);
RESULT:
	ERROR - Parser Error: syntax error at or near "PARTITION"

-----------
QUERY:


-- fast defaults lead to attribute mapping being used in one
-- direction, but not the other
CREATE TABLE errtst_child_fastdef (
    partid int not null,
    shdata int not null,
    CONSTRAINT shdata_small CHECK(shdata < 3)
);
RESULT:
	[]

-----------
QUERY:


-- no remapping in either direction necessary
CREATE TABLE errtst_child_plaindef (
    partid int not null,
    shdata int not null,
    data int NOT NULL DEFAULT 0,
    CONSTRAINT shdata_small CHECK(shdata < 3),
    CHECK(data < 10)
);
RESULT:
	[]

-----------
QUERY:


-- remapping in both direction
CREATE TABLE errtst_child_reorder (
    data int NOT NULL DEFAULT 0,
    shdata int not null,
    partid int not null,
    CONSTRAINT shdata_small CHECK(shdata < 3),
    CHECK(data < 10)
);
RESULT:
	[]

-----------
QUERY:


ALTER TABLE errtst_child_fastdef ADD COLUMN data int NOT NULL DEFAULT 0;
RESULT:
	ERROR - Parser Error: Adding columns with constraints not yet supported

-----------
QUERY:

ALTER TABLE errtst_child_fastdef ADD CONSTRAINT errtest_child_fastdef_data_check CHECK (data < 10);
RESULT:
	ERROR - Not implemented Error: No support for that ALTER TABLE option yet!

-----------
QUERY:


ALTER TABLE errtst_parent ATTACH PARTITION errtst_child_fastdef FOR VALUES FROM (0) TO (10);
RESULT:
	ERROR - Parser Error: syntax error at or near "ATTACH"

-----------
QUERY:

ALTER TABLE errtst_parent ATTACH PARTITION errtst_child_plaindef FOR VALUES FROM (10) TO (20);
RESULT:
	ERROR - Parser Error: syntax error at or near "ATTACH"

-----------
QUERY:

ALTER TABLE errtst_parent ATTACH PARTITION errtst_child_reorder FOR VALUES FROM (20) TO (30);
RESULT:
	ERROR - Parser Error: syntax error at or near "ATTACH"

-----------
QUERY:


-- insert without child check constraint error
INSERT INTO errtst_parent(partid, shdata, data) VALUES ( '0', '1', '5');
RESULT:
	ERROR - Catalog Error: Table with name errtst_parent does not exist!
Did you mean "firstparent"?

-----------
QUERY:

INSERT INTO errtst_parent(partid, shdata, data) VALUES ('10', '1', '5');
RESULT:
	ERROR - Catalog Error: Table with name errtst_parent does not exist!
Did you mean "firstparent"?

-----------
QUERY:

INSERT INTO errtst_parent(partid, shdata, data) VALUES ('20', '1', '5');
RESULT:
	ERROR - Catalog Error: Table with name errtst_parent does not exist!
Did you mean "firstparent"?

-----------
QUERY:


-- insert with child check constraint error
INSERT INTO errtst_parent(partid, shdata, data) VALUES ( '0', '1', '10');
RESULT:
	ERROR - Catalog Error: Table with name errtst_parent does not exist!
Did you mean "firstparent"?

-----------
QUERY:

INSERT INTO errtst_parent(partid, shdata, data) VALUES ('10', '1', '10');
RESULT:
	ERROR - Catalog Error: Table with name errtst_parent does not exist!
Did you mean "firstparent"?

-----------
QUERY:

INSERT INTO errtst_parent(partid, shdata, data) VALUES ('20', '1', '10');
RESULT:
	ERROR - Catalog Error: Table with name errtst_parent does not exist!
Did you mean "firstparent"?

-----------
QUERY:


-- insert with child not null constraint error
INSERT INTO errtst_parent(partid, shdata, data) VALUES ( '0', '1', NULL);
RESULT:
	ERROR - Catalog Error: Table with name errtst_parent does not exist!
Did you mean "firstparent"?

-----------
QUERY:

INSERT INTO errtst_parent(partid, shdata, data) VALUES ('10', '1', NULL);
RESULT:
	ERROR - Catalog Error: Table with name errtst_parent does not exist!
Did you mean "firstparent"?

-----------
QUERY:

INSERT INTO errtst_parent(partid, shdata, data) VALUES ('20', '1', NULL);
RESULT:
	ERROR - Catalog Error: Table with name errtst_parent does not exist!
Did you mean "firstparent"?

-----------
QUERY:


-- insert with shared check constraint error
INSERT INTO errtst_parent(partid, shdata, data) VALUES ( '0', '5', '5');
RESULT:
	ERROR - Catalog Error: Table with name errtst_parent does not exist!
Did you mean "firstparent"?

-----------
QUERY:

INSERT INTO errtst_parent(partid, shdata, data) VALUES ('10', '5', '5');
RESULT:
	ERROR - Catalog Error: Table with name errtst_parent does not exist!
Did you mean "firstparent"?

-----------
QUERY:

INSERT INTO errtst_parent(partid, shdata, data) VALUES ('20', '5', '5');
RESULT:
	ERROR - Catalog Error: Table with name errtst_parent does not exist!
Did you mean "firstparent"?

-----------
QUERY:


-- within partition update without child check constraint violation
BEGIN;
RESULT:
	[]

-----------
QUERY:

UPDATE errtst_parent SET data = data + 1 WHERE partid = 0;
RESULT:
	ERROR - Catalog Error: Table with name errtst_parent does not exist!
Did you mean "firstparent"?
LINE 2: UPDATE errtst_parent SET data = data + 1 WHER...
               ^

-----------
QUERY:

UPDATE errtst_parent SET data = data + 1 WHERE partid = 10;
RESULT:
	ERROR - Catalog Error: Table with name errtst_parent does not exist!
Did you mean "firstparent"?
LINE 2: UPDATE errtst_parent SET data = data + 1 WHER...
               ^

-----------
QUERY:

UPDATE errtst_parent SET data = data + 1 WHERE partid = 20;
RESULT:
	ERROR - Catalog Error: Table with name errtst_parent does not exist!
Did you mean "firstparent"?
LINE 2: UPDATE errtst_parent SET data = data + 1 WHER...
               ^

-----------
QUERY:

ROLLBACK;
RESULT:
	[]

-----------
QUERY:


-- within partition update with child check constraint violation
UPDATE errtst_parent SET data = data + 10 WHERE partid = 0;
RESULT:
	ERROR - Catalog Error: Table with name errtst_parent does not exist!
Did you mean "firstparent"?
LINE 4: UPDATE errtst_parent SET data = data + 10 WHERE partid = 0;...
               ^

-----------
QUERY:

UPDATE errtst_parent SET data = data + 10 WHERE partid = 10;
RESULT:
	ERROR - Catalog Error: Table with name errtst_parent does not exist!
Did you mean "firstparent"?
LINE 2: UPDATE errtst_parent SET data = data + 10 WHE...
               ^

-----------
QUERY:

UPDATE errtst_parent SET data = data + 10 WHERE partid = 20;
RESULT:
	ERROR - Catalog Error: Table with name errtst_parent does not exist!
Did you mean "firstparent"?
LINE 2: UPDATE errtst_parent SET data = data + 10 WHE...
               ^

-----------
QUERY:


-- direct leaf partition update, without partition id violation
BEGIN;
RESULT:
	[]

-----------
QUERY:

UPDATE errtst_child_fastdef SET partid = 1 WHERE partid = 0;
RESULT:
	[]

-----------
QUERY:

UPDATE errtst_child_plaindef SET partid = 11 WHERE partid = 10;
RESULT:
	[]

-----------
QUERY:

UPDATE errtst_child_reorder SET partid = 21 WHERE partid = 20;
RESULT:
	[]

-----------
QUERY:

ROLLBACK;
RESULT:
	[]

-----------
QUERY:


-- direct leaf partition update, with partition id violation
UPDATE errtst_child_fastdef SET partid = partid + 10 WHERE partid = 0;
RESULT:
	[]

-----------
QUERY:

UPDATE errtst_child_plaindef SET partid = partid + 10 WHERE partid = 10;
RESULT:
	[]

-----------
QUERY:

UPDATE errtst_child_reorder SET partid = partid + 10 WHERE partid = 20;
RESULT:
	[]

-----------
QUERY:


-- partition move, without child check constraint violation
BEGIN;
RESULT:
	[]

-----------
QUERY:

UPDATE errtst_parent SET partid = 10, data = data + 1 WHERE partid = 0;
RESULT:
	ERROR - Catalog Error: Table with name errtst_parent does not exist!
Did you mean "firstparent"?
LINE 2: UPDATE errtst_parent SET partid = 10, data = ...
               ^

-----------
QUERY:

UPDATE errtst_parent SET partid = 20, data = data + 1 WHERE partid = 10;
RESULT:
	ERROR - Catalog Error: Table with name errtst_parent does not exist!
Did you mean "firstparent"?
LINE 2: UPDATE errtst_parent SET partid = 20, data = ...
               ^

-----------
QUERY:

UPDATE errtst_parent SET partid = 0, data = data + 1 WHERE partid = 20;
RESULT:
	ERROR - Catalog Error: Table with name errtst_parent does not exist!
Did you mean "firstparent"?
LINE 2: UPDATE errtst_parent SET partid = 0, data = d...
               ^

-----------
QUERY:

ROLLBACK;
RESULT:
	[]

-----------
QUERY:


-- partition move, with child check constraint violation
UPDATE errtst_parent SET partid = 10, data = data + 10 WHERE partid = 0;
RESULT:
	ERROR - Catalog Error: Table with name errtst_parent does not exist!
Did you mean "firstparent"?
LINE 4: UPDATE errtst_parent SET partid = 10, data = data + 10 WHERE partid = 0;...
               ^

-----------
QUERY:

UPDATE errtst_parent SET partid = 20, data = data + 10 WHERE partid = 10;
RESULT:
	ERROR - Catalog Error: Table with name errtst_parent does not exist!
Did you mean "firstparent"?
LINE 2: UPDATE errtst_parent SET partid = 20, data = ...
               ^

-----------
QUERY:

UPDATE errtst_parent SET partid = 0, data = data + 10 WHERE partid = 20;
RESULT:
	ERROR - Catalog Error: Table with name errtst_parent does not exist!
Did you mean "firstparent"?
LINE 2: UPDATE errtst_parent SET partid = 0, data = d...
               ^

-----------
QUERY:


-- partition move, without target partition
UPDATE errtst_parent SET partid = 30, data = data + 10 WHERE partid = 20;
RESULT:
	ERROR - Catalog Error: Table with name errtst_parent does not exist!
Did you mean "firstparent"?
LINE 4: ...
               ^

-----------
QUERY:


DROP TABLE errtst_parent;
RESULT:
	ERROR - Catalog Error: Table with name errtst_parent does not exist!
Did you mean "firstparent"?
