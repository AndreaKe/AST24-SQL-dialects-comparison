
-----------
QUERY:
--
-- insert...on conflict do unique index inference
--
create table insertconflicttest(key int4, fruit text);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'int4, fruit text)' at line 4")

-----------
QUERY:


--
-- Test unique index inference with operator class specifications and
-- named collations
--
create unique index op_index_key on insertconflicttest(key, fruit text_pattern_ops);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'key, fruit text_pattern_ops)' at line 5")

-----------
QUERY:

create unique index collation_index_key on insertconflicttest(key, fruit collate "C");
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'key, fruit collate "C")\' at line 1')

-----------
QUERY:

create unique index both_index_key on insertconflicttest(key, fruit collate "C" text_pattern_ops);
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'key, fruit collate "C" text_pattern_ops)\' at line 1')

-----------
QUERY:

create unique index both_index_expr_key on insertconflicttest(key, lower(fruit) collate "C" text_pattern_ops);
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'key, lower(fruit) collate "C" text_pattern_ops)\' at line 1')

-----------
QUERY:


-- fails
explain (costs off) insert into insertconflicttest values(0, 'Crowberry') on conflict (key) do nothing;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'costs off) insert into insertconflicttest values(0, 'Crowberry') on conflict (ke' at line 2")

-----------
QUERY:

explain (costs off) insert into insertconflicttest values(0, 'Crowberry') on conflict (fruit) do nothing;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'costs off) insert into insertconflicttest values(0, 'Crowberry') on conflict (fr' at line 1")

-----------
QUERY:


-- succeeds
explain (costs off) insert into insertconflicttest values(0, 'Crowberry') on conflict (key, fruit) do nothing;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'costs off) insert into insertconflicttest values(0, 'Crowberry') on conflict (ke' at line 2")

-----------
QUERY:

explain (costs off) insert into insertconflicttest values(0, 'Crowberry') on conflict (fruit, key, fruit, key) do nothing;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'costs off) insert into insertconflicttest values(0, 'Crowberry') on conflict (fr' at line 1")

-----------
QUERY:

explain (costs off) insert into insertconflicttest values(0, 'Crowberry') on conflict (lower(fruit), key, lower(fruit), key) do nothing;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'costs off) insert into insertconflicttest values(0, 'Crowberry') on conflict (lo' at line 1")

-----------
QUERY:

explain (costs off) insert into insertconflicttest values(0, 'Crowberry') on conflict (key, fruit) do update set fruit = excluded.fruit
  where exists (select 1 from insertconflicttest ii where ii.key = excluded.key);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'costs off) insert into insertconflicttest values(0, 'Crowberry') on conflict (ke' at line 1")

-----------
QUERY:

-- Neither collation nor operator class specifications are required --
-- supplying them merely *limits* matches to indexes with matching opclasses
-- used for relevant indexes
explain (costs off) insert into insertconflicttest values(0, 'Crowberry') on conflict (key, fruit text_pattern_ops) do nothing;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'costs off) insert into insertconflicttest values(0, 'Crowberry') on conflict (ke' at line 4")

-----------
QUERY:

-- Okay, arbitrates using both index where text_pattern_ops opclass does and
-- does not appear.
explain (costs off) insert into insertconflicttest values(0, 'Crowberry') on conflict (key, fruit collate "C") do nothing;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'costs off) insert into insertconflicttest values(0, 'Crowberry') on conflict (ke' at line 3")

-----------
QUERY:

-- Okay, but only accepts the single index where both opclass and collation are
-- specified
explain (costs off) insert into insertconflicttest values(0, 'Crowberry') on conflict (fruit collate "C" text_pattern_ops, key) do nothing;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'costs off) insert into insertconflicttest values(0, 'Crowberry') on conflict (fr' at line 3")

-----------
QUERY:

-- Okay, but only accepts the single index where both opclass and collation are
-- specified (plus expression variant)
explain (costs off) insert into insertconflicttest values(0, 'Crowberry') on conflict (lower(fruit) collate "C", key, key) do nothing;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'costs off) insert into insertconflicttest values(0, 'Crowberry') on conflict (lo' at line 3")

-----------
QUERY:

-- Attribute appears twice, while not all attributes/expressions on attributes
-- appearing within index definition match in terms of both opclass and
-- collation.
--
-- Works because every attribute in inference specification needs to be
-- satisfied once or more by cataloged index attribute, and as always when an
-- attribute in the cataloged definition has a non-default opclass/collation,
-- it still satisfied some inference attribute lacking any particular
-- opclass/collation specification.
--
-- The implementation is liberal in accepting inference specifications on the
-- assumption that multiple inferred unique indexes will prevent problematic
-- cases.  It rolls with unique indexes where attributes redundantly appear
-- multiple times, too (which is not tested here).
explain (costs off) insert into insertconflicttest values(0, 'Crowberry') on conflict (fruit, key, fruit text_pattern_ops, key) do nothing;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'costs off) insert into insertconflicttest values(0, 'Crowberry') on conflict (fr' at line 15")

-----------
QUERY:

explain (costs off) insert into insertconflicttest values(0, 'Crowberry') on conflict (lower(fruit) collate "C" text_pattern_ops, key, key) do nothing;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'costs off) insert into insertconflicttest values(0, 'Crowberry') on conflict (lo' at line 1")

-----------
QUERY:


drop index op_index_key;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 1")

-----------
QUERY:

drop index collation_index_key;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 1")

-----------
QUERY:

drop index both_index_key;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 1")

-----------
QUERY:

drop index both_index_expr_key;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 1")

-----------
QUERY:


--
-- Make sure that cross matching of attribute opclass/collation does not occur
--
create unique index cross_match on insertconflicttest(lower(fruit) collate "C", upper(fruit) text_pattern_ops);
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'fruit) collate "C", upper(fruit) text_pattern_ops)\' at line 4')

-----------
QUERY:


-- fails:
explain (costs off) insert into insertconflicttest values(0, 'Crowberry') on conflict (lower(fruit) text_pattern_ops, upper(fruit) collate "C") do nothing;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'costs off) insert into insertconflicttest values(0, 'Crowberry') on conflict (lo' at line 2")

-----------
QUERY:

-- works:
explain (costs off) insert into insertconflicttest values(0, 'Crowberry') on conflict (lower(fruit) collate "C", upper(fruit) text_pattern_ops) do nothing;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'costs off) insert into insertconflicttest values(0, 'Crowberry') on conflict (lo' at line 2")

-----------
QUERY:


drop index cross_match;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 1")

-----------
QUERY:


--
-- Single key tests
--
create unique index key_index on insertconflicttest(key);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'key)' at line 4")

-----------
QUERY:


--
-- Explain tests
--
explain (costs off) insert into insertconflicttest values (0, 'Bilberry') on conflict (key) do update set fruit = excluded.fruit;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'costs off) insert into insertconflicttest values (0, 'Bilberry') on conflict (ke' at line 4")

-----------
QUERY:

-- Should display qual actually attributable to internal sequential scan:
explain (costs off) insert into insertconflicttest values (0, 'Bilberry') on conflict (key) do update set fruit = excluded.fruit where insertconflicttest.fruit != 'Cawesh';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'costs off) insert into insertconflicttest values (0, 'Bilberry') on conflict (ke' at line 2")

-----------
QUERY:

-- With EXCLUDED.* expression in scan node:
explain (costs off) insert into insertconflicttest values(0, 'Crowberry') on conflict (key) do update set fruit = excluded.fruit where excluded.fruit != 'Elderberry';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'costs off) insert into insertconflicttest values(0, 'Crowberry') on conflict (ke' at line 2")

-----------
QUERY:

-- Does the same, but JSON format shows /* REPLACED */ ''Conflict Arbiter Index/* REPLACED */ '' as JSON array:
explain (costs off, format json) insert into insertconflicttest values (0, 'Bilberry') on conflict (key) do update set fruit = excluded.fruit where insertconflicttest.fruit != 'Lime' returning *;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'costs off, format json) insert into insertconflicttest values (0, 'Bilberry') on' at line 2")

-----------
QUERY:


-- Fails (no unique index inference specification, required for do update variant):
insert into insertconflicttest values (1, 'Apple') on conflict do update set fruit = excluded.fruit;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'conflict do update set fruit = excluded.fruit' at line 2")

-----------
QUERY:


-- inference succeeds:
insert into insertconflicttest values (1, 'Apple') on conflict (key) do update set fruit = excluded.fruit;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'conflict (key) do update set fruit = excluded.fruit' at line 2")

-----------
QUERY:

insert into insertconflicttest values (2, 'Orange') on conflict (key, key, key) do update set fruit = excluded.fruit;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'conflict (key, key, key) do update set fruit = excluded.fruit' at line 1")

-----------
QUERY:


-- Succeed, since multi-assignment does not involve subquery:
insert into insertconflicttest
values (1, 'Apple'), (2, 'Orange')
on conflict (key) do update set (fruit, key) = (excluded.fruit, excluded.key);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'conflict (key) do update set (fruit, key) = (excluded.fruit, excluded.key)' at line 4")

-----------
QUERY:


-- Give good diagnostic message when EXCLUDED.* spuriously referenced from
-- RETURNING:
insert into insertconflicttest values (1, 'Apple') on conflict (key) do update set fruit = excluded.fruit RETURNING excluded.fruit;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'conflict (key) do update set fruit = excluded.fruit RETURNING excluded.fruit' at line 3")

-----------
QUERY:


-- Only suggest <table>.* column when inference element misspelled:
insert into insertconflicttest values (1, 'Apple') on conflict (keyy) do update set fruit = excluded.fruit;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'conflict (keyy) do update set fruit = excluded.fruit' at line 2")

-----------
QUERY:


-- Have useful HINT for EXCLUDED.* RTE within UPDATE:
insert into insertconflicttest values (1, 'Apple') on conflict (key) do update set fruit = excluded.fruitt;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'conflict (key) do update set fruit = excluded.fruitt' at line 2")

-----------
QUERY:


-- inference fails:
insert into insertconflicttest values (3, 'Kiwi') on conflict (key, fruit) do update set fruit = excluded.fruit;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'conflict (key, fruit) do update set fruit = excluded.fruit' at line 2")

-----------
QUERY:

insert into insertconflicttest values (4, 'Mango') on conflict (fruit, key) do update set fruit = excluded.fruit;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'conflict (fruit, key) do update set fruit = excluded.fruit' at line 1")

-----------
QUERY:

insert into insertconflicttest values (5, 'Lemon') on conflict (fruit) do update set fruit = excluded.fruit;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'conflict (fruit) do update set fruit = excluded.fruit' at line 1")

-----------
QUERY:

insert into insertconflicttest values (6, 'Passionfruit') on conflict (lower(fruit)) do update set fruit = excluded.fruit;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'conflict (lower(fruit)) do update set fruit = excluded.fruit' at line 1")

-----------
QUERY:


-- Check the target relation can be aliased
insert into insertconflicttest AS ict values (6, 'Passionfruit') on conflict (key) do update set fruit = excluded.fruit;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'AS ict values (6, 'Passionfruit') on conflict (key) do update set fruit = exclud' at line 2")

-----------
QUERY:
 -- ok, no reference to target table
insert into insertconflicttest AS ict values (6, 'Passionfruit') on conflict (key) do update set fruit = ict.fruit;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'AS ict values (6, 'Passionfruit') on conflict (key) do update set fruit = ict.fr' at line 2")

-----------
QUERY:
 -- ok, alias
insert into insertconflicttest AS ict values (6, 'Passionfruit') on conflict (key) do update set fruit = insertconflicttest.fruit;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'AS ict values (6, 'Passionfruit') on conflict (key) do update set fruit = insert' at line 2")

-----------
QUERY:
 -- error, references aliased away name

-- Check helpful hint when qualifying set column with target table
insert into insertconflicttest values (3, 'Kiwi') on conflict (key, fruit) do update set insertconflicttest.fruit = 'Mango';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'conflict (key, fruit) do update set insertconflicttest.fruit = 'Mango'' at line 4")

-----------
QUERY:


drop index key_index;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 1")

-----------
QUERY:


--
-- Composite key tests
--
create unique index comp_key_index on insertconflicttest(key, fruit);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'key, fruit)' at line 4")

-----------
QUERY:


-- inference succeeds:
insert into insertconflicttest values (7, 'Raspberry') on conflict (key, fruit) do update set fruit = excluded.fruit;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'conflict (key, fruit) do update set fruit = excluded.fruit' at line 2")

-----------
QUERY:

insert into insertconflicttest values (8, 'Lime') on conflict (fruit, key) do update set fruit = excluded.fruit;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'conflict (fruit, key) do update set fruit = excluded.fruit' at line 1")

-----------
QUERY:


-- inference fails:
insert into insertconflicttest values (9, 'Banana') on conflict (key) do update set fruit = excluded.fruit;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'conflict (key) do update set fruit = excluded.fruit' at line 2")

-----------
QUERY:

insert into insertconflicttest values (10, 'Blueberry') on conflict (key, key, key) do update set fruit = excluded.fruit;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'conflict (key, key, key) do update set fruit = excluded.fruit' at line 1")

-----------
QUERY:

insert into insertconflicttest values (11, 'Cherry') on conflict (key, lower(fruit)) do update set fruit = excluded.fruit;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'conflict (key, lower(fruit)) do update set fruit = excluded.fruit' at line 1")

-----------
QUERY:

insert into insertconflicttest values (12, 'Date') on conflict (lower(fruit), key) do update set fruit = excluded.fruit;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'conflict (lower(fruit), key) do update set fruit = excluded.fruit' at line 1")

-----------
QUERY:


drop index comp_key_index;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 1")

-----------
QUERY:


--
-- Partial index tests, no inference predicate specified
--
create unique index part_comp_key_index on insertconflicttest(key, fruit) where key < 5;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'key, fruit) where key < 5' at line 4")

-----------
QUERY:

create unique index expr_part_comp_key_index on insertconflicttest(key, lower(fruit)) where key < 5;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'key, lower(fruit)) where key < 5' at line 1")

-----------
QUERY:


-- inference fails:
insert into insertconflicttest values (13, 'Grape') on conflict (key, fruit) do update set fruit = excluded.fruit;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'conflict (key, fruit) do update set fruit = excluded.fruit' at line 2")

-----------
QUERY:

insert into insertconflicttest values (14, 'Raisin') on conflict (fruit, key) do update set fruit = excluded.fruit;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'conflict (fruit, key) do update set fruit = excluded.fruit' at line 1")

-----------
QUERY:

insert into insertconflicttest values (15, 'Cranberry') on conflict (key) do update set fruit = excluded.fruit;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'conflict (key) do update set fruit = excluded.fruit' at line 1")

-----------
QUERY:

insert into insertconflicttest values (16, 'Melon') on conflict (key, key, key) do update set fruit = excluded.fruit;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'conflict (key, key, key) do update set fruit = excluded.fruit' at line 1")

-----------
QUERY:

insert into insertconflicttest values (17, 'Mulberry') on conflict (key, lower(fruit)) do update set fruit = excluded.fruit;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'conflict (key, lower(fruit)) do update set fruit = excluded.fruit' at line 1")

-----------
QUERY:

insert into insertconflicttest values (18, 'Pineapple') on conflict (lower(fruit), key) do update set fruit = excluded.fruit;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'conflict (lower(fruit), key) do update set fruit = excluded.fruit' at line 1")

-----------
QUERY:


drop index part_comp_key_index;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 1")

-----------
QUERY:

drop index expr_part_comp_key_index;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 1")

-----------
QUERY:


--
-- Expression index tests
--
create unique index expr_key_index on insertconflicttest(lower(fruit));
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'fruit))' at line 4")

-----------
QUERY:


-- inference succeeds:
insert into insertconflicttest values (20, 'Quince') on conflict (lower(fruit)) do update set fruit = excluded.fruit;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'conflict (lower(fruit)) do update set fruit = excluded.fruit' at line 2")

-----------
QUERY:

insert into insertconflicttest values (21, 'Pomegranate') on conflict (lower(fruit), lower(fruit)) do update set fruit = excluded.fruit;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'conflict (lower(fruit), lower(fruit)) do update set fruit = excluded.fruit' at line 1")

-----------
QUERY:


-- inference fails:
insert into insertconflicttest values (22, 'Apricot') on conflict (upper(fruit)) do update set fruit = excluded.fruit;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'conflict (upper(fruit)) do update set fruit = excluded.fruit' at line 2")

-----------
QUERY:

insert into insertconflicttest values (23, 'Blackberry') on conflict (fruit) do update set fruit = excluded.fruit;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'conflict (fruit) do update set fruit = excluded.fruit' at line 1")

-----------
QUERY:


drop index expr_key_index;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 1")

-----------
QUERY:


--
-- Expression index tests (with regular column)
--
create unique index expr_comp_key_index on insertconflicttest(key, lower(fruit));
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'key, lower(fruit))' at line 4")

-----------
QUERY:

create unique index tricky_expr_comp_key_index on insertconflicttest(key, lower(fruit), upper(fruit));
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'key, lower(fruit), upper(fruit))' at line 1")

-----------
QUERY:


-- inference succeeds:
insert into insertconflicttest values (24, 'Plum') on conflict (key, lower(fruit)) do update set fruit = excluded.fruit;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'conflict (key, lower(fruit)) do update set fruit = excluded.fruit' at line 2")

-----------
QUERY:

insert into insertconflicttest values (25, 'Peach') on conflict (lower(fruit), key) do update set fruit = excluded.fruit;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'conflict (lower(fruit), key) do update set fruit = excluded.fruit' at line 1")

-----------
QUERY:

-- Should not infer /* REPLACED */ ''tricky_expr_comp_key_index/* REPLACED */ '' index:
explain (costs off) insert into insertconflicttest values (26, 'Fig') on conflict (lower(fruit), key, lower(fruit), key) do update set fruit = excluded.fruit;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'costs off) insert into insertconflicttest values (26, 'Fig') on conflict (lower(' at line 2")

-----------
QUERY:


-- inference fails:
insert into insertconflicttest values (27, 'Prune') on conflict (key, upper(fruit)) do update set fruit = excluded.fruit;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'conflict (key, upper(fruit)) do update set fruit = excluded.fruit' at line 2")

-----------
QUERY:

insert into insertconflicttest values (28, 'Redcurrant') on conflict (fruit, key) do update set fruit = excluded.fruit;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'conflict (fruit, key) do update set fruit = excluded.fruit' at line 1")

-----------
QUERY:

insert into insertconflicttest values (29, 'Nectarine') on conflict (key) do update set fruit = excluded.fruit;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'conflict (key) do update set fruit = excluded.fruit' at line 1")

-----------
QUERY:


drop index expr_comp_key_index;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 1")

-----------
QUERY:

drop index tricky_expr_comp_key_index;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 1")

-----------
QUERY:


--
-- Non-spurious duplicate violation tests
--
create unique index key_index on insertconflicttest(key);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'key)' at line 4")

-----------
QUERY:

create unique index fruit_index on insertconflicttest(fruit);
RESULT:
	ERROR - (1146, "Table 'test.insertconflicttest' doesn't exist")

-----------
QUERY:


-- succeeds, since UPDATE happens to update /* REPLACED */ ''fruit/* REPLACED */ '' to existing value:
insert into insertconflicttest values (26, 'Fig') on conflict (key) do update set fruit = excluded.fruit;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'conflict (key) do update set fruit = excluded.fruit' at line 2")

-----------
QUERY:

-- fails, since UPDATE is to row with key value 26, and we/* REPLACED */ ''re updating /* REPLACED */ ''fruit/* REPLACED */ ''
-- to a value that happens to exist in another row (/* REPLACED */ ''peach/* REPLACED */ ''):
insert into insertconflicttest values (26, 'Peach') on conflict (key) do update set fruit = excluded.fruit;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'conflict (key) do update set fruit = excluded.fruit' at line 3")

-----------
QUERY:

-- succeeds, since /* REPLACED */ ''key/* REPLACED */ '' isn/* REPLACED */ ''t repeated/referenced in UPDATE, and /* REPLACED */ ''fruit/* REPLACED */ ''
-- arbitrates that statement updates existing /* REPLACED */ ''Fig/* REPLACED */ '' row:
insert into insertconflicttest values (25, 'Fig') on conflict (fruit) do update set fruit = excluded.fruit;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'conflict (fruit) do update set fruit = excluded.fruit' at line 3")

-----------
QUERY:


drop index key_index;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 1")

-----------
QUERY:

drop index fruit_index;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 1")

-----------
QUERY:


--
-- Test partial unique index inference
--
create unique index partial_key_index on insertconflicttest(key) where fruit like '%berry';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'key) where fruit like '%berry'' at line 4")

-----------
QUERY:


-- Succeeds
insert into insertconflicttest values (23, 'Blackberry') on conflict (key) where fruit like '%berry' do update set fruit = excluded.fruit;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'conflict (key) where fruit like '%berry' do update set fruit = excluded.fruit' at line 2")

-----------
QUERY:

insert into insertconflicttest as t values (23, 'Blackberry') on conflict (key) where fruit like '%berry' and t.fruit = 'inconsequential' do nothing;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'as t values (23, 'Blackberry') on conflict (key) where fruit like '%berry' and t' at line 1")

-----------
QUERY:


-- fails
insert into insertconflicttest values (23, 'Blackberry') on conflict (key) do update set fruit = excluded.fruit;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'conflict (key) do update set fruit = excluded.fruit' at line 2")

-----------
QUERY:

insert into insertconflicttest values (23, 'Blackberry') on conflict (key) where fruit like '%berry' or fruit = 'consequential' do nothing;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'conflict (key) where fruit like '%berry' or fruit = 'consequential' do nothing' at line 1")

-----------
QUERY:

insert into insertconflicttest values (23, 'Blackberry') on conflict (fruit) where fruit like '%berry' do update set fruit = excluded.fruit;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'conflict (fruit) where fruit like '%berry' do update set fruit = excluded.fruit' at line 1")

-----------
QUERY:


drop index partial_key_index;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 1")

-----------
QUERY:


--
-- Test that wholerow references to ON CONFLICT/* REPLACED */ ''s EXCLUDED work
--
create unique index plain on insertconflicttest(key);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'key)' at line 4")

-----------
QUERY:


-- Succeeds, updates existing row:
insert into insertconflicttest as i values (23, 'Jackfruit') on conflict (key) do update set fruit = excluded.fruit
  where i.* != excluded.* returning *;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'as i values (23, 'Jackfruit') on conflict (key) do update set fruit = excluded.f' at line 2")

-----------
QUERY:

-- No update this time, though:
insert into insertconflicttest as i values (23, 'Jackfruit') on conflict (key) do update set fruit = excluded.fruit
  where i.* != excluded.* returning *;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'as i values (23, 'Jackfruit') on conflict (key) do update set fruit = excluded.f' at line 2")

-----------
QUERY:

-- Predicate changed to require match rather than non-match, so updates once more:
insert into insertconflicttest as i values (23, 'Jackfruit') on conflict (key) do update set fruit = excluded.fruit
  where i.* = excluded.* returning *;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'as i values (23, 'Jackfruit') on conflict (key) do update set fruit = excluded.f' at line 2")

-----------
QUERY:

-- Assign:
insert into insertconflicttest as i values (23, 'Avocado') on conflict (key) do update set fruit = excluded.*::text
  returning *;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'as i values (23, 'Avocado') on conflict (key) do update set fruit = excluded.*::' at line 2")

-----------
QUERY:

-- deparse whole row var in WHERE and SET clauses:
explain (costs off) insert into insertconflicttest as i values (23, 'Avocado') on conflict (key) do update set fruit = excluded.fruit where excluded.* is null;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'costs off) insert into insertconflicttest as i values (23, 'Avocado') on conflic' at line 2")

-----------
QUERY:

explain (costs off) insert into insertconflicttest as i values (23, 'Avocado') on conflict (key) do update set fruit = excluded.*::text;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'costs off) insert into insertconflicttest as i values (23, 'Avocado') on conflic' at line 1")

-----------
QUERY:


drop index plain;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 1")

-----------
QUERY:


-- Cleanup
drop table insertconflicttest;
RESULT:
	ERROR - (1051, "Unknown table 'test.insertconflicttest'")

-----------
QUERY:



--
-- Verify that EXCLUDED does not allow system column references. These
-- do not make sense because EXCLUDED isn/* REPLACED */ ''t an already stored tuple
-- (and thus doesn/* REPLACED */ ''t have a ctid etc).
--
create table syscolconflicttest(key int4, data text);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'int4, data text)' at line 6")

-----------
QUERY:

insert into syscolconflicttest values (1);
RESULT:
	ERROR - (1146, "Table 'test.syscolconflicttest' doesn't exist")

-----------
QUERY:

insert into syscolconflicttest values (1) on conflict (key) do update set data = excluded.ctid::text;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'conflict (key) do update set data = excluded.ctid::text' at line 1")

-----------
QUERY:

drop table syscolconflicttest;
RESULT:
	ERROR - (1051, "Unknown table 'test.syscolconflicttest'")

-----------
QUERY:


--
-- Previous tests all managed to not test any expressions requiring
-- planner preprocessing ...
--
create table insertconflict (a bigint, b bigint);
RESULT:
	[]

-----------
QUERY:


create unique index insertconflicti1 on insertconflict(coalesce(a, 0));
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'a, 0))' at line 1")

-----------
QUERY:


create unique index insertconflicti2 on insertconflict(b)
  where coalesce(a, 1) > 0;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'where coalesce(a, 1) > 0' at line 2")

-----------
QUERY:


insert into insertconflict values (1, 2)
on conflict (coalesce(a, 0)) do nothing;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'conflict (coalesce(a, 0)) do nothing' at line 2")

-----------
QUERY:


insert into insertconflict values (1, 2)
on conflict (b) where coalesce(a, 1) > 0 do nothing;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'conflict (b) where coalesce(a, 1) > 0 do nothing' at line 2")

-----------
QUERY:


insert into insertconflict values (1, 2)
on conflict (b) where coalesce(a, 1) > 1 do nothing;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'conflict (b) where coalesce(a, 1) > 1 do nothing' at line 2")

-----------
QUERY:


drop table insertconflict;
RESULT:
	[]

-----------
QUERY:


--
-- test insertion through view
--

create table insertconflict (f1 int primary key, f2 text);
RESULT:
	[]

-----------
QUERY:

create view insertconflictv as
  select * from insertconflict with cascaded check option;
RESULT:
	[]

-----------
QUERY:


insert into insertconflictv values (1,'foo')
  on conflict (f1) do update set f2 = excluded.f2;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'conflict (f1) do update set f2 = excluded.f2' at line 2")

-----------
QUERY:

select * from insertconflict;
RESULT:
	()

-----------
QUERY:

insert into insertconflictv values (1,'bar')
  on conflict (f1) do update set f2 = excluded.f2;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'conflict (f1) do update set f2 = excluded.f2' at line 2")

-----------
QUERY:

select * from insertconflict;
RESULT:
	()

-----------
QUERY:


drop view insertconflictv;
RESULT:
	[]

-----------
QUERY:

drop table insertconflict;
RESULT:
	[]

-----------
QUERY:



-- ******************************************************************
-- *                                                                *
-- * Test inheritance (example taken from tutorial)                 *
-- *                                                                *
-- ******************************************************************
create table cities (
	name		text,
	population	float8,
	altitude	int		-- (in ft)
);
RESULT:
	[]

-----------
QUERY:


create table capitals (
	state		char(2)
) inherits (cities);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'inherits (cities)' at line 3")

-----------
QUERY:


-- Create unique indexes.  Due to a general limitation of inheritance,
-- uniqueness is only enforced per-relation.  Unique index inference
-- specification will do the right thing, though.
create unique index cities_names_unique on cities (name);
RESULT:
	ERROR - (1170, "BLOB/TEXT column 'name' used in key specification without a key length")

-----------
QUERY:

create unique index capitals_names_unique on capitals (name);
RESULT:
	ERROR - (1146, "Table 'test.capitals' doesn't exist")

-----------
QUERY:


-- prepopulate the tables.
insert into cities values ('San Francisco', 7.24E+5, 63);
RESULT:
	[]

-----------
QUERY:

insert into cities values ('Las Vegas', 2.583E+5, 2174);
RESULT:
	[]

-----------
QUERY:

insert into cities values ('Mariposa', 1200, 1953);
RESULT:
	[]

-----------
QUERY:


insert into capitals values ('Sacramento', 3.694E+5, 30, 'CA');
RESULT:
	ERROR - (1146, "Table 'test.capitals' doesn't exist")

-----------
QUERY:

insert into capitals values ('Madison', 1.913E+5, 845, 'WI');
RESULT:
	ERROR - (1146, "Table 'test.capitals' doesn't exist")

-----------
QUERY:


-- Tests proper for inheritance:
select * from capitals;
RESULT:
	ERROR - (1146, "Table 'test.capitals' doesn't exist")

-----------
QUERY:


-- Succeeds:
insert into cities values ('Las Vegas', 2.583E+5, 2174) on conflict do nothing;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'conflict do nothing' at line 2")

-----------
QUERY:

insert into capitals values ('Sacramento', 4664.E+5, 30, 'CA') on conflict (name) do update set population = excluded.population;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'conflict (name) do update set population = excluded.population' at line 1")

-----------
QUERY:

-- Wrong /* REPLACED */ ''Sacramento/* REPLACED */ '', so do nothing:
insert into capitals values ('Sacramento', 50, 2267, 'NE') on conflict (name) do nothing;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'conflict (name) do nothing' at line 2")

-----------
QUERY:

select * from capitals;
RESULT:
	ERROR - (1146, "Table 'test.capitals' doesn't exist")

-----------
QUERY:

insert into cities values ('Las Vegas', 5.83E+5, 2001) on conflict (name) do update set population = excluded.population, altitude = excluded.altitude;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'conflict (name) do update set population = excluded.population, altitude = exclu' at line 1")

-----------
QUERY:

select tableoid::regclass, * from cities;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::regclass, * from cities' at line 1")

-----------
QUERY:

insert into capitals values ('Las Vegas', 5.83E+5, 2222, 'NV') on conflict (name) do update set population = excluded.population;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'conflict (name) do update set population = excluded.population' at line 1")

-----------
QUERY:

-- Capitals will contain new capital, Las Vegas:
select * from capitals;
RESULT:
	ERROR - (1146, "Table 'test.capitals' doesn't exist")

-----------
QUERY:

-- Cities contains two instances of /* REPLACED */ ''Las Vegas/* REPLACED */ '', since unique constraints don/* REPLACED */ ''t
-- work across inheritance:
select tableoid::regclass, * from cities;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::regclass, * from cities' at line 3")

-----------
QUERY:

-- This only affects /* REPLACED */ ''cities/* REPLACED */ '' version of /* REPLACED */ ''Las Vegas/* REPLACED */ '':
insert into cities values ('Las Vegas', 5.86E+5, 2223) on conflict (name) do update set population = excluded.population, altitude = excluded.altitude;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'conflict (name) do update set population = excluded.population, altitude = exclu' at line 2")

-----------
QUERY:

select tableoid::regclass, * from cities;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::regclass, * from cities' at line 1")

-----------
QUERY:


-- clean up
drop table capitals;
RESULT:
	ERROR - (1051, "Unknown table 'test.capitals'")

-----------
QUERY:

drop table cities;
RESULT:
	[]

-----------
QUERY:



-- Make sure a table named excluded is handled properly
create table excluded(key int primary key, data text);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'int primary key, data text)' at line 2")

-----------
QUERY:

insert into excluded values(1, '1');
RESULT:
	ERROR - (1146, "Table 'test.excluded' doesn't exist")

-----------
QUERY:

-- error, ambiguous
insert into excluded values(1, '2') on conflict (key) do update set data = excluded.data RETURNING *;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'conflict (key) do update set data = excluded.data RETURNING *' at line 2")

-----------
QUERY:

-- ok, aliased
insert into excluded AS target values(1, '2') on conflict (key) do update set data = excluded.data RETURNING *;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'AS target values(1, '2') on conflict (key) do update set data = excluded.data RE' at line 2")

-----------
QUERY:

-- ok, aliased
insert into excluded AS target values(1, '2') on conflict (key) do update set data = target.data RETURNING *;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'AS target values(1, '2') on conflict (key) do update set data = target.data RETU' at line 2")

-----------
QUERY:

-- make sure excluded isn/* REPLACED */ ''t a problem in returning clause
insert into excluded values(1, '2') on conflict (key) do update set data = 3 RETURNING excluded.*;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'conflict (key) do update set data = 3 RETURNING excluded.*' at line 2")

-----------
QUERY:


-- clean up
drop table excluded;
RESULT:
	ERROR - (1051, "Unknown table 'test.excluded'")

-----------
QUERY:



-- check that references to columns after dropped columns are handled correctly
create table dropcol(key int primary key, drop1 int, keep1 text, drop2 numeric, keep2 float);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'int primary key, drop1 int, keep1 text, drop2 numeric, keep2 float)' at line 2")

-----------
QUERY:

insert into dropcol(key, drop1, keep1, drop2, keep2) values(1, 1, '1', '1', 1);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'key, drop1, keep1, drop2, keep2) values(1, 1, '1', '1', 1)' at line 1")

-----------
QUERY:

-- set using excluded
insert into dropcol(key, drop1, keep1, drop2, keep2) values(1, 2, '2', '2', 2) on conflict(key)
    do update set drop1 = excluded.drop1, keep1 = excluded.keep1, drop2 = excluded.drop2, keep2 = excluded.keep2
    where excluded.drop1 is not null and excluded.keep1 is not null and excluded.drop2 is not null and excluded.keep2 is not null
          and dropcol.drop1 is not null and dropcol.keep1 is not null and dropcol.drop2 is not null and dropcol.keep2 is not null
    returning *;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'key, drop1, keep1, drop2, keep2) values(1, 2, '2', '2', 2) on conflict(key)\n    ' at line 2")

-----------
QUERY:

;
RESULT:
	ERROR - (1065, 'Query was empty')

-----------
QUERY:

-- set using existing table
insert into dropcol(key, drop1, keep1, drop2, keep2) values(1, 3, '3', '3', 3) on conflict(key)
    do update set drop1 = dropcol.drop1, keep1 = dropcol.keep1, drop2 = dropcol.drop2, keep2 = dropcol.keep2
    returning *;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'key, drop1, keep1, drop2, keep2) values(1, 3, '3', '3', 3) on conflict(key)\n    ' at line 2")

-----------
QUERY:

;
RESULT:
	ERROR - (1065, 'Query was empty')

-----------
QUERY:

alter table dropcol drop column drop1, drop column drop2;
RESULT:
	ERROR - (1146, "Table 'test.dropcol' doesn't exist")

-----------
QUERY:

-- set using excluded
insert into dropcol(key, keep1, keep2) values(1, '4', 4) on conflict(key)
    do update set keep1 = excluded.keep1, keep2 = excluded.keep2
    where excluded.keep1 is not null and excluded.keep2 is not null
          and dropcol.keep1 is not null and dropcol.keep2 is not null
    returning *;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'key, keep1, keep2) values(1, '4', 4) on conflict(key)\n    do update set keep1 = ' at line 2")

-----------
QUERY:

;
RESULT:
	ERROR - (1065, 'Query was empty')

-----------
QUERY:

-- set using existing table
insert into dropcol(key, keep1, keep2) values(1, '5', 5) on conflict(key)
    do update set keep1 = dropcol.keep1, keep2 = dropcol.keep2
    returning *;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'key, keep1, keep2) values(1, '5', 5) on conflict(key)\n    do update set keep1 = ' at line 2")

-----------
QUERY:

;
RESULT:
	ERROR - (1065, 'Query was empty')

-----------
QUERY:


DROP TABLE dropcol;
RESULT:
	ERROR - (1051, "Unknown table 'test.dropcol'")

-----------
QUERY:


-- check handling of regular btree constraint along with gist constraint

create table twoconstraints (f1 int unique, f2 box,
                             exclude using gist(f2 with &&));
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'box,\n                             exclude using gist(f2 with &&))' at line 3")

-----------
QUERY:

insert into twoconstraints values(1, '((0,0),(1,1))');
RESULT:
	ERROR - (1146, "Table 'test.twoconstraints' doesn't exist")

-----------
QUERY:

insert into twoconstraints values(1, '((2,2),(3,3))');
RESULT:
	ERROR - (1146, "Table 'test.twoconstraints' doesn't exist")

-----------
QUERY:
  -- fail on f1
insert into twoconstraints values(2, '((0,0),(1,2))');
RESULT:
	ERROR - (1146, "Table 'test.twoconstraints' doesn't exist")

-----------
QUERY:
  -- fail on f2
insert into twoconstraints values(2, '((0,0),(1,2))')
  on conflict on constraint twoconstraints_f1_key do nothing;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'conflict on constraint twoconstraints_f1_key do nothing' at line 3")

-----------
QUERY:
  -- fail on f2
insert into twoconstraints values(2, '((0,0),(1,2))')
  on conflict on constraint twoconstraints_f2_excl do nothing;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'conflict on constraint twoconstraints_f2_excl do nothing' at line 3")

-----------
QUERY:
  -- do nothing
select * from twoconstraints;
RESULT:
	ERROR - (1146, "Table 'test.twoconstraints' doesn't exist")

-----------
QUERY:

drop table twoconstraints;
RESULT:
	ERROR - (1051, "Unknown table 'test.twoconstraints'")

-----------
QUERY:


-- check handling of self-conflicts at various isolation levels

create table selfconflict (f1 int primary key, f2 int);
RESULT:
	[]

-----------
QUERY:


begin transaction isolation level read committed;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'transaction isolation level read committed' at line 1")

-----------
QUERY:

insert into selfconflict values (1,1), (1,2) on conflict do nothing;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'conflict do nothing' at line 1")

-----------
QUERY:

commit;
RESULT:
	[]

-----------
QUERY:


begin transaction isolation level repeatable read;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'transaction isolation level repeatable read' at line 1")

-----------
QUERY:

insert into selfconflict values (2,1), (2,2) on conflict do nothing;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'conflict do nothing' at line 1")

-----------
QUERY:

commit;
RESULT:
	[]

-----------
QUERY:


begin transaction isolation level serializable;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'transaction isolation level serializable' at line 1")

-----------
QUERY:

insert into selfconflict values (3,1), (3,2) on conflict do nothing;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'conflict do nothing' at line 1")

-----------
QUERY:

commit;
RESULT:
	[]

-----------
QUERY:


begin transaction isolation level read committed;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'transaction isolation level read committed' at line 1")

-----------
QUERY:

insert into selfconflict values (4,1), (4,2) on conflict(f1) do update set f2 = 0;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'conflict(f1) do update set f2 = 0' at line 1")

-----------
QUERY:

commit;
RESULT:
	[]

-----------
QUERY:


begin transaction isolation level repeatable read;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'transaction isolation level repeatable read' at line 1")

-----------
QUERY:

insert into selfconflict values (5,1), (5,2) on conflict(f1) do update set f2 = 0;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'conflict(f1) do update set f2 = 0' at line 1")

-----------
QUERY:

commit;
RESULT:
	[]

-----------
QUERY:


begin transaction isolation level serializable;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'transaction isolation level serializable' at line 1")

-----------
QUERY:

insert into selfconflict values (6,1), (6,2) on conflict(f1) do update set f2 = 0;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'conflict(f1) do update set f2 = 0' at line 1")

-----------
QUERY:

commit;
RESULT:
	[]

-----------
QUERY:


select * from selfconflict;
RESULT:
	()

-----------
QUERY:


drop table selfconflict;
RESULT:
	[]

-----------
QUERY:


-- check ON CONFLICT handling with partitioned tables
create table parted_conflict_test (a int unique, b char) partition by list (a);
RESULT:
	ERROR - (1492, 'For LIST partitions each partition must be defined')

-----------
QUERY:

create table parted_conflict_test_1 partition of parted_conflict_test (b unique) for values in (1, 2);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'of parted_conflict_test (b unique) for values in (1, 2)' at line 1")

-----------
QUERY:


-- no indexes required here
insert into parted_conflict_test values (1, 'a') on conflict do nothing;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'conflict do nothing' at line 2")

-----------
QUERY:


-- index on a required, which does exist in parent
insert into parted_conflict_test values (1, 'a') on conflict (a) do nothing;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'conflict (a) do nothing' at line 2")

-----------
QUERY:

insert into parted_conflict_test values (1, 'a') on conflict (a) do update set b = excluded.b;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'conflict (a) do update set b = excluded.b' at line 1")

-----------
QUERY:


-- targeting partition directly will work
insert into parted_conflict_test_1 values (1, 'a') on conflict (a) do nothing;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'conflict (a) do nothing' at line 2")

-----------
QUERY:

insert into parted_conflict_test_1 values (1, 'b') on conflict (a) do update set b = excluded.b;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'conflict (a) do update set b = excluded.b' at line 1")

-----------
QUERY:


-- index on b required, which doesn/* REPLACED */ ''t exist in parent
insert into parted_conflict_test values (2, 'b') on conflict (b) do update set a = excluded.a;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'conflict (b) do update set a = excluded.a' at line 2")

-----------
QUERY:


-- targeting partition directly will work
insert into parted_conflict_test_1 values (2, 'b') on conflict (b) do update set a = excluded.a;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'conflict (b) do update set a = excluded.a' at line 2")

-----------
QUERY:


-- should see (2, /* REPLACED */ ''b/* REPLACED */ '')
select * from parted_conflict_test order by a;
RESULT:
	ERROR - (1146, "Table 'test.parted_conflict_test' doesn't exist")

-----------
QUERY:


-- now check that DO UPDATE works correctly for target partition with
-- different attribute numbers
create table parted_conflict_test_2 (b char, a int unique);
RESULT:
	[]

-----------
QUERY:

alter table parted_conflict_test attach partition parted_conflict_test_2 for values in (3);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'attach partition parted_conflict_test_2 for values in (3)' at line 1")

-----------
QUERY:

truncate parted_conflict_test;
RESULT:
	ERROR - (1146, "Table 'test.parted_conflict_test' doesn't exist")

-----------
QUERY:

insert into parted_conflict_test values (3, 'a') on conflict (a) do update set b = excluded.b;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'conflict (a) do update set b = excluded.b' at line 1")

-----------
QUERY:

insert into parted_conflict_test values (3, 'b') on conflict (a) do update set b = excluded.b;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'conflict (a) do update set b = excluded.b' at line 1")

-----------
QUERY:


-- should see (3, /* REPLACED */ ''b/* REPLACED */ '')
select * from parted_conflict_test order by a;
RESULT:
	ERROR - (1146, "Table 'test.parted_conflict_test' doesn't exist")

-----------
QUERY:


-- case where parent will have a dropped column, but the partition won/* REPLACED */ ''t
alter table parted_conflict_test drop b, add b char;
RESULT:
	ERROR - (1146, "Table 'test.parted_conflict_test' doesn't exist")

-----------
QUERY:

create table parted_conflict_test_3 partition of parted_conflict_test for values in (4);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'of parted_conflict_test for values in (4)' at line 1")

-----------
QUERY:

truncate parted_conflict_test;
RESULT:
	ERROR - (1146, "Table 'test.parted_conflict_test' doesn't exist")

-----------
QUERY:

insert into parted_conflict_test (a, b) values (4, 'a') on conflict (a) do update set b = excluded.b;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'conflict (a) do update set b = excluded.b' at line 1")

-----------
QUERY:

insert into parted_conflict_test (a, b) values (4, 'b') on conflict (a) do update set b = excluded.b where parted_conflict_test.b = 'a';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'conflict (a) do update set b = excluded.b where parted_conflict_test.b = 'a'' at line 1")

-----------
QUERY:


-- should see (4, /* REPLACED */ ''b/* REPLACED */ '')
select * from parted_conflict_test order by a;
RESULT:
	ERROR - (1146, "Table 'test.parted_conflict_test' doesn't exist")

-----------
QUERY:


-- case with multi-level partitioning
create table parted_conflict_test_4 partition of parted_conflict_test for values in (5) partition by list (a);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'of parted_conflict_test for values in (5) partition by list (a)' at line 2")

-----------
QUERY:

create table parted_conflict_test_4_1 partition of parted_conflict_test_4 for values in (5);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'of parted_conflict_test_4 for values in (5)' at line 1")

-----------
QUERY:

truncate parted_conflict_test;
RESULT:
	ERROR - (1146, "Table 'test.parted_conflict_test' doesn't exist")

-----------
QUERY:

insert into parted_conflict_test (a, b) values (5, 'a') on conflict (a) do update set b = excluded.b;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'conflict (a) do update set b = excluded.b' at line 1")

-----------
QUERY:

insert into parted_conflict_test (a, b) values (5, 'b') on conflict (a) do update set b = excluded.b where parted_conflict_test.b = 'a';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'conflict (a) do update set b = excluded.b where parted_conflict_test.b = 'a'' at line 1")

-----------
QUERY:


-- should see (5, /* REPLACED */ ''b/* REPLACED */ '')
select * from parted_conflict_test order by a;
RESULT:
	ERROR - (1146, "Table 'test.parted_conflict_test' doesn't exist")

-----------
QUERY:


-- test with multiple rows
truncate parted_conflict_test;
RESULT:
	ERROR - (1146, "Table 'test.parted_conflict_test' doesn't exist")

-----------
QUERY:

insert into parted_conflict_test (a, b) values (1, 'a'), (2, 'a'), (4, 'a') on conflict (a) do update set b = excluded.b where excluded.b = 'b';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'conflict (a) do update set b = excluded.b where excluded.b = 'b'' at line 1")

-----------
QUERY:

insert into parted_conflict_test (a, b) values (1, 'b'), (2, 'c'), (4, 'b') on conflict (a) do update set b = excluded.b where excluded.b = 'b';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'conflict (a) do update set b = excluded.b where excluded.b = 'b'' at line 1")

-----------
QUERY:


-- should see (1, /* REPLACED */ ''b/* REPLACED */ ''), (2, /* REPLACED */ ''a/* REPLACED */ ''), (4, /* REPLACED */ ''b/* REPLACED */ '')
select * from parted_conflict_test order by a;
RESULT:
	ERROR - (1146, "Table 'test.parted_conflict_test' doesn't exist")

-----------
QUERY:


drop table parted_conflict_test;
RESULT:
	ERROR - (1051, "Unknown table 'test.parted_conflict_test'")

-----------
QUERY:


-- test behavior of inserting a conflicting tuple into an intermediate
-- partitioning level
create table parted_conflict (a int primary key, b text) partition by range (a);
RESULT:
	ERROR - (1492, 'For RANGE partitions each partition must be defined')

-----------
QUERY:

create table parted_conflict_1 partition of parted_conflict for values from (0) to (1000) partition by range (a);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'of parted_conflict for values from (0) to (1000) partition by range (a)' at line 1")

-----------
QUERY:

create table parted_conflict_1_1 partition of parted_conflict_1 for values from (0) to (500);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'of parted_conflict_1 for values from (0) to (500)' at line 1")

-----------
QUERY:

insert into parted_conflict values (40, 'forty');
RESULT:
	ERROR - (1146, "Table 'test.parted_conflict' doesn't exist")

-----------
QUERY:

insert into parted_conflict_1 values (40, 'cuarenta')
  on conflict (a) do update set b = excluded.b;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'conflict (a) do update set b = excluded.b' at line 2")

-----------
QUERY:

drop table parted_conflict;
RESULT:
	ERROR - (1051, "Unknown table 'test.parted_conflict'")

-----------
QUERY:


-- same thing, but this time try to use an index that/* REPLACED */ ''s created not in the
-- partition
create table parted_conflict (a int, b text) partition by range (a);
RESULT:
	ERROR - (1492, 'For RANGE partitions each partition must be defined')

-----------
QUERY:

create table parted_conflict_1 partition of parted_conflict for values from (0) to (1000) partition by range (a);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'of parted_conflict for values from (0) to (1000) partition by range (a)' at line 1")

-----------
QUERY:

create table parted_conflict_1_1 partition of parted_conflict_1 for values from (0) to (500);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'of parted_conflict_1 for values from (0) to (500)' at line 1")

-----------
QUERY:

create unique index on only parted_conflict_1 (a);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'on only parted_conflict_1 (a)' at line 1")

-----------
QUERY:

create unique index on only parted_conflict (a);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'on only parted_conflict (a)' at line 1")

-----------
QUERY:

alter index parted_conflict_a_idx attach partition parted_conflict_1_a_idx;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index parted_conflict_a_idx attach partition parted_conflict_1_a_idx' at line 1")

-----------
QUERY:

insert into parted_conflict values (40, 'forty');
RESULT:
	ERROR - (1146, "Table 'test.parted_conflict' doesn't exist")

-----------
QUERY:

insert into parted_conflict_1 values (40, 'cuarenta')
  on conflict (a) do update set b = excluded.b;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'conflict (a) do update set b = excluded.b' at line 2")

-----------
QUERY:

drop table parted_conflict;
RESULT:
	ERROR - (1051, "Unknown table 'test.parted_conflict'")

-----------
QUERY:


-- test whole-row Vars in ON CONFLICT expressions
create table parted_conflict (a int, b text, c int) partition by range (a);
RESULT:
	ERROR - (1492, 'For RANGE partitions each partition must be defined')

-----------
QUERY:

create table parted_conflict_1 (drp text, c int, a int, b text);
RESULT:
	[]

-----------
QUERY:

alter table parted_conflict_1 drop column drp;
RESULT:
	[]

-----------
QUERY:

create unique index on parted_conflict (a, b);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'on parted_conflict (a, b)' at line 1")

-----------
QUERY:

alter table parted_conflict attach partition parted_conflict_1 for values from (0) to (1000);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'attach partition parted_conflict_1 for values from (0) to (1000)' at line 1")

-----------
QUERY:

truncate parted_conflict;
RESULT:
	ERROR - (1146, "Table 'test.parted_conflict' doesn't exist")

-----------
QUERY:

insert into parted_conflict values (50, 'cincuenta', 1);
RESULT:
	ERROR - (1146, "Table 'test.parted_conflict' doesn't exist")

-----------
QUERY:

insert into parted_conflict values (50, 'cincuenta', 2)
  on conflict (a, b) do update set (a, b, c) = row(excluded.*)
  where parted_conflict = (50, text 'cincuenta', 1) and
        excluded = (50, text 'cincuenta', 2);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'conflict (a, b) do update set (a, b, c) = row(excluded.*)\n  where parted_conflic' at line 2")

-----------
QUERY:


-- should see (50, /* REPLACED */ ''cincuenta/* REPLACED */ '', 2)
select * from parted_conflict order by a;
RESULT:
	ERROR - (1146, "Table 'test.parted_conflict' doesn't exist")

-----------
QUERY:


-- test with statement level triggers
create or replace function parted_conflict_update_func() returns trigger as $$
declare
    r record;
begin
 for r in select * from inserted loop
	raise notice 'a = %, b = %, c = %', r.a, r.b, r.c;
 end loop;
 return new;
end;
$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'function parted_conflict_update_func() returns trigger as $$\ndeclare\n    r recor' at line 2")

-----------
QUERY:


create trigger parted_conflict_update
    after update on parted_conflict
    referencing new table as inserted
    for each statement
    execute procedure parted_conflict_update_func();
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'referencing new table as inserted\n    for each statement\n    execute procedure p' at line 3")

-----------
QUERY:


truncate parted_conflict;
RESULT:
	ERROR - (1146, "Table 'test.parted_conflict' doesn't exist")

-----------
QUERY:


insert into parted_conflict values (0, 'cero', 1);
RESULT:
	ERROR - (1146, "Table 'test.parted_conflict' doesn't exist")

-----------
QUERY:


insert into parted_conflict values(0, 'cero', 1)
  on conflict (a,b) do update set c = parted_conflict.c + 1;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'conflict (a,b) do update set c = parted_conflict.c + 1' at line 2")

-----------
QUERY:


drop table parted_conflict;
RESULT:
	ERROR - (1051, "Unknown table 'test.parted_conflict'")

-----------
QUERY:

drop function parted_conflict_update_func();
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '()' at line 1")
