
-----------
QUERY:
--
-- INT2
--

-- int2_tbl was already created and filled in test_setup.sql.
-- Here we just try to insert bad values.

INSERT INTO INT2_TBL(f1) VALUES ('34.5');
RESULT:
	[]

-----------
QUERY:

INSERT INTO INT2_TBL(f1) VALUES ('100000');
RESULT:
	ERROR - Conversion Error: Could not convert string '100000' to INT16
LINE 2: INSERT INTO INT2_TBL(f1) VALUES ('100000');
                                         ^

-----------
QUERY:

INSERT INTO INT2_TBL(f1) VALUES ('asdf');
RESULT:
	ERROR - Conversion Error: Could not convert string 'asdf' to INT16
LINE 2: INSERT INTO INT2_TBL(f1) VALUES ('asdf');
                                         ^

-----------
QUERY:

INSERT INTO INT2_TBL(f1) VALUES ('    ');
RESULT:
	ERROR - Conversion Error: Could not convert string '    ' to INT16
LINE 2: INSERT INTO INT2_TBL(f1) VALUES ('    ');
                                         ^

-----------
QUERY:

INSERT INTO INT2_TBL(f1) VALUES ('- 1234');
RESULT:
	ERROR - Conversion Error: Could not convert string '- 1234' to INT16
LINE 2: INSERT INTO INT2_TBL(f1) VALUES ('- 1234');
                                         ^

-----------
QUERY:

INSERT INTO INT2_TBL(f1) VALUES ('4 444');
RESULT:
	ERROR - Conversion Error: Could not convert string '4 444' to INT16
LINE 2: INSERT INTO INT2_TBL(f1) VALUES ('4 444');
                                         ^

-----------
QUERY:

INSERT INTO INT2_TBL(f1) VALUES ('123 dt');
RESULT:
	ERROR - Conversion Error: Could not convert string '123 dt' to INT16
LINE 2: INSERT INTO INT2_TBL(f1) VALUES ('123 dt');
                                         ^

-----------
QUERY:

INSERT INTO INT2_TBL(f1) VALUES ('');
RESULT:
	ERROR - Conversion Error: Could not convert string '' to INT16
LINE 2: INSERT INTO INT2_TBL(f1) VALUES ('');
                                         ^

-----------
QUERY:



SELECT * FROM INT2_TBL;
RESULT:
	[(0,), (1234,), (-1234,), (32767,), (-32767,), (35,)]

-----------
QUERY:


-- Also try it with non-error-throwing API
SELECT pg_input_is_valid('34', 'int2');
RESULT:
	ERROR - Catalog Error: Scalar Function with name pg_input_is_valid does not exist!
Did you mean "json_valid"?

-----------
QUERY:

SELECT pg_input_is_valid('asdf', 'int2');
RESULT:
	ERROR - Catalog Error: Scalar Function with name pg_input_is_valid does not exist!
Did you mean "json_valid"?

-----------
QUERY:

SELECT pg_input_is_valid('50000', 'int2');
RESULT:
	ERROR - Catalog Error: Scalar Function with name pg_input_is_valid does not exist!
Did you mean "json_valid"?

-----------
QUERY:

SELECT * FROM pg_input_error_info('50000', 'int2');
RESULT:
	ERROR - Catalog Error: Table Function with name pg_input_error_info does not exist!
Did you mean "pragma_storage_info"?

-----------
QUERY:


-- While we/* REPLACED */''re here, check int2vector as well
SELECT pg_input_is_valid(' 1 3  5 ', 'int2vector');
RESULT:
	ERROR - Catalog Error: Scalar Function with name pg_input_is_valid does not exist!
Did you mean "json_valid"?

-----------
QUERY:

SELECT * FROM pg_input_error_info('1 asdf', 'int2vector');
RESULT:
	ERROR - Catalog Error: Table Function with name pg_input_error_info does not exist!
Did you mean "pragma_storage_info"?

-----------
QUERY:

SELECT * FROM pg_input_error_info('50000', 'int2vector');
RESULT:
	ERROR - Catalog Error: Table Function with name pg_input_error_info does not exist!
Did you mean "pragma_storage_info"?

-----------
QUERY:


SELECT * FROM INT2_TBL AS f(a, b);
RESULT:
	ERROR - Binder Error: table "f" has 1 columns available but 2 columns specified

-----------
QUERY:


SELECT * FROM (TABLE int2_tbl) AS s (a, b);
RESULT:
	ERROR - Binder Error: table "s" has 1 columns available but 2 columns specified

-----------
QUERY:


SELECT i.* FROM INT2_TBL i WHERE i.f1 <> int2 '0';
RESULT:
	[(1234,), (-1234,), (32767,), (-32767,), (35,)]

-----------
QUERY:


SELECT i.* FROM INT2_TBL i WHERE i.f1 <> int4 '0';
RESULT:
	[(1234,), (-1234,), (32767,), (-32767,), (35,)]

-----------
QUERY:


SELECT i.* FROM INT2_TBL i WHERE i.f1 = int2 '0';
RESULT:
	[(0,)]

-----------
QUERY:


SELECT i.* FROM INT2_TBL i WHERE i.f1 = int4 '0';
RESULT:
	[(0,)]

-----------
QUERY:


SELECT i.* FROM INT2_TBL i WHERE i.f1 < int2 '0';
RESULT:
	[(-1234,), (-32767,)]

-----------
QUERY:


SELECT i.* FROM INT2_TBL i WHERE i.f1 < int4 '0';
RESULT:
	[(-1234,), (-32767,)]

-----------
QUERY:


SELECT i.* FROM INT2_TBL i WHERE i.f1 <= int2 '0';
RESULT:
	[(0,), (-1234,), (-32767,)]

-----------
QUERY:


SELECT i.* FROM INT2_TBL i WHERE i.f1 <= int4 '0';
RESULT:
	[(0,), (-1234,), (-32767,)]

-----------
QUERY:


SELECT i.* FROM INT2_TBL i WHERE i.f1 > int2 '0';
RESULT:
	[(1234,), (32767,), (35,)]

-----------
QUERY:


SELECT i.* FROM INT2_TBL i WHERE i.f1 > int4 '0';
RESULT:
	[(1234,), (32767,), (35,)]

-----------
QUERY:


SELECT i.* FROM INT2_TBL i WHERE i.f1 >= int2 '0';
RESULT:
	[(0,), (1234,), (32767,), (35,)]

-----------
QUERY:


SELECT i.* FROM INT2_TBL i WHERE i.f1 >= int4 '0';
RESULT:
	[(0,), (1234,), (32767,), (35,)]

-----------
QUERY:


-- positive odds
SELECT i.* FROM INT2_TBL i WHERE (i.f1 % int2 '2') = int2 '1';
RESULT:
	[(32767,), (35,)]

-----------
QUERY:


-- any evens
SELECT i.* FROM INT2_TBL i WHERE (i.f1 % int4 '2') = int2 '0';
RESULT:
	[(0,), (1234,), (-1234,)]

-----------
QUERY:


SELECT i.f1, i.f1 * int2 '2' AS x FROM INT2_TBL i;
RESULT:
	ERROR - Out of Range Error: Overflow in multiplication of INT16 (32767 * 2)!

-----------
QUERY:


SELECT i.f1, i.f1 * int2 '2' AS x FROM INT2_TBL i
WHERE abs(f1) < 16384;
RESULT:
	[(0, 0), (1234, 2468), (-1234, -2468), (35, 70)]

-----------
QUERY:


SELECT i.f1, i.f1 * int4 '2' AS x FROM INT2_TBL i;
RESULT:
	[(0, 0), (1234, 2468), (-1234, -2468), (32767, 65534), (-32767, -65534), (35, 70)]

-----------
QUERY:


SELECT i.f1, i.f1 + int2 '2' AS x FROM INT2_TBL i;
RESULT:
	ERROR - Out of Range Error: Overflow in addition of INT16 (32767 + 2)!

-----------
QUERY:


SELECT i.f1, i.f1 + int2 '2' AS x FROM INT2_TBL i
WHERE f1 < 32766;
RESULT:
	[(0, 2), (1234, 1236), (-1234, -1232), (-32767, -32765), (35, 37)]

-----------
QUERY:


SELECT i.f1, i.f1 + int4 '2' AS x FROM INT2_TBL i;
RESULT:
	[(0, 2), (1234, 1236), (-1234, -1232), (32767, 32769), (-32767, -32765), (35, 37)]

-----------
QUERY:


SELECT i.f1, i.f1 - int2 '2' AS x FROM INT2_TBL i;
RESULT:
	ERROR - Out of Range Error: Overflow in subtraction of INT16 (-32767 - 2)!

-----------
QUERY:


SELECT i.f1, i.f1 - int2 '2' AS x FROM INT2_TBL i
WHERE f1 > -32767;
RESULT:
	[(0, -2), (1234, 1232), (-1234, -1236), (32767, 32765), (35, 33)]

-----------
QUERY:


SELECT i.f1, i.f1 - int4 '2' AS x FROM INT2_TBL i;
RESULT:
	[(0, -2), (1234, 1232), (-1234, -1236), (32767, 32765), (-32767, -32769), (35, 33)]

-----------
QUERY:


SELECT i.f1, i.f1 / int2 '2' AS x FROM INT2_TBL i;
RESULT:
	[(0, 0.0), (1234, 617.0), (-1234, -617.0), (32767, 16383.5), (-32767, -16383.5), (35, 17.5)]

-----------
QUERY:


SELECT i.f1, i.f1 / int4 '2' AS x FROM INT2_TBL i;
RESULT:
	[(0, 0.0), (1234, 617.0), (-1234, -617.0), (32767, 16383.5), (-32767, -16383.5), (35, 17.5)]

-----------
QUERY:


-- corner cases
SELECT (-1::int2<<15)::text;
RESULT:
	ERROR - Out of Range Error: Cannot left-shift negative number -1

-----------
QUERY:

SELECT ((-1::int2<<15)+1::int2)::text;
RESULT:
	ERROR - Out of Range Error: Cannot left-shift negative number -1

-----------
QUERY:


-- check sane handling of INT16_MIN overflow cases
SELECT (-32768)::int2 * (-1)::int2;
RESULT:
	ERROR - Out of Range Error: Overflow in multiplication of INT16 (-32768 * -1)!

-----------
QUERY:

SELECT (-32768)::int2 / (-1)::int2;
RESULT:
	[(32768.0,)]

-----------
QUERY:

SELECT (-32768)::int2 % (-1)::int2;
RESULT:
	ERROR - Out of Range Error: Overflow in division of -32768 / -1

-----------
QUERY:


-- check rounding when casting from float
SELECT x, x::int2 AS int2_value
FROM (VALUES (-2.5::float8),
             (-1.5::float8),
             (-0.5::float8),
             (0.0::float8),
             (0.5::float8),
             (1.5::float8),
             (2.5::float8)) t(x);
RESULT:
	[(-2.5, -2), (-1.5, -2), (-0.5, 0), (0.0, 0), (0.5, 0), (1.5, 2), (2.5, 2)]

-----------
QUERY:


-- check rounding when casting from numeric
SELECT x, x::int2 AS int2_value
FROM (VALUES (-2.5::numeric),
             (-1.5::numeric),
             (-0.5::numeric),
             (0.0::numeric),
             (0.5::numeric),
             (1.5::numeric),
             (2.5::numeric)) t(x);
RESULT:
	[(Decimal('-2.500'), -3), (Decimal('-1.500'), -2), (Decimal('-0.500'), -1), (Decimal('0.000'), 0), (Decimal('0.500'), 1), (Decimal('1.500'), 2), (Decimal('2.500'), 3)]

-----------
QUERY:



-- non-decimal literals

SELECT int2 '0b100101';
RESULT:
	[(37,)]

-----------
QUERY:

SELECT int2 '0o273';
RESULT:
	ERROR - Conversion Error: Could not convert string '0o273' to INT16

-----------
QUERY:

SELECT int2 '0x42F';
RESULT:
	[(1071,)]

-----------
QUERY:


SELECT int2 '0b';
RESULT:
	ERROR - Conversion Error: Could not convert string '0b' to INT16

-----------
QUERY:

SELECT int2 '0o';
RESULT:
	ERROR - Conversion Error: Could not convert string '0o' to INT16

-----------
QUERY:

SELECT int2 '0x';
RESULT:
	ERROR - Conversion Error: Could not convert string '0x' to INT16

-----------
QUERY:


-- cases near overflow
SELECT int2 '0b111111111111111';
RESULT:
	[(32767,)]

-----------
QUERY:

SELECT int2 '0b1000000000000000';
RESULT:
	ERROR - Conversion Error: Could not convert string '0b1000000000000000' to INT16

-----------
QUERY:

SELECT int2 '0o77777';
RESULT:
	ERROR - Conversion Error: Could not convert string '0o77777' to INT16

-----------
QUERY:

SELECT int2 '0o100000';
RESULT:
	ERROR - Conversion Error: Could not convert string '0o100000' to INT16

-----------
QUERY:

SELECT int2 '0x7FFF';
RESULT:
	[(32767,)]

-----------
QUERY:

SELECT int2 '0x8000';
RESULT:
	ERROR - Conversion Error: Could not convert string '0x8000' to INT16

-----------
QUERY:


SELECT int2 '-0b1000000000000000';
RESULT:
	ERROR - Conversion Error: Could not convert string '-0b1000000000000000' to INT16

-----------
QUERY:

SELECT int2 '-0b1000000000000001';
RESULT:
	ERROR - Conversion Error: Could not convert string '-0b1000000000000001' to INT16

-----------
QUERY:

SELECT int2 '-0o100000';
RESULT:
	ERROR - Conversion Error: Could not convert string '-0o100000' to INT16

-----------
QUERY:

SELECT int2 '-0o100001';
RESULT:
	ERROR - Conversion Error: Could not convert string '-0o100001' to INT16

-----------
QUERY:

SELECT int2 '-0x8000';
RESULT:
	ERROR - Conversion Error: Could not convert string '-0x8000' to INT16

-----------
QUERY:

SELECT int2 '-0x8001';
RESULT:
	ERROR - Conversion Error: Could not convert string '-0x8001' to INT16

-----------
QUERY:



-- underscores

SELECT int2 '1_000';
RESULT:
	[(1000,)]

-----------
QUERY:

SELECT int2 '1_2_3';
RESULT:
	[(123,)]

-----------
QUERY:

SELECT int2 '0xE_FF';
RESULT:
	[(3839,)]

-----------
QUERY:

SELECT int2 '0o2_73';
RESULT:
	ERROR - Conversion Error: Could not convert string '0o2_73' to INT16

-----------
QUERY:

SELECT int2 '0b_10_0101';
RESULT:
	ERROR - Conversion Error: Could not convert string '0b_10_0101' to INT16

-----------
QUERY:


-- error cases
SELECT int2 '_100';
RESULT:
	ERROR - Conversion Error: Could not convert string '_100' to INT16

-----------
QUERY:

SELECT int2 '100_';
RESULT:
	ERROR - Conversion Error: Could not convert string '100_' to INT16

-----------
QUERY:

SELECT int2 '10__000';
RESULT:
	ERROR - Conversion Error: Could not convert string '10__000' to INT16
