
-----------
QUERY:
--
-- INT2
--

-- int2_tbl was already created and filled in test_setup.sql.
-- Here we just try to insert bad values.

INSERT INTO INT2_TBL(f1) VALUES ('34.5');
RESULT:
	ERROR - invalid input syntax for type smallint: "34.5"
LINE 8: INSERT INTO INT2_TBL(f1) VALUES ('34.5');
                                         ^


-----------
QUERY:

INSERT INTO INT2_TBL(f1) VALUES ('100000');
RESULT:
	ERROR - value "100000" is out of range for type smallint
LINE 2: INSERT INTO INT2_TBL(f1) VALUES ('100000');
                                         ^


-----------
QUERY:

INSERT INTO INT2_TBL(f1) VALUES ('asdf');
RESULT:
	ERROR - invalid input syntax for type smallint: "asdf"
LINE 2: INSERT INTO INT2_TBL(f1) VALUES ('asdf');
                                         ^


-----------
QUERY:

INSERT INTO INT2_TBL(f1) VALUES ('    ');
RESULT:
	ERROR - invalid input syntax for type smallint: "    "
LINE 2: INSERT INTO INT2_TBL(f1) VALUES ('    ');
                                         ^


-----------
QUERY:

INSERT INTO INT2_TBL(f1) VALUES ('- 1234');
RESULT:
	ERROR - invalid input syntax for type smallint: "- 1234"
LINE 2: INSERT INTO INT2_TBL(f1) VALUES ('- 1234');
                                         ^


-----------
QUERY:

INSERT INTO INT2_TBL(f1) VALUES ('4 444');
RESULT:
	ERROR - invalid input syntax for type smallint: "4 444"
LINE 2: INSERT INTO INT2_TBL(f1) VALUES ('4 444');
                                         ^


-----------
QUERY:

INSERT INTO INT2_TBL(f1) VALUES ('123 dt');
RESULT:
	ERROR - invalid input syntax for type smallint: "123 dt"
LINE 2: INSERT INTO INT2_TBL(f1) VALUES ('123 dt');
                                         ^


-----------
QUERY:

INSERT INTO INT2_TBL(f1) VALUES ('');
RESULT:
	ERROR - invalid input syntax for type smallint: ""
LINE 2: INSERT INTO INT2_TBL(f1) VALUES ('');
                                         ^


-----------
QUERY:



SELECT * FROM INT2_TBL;
RESULT:
	[(0,), (1234,), (-1234,), (32767,), (-32767,)]

-----------
QUERY:


-- Also try it with non-error-throwing API
SELECT pg_input_is_valid('34', 'int2');
RESULT:
	[(True,)]

-----------
QUERY:

SELECT pg_input_is_valid('asdf', 'int2');
RESULT:
	[(False,)]

-----------
QUERY:

SELECT pg_input_is_valid('50000', 'int2');
RESULT:
	[(False,)]

-----------
QUERY:

SELECT * FROM pg_input_error_info('50000', 'int2');
RESULT:
	[('value "50000" is out of range for type smallint', None, None, '22003')]

-----------
QUERY:


-- While we/* REPLACED */''re here, check int2vector as well
SELECT pg_input_is_valid(' 1 3  5 ', 'int2vector');
RESULT:
	[(True,)]

-----------
QUERY:

SELECT * FROM pg_input_error_info('1 asdf', 'int2vector');
RESULT:
	[('invalid input syntax for type smallint: "asdf"', None, None, '22P02')]

-----------
QUERY:

SELECT * FROM pg_input_error_info('50000', 'int2vector');
RESULT:
	[('value "50000" is out of range for type smallint', None, None, '22003')]

-----------
QUERY:


SELECT * FROM INT2_TBL AS f(a, b);
RESULT:
	ERROR - table "f" has 1 columns available but 2 columns specified


-----------
QUERY:


SELECT * FROM (TABLE int2_tbl) AS s (a, b);
RESULT:
	ERROR - table "s" has 1 columns available but 2 columns specified


-----------
QUERY:


SELECT i.* FROM INT2_TBL i WHERE i.f1 <> int2 '0';
RESULT:
	[(1234,), (-1234,), (32767,), (-32767,)]

-----------
QUERY:


SELECT i.* FROM INT2_TBL i WHERE i.f1 <> int4 '0';
RESULT:
	[(1234,), (-1234,), (32767,), (-32767,)]

-----------
QUERY:


SELECT i.* FROM INT2_TBL i WHERE i.f1 = int2 '0';
RESULT:
	[(0,)]

-----------
QUERY:


SELECT i.* FROM INT2_TBL i WHERE i.f1 = int4 '0';
RESULT:
	[(0,)]

-----------
QUERY:


SELECT i.* FROM INT2_TBL i WHERE i.f1 < int2 '0';
RESULT:
	[(-1234,), (-32767,)]

-----------
QUERY:


SELECT i.* FROM INT2_TBL i WHERE i.f1 < int4 '0';
RESULT:
	[(-1234,), (-32767,)]

-----------
QUERY:


SELECT i.* FROM INT2_TBL i WHERE i.f1 <= int2 '0';
RESULT:
	[(0,), (-1234,), (-32767,)]

-----------
QUERY:


SELECT i.* FROM INT2_TBL i WHERE i.f1 <= int4 '0';
RESULT:
	[(0,), (-1234,), (-32767,)]

-----------
QUERY:


SELECT i.* FROM INT2_TBL i WHERE i.f1 > int2 '0';
RESULT:
	[(1234,), (32767,)]

-----------
QUERY:


SELECT i.* FROM INT2_TBL i WHERE i.f1 > int4 '0';
RESULT:
	[(1234,), (32767,)]

-----------
QUERY:


SELECT i.* FROM INT2_TBL i WHERE i.f1 >= int2 '0';
RESULT:
	[(0,), (1234,), (32767,)]

-----------
QUERY:


SELECT i.* FROM INT2_TBL i WHERE i.f1 >= int4 '0';
RESULT:
	[(0,), (1234,), (32767,)]

-----------
QUERY:


-- positive odds
SELECT i.* FROM INT2_TBL i WHERE (i.f1 % int2 '2') = int2 '1';
RESULT:
	[(32767,)]

-----------
QUERY:


-- any evens
SELECT i.* FROM INT2_TBL i WHERE (i.f1 % int4 '2') = int2 '0';
RESULT:
	[(0,), (1234,), (-1234,)]

-----------
QUERY:


SELECT i.f1, i.f1 * int2 '2' AS x FROM INT2_TBL i;
RESULT:
	ERROR - smallint out of range


-----------
QUERY:


SELECT i.f1, i.f1 * int2 '2' AS x FROM INT2_TBL i
WHERE abs(f1) < 16384;
RESULT:
	[(0, 0), (1234, 2468), (-1234, -2468)]

-----------
QUERY:


SELECT i.f1, i.f1 * int4 '2' AS x FROM INT2_TBL i;
RESULT:
	[(0, 0), (1234, 2468), (-1234, -2468), (32767, 65534), (-32767, -65534)]

-----------
QUERY:


SELECT i.f1, i.f1 + int2 '2' AS x FROM INT2_TBL i;
RESULT:
	ERROR - smallint out of range


-----------
QUERY:


SELECT i.f1, i.f1 + int2 '2' AS x FROM INT2_TBL i
WHERE f1 < 32766;
RESULT:
	[(0, 2), (1234, 1236), (-1234, -1232), (-32767, -32765)]

-----------
QUERY:


SELECT i.f1, i.f1 + int4 '2' AS x FROM INT2_TBL i;
RESULT:
	[(0, 2), (1234, 1236), (-1234, -1232), (32767, 32769), (-32767, -32765)]

-----------
QUERY:


SELECT i.f1, i.f1 - int2 '2' AS x FROM INT2_TBL i;
RESULT:
	ERROR - smallint out of range


-----------
QUERY:


SELECT i.f1, i.f1 - int2 '2' AS x FROM INT2_TBL i
WHERE f1 > -32767;
RESULT:
	[(0, -2), (1234, 1232), (-1234, -1236), (32767, 32765)]

-----------
QUERY:


SELECT i.f1, i.f1 - int4 '2' AS x FROM INT2_TBL i;
RESULT:
	[(0, -2), (1234, 1232), (-1234, -1236), (32767, 32765), (-32767, -32769)]

-----------
QUERY:


SELECT i.f1, i.f1 / int2 '2' AS x FROM INT2_TBL i;
RESULT:
	[(0, 0), (1234, 617), (-1234, -617), (32767, 16383), (-32767, -16383)]

-----------
QUERY:


SELECT i.f1, i.f1 / int4 '2' AS x FROM INT2_TBL i;
RESULT:
	[(0, 0), (1234, 617), (-1234, -617), (32767, 16383), (-32767, -16383)]

-----------
QUERY:


-- corner cases
SELECT (-1::int2<<15)::text;
RESULT:
	[('-32768',)]

-----------
QUERY:

SELECT ((-1::int2<<15)+1::int2)::text;
RESULT:
	[('-32767',)]

-----------
QUERY:


-- check sane handling of INT16_MIN overflow cases
SELECT (-32768)::int2 * (-1)::int2;
RESULT:
	ERROR - smallint out of range


-----------
QUERY:

SELECT (-32768)::int2 / (-1)::int2;
RESULT:
	ERROR - smallint out of range


-----------
QUERY:

SELECT (-32768)::int2 % (-1)::int2;
RESULT:
	[(0,)]

-----------
QUERY:


-- check rounding when casting from float
SELECT x, x::int2 AS int2_value
FROM (VALUES (-2.5::float8),
             (-1.5::float8),
             (-0.5::float8),
             (0.0::float8),
             (0.5::float8),
             (1.5::float8),
             (2.5::float8)) t(x);
RESULT:
	[(-2.5, -2), (-1.5, -2), (-0.5, 0), (0.0, 0), (0.5, 0), (1.5, 2), (2.5, 2)]

-----------
QUERY:


-- check rounding when casting from numeric
SELECT x, x::int2 AS int2_value
FROM (VALUES (-2.5::numeric),
             (-1.5::numeric),
             (-0.5::numeric),
             (0.0::numeric),
             (0.5::numeric),
             (1.5::numeric),
             (2.5::numeric)) t(x);
RESULT:
	[(Decimal('-2.5'), -3), (Decimal('-1.5'), -2), (Decimal('-0.5'), -1), (Decimal('0.0'), 0), (Decimal('0.5'), 1), (Decimal('1.5'), 2), (Decimal('2.5'), 3)]

-----------
QUERY:



-- non-decimal literals

SELECT int2 '0b100101';
RESULT:
	[(37,)]

-----------
QUERY:

SELECT int2 '0o273';
RESULT:
	[(187,)]

-----------
QUERY:

SELECT int2 '0x42F';
RESULT:
	[(1071,)]

-----------
QUERY:


SELECT int2 '0b';
RESULT:
	ERROR - invalid input syntax for type smallint: "0b"
LINE 3: SELECT int2 '0b';
                    ^


-----------
QUERY:

SELECT int2 '0o';
RESULT:
	ERROR - invalid input syntax for type smallint: "0o"
LINE 2: SELECT int2 '0o';
                    ^


-----------
QUERY:

SELECT int2 '0x';
RESULT:
	ERROR - invalid input syntax for type smallint: "0x"
LINE 2: SELECT int2 '0x';
                    ^


-----------
QUERY:


-- cases near overflow
SELECT int2 '0b111111111111111';
RESULT:
	[(32767,)]

-----------
QUERY:

SELECT int2 '0b1000000000000000';
RESULT:
	ERROR - value "0b1000000000000000" is out of range for type smallint
LINE 2: SELECT int2 '0b1000000000000000';
                    ^


-----------
QUERY:

SELECT int2 '0o77777';
RESULT:
	[(32767,)]

-----------
QUERY:

SELECT int2 '0o100000';
RESULT:
	ERROR - value "0o100000" is out of range for type smallint
LINE 2: SELECT int2 '0o100000';
                    ^


-----------
QUERY:

SELECT int2 '0x7FFF';
RESULT:
	[(32767,)]

-----------
QUERY:

SELECT int2 '0x8000';
RESULT:
	ERROR - value "0x8000" is out of range for type smallint
LINE 2: SELECT int2 '0x8000';
                    ^


-----------
QUERY:


SELECT int2 '-0b1000000000000000';
RESULT:
	[(-32768,)]

-----------
QUERY:

SELECT int2 '-0b1000000000000001';
RESULT:
	ERROR - value "-0b1000000000000001" is out of range for type smallint
LINE 2: SELECT int2 '-0b1000000000000001';
                    ^


-----------
QUERY:

SELECT int2 '-0o100000';
RESULT:
	[(-32768,)]

-----------
QUERY:

SELECT int2 '-0o100001';
RESULT:
	ERROR - value "-0o100001" is out of range for type smallint
LINE 2: SELECT int2 '-0o100001';
                    ^


-----------
QUERY:

SELECT int2 '-0x8000';
RESULT:
	[(-32768,)]

-----------
QUERY:

SELECT int2 '-0x8001';
RESULT:
	ERROR - value "-0x8001" is out of range for type smallint
LINE 2: SELECT int2 '-0x8001';
                    ^


-----------
QUERY:



-- underscores

SELECT int2 '1_000';
RESULT:
	[(1000,)]

-----------
QUERY:

SELECT int2 '1_2_3';
RESULT:
	[(123,)]

-----------
QUERY:

SELECT int2 '0xE_FF';
RESULT:
	[(3839,)]

-----------
QUERY:

SELECT int2 '0o2_73';
RESULT:
	[(187,)]

-----------
QUERY:

SELECT int2 '0b_10_0101';
RESULT:
	[(37,)]

-----------
QUERY:


-- error cases
SELECT int2 '_100';
RESULT:
	ERROR - invalid input syntax for type smallint: "_100"
LINE 4: SELECT int2 '_100';
                    ^


-----------
QUERY:

SELECT int2 '100_';
RESULT:
	ERROR - invalid input syntax for type smallint: "100_"
LINE 2: SELECT int2 '100_';
                    ^


-----------
QUERY:

SELECT int2 '10__000';
RESULT:
	ERROR - invalid input syntax for type smallint: "10__000"
LINE 2: SELECT int2 '10__000';
                    ^

