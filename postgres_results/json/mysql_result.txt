
-----------
QUERY:
-- Strings.
SELECT '""'::json;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json' at line 2")

-----------
QUERY:
				-- OK.
SELECT $$''$$::json;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '$$::json' at line 2")

-----------
QUERY:
			-- ERROR, single quotes are not allowed
SELECT '"abc"'::json;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json' at line 2")

-----------
QUERY:
			-- OK
SELECT '"abc'::json;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json' at line 2")

-----------
QUERY:
			-- ERROR, quotes not closed
SELECT '"abc
def"'::json;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json' at line 3")

-----------
QUERY:
					-- ERROR, unescaped newline in string constant
SELECT '"\n\"\\"'::json;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json' at line 2")

-----------
QUERY:
		-- OK, legal escapes
SELECT '"\v"'::json;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json' at line 2")

-----------
QUERY:
			-- ERROR, not a valid JSON escape

-- Check fast path for longer strings (at least 16 bytes long)
SELECT ('"'||repeat('.', 12)||'abc"')::json;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json' at line 4")

-----------
QUERY:
 -- OK
SELECT ('"'||repeat('.', 12)||'abc\n"')::json;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json' at line 2")

-----------
QUERY:
 -- OK, legal escapes

-- see json_encoding test for input with unicode escapes

-- Numbers.
SELECT '1'::json;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json' at line 6")

-----------
QUERY:
				-- OK
SELECT '0'::json;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json' at line 2")

-----------
QUERY:
				-- OK
SELECT '01'::json;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json' at line 2")

-----------
QUERY:
				-- ERROR, not valid according to JSON spec
SELECT '0.1'::json;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json' at line 2")

-----------
QUERY:
				-- OK
SELECT '9223372036854775808'::json;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json' at line 2")

-----------
QUERY:
	-- OK, even though it/* REPLACED */ ''s too large for int8
SELECT '1e100'::json;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json' at line 2")

-----------
QUERY:
			-- OK
SELECT '1.3e100'::json;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json' at line 2")

-----------
QUERY:
			-- OK
SELECT '1f2'::json;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json' at line 2")

-----------
QUERY:
				-- ERROR
SELECT '0.x1'::json;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json' at line 2")

-----------
QUERY:
			-- ERROR
SELECT '1.3ex100'::json;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json' at line 2")

-----------
QUERY:
		-- ERROR

-- Arrays.
SELECT '[]'::json;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json' at line 4")

-----------
QUERY:
				-- OK
SELECT '[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]'::json;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json' at line 2")

-----------
QUERY:
  -- OK
SELECT '[1,2]'::json;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json' at line 2")

-----------
QUERY:
			-- OK
SELECT '[1,2,]'::json;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json' at line 2")

-----------
QUERY:
			-- ERROR, trailing comma
SELECT '[1,2'::json;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json' at line 2")

-----------
QUERY:
			-- ERROR, no closing bracket
SELECT '[1,[2]'::json;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json' at line 2")

-----------
QUERY:
			-- ERROR, no closing bracket

-- Objects.
SELECT '{}'::json;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json' at line 4")

-----------
QUERY:
				-- OK
SELECT '{"abc"}'::json;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json' at line 2")

-----------
QUERY:
			-- ERROR, no value
SELECT '{"abc":1}'::json;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json' at line 2")

-----------
QUERY:
		-- OK
SELECT '{1:"abc"}'::json;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json' at line 2")

-----------
QUERY:
		-- ERROR, keys must be strings
SELECT '{"abc",1}'::json;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json' at line 2")

-----------
QUERY:
		-- ERROR, wrong separator
SELECT '{"abc"=1}'::json;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json' at line 2")

-----------
QUERY:
		-- ERROR, totally wrong separator
SELECT '{"abc"::1}'::json;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json' at line 2")

-----------
QUERY:
		-- ERROR, another wrong separator
SELECT '{"abc":1,"def":2,"ghi":[3,4],"hij":{"klm":5,"nop":[6]}}'::json;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json' at line 2")

-----------
QUERY:
 -- OK
SELECT '{"abc":1:2}'::json;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json' at line 2")

-----------
QUERY:
		-- ERROR, colon in wrong spot
SELECT '{"abc":1,3}'::json;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json' at line 2")

-----------
QUERY:
		-- ERROR, no value

-- Recursion.
SET max_stack_depth = '100kB';
RESULT:
	ERROR - (1193, "Unknown system variable 'max_stack_depth'")

-----------
QUERY:

SELECT repeat('[', 10000)::json;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json' at line 1")

-----------
QUERY:

SELECT repeat('{"a":', 10000)::json;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json' at line 1")

-----------
QUERY:

RESET max_stack_depth;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'max_stack_depth' at line 1")

-----------
QUERY:


-- Miscellaneous stuff.
SELECT 'true'::json;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json' at line 2")

-----------
QUERY:
			-- OK
SELECT 'false'::json;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json' at line 2")

-----------
QUERY:
			-- OK
SELECT 'null'::json;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json' at line 2")

-----------
QUERY:
			-- OK
SELECT ' true '::json;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json' at line 2")

-----------
QUERY:
			-- OK, even with extra whitespace
SELECT 'true false'::json;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json' at line 2")

-----------
QUERY:
		-- ERROR, too many values
SELECT 'true, false'::json;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json' at line 2")

-----------
QUERY:
		-- ERROR, too many values
SELECT 'truf'::json;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json' at line 2")

-----------
QUERY:
			-- ERROR, not a keyword
SELECT 'trues'::json;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json' at line 2")

-----------
QUERY:
			-- ERROR, not a keyword
SELECT ''::json;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json' at line 2")

-----------
QUERY:
				-- ERROR, no value
SELECT '    '::json;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json' at line 2")

-----------
QUERY:
			-- ERROR, no value

-- Multi-line JSON input to check ERROR reporting
SELECT '{
		"one": 1,
		"two":"two",
		"three":
		true}'::json;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json' at line 8")

-----------
QUERY:
 -- OK
SELECT '{
		"one": 1,
		"two":,"two",  -- ERROR extraneous comma before field /* REPLACED */ ''two/* REPLACED */ ''
		"three":
		true}'::json;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json' at line 6")

-----------
QUERY:

SELECT '{
		"one": 1,
		"two":"two",
		"averyveryveryveryveryveryveryveryveryverylongfieldname":}'::json;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json' at line 4")

-----------
QUERY:

-- ERROR missing value for last field

-- test non-error-throwing input
select pg_input_is_valid('{"a":true}', 'json');
RESULT:
	ERROR - (1305, 'FUNCTION test.pg_input_is_valid does not exist')

-----------
QUERY:

select pg_input_is_valid('{"a":true', 'json');
RESULT:
	ERROR - (1305, 'FUNCTION test.pg_input_is_valid does not exist')

-----------
QUERY:

select * from pg_input_error_info('{"a":true', 'json');
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(\'{"a":true\', \'json\')\' at line 1')

-----------
QUERY:


--constructors
-- array_to_json

SELECT array_to_json(array(select 1 as a));
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '--constructors\n-- array_to_json\n\nSELECT array_to_json(array(select 1 as a))' at line 1")

-----------
QUERY:

SELECT array_to_json(array_agg(q),false) from (select x as b, x * 2 as c from generate_series(1,3) x) q;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(1,3) x) q' at line 1")

-----------
QUERY:

SELECT array_to_json(array_agg(q),true) from (select x as b, x * 2 as c from generate_series(1,3) x) q;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(1,3) x) q' at line 1")

-----------
QUERY:

SELECT array_to_json(array_agg(q),false)
  FROM ( SELECT $$a$$ || x AS b, y AS c,
               ARRAY[ROW(x.*,ARRAY[1,2,3]),
               ROW(y.*,ARRAY[4,5,6])] AS z
         FROM generate_series(1,2) x,
              generate_series(4,5) y) q;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '[ROW(x.*,ARRAY[1,2,3]),\n               ROW(y.*,ARRAY[4,5,6])] AS z\n         FROM' at line 3")

-----------
QUERY:

SELECT array_to_json(array_agg(x),false) from generate_series(5,10) x;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(5,10) x' at line 1")

-----------
QUERY:

SELECT array_to_json('{{1,5},{99,100}}'::int[]);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::int[])' at line 1")

-----------
QUERY:


-- row_to_json
SELECT row_to_json(row(1,'foo'));
RESULT:
	ERROR - (1305, 'FUNCTION test.row_to_json does not exist')

-----------
QUERY:


SELECT row_to_json(q)
FROM (SELECT $$a$$ || x AS b,
         y AS c,
         ARRAY[ROW(x.*,ARRAY[1,2,3]),
               ROW(y.*,ARRAY[4,5,6])] AS z
      FROM generate_series(1,2) x,
           generate_series(4,5) y) q;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '[ROW(x.*,ARRAY[1,2,3]),\n               ROW(y.*,ARRAY[4,5,6])] AS z\n      FROM ge' at line 4")

-----------
QUERY:


SELECT row_to_json(q,true)
FROM (SELECT $$a$$ || x AS b,
         y AS c,
         ARRAY[ROW(x.*,ARRAY[1,2,3]),
               ROW(y.*,ARRAY[4,5,6])] AS z
      FROM generate_series(1,2) x,
           generate_series(4,5) y) q;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '[ROW(x.*,ARRAY[1,2,3]),\n               ROW(y.*,ARRAY[4,5,6])] AS z\n      FROM ge' at line 4")

-----------
QUERY:


CREATE TEMP TABLE rows AS
SELECT x, 'txt' || x as y
FROM generate_series(1,3) AS x;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'TEMP TABLE rows AS\nSELECT x, 'txt' || x as y\nFROM generate_series(1,3) AS x' at line 1")

-----------
QUERY:


SELECT row_to_json(q,true)
FROM rows q;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'rows q' at line 2")

-----------
QUERY:


SELECT row_to_json(row((select array_agg(x) as d from generate_series(5,10) x)),false);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(5,10) x)),false)' at line 1")

-----------
QUERY:


-- anyarray column

analyze rows;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'rows' at line 3")

-----------
QUERY:


select attname, to_json(histogram_bounds) histogram_bounds
from pg_stats
where tablename = 'rows' and
      schemaname = pg_my_temp_schema()::regnamespace::text
order by 1;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::regnamespace::text\norder by 1' at line 4")

-----------
QUERY:


-- to_json, timestamps

select to_json(timestamp '2014-05-28 12:22:35.614298');
RESULT:
	ERROR - (1305, 'FUNCTION test.to_json does not exist')

-----------
QUERY:


BEGIN;
RESULT:
	[]

-----------
QUERY:

SET LOCAL TIME ZONE 10.5;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'ZONE 10.5' at line 1")

-----------
QUERY:

select to_json(timestamptz '2014-05-28 12:22:35.614298-04');
RESULT:
	ERROR - (1584, 'Incorrect parameters in the call to stored function `to_json`')

-----------
QUERY:

SET LOCAL TIME ZONE -8;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'ZONE -8' at line 1")

-----------
QUERY:

select to_json(timestamptz '2014-05-28 12:22:35.614298-04');
RESULT:
	ERROR - (1584, 'Incorrect parameters in the call to stored function `to_json`')

-----------
QUERY:

COMMIT;
RESULT:
	[]

-----------
QUERY:


select to_json(date '2014-05-28');
RESULT:
	ERROR - (1305, 'FUNCTION test.to_json does not exist')

-----------
QUERY:


select to_json(date 'Infinity');
RESULT:
	ERROR - (1525, "Incorrect DATE value: 'Infinity'")

-----------
QUERY:

select to_json(date '-Infinity');
RESULT:
	ERROR - (1525, "Incorrect DATE value: '-Infinity'")

-----------
QUERY:

select to_json(timestamp 'Infinity');
RESULT:
	ERROR - (1525, "Incorrect DATETIME value: 'Infinity'")

-----------
QUERY:

select to_json(timestamp '-Infinity');
RESULT:
	ERROR - (1525, "Incorrect DATETIME value: '-Infinity'")

-----------
QUERY:

select to_json(timestamptz 'Infinity');
RESULT:
	ERROR - (1584, 'Incorrect parameters in the call to stored function `to_json`')

-----------
QUERY:

select to_json(timestamptz '-Infinity');
RESULT:
	ERROR - (1584, 'Incorrect parameters in the call to stored function `to_json`')

-----------
QUERY:


--json_agg

SELECT json_agg(q)
  FROM ( SELECT $$a$$ || x AS b, y AS c,
               ARRAY[ROW(x.*,ARRAY[1,2,3]),
               ROW(y.*,ARRAY[4,5,6])] AS z
         FROM generate_series(1,2) x,
              generate_series(4,5) y) q;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '--json_agg\n\nSELECT json_agg(q)\n  FROM ( SELECT $$a$$ || x AS b, y AS c,\n        ' at line 1")

-----------
QUERY:


SELECT json_agg(q ORDER BY x, y)
  FROM rows q;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'ORDER BY x, y)\n  FROM rows q' at line 1")

-----------
QUERY:


UPDATE rows SET x = NULL WHERE x = 1;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'rows SET x = NULL WHERE x = 1' at line 1")

-----------
QUERY:


SELECT json_agg(q ORDER BY x NULLS FIRST, y)
  FROM rows q;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'ORDER BY x NULLS FIRST, y)\n  FROM rows q' at line 1")

-----------
QUERY:


-- non-numeric output
SELECT row_to_json(q)
FROM (SELECT 'NaN'::float8 AS "float8field") q;
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'::float8 AS "float8field") q\' at line 3')

-----------
QUERY:


SELECT row_to_json(q)
FROM (SELECT 'Infinity'::float8 AS "float8field") q;
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'::float8 AS "float8field") q\' at line 2')

-----------
QUERY:


SELECT row_to_json(q)
FROM (SELECT '-Infinity'::float8 AS "float8field") q;
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'::float8 AS "float8field") q\' at line 2')

-----------
QUERY:


-- json input
SELECT row_to_json(q)
FROM (SELECT '{"a":1,"b": [2,3,4,"d","e","f"],"c":{"p":1,"q":2}}'::json AS "jsonfield") q;
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'::json AS "jsonfield") q\' at line 3')

-----------
QUERY:



-- json extraction functions

CREATE TEMP TABLE test_json (
       json_type text,
       test_json json
);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'TEMP TABLE test_json (\n       json_type text,\n       test_json json\n)' at line 3")

-----------
QUERY:


INSERT INTO test_json VALUES
('scalar','"a scalar"'),
('array','["zero", "one","two",null,"four","five", [1,2,3],{"f1":9}]'),
('object','{"field1":"val1","field2":"val2","field3":null, "field4": 4, "field5": [1,2,3], "field6": {"f1":9}}');
RESULT:
	ERROR - (1146, "Table 'test.test_json' doesn't exist")

-----------
QUERY:


SELECT test_json -> 'x'
FROM test_json
WHERE json_type = 'scalar';
RESULT:
	ERROR - (1146, "Table 'test.test_json' doesn't exist")

-----------
QUERY:


SELECT test_json -> 'x'
FROM test_json
WHERE json_type = 'array';
RESULT:
	ERROR - (1146, "Table 'test.test_json' doesn't exist")

-----------
QUERY:


SELECT test_json -> 'x'
FROM test_json
WHERE json_type = 'object';
RESULT:
	ERROR - (1146, "Table 'test.test_json' doesn't exist")

-----------
QUERY:


SELECT test_json->'field2'
FROM test_json
WHERE json_type = 'object';
RESULT:
	ERROR - (1146, "Table 'test.test_json' doesn't exist")

-----------
QUERY:


SELECT test_json->>'field2'
FROM test_json
WHERE json_type = 'object';
RESULT:
	ERROR - (1146, "Table 'test.test_json' doesn't exist")

-----------
QUERY:


SELECT test_json -> 2
FROM test_json
WHERE json_type = 'scalar';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '2\nFROM test_json\nWHERE json_type = 'scalar'' at line 1")

-----------
QUERY:


SELECT test_json -> 2
FROM test_json
WHERE json_type = 'array';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '2\nFROM test_json\nWHERE json_type = 'array'' at line 1")

-----------
QUERY:


SELECT test_json -> -1
FROM test_json
WHERE json_type = 'array';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-1\nFROM test_json\nWHERE json_type = 'array'' at line 1")

-----------
QUERY:


SELECT test_json -> 2
FROM test_json
WHERE json_type = 'object';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '2\nFROM test_json\nWHERE json_type = 'object'' at line 1")

-----------
QUERY:


SELECT test_json->>2
FROM test_json
WHERE json_type = 'array';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '2\nFROM test_json\nWHERE json_type = 'array'' at line 1")

-----------
QUERY:


SELECT test_json ->> 6 FROM test_json WHERE json_type = 'array';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '6 FROM test_json WHERE json_type = 'array'' at line 1")

-----------
QUERY:

SELECT test_json ->> 7 FROM test_json WHERE json_type = 'array';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '7 FROM test_json WHERE json_type = 'array'' at line 1")

-----------
QUERY:


SELECT test_json ->> 'field4' FROM test_json WHERE json_type = 'object';
RESULT:
	ERROR - (1146, "Table 'test.test_json' doesn't exist")

-----------
QUERY:

SELECT test_json ->> 'field5' FROM test_json WHERE json_type = 'object';
RESULT:
	ERROR - (1146, "Table 'test.test_json' doesn't exist")

-----------
QUERY:

SELECT test_json ->> 'field6' FROM test_json WHERE json_type = 'object';
RESULT:
	ERROR - (1146, "Table 'test.test_json' doesn't exist")

-----------
QUERY:


SELECT json_object_keys(test_json)
FROM test_json
WHERE json_type = 'scalar';
RESULT:
	ERROR - (1146, "Table 'test.test_json' doesn't exist")

-----------
QUERY:


SELECT json_object_keys(test_json)
FROM test_json
WHERE json_type = 'array';
RESULT:
	ERROR - (1146, "Table 'test.test_json' doesn't exist")

-----------
QUERY:


SELECT json_object_keys(test_json)
FROM test_json
WHERE json_type = 'object';
RESULT:
	ERROR - (1146, "Table 'test.test_json' doesn't exist")

-----------
QUERY:


-- test extending object_keys resultset - initial resultset size is 256

select count(*) from
    (select json_object_keys(json_object(array_agg(g)))
     from (select unnest(array['f'||n,n::text])as g
           from generate_series(1,300) as n) x ) y;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '['f'||n,n::text])as g\n           from generate_series(1,300) as n) x ) y' at line 5")

-----------
QUERY:


-- nulls

select (test_json->'field3') is null as expect_false
from test_json
where json_type = 'object';
RESULT:
	ERROR - (1146, "Table 'test.test_json' doesn't exist")

-----------
QUERY:


select (test_json->>'field3') is null as expect_true
from test_json
where json_type = 'object';
RESULT:
	ERROR - (1146, "Table 'test.test_json' doesn't exist")

-----------
QUERY:


select (test_json->3) is null as expect_false
from test_json
where json_type = 'array';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '3) is null as expect_false\nfrom test_json\nwhere json_type = 'array'' at line 1")

-----------
QUERY:


select (test_json->>3) is null as expect_true
from test_json
where json_type = 'array';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '3) is null as expect_true\nfrom test_json\nwhere json_type = 'array'' at line 1")

-----------
QUERY:


-- corner cases

select '{"a": [{"b": "c"}, {"b": "cc"}]}'::json -> null::text;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json -> null::text' at line 3")

-----------
QUERY:

select '{"a": [{"b": "c"}, {"b": "cc"}]}'::json -> null::int;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json -> null::int' at line 1")

-----------
QUERY:

select '{"a": [{"b": "c"}, {"b": "cc"}]}'::json -> 1;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json -> 1' at line 1")

-----------
QUERY:

select '{"a": [{"b": "c"}, {"b": "cc"}]}'::json -> -1;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json -> -1' at line 1")

-----------
QUERY:

select '{"a": [{"b": "c"}, {"b": "cc"}]}'::json -> 'z';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json -> 'z'' at line 1")

-----------
QUERY:

select '{"a": [{"b": "c"}, {"b": "cc"}]}'::json -> '';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json -> ''' at line 1")

-----------
QUERY:

select '[{"b": "c"}, {"b": "cc"}]'::json -> 1;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json -> 1' at line 1")

-----------
QUERY:

select '[{"b": "c"}, {"b": "cc"}]'::json -> 3;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json -> 3' at line 1")

-----------
QUERY:

select '[{"b": "c"}, {"b": "cc"}]'::json -> 'z';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json -> 'z'' at line 1")

-----------
QUERY:

select '{"a": "c", "b": null}'::json -> 'b';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json -> 'b'' at line 1")

-----------
QUERY:

select '"foo"'::json -> 1;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json -> 1' at line 1")

-----------
QUERY:

select '"foo"'::json -> 'z';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json -> 'z'' at line 1")

-----------
QUERY:


select '{"a": [{"b": "c"}, {"b": "cc"}]}'::json ->> null::text;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json ->> null::text' at line 1")

-----------
QUERY:

select '{"a": [{"b": "c"}, {"b": "cc"}]}'::json ->> null::int;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json ->> null::int' at line 1")

-----------
QUERY:

select '{"a": [{"b": "c"}, {"b": "cc"}]}'::json ->> 1;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json ->> 1' at line 1")

-----------
QUERY:

select '{"a": [{"b": "c"}, {"b": "cc"}]}'::json ->> 'z';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json ->> 'z'' at line 1")

-----------
QUERY:

select '{"a": [{"b": "c"}, {"b": "cc"}]}'::json ->> '';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json ->> ''' at line 1")

-----------
QUERY:

select '[{"b": "c"}, {"b": "cc"}]'::json ->> 1;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json ->> 1' at line 1")

-----------
QUERY:

select '[{"b": "c"}, {"b": "cc"}]'::json ->> 3;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json ->> 3' at line 1")

-----------
QUERY:

select '[{"b": "c"}, {"b": "cc"}]'::json ->> 'z';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json ->> 'z'' at line 1")

-----------
QUERY:

select '{"a": "c", "b": null}'::json ->> 'b';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json ->> 'b'' at line 1")

-----------
QUERY:

select '"foo"'::json ->> 1;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json ->> 1' at line 1")

-----------
QUERY:

select '"foo"'::json ->> 'z';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json ->> 'z'' at line 1")

-----------
QUERY:


-- array length

SELECT json_array_length('[1,2,3,{"f1":1,"f2":[5,6]},4]');
RESULT:
	ERROR - (1305, 'FUNCTION test.json_array_length does not exist')

-----------
QUERY:


SELECT json_array_length('[]');
RESULT:
	ERROR - (1305, 'FUNCTION test.json_array_length does not exist')

-----------
QUERY:


SELECT json_array_length('{"f1":1,"f2":[5,6]}');
RESULT:
	ERROR - (1305, 'FUNCTION test.json_array_length does not exist')

-----------
QUERY:


SELECT json_array_length('4');
RESULT:
	ERROR - (1305, 'FUNCTION test.json_array_length does not exist')

-----------
QUERY:


-- each

select json_each('{"f1":[1,2,3],"f2":{"f3":1},"f4":null}');
RESULT:
	ERROR - (1305, 'FUNCTION test.json_each does not exist')

-----------
QUERY:

select * from json_each('{"f1":[1,2,3],"f2":{"f3":1},"f4":null,"f5":99,"f6":"stringy"}') q;
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(\'{"f1":[1,2,3],"f2":{"f3":1},"f4":null,"f5":99,"f6":"stringy"}\') q\' at line 1')

-----------
QUERY:


select json_each_text('{"f1":[1,2,3],"f2":{"f3":1},"f4":null,"f5":"null"}');
RESULT:
	ERROR - (1305, 'FUNCTION test.json_each_text does not exist')

-----------
QUERY:

select * from json_each_text('{"f1":[1,2,3],"f2":{"f3":1},"f4":null,"f5":99,"f6":"stringy"}') q;
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(\'{"f1":[1,2,3],"f2":{"f3":1},"f4":null,"f5":99,"f6":"stringy"}\') q\' at line 1')

-----------
QUERY:


-- extract_path, extract_path_as_text

select json_extract_path('{"f2":{"f3":1},"f4":{"f5":99,"f6":"stringy"}}','f4','f6');
RESULT:
	ERROR - (1305, 'FUNCTION test.json_extract_path does not exist')

-----------
QUERY:

select json_extract_path('{"f2":{"f3":1},"f4":{"f5":99,"f6":"stringy"}}','f2');
RESULT:
	ERROR - (1305, 'FUNCTION test.json_extract_path does not exist')

-----------
QUERY:

select json_extract_path('{"f2":["f3",1],"f4":{"f5":99,"f6":"stringy"}}','f2',0::text);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::text)' at line 1")

-----------
QUERY:

select json_extract_path('{"f2":["f3",1],"f4":{"f5":99,"f6":"stringy"}}','f2',1::text);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::text)' at line 1")

-----------
QUERY:

select json_extract_path_text('{"f2":{"f3":1},"f4":{"f5":99,"f6":"stringy"}}','f4','f6');
RESULT:
	ERROR - (1305, 'FUNCTION test.json_extract_path_text does not exist')

-----------
QUERY:

select json_extract_path_text('{"f2":{"f3":1},"f4":{"f5":99,"f6":"stringy"}}','f2');
RESULT:
	ERROR - (1305, 'FUNCTION test.json_extract_path_text does not exist')

-----------
QUERY:

select json_extract_path_text('{"f2":["f3",1],"f4":{"f5":99,"f6":"stringy"}}','f2',0::text);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::text)' at line 1")

-----------
QUERY:

select json_extract_path_text('{"f2":["f3",1],"f4":{"f5":99,"f6":"stringy"}}','f2',1::text);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::text)' at line 1")

-----------
QUERY:


-- extract_path nulls

select json_extract_path('{"f2":{"f3":1},"f4":{"f5":null,"f6":"stringy"}}','f4','f5') is null as expect_false;
RESULT:
	ERROR - (1305, 'FUNCTION test.json_extract_path does not exist')

-----------
QUERY:

select json_extract_path_text('{"f2":{"f3":1},"f4":{"f5":null,"f6":"stringy"}}','f4','f5') is null as expect_true;
RESULT:
	ERROR - (1305, 'FUNCTION test.json_extract_path_text does not exist')

-----------
QUERY:

select json_extract_path('{"f2":{"f3":1},"f4":[0,1,2,null]}','f4','3') is null as expect_false;
RESULT:
	ERROR - (1305, 'FUNCTION test.json_extract_path does not exist')

-----------
QUERY:

select json_extract_path_text('{"f2":{"f3":1},"f4":[0,1,2,null]}','f4','3') is null as expect_true;
RESULT:
	ERROR - (1305, 'FUNCTION test.json_extract_path_text does not exist')

-----------
QUERY:


-- extract_path operators

select '{"f2":{"f3":1},"f4":{"f5":99,"f6":"stringy"}}'::json#>array['f4','f6'];
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json#>array['f4','f6']' at line 3")

-----------
QUERY:

select '{"f2":{"f3":1},"f4":{"f5":99,"f6":"stringy"}}'::json#>array['f2'];
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json#>array['f2']' at line 1")

-----------
QUERY:

select '{"f2":["f3",1],"f4":{"f5":99,"f6":"stringy"}}'::json#>array['f2','0'];
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json#>array['f2','0']' at line 1")

-----------
QUERY:

select '{"f2":["f3",1],"f4":{"f5":99,"f6":"stringy"}}'::json#>array['f2','1'];
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json#>array['f2','1']' at line 1")

-----------
QUERY:


select '{"f2":{"f3":1},"f4":{"f5":99,"f6":"stringy"}}'::json#>>array['f4','f6'];
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json#>>array['f4','f6']' at line 1")

-----------
QUERY:

select '{"f2":{"f3":1},"f4":{"f5":99,"f6":"stringy"}}'::json#>>array['f2'];
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json#>>array['f2']' at line 1")

-----------
QUERY:

select '{"f2":["f3",1],"f4":{"f5":99,"f6":"stringy"}}'::json#>>array['f2','0'];
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json#>>array['f2','0']' at line 1")

-----------
QUERY:

select '{"f2":["f3",1],"f4":{"f5":99,"f6":"stringy"}}'::json#>>array['f2','1'];
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json#>>array['f2','1']' at line 1")

-----------
QUERY:


-- corner cases for same
select '{"a": {"b":{"c": "foo"}}}'::json #> '{}';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json #> '{}'' at line 2")

-----------
QUERY:

select '[1,2,3]'::json #> '{}';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json #> '{}'' at line 1")

-----------
QUERY:

select '"foo"'::json #> '{}';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json #> '{}'' at line 1")

-----------
QUERY:

select '42'::json #> '{}';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json #> '{}'' at line 1")

-----------
QUERY:

select 'null'::json #> '{}';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json #> '{}'' at line 1")

-----------
QUERY:

select '{"a": {"b":{"c": "foo"}}}'::json #> array['a'];
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json #> array['a']' at line 1")

-----------
QUERY:

select '{"a": {"b":{"c": "foo"}}}'::json #> array['a', null];
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json #> array['a', null]' at line 1")

-----------
QUERY:

select '{"a": {"b":{"c": "foo"}}}'::json #> array['a', ''];
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json #> array['a', '']' at line 1")

-----------
QUERY:

select '{"a": {"b":{"c": "foo"}}}'::json #> array['a','b'];
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json #> array['a','b']' at line 1")

-----------
QUERY:

select '{"a": {"b":{"c": "foo"}}}'::json #> array['a','b','c'];
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json #> array['a','b','c']' at line 1")

-----------
QUERY:

select '{"a": {"b":{"c": "foo"}}}'::json #> array['a','b','c','d'];
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json #> array['a','b','c','d']' at line 1")

-----------
QUERY:

select '{"a": {"b":{"c": "foo"}}}'::json #> array['a','z','c'];
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json #> array['a','z','c']' at line 1")

-----------
QUERY:

select '{"a": [{"b": "c"}, {"b": "cc"}]}'::json #> array['a','1','b'];
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json #> array['a','1','b']' at line 1")

-----------
QUERY:

select '{"a": [{"b": "c"}, {"b": "cc"}]}'::json #> array['a','z','b'];
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json #> array['a','z','b']' at line 1")

-----------
QUERY:

select '[{"b": "c"}, {"b": "cc"}]'::json #> array['1','b'];
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json #> array['1','b']' at line 1")

-----------
QUERY:

select '[{"b": "c"}, {"b": "cc"}]'::json #> array['z','b'];
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json #> array['z','b']' at line 1")

-----------
QUERY:

select '[{"b": "c"}, {"b": null}]'::json #> array['1','b'];
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json #> array['1','b']' at line 1")

-----------
QUERY:

select '"foo"'::json #> array['z'];
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json #> array['z']' at line 1")

-----------
QUERY:

select '42'::json #> array['f2'];
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json #> array['f2']' at line 1")

-----------
QUERY:

select '42'::json #> array['0'];
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json #> array['0']' at line 1")

-----------
QUERY:


select '{"a": {"b":{"c": "foo"}}}'::json #>> '{}';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json #>> '{}'' at line 1")

-----------
QUERY:

select '[1,2,3]'::json #>> '{}';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json #>> '{}'' at line 1")

-----------
QUERY:

select '"foo"'::json #>> '{}';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json #>> '{}'' at line 1")

-----------
QUERY:

select '42'::json #>> '{}';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json #>> '{}'' at line 1")

-----------
QUERY:

select 'null'::json #>> '{}';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json #>> '{}'' at line 1")

-----------
QUERY:

select '{"a": {"b":{"c": "foo"}}}'::json #>> array['a'];
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json #>> array['a']' at line 1")

-----------
QUERY:

select '{"a": {"b":{"c": "foo"}}}'::json #>> array['a', null];
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json #>> array['a', null]' at line 1")

-----------
QUERY:

select '{"a": {"b":{"c": "foo"}}}'::json #>> array['a', ''];
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json #>> array['a', '']' at line 1")

-----------
QUERY:

select '{"a": {"b":{"c": "foo"}}}'::json #>> array['a','b'];
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json #>> array['a','b']' at line 1")

-----------
QUERY:

select '{"a": {"b":{"c": "foo"}}}'::json #>> array['a','b','c'];
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json #>> array['a','b','c']' at line 1")

-----------
QUERY:

select '{"a": {"b":{"c": "foo"}}}'::json #>> array['a','b','c','d'];
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json #>> array['a','b','c','d']' at line 1")

-----------
QUERY:

select '{"a": {"b":{"c": "foo"}}}'::json #>> array['a','z','c'];
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json #>> array['a','z','c']' at line 1")

-----------
QUERY:

select '{"a": [{"b": "c"}, {"b": "cc"}]}'::json #>> array['a','1','b'];
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json #>> array['a','1','b']' at line 1")

-----------
QUERY:

select '{"a": [{"b": "c"}, {"b": "cc"}]}'::json #>> array['a','z','b'];
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json #>> array['a','z','b']' at line 1")

-----------
QUERY:

select '[{"b": "c"}, {"b": "cc"}]'::json #>> array['1','b'];
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json #>> array['1','b']' at line 1")

-----------
QUERY:

select '[{"b": "c"}, {"b": "cc"}]'::json #>> array['z','b'];
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json #>> array['z','b']' at line 1")

-----------
QUERY:

select '[{"b": "c"}, {"b": null}]'::json #>> array['1','b'];
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json #>> array['1','b']' at line 1")

-----------
QUERY:

select '"foo"'::json #>> array['z'];
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json #>> array['z']' at line 1")

-----------
QUERY:

select '42'::json #>> array['f2'];
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json #>> array['f2']' at line 1")

-----------
QUERY:

select '42'::json #>> array['0'];
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json #>> array['0']' at line 1")

-----------
QUERY:


-- array_elements

select json_array_elements('[1,true,[1,[2,3]],null,{"f1":1,"f2":[7,8,9]},false,"stringy"]');
RESULT:
	ERROR - (1305, 'FUNCTION test.json_array_elements does not exist')

-----------
QUERY:

select * from json_array_elements('[1,true,[1,[2,3]],null,{"f1":1,"f2":[7,8,9]},false,"stringy"]') q;
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(\'[1,true,[1,[2,3]],null,{"f1":1,"f2":[7,8,9]},false,"stringy"]\') q\' at line 1')

-----------
QUERY:

select json_array_elements_text('[1,true,[1,[2,3]],null,{"f1":1,"f2":[7,8,9]},false,"stringy"]');
RESULT:
	ERROR - (1305, 'FUNCTION test.json_array_elements_text does not exist')

-----------
QUERY:

select * from json_array_elements_text('[1,true,[1,[2,3]],null,{"f1":1,"f2":[7,8,9]},false,"stringy"]') q;
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(\'[1,true,[1,[2,3]],null,{"f1":1,"f2":[7,8,9]},false,"stringy"]\') q\' at line 1')

-----------
QUERY:


-- populate_record
create type jpop as (a text, b int, c timestamp);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'type jpop as (a text, b int, c timestamp)' at line 2")

-----------
QUERY:


CREATE DOMAIN js_int_not_null  AS int     NOT NULL;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'DOMAIN js_int_not_null  AS int     NOT NULL' at line 1")

-----------
QUERY:

CREATE DOMAIN js_int_array_1d  AS int[]   CHECK(array_length(VALUE, 1) = 3);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'DOMAIN js_int_array_1d  AS int[]   CHECK(array_length(VALUE, 1) = 3)' at line 1")

-----------
QUERY:

CREATE DOMAIN js_int_array_2d  AS int[][] CHECK(array_length(VALUE, 2) = 3);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'DOMAIN js_int_array_2d  AS int[][] CHECK(array_length(VALUE, 2) = 3)' at line 1")

-----------
QUERY:


create type j_unordered_pair as (x int, y int);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'type j_unordered_pair as (x int, y int)' at line 1")

-----------
QUERY:

create domain j_ordered_pair as j_unordered_pair check((value).x <= (value).y);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'domain j_ordered_pair as j_unordered_pair check((value).x <= (value).y)' at line 1")

-----------
QUERY:


CREATE TYPE jsrec AS (
	i	int,
	ia	_int4,
	ia1	int[],
	ia2	int[][],
	ia3	int[][][],
	ia1d	js_int_array_1d,
	ia2d	js_int_array_2d,
	t	text,
	ta	text[],
	c	char(10),
	ca	char(10)[],
	ts	timestamp,
	js	json,
	jsb	jsonb,
	jsa	json[],
	rec	jpop,
	reca	jpop[]
);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'TYPE jsrec AS (\n\ti\tint,\n\tia\t_int4,\n\tia1\tint[],\n\tia2\tint[][],\n\tia3\tint[][][],\n\tia' at line 1")

-----------
QUERY:


CREATE TYPE jsrec_i_not_null AS (
	i	js_int_not_null
);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'TYPE jsrec_i_not_null AS (\n\ti\tjs_int_not_null\n)' at line 1")

-----------
QUERY:


select * from json_populate_record(null::jpop,'{"a":"blurfl","x":43.2}') q;
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(null::jpop,\'{"a":"blurfl","x":43.2}\') q\' at line 1')

-----------
QUERY:

select * from json_populate_record(row('x',3,'2012-12-31 15:30:56')::jpop,'{"a":"blurfl","x":43.2}') q;
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(row(\'x\',3,\'2012-12-31 15:30:56\')::jpop,\'{"a":"blurfl","x":43.2}\') q\' at line 1')

-----------
QUERY:


select * from json_populate_record(null::jpop,'{"a":"blurfl","x":43.2}') q;
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(null::jpop,\'{"a":"blurfl","x":43.2}\') q\' at line 1')

-----------
QUERY:

select * from json_populate_record(row('x',3,'2012-12-31 15:30:56')::jpop,'{"a":"blurfl","x":43.2}') q;
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(row(\'x\',3,\'2012-12-31 15:30:56\')::jpop,\'{"a":"blurfl","x":43.2}\') q\' at line 1')

-----------
QUERY:


select * from json_populate_record(null::jpop,'{"a":[100,200,false],"x":43.2}') q;
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(null::jpop,\'{"a":[100,200,false],"x":43.2}\') q\' at line 1')

-----------
QUERY:

select * from json_populate_record(row('x',3,'2012-12-31 15:30:56')::jpop,'{"a":[100,200,false],"x":43.2}') q;
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(row(\'x\',3,\'2012-12-31 15:30:56\')::jpop,\'{"a":[100,200,false],"x":43.2}\') q\' at line 1')

-----------
QUERY:

select * from json_populate_record(row('x',3,'2012-12-31 15:30:56')::jpop,'{"c":[100,200,false],"x":43.2}') q;
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(row(\'x\',3,\'2012-12-31 15:30:56\')::jpop,\'{"c":[100,200,false],"x":43.2}\') q\' at line 1')

-----------
QUERY:


select * from json_populate_record(row('x',3,'2012-12-31 15:30:56')::jpop,'{}') q;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(row('x',3,'2012-12-31 15:30:56')::jpop,'{}') q' at line 1")

-----------
QUERY:


SELECT i FROM json_populate_record(NULL::jsrec_i_not_null, '{"x": 43.2}') q;
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(NULL::jsrec_i_not_null, \'{"x": 43.2}\') q\' at line 1')

-----------
QUERY:

SELECT i FROM json_populate_record(NULL::jsrec_i_not_null, '{"i": null}') q;
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(NULL::jsrec_i_not_null, \'{"i": null}\') q\' at line 1')

-----------
QUERY:

SELECT i FROM json_populate_record(NULL::jsrec_i_not_null, '{"i": 12345}') q;
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(NULL::jsrec_i_not_null, \'{"i": 12345}\') q\' at line 1')

-----------
QUERY:


SELECT ia FROM json_populate_record(NULL::jsrec, '{"ia": null}') q;
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(NULL::jsrec, \'{"ia": null}\') q\' at line 1')

-----------
QUERY:

SELECT ia FROM json_populate_record(NULL::jsrec, '{"ia": 123}') q;
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(NULL::jsrec, \'{"ia": 123}\') q\' at line 1')

-----------
QUERY:

SELECT ia FROM json_populate_record(NULL::jsrec, '{"ia": [1, "2", null, 4]}') q;
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(NULL::jsrec, \'{"ia": [1, "2", null, 4]}\') q\' at line 1')

-----------
QUERY:

SELECT ia FROM json_populate_record(NULL::jsrec, '{"ia": [[1, 2], [3, 4]]}') q;
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(NULL::jsrec, \'{"ia": [[1, 2], [3, 4]]}\') q\' at line 1')

-----------
QUERY:

SELECT ia FROM json_populate_record(NULL::jsrec, '{"ia": [[1], 2]}') q;
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(NULL::jsrec, \'{"ia": [[1], 2]}\') q\' at line 1')

-----------
QUERY:

SELECT ia FROM json_populate_record(NULL::jsrec, '{"ia": [[1], [2, 3]]}') q;
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(NULL::jsrec, \'{"ia": [[1], [2, 3]]}\') q\' at line 1')

-----------
QUERY:

SELECT ia FROM json_populate_record(NULL::jsrec, '{"ia": "{1,2,3}"}') q;
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(NULL::jsrec, \'{"ia": "{1,2,3}"}\') q\' at line 1')

-----------
QUERY:


SELECT ia1 FROM json_populate_record(NULL::jsrec, '{"ia1": null}') q;
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(NULL::jsrec, \'{"ia1": null}\') q\' at line 1')

-----------
QUERY:

SELECT ia1 FROM json_populate_record(NULL::jsrec, '{"ia1": 123}') q;
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(NULL::jsrec, \'{"ia1": 123}\') q\' at line 1')

-----------
QUERY:

SELECT ia1 FROM json_populate_record(NULL::jsrec, '{"ia1": [1, "2", null, 4]}') q;
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(NULL::jsrec, \'{"ia1": [1, "2", null, 4]}\') q\' at line 1')

-----------
QUERY:

SELECT ia1 FROM json_populate_record(NULL::jsrec, '{"ia1": [[1, 2, 3]]}') q;
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(NULL::jsrec, \'{"ia1": [[1, 2, 3]]}\') q\' at line 1')

-----------
QUERY:


SELECT ia1d FROM json_populate_record(NULL::jsrec, '{"ia1d": null}') q;
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(NULL::jsrec, \'{"ia1d": null}\') q\' at line 1')

-----------
QUERY:

SELECT ia1d FROM json_populate_record(NULL::jsrec, '{"ia1d": 123}') q;
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(NULL::jsrec, \'{"ia1d": 123}\') q\' at line 1')

-----------
QUERY:

SELECT ia1d FROM json_populate_record(NULL::jsrec, '{"ia1d": [1, "2", null, 4]}') q;
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(NULL::jsrec, \'{"ia1d": [1, "2", null, 4]}\') q\' at line 1')

-----------
QUERY:

SELECT ia1d FROM json_populate_record(NULL::jsrec, '{"ia1d": [1, "2", null]}') q;
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(NULL::jsrec, \'{"ia1d": [1, "2", null]}\') q\' at line 1')

-----------
QUERY:


SELECT ia2 FROM json_populate_record(NULL::jsrec, '{"ia2": [1, "2", null, 4]}') q;
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(NULL::jsrec, \'{"ia2": [1, "2", null, 4]}\') q\' at line 1')

-----------
QUERY:

SELECT ia2 FROM json_populate_record(NULL::jsrec, '{"ia2": [[1, 2], [null, 4]]}') q;
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(NULL::jsrec, \'{"ia2": [[1, 2], [null, 4]]}\') q\' at line 1')

-----------
QUERY:

SELECT ia2 FROM json_populate_record(NULL::jsrec, '{"ia2": [[], []]}') q;
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(NULL::jsrec, \'{"ia2": [[], []]}\') q\' at line 1')

-----------
QUERY:

SELECT ia2 FROM json_populate_record(NULL::jsrec, '{"ia2": [[1, 2], [3]]}') q;
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(NULL::jsrec, \'{"ia2": [[1, 2], [3]]}\') q\' at line 1')

-----------
QUERY:

SELECT ia2 FROM json_populate_record(NULL::jsrec, '{"ia2": [[1, 2], 3, 4]}') q;
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(NULL::jsrec, \'{"ia2": [[1, 2], 3, 4]}\') q\' at line 1')

-----------
QUERY:


SELECT ia2d FROM json_populate_record(NULL::jsrec, '{"ia2d": [[1, "2"], [null, 4]]}') q;
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(NULL::jsrec, \'{"ia2d": [[1, "2"], [null, 4]]}\') q\' at line 1')

-----------
QUERY:

SELECT ia2d FROM json_populate_record(NULL::jsrec, '{"ia2d": [[1, "2", 3], [null, 5, 6]]}') q;
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(NULL::jsrec, \'{"ia2d": [[1, "2", 3], [null, 5, 6]]}\') q\' at line 1')

-----------
QUERY:


SELECT ia3 FROM json_populate_record(NULL::jsrec, '{"ia3": [1, "2", null, 4]}') q;
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(NULL::jsrec, \'{"ia3": [1, "2", null, 4]}\') q\' at line 1')

-----------
QUERY:

SELECT ia3 FROM json_populate_record(NULL::jsrec, '{"ia3": [[1, 2], [null, 4]]}') q;
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(NULL::jsrec, \'{"ia3": [[1, 2], [null, 4]]}\') q\' at line 1')

-----------
QUERY:

SELECT ia3 FROM json_populate_record(NULL::jsrec, '{"ia3": [ [[], []], [[], []], [[], []] ]}') q;
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(NULL::jsrec, \'{"ia3": [ [[], []], [[], []], [[], []] ]}\') q\' at line 1')

-----------
QUERY:

SELECT ia3 FROM json_populate_record(NULL::jsrec, '{"ia3": [ [[1, 2]], [[3, 4]] ]}') q;
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(NULL::jsrec, \'{"ia3": [ [[1, 2]], [[3, 4]] ]}\') q\' at line 1')

-----------
QUERY:

SELECT ia3 FROM json_populate_record(NULL::jsrec, '{"ia3": [ [[1, 2], [3, 4]], [[5, 6], [7, 8]] ]}') q;
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(NULL::jsrec, \'{"ia3": [ [[1, 2], [3, 4]], [[5, 6], [7, 8]] ]}\') q\' at line 1')

-----------
QUERY:

SELECT ia3 FROM json_populate_record(NULL::jsrec, '{"ia3": [ [[1, 2], [3, 4]], [[5, 6], [7, 8], [9, 10]] ]}') q;
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(NULL::jsrec, \'{"ia3": [ [[1, 2], [3, 4]], [[5, 6], [7, 8], [9, 10]] ]}\') q\' at line 1')

-----------
QUERY:


SELECT ta FROM json_populate_record(NULL::jsrec, '{"ta": null}') q;
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(NULL::jsrec, \'{"ta": null}\') q\' at line 1')

-----------
QUERY:

SELECT ta FROM json_populate_record(NULL::jsrec, '{"ta": 123}') q;
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(NULL::jsrec, \'{"ta": 123}\') q\' at line 1')

-----------
QUERY:

SELECT ta FROM json_populate_record(NULL::jsrec, '{"ta": [1, "2", null, 4]}') q;
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(NULL::jsrec, \'{"ta": [1, "2", null, 4]}\') q\' at line 1')

-----------
QUERY:

SELECT ta FROM json_populate_record(NULL::jsrec, '{"ta": [[1, 2, 3], {"k": "v"}]}') q;
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(NULL::jsrec, \'{"ta": [[1, 2, 3], {"k": "v"}]}\') q\' at line 1')

-----------
QUERY:


SELECT c FROM json_populate_record(NULL::jsrec, '{"c": null}') q;
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(NULL::jsrec, \'{"c": null}\') q\' at line 1')

-----------
QUERY:

SELECT c FROM json_populate_record(NULL::jsrec, '{"c": "aaa"}') q;
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(NULL::jsrec, \'{"c": "aaa"}\') q\' at line 1')

-----------
QUERY:

SELECT c FROM json_populate_record(NULL::jsrec, '{"c": "aaaaaaaaaa"}') q;
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(NULL::jsrec, \'{"c": "aaaaaaaaaa"}\') q\' at line 1')

-----------
QUERY:

SELECT c FROM json_populate_record(NULL::jsrec, '{"c": "aaaaaaaaaaaaa"}') q;
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(NULL::jsrec, \'{"c": "aaaaaaaaaaaaa"}\') q\' at line 1')

-----------
QUERY:


SELECT ca FROM json_populate_record(NULL::jsrec, '{"ca": null}') q;
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(NULL::jsrec, \'{"ca": null}\') q\' at line 1')

-----------
QUERY:

SELECT ca FROM json_populate_record(NULL::jsrec, '{"ca": 123}') q;
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(NULL::jsrec, \'{"ca": 123}\') q\' at line 1')

-----------
QUERY:

SELECT ca FROM json_populate_record(NULL::jsrec, '{"ca": [1, "2", null, 4]}') q;
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(NULL::jsrec, \'{"ca": [1, "2", null, 4]}\') q\' at line 1')

-----------
QUERY:

SELECT ca FROM json_populate_record(NULL::jsrec, '{"ca": ["aaaaaaaaaaaaaaaa"]}') q;
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(NULL::jsrec, \'{"ca": ["aaaaaaaaaaaaaaaa"]}\') q\' at line 1')

-----------
QUERY:

SELECT ca FROM json_populate_record(NULL::jsrec, '{"ca": [[1, 2, 3], {"k": "v"}]}') q;
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(NULL::jsrec, \'{"ca": [[1, 2, 3], {"k": "v"}]}\') q\' at line 1')

-----------
QUERY:


SELECT js FROM json_populate_record(NULL::jsrec, '{"js": null}') q;
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(NULL::jsrec, \'{"js": null}\') q\' at line 1')

-----------
QUERY:

SELECT js FROM json_populate_record(NULL::jsrec, '{"js": true}') q;
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(NULL::jsrec, \'{"js": true}\') q\' at line 1')

-----------
QUERY:

SELECT js FROM json_populate_record(NULL::jsrec, '{"js": 123.45}') q;
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(NULL::jsrec, \'{"js": 123.45}\') q\' at line 1')

-----------
QUERY:

SELECT js FROM json_populate_record(NULL::jsrec, '{"js": "123.45"}') q;
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(NULL::jsrec, \'{"js": "123.45"}\') q\' at line 1')

-----------
QUERY:

SELECT js FROM json_populate_record(NULL::jsrec, '{"js": "abc"}') q;
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(NULL::jsrec, \'{"js": "abc"}\') q\' at line 1')

-----------
QUERY:

SELECT js FROM json_populate_record(NULL::jsrec, '{"js": [123, "123", null, {"key": "value"}]}') q;
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(NULL::jsrec, \'{"js": [123, "123", null, {"key": "value"}]}\') q\' at line 1')

-----------
QUERY:

SELECT js FROM json_populate_record(NULL::jsrec, '{"js": {"a": "bbb", "b": null, "c": 123.45}}') q;
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(NULL::jsrec, \'{"js": {"a": "bbb", "b": null, "c": 123.45}}\') q\' at line 1')

-----------
QUERY:


SELECT jsb FROM json_populate_record(NULL::jsrec, '{"jsb": null}') q;
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(NULL::jsrec, \'{"jsb": null}\') q\' at line 1')

-----------
QUERY:

SELECT jsb FROM json_populate_record(NULL::jsrec, '{"jsb": true}') q;
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(NULL::jsrec, \'{"jsb": true}\') q\' at line 1')

-----------
QUERY:

SELECT jsb FROM json_populate_record(NULL::jsrec, '{"jsb": 123.45}') q;
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(NULL::jsrec, \'{"jsb": 123.45}\') q\' at line 1')

-----------
QUERY:

SELECT jsb FROM json_populate_record(NULL::jsrec, '{"jsb": "123.45"}') q;
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(NULL::jsrec, \'{"jsb": "123.45"}\') q\' at line 1')

-----------
QUERY:

SELECT jsb FROM json_populate_record(NULL::jsrec, '{"jsb": "abc"}') q;
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(NULL::jsrec, \'{"jsb": "abc"}\') q\' at line 1')

-----------
QUERY:

SELECT jsb FROM json_populate_record(NULL::jsrec, '{"jsb": [123, "123", null, {"key": "value"}]}') q;
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(NULL::jsrec, \'{"jsb": [123, "123", null, {"key": "value"}]}\') q\' at line 1')

-----------
QUERY:

SELECT jsb FROM json_populate_record(NULL::jsrec, '{"jsb": {"a": "bbb", "b": null, "c": 123.45}}') q;
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(NULL::jsrec, \'{"jsb": {"a": "bbb", "b": null, "c": 123.45}}\') q\' at line 1')

-----------
QUERY:


SELECT jsa FROM json_populate_record(NULL::jsrec, '{"jsa": null}') q;
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(NULL::jsrec, \'{"jsa": null}\') q\' at line 1')

-----------
QUERY:

SELECT jsa FROM json_populate_record(NULL::jsrec, '{"jsa": 123}') q;
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(NULL::jsrec, \'{"jsa": 123}\') q\' at line 1')

-----------
QUERY:

SELECT jsa FROM json_populate_record(NULL::jsrec, '{"jsa": [1, "2", null, 4]}') q;
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(NULL::jsrec, \'{"jsa": [1, "2", null, 4]}\') q\' at line 1')

-----------
QUERY:

SELECT jsa FROM json_populate_record(NULL::jsrec, '{"jsa": ["aaa", null, [1, 2, "3", {}], { "k" : "v" }]}') q;
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(NULL::jsrec, \'{"jsa": ["aaa", null, [1, 2, "3", {}], { "k" : "v" }]}\') q\' at line 1')

-----------
QUERY:


SELECT rec FROM json_populate_record(NULL::jsrec, '{"rec": 123}') q;
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(NULL::jsrec, \'{"rec": 123}\') q\' at line 1')

-----------
QUERY:

SELECT rec FROM json_populate_record(NULL::jsrec, '{"rec": [1, 2]}') q;
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(NULL::jsrec, \'{"rec": [1, 2]}\') q\' at line 1')

-----------
QUERY:

SELECT rec FROM json_populate_record(NULL::jsrec, '{"rec": {"a": "abc", "c": "01.02.2003", "x": 43.2}}') q;
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(NULL::jsrec, \'{"rec": {"a": "abc", "c": "01.02.2003", "x": 43.2}}\') q\' at line 1')

-----------
QUERY:

SELECT rec FROM json_populate_record(NULL::jsrec, '{"rec": "(abc,42,01.02.2003)"}') q;
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(NULL::jsrec, \'{"rec": "(abc,42,01.02.2003)"}\') q\' at line 1')

-----------
QUERY:


SELECT reca FROM json_populate_record(NULL::jsrec, '{"reca": 123}') q;
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(NULL::jsrec, \'{"reca": 123}\') q\' at line 1')

-----------
QUERY:

SELECT reca FROM json_populate_record(NULL::jsrec, '{"reca": [1, 2]}') q;
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(NULL::jsrec, \'{"reca": [1, 2]}\') q\' at line 1')

-----------
QUERY:

SELECT reca FROM json_populate_record(NULL::jsrec, '{"reca": [{"a": "abc", "b": 456}, null, {"c": "01.02.2003", "x": 43.2}]}') q;
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(NULL::jsrec, \'{"reca": [{"a": "abc", "b": 456}, null, {"c": "01.02.2003", "x": \' at line 1')

-----------
QUERY:

SELECT reca FROM json_populate_record(NULL::jsrec, '{"reca": ["(abc,42,01.02.2003)"]}') q;
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(NULL::jsrec, \'{"reca": ["(abc,42,01.02.2003)"]}\') q\' at line 1')

-----------
QUERY:

SELECT reca FROM json_populate_record(NULL::jsrec, '{"reca": "{\"(abc,42,01.02.2003)\"}"}') q;
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(NULL::jsrec, \'{"reca": "{\\"(abc,42,01.02.2003)\\"}"}\') q\' at line 1')

-----------
QUERY:


SELECT rec FROM json_populate_record(
	row(NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,
		row('x',3,'2012-12-31 15:30:56')::jpop,NULL)::jsrec,
	'{"rec": {"a": "abc", "c": "01.02.2003", "x": 43.2}}'
) q;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(\n\trow(NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NUL' at line 1")

-----------
QUERY:


-- anonymous record type
SELECT json_populate_record(null::record, '{"x": 0, "y": 1}');
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'::record, \'{"x": 0, "y": 1}\')\' at line 2')

-----------
QUERY:

SELECT json_populate_record(row(1,2), '{"f1": 0, "f2": 1}');
RESULT:
	ERROR - (1305, 'FUNCTION test.json_populate_record does not exist')

-----------
QUERY:

SELECT * FROM
  json_populate_record(null::record, '{"x": 776}') AS (x int, y int);
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(null::record, \'{"x": 776}\') AS (x int, y int)\' at line 2')

-----------
QUERY:


-- composite domain
SELECT json_populate_record(null::j_ordered_pair, '{"x": 0, "y": 1}');
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'::j_ordered_pair, \'{"x": 0, "y": 1}\')\' at line 2')

-----------
QUERY:

SELECT json_populate_record(row(1,2)::j_ordered_pair, '{"x": 0}');
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'::j_ordered_pair, \'{"x": 0}\')\' at line 1')

-----------
QUERY:

SELECT json_populate_record(row(1,2)::j_ordered_pair, '{"x": 1, "y": 0}');
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'::j_ordered_pair, \'{"x": 1, "y": 0}\')\' at line 1')

-----------
QUERY:


-- populate_recordset

select * from json_populate_recordset(null::jpop,'[{"a":"blurfl","x":43.2},{"b":3,"c":"2012-01-20 10:42:53"}]') q;
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(null::jpop,\'[{"a":"blurfl","x":43.2},{"b":3,"c":"2012-01-20 10:42:53"}]\') q\' at line 3')

-----------
QUERY:

select * from json_populate_recordset(row('def',99,null)::jpop,'[{"a":"blurfl","x":43.2},{"b":3,"c":"2012-01-20 10:42:53"}]') q;
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(row(\'def\',99,null)::jpop,\'[{"a":"blurfl","x":43.2},{"b":3,"c":"2012-01-20 10:42\' at line 1')

-----------
QUERY:

select * from json_populate_recordset(null::jpop,'[{"a":"blurfl","x":43.2},{"b":3,"c":"2012-01-20 10:42:53"}]') q;
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(null::jpop,\'[{"a":"blurfl","x":43.2},{"b":3,"c":"2012-01-20 10:42:53"}]\') q\' at line 1')

-----------
QUERY:

select * from json_populate_recordset(row('def',99,null)::jpop,'[{"a":"blurfl","x":43.2},{"b":3,"c":"2012-01-20 10:42:53"}]') q;
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(row(\'def\',99,null)::jpop,\'[{"a":"blurfl","x":43.2},{"b":3,"c":"2012-01-20 10:42\' at line 1')

-----------
QUERY:

select * from json_populate_recordset(row('def',99,null)::jpop,'[{"a":[100,200,300],"x":43.2},{"a":{"z":true},"b":3,"c":"2012-01-20 10:42:53"}]') q;
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(row(\'def\',99,null)::jpop,\'[{"a":[100,200,300],"x":43.2},{"a":{"z":true},"b":3,"\' at line 1')

-----------
QUERY:

select * from json_populate_recordset(row('def',99,null)::jpop,'[{"c":[100,200,300],"x":43.2},{"a":{"z":true},"b":3,"c":"2012-01-20 10:42:53"}]') q;
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(row(\'def\',99,null)::jpop,\'[{"c":[100,200,300],"x":43.2},{"a":{"z":true},"b":3,"\' at line 1')

-----------
QUERY:


create type jpop2 as (a int, b json, c int, d int);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'type jpop2 as (a int, b json, c int, d int)' at line 1")

-----------
QUERY:

select * from json_populate_recordset(null::jpop2, '[{"a":2,"c":3,"b":{"z":4},"d":6}]') q;
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(null::jpop2, \'[{"a":2,"c":3,"b":{"z":4},"d":6}]\') q\' at line 1')

-----------
QUERY:


select * from json_populate_recordset(null::jpop,'[{"a":"blurfl","x":43.2},{"b":3,"c":"2012-01-20 10:42:53"}]') q;
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(null::jpop,\'[{"a":"blurfl","x":43.2},{"b":3,"c":"2012-01-20 10:42:53"}]\') q\' at line 1')

-----------
QUERY:

select * from json_populate_recordset(row('def',99,null)::jpop,'[{"a":"blurfl","x":43.2},{"b":3,"c":"2012-01-20 10:42:53"}]') q;
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(row(\'def\',99,null)::jpop,\'[{"a":"blurfl","x":43.2},{"b":3,"c":"2012-01-20 10:42\' at line 1')

-----------
QUERY:

select * from json_populate_recordset(row('def',99,null)::jpop,'[{"a":[100,200,300],"x":43.2},{"a":{"z":true},"b":3,"c":"2012-01-20 10:42:53"}]') q;
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(row(\'def\',99,null)::jpop,\'[{"a":[100,200,300],"x":43.2},{"a":{"z":true},"b":3,"\' at line 1')

-----------
QUERY:


-- anonymous record type
SELECT json_populate_recordset(null::record, '[{"x": 0, "y": 1}]');
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'::record, \'[{"x": 0, "y": 1}]\')\' at line 2')

-----------
QUERY:

SELECT json_populate_recordset(row(1,2), '[{"f1": 0, "f2": 1}]');
RESULT:
	ERROR - (1305, 'FUNCTION test.json_populate_recordset does not exist')

-----------
QUERY:

SELECT i, json_populate_recordset(row(i,50), '[{"f1":"42"},{"f2":"43"}]')
FROM (VALUES (1),(2)) v(i);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(1),(2)) v(i)' at line 2")

-----------
QUERY:

SELECT * FROM
  json_populate_recordset(null::record, '[{"x": 776}]') AS (x int, y int);
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(null::record, \'[{"x": 776}]\') AS (x int, y int)\' at line 2')

-----------
QUERY:


-- empty array is a corner case
SELECT json_populate_recordset(null::record, '[]');
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::record, '[]')' at line 2")

-----------
QUERY:

SELECT json_populate_recordset(row(1,2), '[]');
RESULT:
	ERROR - (1305, 'FUNCTION test.json_populate_recordset does not exist')

-----------
QUERY:

SELECT * FROM json_populate_recordset(NULL::jpop,'[]') q;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(NULL::jpop,'[]') q' at line 1")

-----------
QUERY:

SELECT * FROM
  json_populate_recordset(null::record, '[]') AS (x int, y int);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(null::record, '[]') AS (x int, y int)' at line 2")

-----------
QUERY:


-- composite domain
SELECT json_populate_recordset(null::j_ordered_pair, '[{"x": 0, "y": 1}]');
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'::j_ordered_pair, \'[{"x": 0, "y": 1}]\')\' at line 2')

-----------
QUERY:

SELECT json_populate_recordset(row(1,2)::j_ordered_pair, '[{"x": 0}, {"y": 3}]');
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'::j_ordered_pair, \'[{"x": 0}, {"y": 3}]\')\' at line 1')

-----------
QUERY:

SELECT json_populate_recordset(row(1,2)::j_ordered_pair, '[{"x": 1, "y": 0}]');
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'::j_ordered_pair, \'[{"x": 1, "y": 0}]\')\' at line 1')

-----------
QUERY:


-- negative cases where the wrong record type is supplied
select * from json_populate_recordset(row(0::int),'[{"a":"1","b":"2"},{"a":"3"}]') q (a text, b text);
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(row(0::int),\'[{"a":"1","b":"2"},{"a":"3"}]\') q (a text, b text)\' at line 2')

-----------
QUERY:

select * from json_populate_recordset(row(0::int,0::int),'[{"a":"1","b":"2"},{"a":"3"}]') q (a text, b text);
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(row(0::int,0::int),\'[{"a":"1","b":"2"},{"a":"3"}]\') q (a text, b text)\' at line 1')

-----------
QUERY:

select * from json_populate_recordset(row(0::int,0::int,0::int),'[{"a":"1","b":"2"},{"a":"3"}]') q (a text, b text);
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(row(0::int,0::int,0::int),\'[{"a":"1","b":"2"},{"a":"3"}]\') q (a text, b text)\' at line 1')

-----------
QUERY:

select * from json_populate_recordset(row(1000000000::int,50::int),'[{"b":"2"},{"a":"3"}]') q (a text, b text);
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(row(1000000000::int,50::int),\'[{"b":"2"},{"a":"3"}]\') q (a text, b text)\' at line 1')

-----------
QUERY:


-- test type info caching in json_populate_record()
CREATE TEMP TABLE jspoptest (js json);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'TEMP TABLE jspoptest (js json)' at line 2")

-----------
QUERY:


INSERT INTO jspoptest
SELECT '{
	"jsa": [1, "2", null, 4],
	"rec": {"a": "abc", "c": "01.02.2003", "x": 43.2},
	"reca": [{"a": "abc", "b": 456}, null, {"c": "01.02.2003", "x": 43.2}]
}'::json
FROM generate_series(1, 3);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json\nFROM generate_series(1, 3)' at line 6")

-----------
QUERY:


SELECT (json_populate_record(NULL::jsrec, js)).* FROM jspoptest;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::jsrec, js)).* FROM jspoptest' at line 1")

-----------
QUERY:


DROP TYPE jsrec;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'TYPE jsrec' at line 1")

-----------
QUERY:

DROP TYPE jsrec_i_not_null;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'TYPE jsrec_i_not_null' at line 1")

-----------
QUERY:

DROP DOMAIN js_int_not_null;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'DOMAIN js_int_not_null' at line 1")

-----------
QUERY:

DROP DOMAIN js_int_array_1d;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'DOMAIN js_int_array_1d' at line 1")

-----------
QUERY:

DROP DOMAIN js_int_array_2d;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'DOMAIN js_int_array_2d' at line 1")

-----------
QUERY:

DROP DOMAIN j_ordered_pair;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'DOMAIN j_ordered_pair' at line 1")

-----------
QUERY:

DROP TYPE j_unordered_pair;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'TYPE j_unordered_pair' at line 1")

-----------
QUERY:


--json_typeof() function
select value, json_typeof(value)
  from (values (json '123.4'),
               (json '-1'),
               (json '"foo"'),
               (json 'true'),
               (json 'false'),
               (json 'null'),
               (json '[1, 2, 3]'),
               (json '[]'),
               (json '{"x":"foo", "y":123}'),
               (json '{}'),
               (NULL::json))
      as data(value);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '--json_typeof() function\nselect value, json_typeof(value)\n  from (values (json '' at line 1")

-----------
QUERY:


-- json_build_array, json_build_object, json_object_agg

SELECT json_build_array('a',1,'b',1.2,'c',true,'d',null,'e',json '{"x": 3, "y": [1,2,3]}');
RESULT:
	ERROR - (1584, 'Incorrect parameters in the call to stored function `json_build_array`')

-----------
QUERY:

SELECT json_build_array('a', NULL);
RESULT:
	ERROR - (1305, 'FUNCTION test.json_build_array does not exist')

-----------
QUERY:
 -- ok
SELECT json_build_array(VARIADIC NULL::text[]);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'NULL::text[])' at line 2")

-----------
QUERY:
 -- ok
SELECT json_build_array(VARIADIC '{}'::text[]);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::text[])' at line 2")

-----------
QUERY:
 -- ok
SELECT json_build_array(VARIADIC '{a,b,c}'::text[]);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::text[])' at line 2")

-----------
QUERY:
 -- ok
SELECT json_build_array(VARIADIC ARRAY['a', NULL]::text[]);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '['a', NULL]::text[])' at line 2")

-----------
QUERY:
 -- ok
SELECT json_build_array(VARIADIC '{1,2,3,4}'::text[]);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::text[])' at line 2")

-----------
QUERY:
 -- ok
SELECT json_build_array(VARIADIC '{1,2,3,4}'::int[]);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::int[])' at line 2")

-----------
QUERY:
 -- ok
SELECT json_build_array(VARIADIC '{{1,4},{2,5},{3,6}}'::int[][]);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::int[][])' at line 2")

-----------
QUERY:
 -- ok

SELECT json_build_object('a',1,'b',1.2,'c',true,'d',null,'e',json '{"x": 3, "y": [1,2,3]}');
RESULT:
	ERROR - (1584, 'Incorrect parameters in the call to stored function `json_build_object`')

-----------
QUERY:


SELECT json_build_object(
       'a', json_build_object('b',false,'c',99),
       'd', json_build_object('e',array[9,8,7]::int[],
           'f', (select row_to_json(r) from ( select relkind, oid::regclass as name from pg_class where relname = 'pg_class') r)));
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '[9,8,7]::int[],\n           'f', (select row_to_json(r) from ( select relkind, oi' at line 3")

-----------
QUERY:

SELECT json_build_object('{a,b,c}'::text[]);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::text[])' at line 1")

-----------
QUERY:
 -- error
SELECT json_build_object('{a,b,c}'::text[], '{d,e,f}'::text[]);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::text[], '{d,e,f}'::text[])' at line 2")

-----------
QUERY:
 -- error, key cannot be array
SELECT json_build_object('a', 'b', 'c');
RESULT:
	ERROR - (1305, 'FUNCTION test.json_build_object does not exist')

-----------
QUERY:
 -- error
SELECT json_build_object(NULL, 'a');
RESULT:
	ERROR - (1305, 'FUNCTION test.json_build_object does not exist')

-----------
QUERY:
 -- error, key cannot be NULL
SELECT json_build_object('a', NULL);
RESULT:
	ERROR - (1305, 'FUNCTION test.json_build_object does not exist')

-----------
QUERY:
 -- ok
SELECT json_build_object(VARIADIC NULL::text[]);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'NULL::text[])' at line 2")

-----------
QUERY:
 -- ok
SELECT json_build_object(VARIADIC '{}'::text[]);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::text[])' at line 2")

-----------
QUERY:
 -- ok
SELECT json_build_object(VARIADIC '{a,b,c}'::text[]);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::text[])' at line 2")

-----------
QUERY:
 -- error
SELECT json_build_object(VARIADIC ARRAY['a', NULL]::text[]);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '['a', NULL]::text[])' at line 2")

-----------
QUERY:
 -- ok
SELECT json_build_object(VARIADIC ARRAY[NULL, 'a']::text[]);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '[NULL, 'a']::text[])' at line 2")

-----------
QUERY:
 -- error, key cannot be NULL
SELECT json_build_object(VARIADIC '{1,2,3,4}'::text[]);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::text[])' at line 2")

-----------
QUERY:
 -- ok
SELECT json_build_object(VARIADIC '{1,2,3,4}'::int[]);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::int[])' at line 2")

-----------
QUERY:
 -- ok
SELECT json_build_object(VARIADIC '{{1,4},{2,5},{3,6}}'::int[][]);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::int[][])' at line 2")

-----------
QUERY:
 -- ok

-- empty objects/arrays
SELECT json_build_array();
RESULT:
	ERROR - (1305, 'FUNCTION test.json_build_array does not exist')

-----------
QUERY:


SELECT json_build_object();
RESULT:
	ERROR - (1305, 'FUNCTION test.json_build_object does not exist')

-----------
QUERY:


-- make sure keys are quoted
SELECT json_build_object(1,2);
RESULT:
	ERROR - (1305, 'FUNCTION test.json_build_object does not exist')

-----------
QUERY:


-- keys must be scalar and not null
SELECT json_build_object(null,2);
RESULT:
	ERROR - (1305, 'FUNCTION test.json_build_object does not exist')

-----------
QUERY:


SELECT json_build_object(r,2) FROM (SELECT 1 AS a, 2 AS b) r;
RESULT:
	ERROR - (1305, 'FUNCTION test.json_build_object does not exist')

-----------
QUERY:


SELECT json_build_object(json '{"a":1,"b":2}', 3);
RESULT:
	ERROR - (1584, 'Incorrect parameters in the call to stored function `json_build_object`')

-----------
QUERY:


SELECT json_build_object('{1,2,3}'::int[], 3);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::int[], 3)' at line 1")

-----------
QUERY:


CREATE TEMP TABLE foo (serial_num int, name text, type text);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'TEMP TABLE foo (serial_num int, name text, type text)' at line 1")

-----------
QUERY:

INSERT INTO foo VALUES (847001,'t15','GE1043');
RESULT:
	ERROR - (1146, "Table 'test.foo' doesn't exist")

-----------
QUERY:

INSERT INTO foo VALUES (847002,'t16','GE1043');
RESULT:
	ERROR - (1146, "Table 'test.foo' doesn't exist")

-----------
QUERY:

INSERT INTO foo VALUES (847003,'sub-alpha','GESS90');
RESULT:
	ERROR - (1146, "Table 'test.foo' doesn't exist")

-----------
QUERY:


SELECT json_build_object('turbines',json_object_agg(serial_num,json_build_object('name',name,'type',type)))
FROM foo;
RESULT:
	ERROR - (1146, "Table 'test.foo' doesn't exist")

-----------
QUERY:


SELECT json_object_agg(name, type) FROM foo;
RESULT:
	ERROR - (1146, "Table 'test.foo' doesn't exist")

-----------
QUERY:


INSERT INTO foo VALUES (999999, NULL, 'bar');
RESULT:
	ERROR - (1146, "Table 'test.foo' doesn't exist")

-----------
QUERY:

SELECT json_object_agg(name, type) FROM foo;
RESULT:
	ERROR - (1146, "Table 'test.foo' doesn't exist")

-----------
QUERY:


-- json_object

-- empty object, one dimension
SELECT json_object('{}');
RESULT:
	ERROR - (1582, "Incorrect parameter count in the call to native function 'json_object'")

-----------
QUERY:


-- empty object, two dimensions
SELECT json_object('{}', '{}');
RESULT:
	(('{"{}": "{}"}',),)

-----------
QUERY:


-- one dimension
SELECT json_object('{a,1,b,2,3,NULL,"d e f","a b c"}');
RESULT:
	ERROR - (1582, "Incorrect parameter count in the call to native function 'json_object'")

-----------
QUERY:


-- same but with two dimensions
SELECT json_object('{{a,1},{b,2},{3,NULL},{"d e f","a b c"}}');
RESULT:
	ERROR - (1582, "Incorrect parameter count in the call to native function 'json_object'")

-----------
QUERY:


-- odd number error
SELECT json_object('{a,b,c}');
RESULT:
	ERROR - (1582, "Incorrect parameter count in the call to native function 'json_object'")

-----------
QUERY:


-- one column error
SELECT json_object('{{a},{b}}');
RESULT:
	ERROR - (1582, "Incorrect parameter count in the call to native function 'json_object'")

-----------
QUERY:


-- too many columns error
SELECT json_object('{{a,b,c},{b,c,d}}');
RESULT:
	ERROR - (1582, "Incorrect parameter count in the call to native function 'json_object'")

-----------
QUERY:


-- too many dimensions error
SELECT json_object('{{{a,b},{c,d}},{{b,c},{d,e}}}');
RESULT:
	ERROR - (1582, "Incorrect parameter count in the call to native function 'json_object'")

-----------
QUERY:


--two argument form of json_object

select json_object('{a,b,c,"d e f"}','{1,2,3,"a b c"}');
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'--two argument form of json_object\n\nselect json_object(\'{a,b,c,"d e f"}\',\'{1,2,3\' at line 1')

-----------
QUERY:


-- too many dimensions
SELECT json_object('{{a,1},{b,2},{3,NULL},{"d e f","a b c"}}', '{{a,1},{b,2},{3,NULL},{"d e f","a b c"}}');
RESULT:
	(('{"{{a,1},{b,2},{3,NULL},{\\"d e f\\",\\"a b c\\"}}": "{{a,1},{b,2},{3,NULL},{\\"d e f\\",\\"a b c\\"}}"}',),)

-----------
QUERY:


-- mismatched dimensions

select json_object('{a,b,c,"d e f",g}','{1,2,3,"a b c"}');
RESULT:
	(('{"{a,b,c,\\"d e f\\",g}": "{1,2,3,\\"a b c\\"}"}',),)

-----------
QUERY:


select json_object('{a,b,c,"d e f"}','{1,2,3,"a b c",g}');
RESULT:
	(('{"{a,b,c,\\"d e f\\"}": "{1,2,3,\\"a b c\\",g}"}',),)

-----------
QUERY:


-- null key error

select json_object('{a,b,NULL,"d e f"}','{1,2,3,"a b c"}');
RESULT:
	(('{"{a,b,NULL,\\"d e f\\"}": "{1,2,3,\\"a b c\\"}"}',),)

-----------
QUERY:


-- empty key is allowed

select json_object('{a,b,"","d e f"}','{1,2,3,"a b c"}');
RESULT:
	(('{"{a,b,\\"\\",\\"d e f\\"}": "{1,2,3,\\"a b c\\"}"}',),)

-----------
QUERY:



-- json_to_record and json_to_recordset

select * from json_to_record('{"a":1,"b":"foo","c":"bar"}')
    as x(a int, b text, d text);
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(\'{"a":1,"b":"foo","c":"bar"}\')\n    as x(a int, b text, d text)\' at line 3')

-----------
QUERY:


select * from json_to_recordset('[{"a":1,"b":"foo","d":false},{"a":2,"b":"bar","c":true}]')
    as x(a int, b text, c boolean);
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(\'[{"a":1,"b":"foo","d":false},{"a":2,"b":"bar","c":true}]\')\n    as x(a int, b t\' at line 1')

-----------
QUERY:


select * from json_to_recordset('[{"a":1,"b":{"d":"foo"},"c":true},{"a":2,"c":false,"b":{"d":"bar"}}]')
    as x(a int, b json, c boolean);
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(\'[{"a":1,"b":{"d":"foo"},"c":true},{"a":2,"c":false,"b":{"d":"bar"}}]\')\n    as \' at line 1')

-----------
QUERY:


select *, c is null as c_is_null
from json_to_record('{"a":1, "b":{"c":16, "d":2}, "x":8, "ca": ["1 2", 3], "ia": [[1,2],[3,4]], "r": {"a": "aaa", "b": 123}}'::json)
    as t(a int, b json, c text, x int, ca char(5)[], ia int[][], r jpop);
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(\'{"a":1, "b":{"c":16, "d":2}, "x":8, "ca": ["1 2", 3], "ia": [[1,2],[3,4]], "r"\' at line 2')

-----------
QUERY:


select *, c is null as c_is_null
from json_to_recordset('[{"a":1, "b":{"c":16, "d":2}, "x":8}]'::json)
    as t(a int, b json, c text, x int);
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(\'[{"a":1, "b":{"c":16, "d":2}, "x":8}]\'::json)\n    as t(a int, b json, c text, \' at line 2')

-----------
QUERY:


select * from json_to_record('{"ia": null}') as x(ia _int4);
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(\'{"ia": null}\') as x(ia _int4)\' at line 1')

-----------
QUERY:

select * from json_to_record('{"ia": 123}') as x(ia _int4);
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(\'{"ia": 123}\') as x(ia _int4)\' at line 1')

-----------
QUERY:

select * from json_to_record('{"ia": [1, "2", null, 4]}') as x(ia _int4);
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(\'{"ia": [1, "2", null, 4]}\') as x(ia _int4)\' at line 1')

-----------
QUERY:

select * from json_to_record('{"ia": [[1, 2], [3, 4]]}') as x(ia _int4);
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(\'{"ia": [[1, 2], [3, 4]]}\') as x(ia _int4)\' at line 1')

-----------
QUERY:

select * from json_to_record('{"ia": [[1], 2]}') as x(ia _int4);
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(\'{"ia": [[1], 2]}\') as x(ia _int4)\' at line 1')

-----------
QUERY:

select * from json_to_record('{"ia": [[1], [2, 3]]}') as x(ia _int4);
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(\'{"ia": [[1], [2, 3]]}\') as x(ia _int4)\' at line 1')

-----------
QUERY:


select * from json_to_record('{"ia2": [1, 2, 3]}') as x(ia2 int[][]);
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(\'{"ia2": [1, 2, 3]}\') as x(ia2 int[][])\' at line 1')

-----------
QUERY:

select * from json_to_record('{"ia2": [[1, 2], [3, 4]]}') as x(ia2 int4[][]);
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(\'{"ia2": [[1, 2], [3, 4]]}\') as x(ia2 int4[][])\' at line 1')

-----------
QUERY:

select * from json_to_record('{"ia2": [[[1], [2], [3]]]}') as x(ia2 int4[][]);
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(\'{"ia2": [[[1], [2], [3]]]}\') as x(ia2 int4[][])\' at line 1')

-----------
QUERY:


select * from json_to_record('{"out": {"key": 1}}') as x(out json);
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(\'{"out": {"key": 1}}\') as x(out json)\' at line 1')

-----------
QUERY:

select * from json_to_record('{"out": [{"key": 1}]}') as x(out json);
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(\'{"out": [{"key": 1}]}\') as x(out json)\' at line 1')

-----------
QUERY:

select * from json_to_record('{"out": "{\"key\": 1}"}') as x(out json);
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(\'{"out": "{\\"key\\": 1}"}\') as x(out json)\' at line 1')

-----------
QUERY:

select * from json_to_record('{"out": {"key": 1}}') as x(out jsonb);
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(\'{"out": {"key": 1}}\') as x(out jsonb)\' at line 1')

-----------
QUERY:

select * from json_to_record('{"out": [{"key": 1}]}') as x(out jsonb);
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(\'{"out": [{"key": 1}]}\') as x(out jsonb)\' at line 1')

-----------
QUERY:

select * from json_to_record('{"out": "{\"key\": 1}"}') as x(out jsonb);
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'(\'{"out": "{\\"key\\": 1}"}\') as x(out jsonb)\' at line 1')

-----------
QUERY:


-- json_strip_nulls

select json_strip_nulls(null);
RESULT:
	ERROR - (1305, 'FUNCTION test.json_strip_nulls does not exist')

-----------
QUERY:


select json_strip_nulls('1');
RESULT:
	ERROR - (1305, 'FUNCTION test.json_strip_nulls does not exist')

-----------
QUERY:


select json_strip_nulls('"a string"');
RESULT:
	ERROR - (1305, 'FUNCTION test.json_strip_nulls does not exist')

-----------
QUERY:


select json_strip_nulls('null');
RESULT:
	ERROR - (1305, 'FUNCTION test.json_strip_nulls does not exist')

-----------
QUERY:


select json_strip_nulls('[1,2,null,3,4]');
RESULT:
	ERROR - (1305, 'FUNCTION test.json_strip_nulls does not exist')

-----------
QUERY:


select json_strip_nulls('{"a":1,"b":null,"c":[2,null,3],"d":{"e":4,"f":null}}');
RESULT:
	ERROR - (1305, 'FUNCTION test.json_strip_nulls does not exist')

-----------
QUERY:


select json_strip_nulls('[1,{"a":1,"b":null,"c":2},3]');
RESULT:
	ERROR - (1305, 'FUNCTION test.json_strip_nulls does not exist')

-----------
QUERY:


-- an empty object is not null and should not be stripped
select json_strip_nulls('{"a": {"b": null, "c": null}, "d": {} }');
RESULT:
	ERROR - (1305, 'FUNCTION test.json_strip_nulls does not exist')

-----------
QUERY:


-- json to tsvector
select to_tsvector('{"a": "aaa bbb ddd ccc", "b": ["eee fff ggg"], "c": {"d": "hhh iii"}}'::json);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json)' at line 2")

-----------
QUERY:


-- json to tsvector with config
select to_tsvector('simple', '{"a": "aaa bbb ddd ccc", "b": ["eee fff ggg"], "c": {"d": "hhh iii"}}'::json);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json)' at line 2")

-----------
QUERY:


-- json to tsvector with stop words
select to_tsvector('english', '{"a": "aaa in bbb ddd ccc", "b": ["the eee fff ggg"], "c": {"d": "hhh. iii"}}'::json);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json)' at line 2")

-----------
QUERY:


-- json to tsvector with numeric values
select to_tsvector('english', '{"a": "aaa in bbb ddd ccc", "b": 123, "c": 456}'::json);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json)' at line 2")

-----------
QUERY:


-- json_to_tsvector
select json_to_tsvector('english', '{"a": "aaa in bbb", "b": 123, "c": 456, "d": true, "f": false, "g": null}'::json, '"all"');
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'::json, \'"all"\')\' at line 2')

-----------
QUERY:

select json_to_tsvector('english', '{"a": "aaa in bbb", "b": 123, "c": 456, "d": true, "f": false, "g": null}'::json, '"key"');
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'::json, \'"key"\')\' at line 1')

-----------
QUERY:

select json_to_tsvector('english', '{"a": "aaa in bbb", "b": 123, "c": 456, "d": true, "f": false, "g": null}'::json, '"string"');
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'::json, \'"string"\')\' at line 1')

-----------
QUERY:

select json_to_tsvector('english', '{"a": "aaa in bbb", "b": 123, "c": 456, "d": true, "f": false, "g": null}'::json, '"numeric"');
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'::json, \'"numeric"\')\' at line 1')

-----------
QUERY:

select json_to_tsvector('english', '{"a": "aaa in bbb", "b": 123, "c": 456, "d": true, "f": false, "g": null}'::json, '"boolean"');
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'::json, \'"boolean"\')\' at line 1')

-----------
QUERY:

select json_to_tsvector('english', '{"a": "aaa in bbb", "b": 123, "c": 456, "d": true, "f": false, "g": null}'::json, '["string", "numeric"]');
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'::json, \'["string", "numeric"]\')\' at line 1')

-----------
QUERY:


select json_to_tsvector('english', '{"a": "aaa in bbb", "b": 123, "c": 456, "d": true, "f": false, "g": null}'::json, '"all"');
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'::json, \'"all"\')\' at line 1')

-----------
QUERY:

select json_to_tsvector('english', '{"a": "aaa in bbb", "b": 123, "c": 456, "d": true, "f": false, "g": null}'::json, '"key"');
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'::json, \'"key"\')\' at line 1')

-----------
QUERY:

select json_to_tsvector('english', '{"a": "aaa in bbb", "b": 123, "c": 456, "d": true, "f": false, "g": null}'::json, '"string"');
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'::json, \'"string"\')\' at line 1')

-----------
QUERY:

select json_to_tsvector('english', '{"a": "aaa in bbb", "b": 123, "c": 456, "d": true, "f": false, "g": null}'::json, '"numeric"');
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'::json, \'"numeric"\')\' at line 1')

-----------
QUERY:

select json_to_tsvector('english', '{"a": "aaa in bbb", "b": 123, "c": 456, "d": true, "f": false, "g": null}'::json, '"boolean"');
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'::json, \'"boolean"\')\' at line 1')

-----------
QUERY:

select json_to_tsvector('english', '{"a": "aaa in bbb", "b": 123, "c": 456, "d": true, "f": false, "g": null}'::json, '["string", "numeric"]');
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'::json, \'["string", "numeric"]\')\' at line 1')

-----------
QUERY:


-- to_tsvector corner cases
select to_tsvector('""'::json);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json)' at line 2")

-----------
QUERY:

select to_tsvector('{}'::json);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json)' at line 1")

-----------
QUERY:

select to_tsvector('[]'::json);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json)' at line 1")

-----------
QUERY:

select to_tsvector('null'::json);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json)' at line 1")

-----------
QUERY:


-- json_to_tsvector corner cases
select json_to_tsvector('""'::json, '"all"');
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'::json, \'"all"\')\' at line 2')

-----------
QUERY:

select json_to_tsvector('{}'::json, '"all"');
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'::json, \'"all"\')\' at line 1')

-----------
QUERY:

select json_to_tsvector('[]'::json, '"all"');
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'::json, \'"all"\')\' at line 1')

-----------
QUERY:

select json_to_tsvector('null'::json, '"all"');
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'::json, \'"all"\')\' at line 1')

-----------
QUERY:


select json_to_tsvector('english', '{"a": "aaa in bbb", "b": 123, "c": 456, "d": true, "f": false, "g": null}'::json, '""');
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'::json, \'""\')\' at line 1')

-----------
QUERY:

select json_to_tsvector('english', '{"a": "aaa in bbb", "b": 123, "c": 456, "d": true, "f": false, "g": null}'::json, '{}');
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json, '{}')' at line 1")

-----------
QUERY:

select json_to_tsvector('english', '{"a": "aaa in bbb", "b": 123, "c": 456, "d": true, "f": false, "g": null}'::json, '[]');
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json, '[]')' at line 1")

-----------
QUERY:

select json_to_tsvector('english', '{"a": "aaa in bbb", "b": 123, "c": 456, "d": true, "f": false, "g": null}'::json, 'null');
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json, 'null')' at line 1")

-----------
QUERY:

select json_to_tsvector('english', '{"a": "aaa in bbb", "b": 123, "c": 456, "d": true, "f": false, "g": null}'::json, '["all", null]');
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'::json, \'["all", null]\')\' at line 1')

-----------
QUERY:


-- ts_headline for json
select ts_headline('{"a": "aaa bbb", "b": {"c": "ccc ddd fff", "c1": "ccc1 ddd1"}, "d": ["ggg hhh", "iii jjj"]}'::json, tsquery('bbb & ddd & hhh'));
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json, tsquery('bbb & ddd & hhh'))' at line 2")

-----------
QUERY:

select ts_headline('english', '{"a": "aaa bbb", "b": {"c": "ccc ddd fff"}, "d": ["ggg hhh", "iii jjj"]}'::json, tsquery('bbb & ddd & hhh'));
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json, tsquery('bbb & ddd & hhh'))' at line 1")

-----------
QUERY:

select ts_headline('{"a": "aaa bbb", "b": {"c": "ccc ddd fff", "c1": "ccc1 ddd1"}, "d": ["ggg hhh", "iii jjj"]}'::json, tsquery('bbb & ddd & hhh'), 'StartSel = <, StopSel = >');
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json, tsquery('bbb & ddd & hhh'), 'StartSel = <, StopSel = >')' at line 1")

-----------
QUERY:

select ts_headline('english', '{"a": "aaa bbb", "b": {"c": "ccc ddd fff", "c1": "ccc1 ddd1"}, "d": ["ggg hhh", "iii jjj"]}'::json, tsquery('bbb & ddd & hhh'), 'StartSel = <, StopSel = >');
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json, tsquery('bbb & ddd & hhh'), 'StartSel = <, StopSel = >')' at line 1")

-----------
QUERY:


-- corner cases for ts_headline with json
select ts_headline('null'::json, tsquery('aaa & bbb'));
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json, tsquery('aaa & bbb'))' at line 2")

-----------
QUERY:

select ts_headline('{}'::json, tsquery('aaa & bbb'));
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json, tsquery('aaa & bbb'))' at line 1")

-----------
QUERY:

select ts_headline('[]'::json, tsquery('aaa & bbb'));
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::json, tsquery('aaa & bbb'))' at line 1")
