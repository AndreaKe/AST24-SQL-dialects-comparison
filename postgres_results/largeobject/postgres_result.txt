
-----------
QUERY:
--
-- Test large object support
--

-- directory paths are passed to us in environment variables
-- \getenv abs_srcdir PG_ABS_SRCDIR
-- \getenv abs_builddir PG_ABS_BUILDDIR

-- ensure consistent test output regardless of the default bytea format
SET bytea_output TO escape;
RESULT:
	[]

-----------
QUERY:


-- Test ALTER LARGE OBJECT OWNER
CREATE ROLE regress_lo_user;
RESULT:
	ERROR - role "regress_lo_user" already exists


-----------
QUERY:

SELECT lo_create(42);
RESULT:
	[(42,)]

-----------
QUERY:

ALTER LARGE OBJECT 42 OWNER TO regress_lo_user;
RESULT:
	[]

-----------
QUERY:


-- Test GRANT, COMMENT as non-superuser
SET SESSION AUTHORIZATION regress_lo_user;
RESULT:
	[]

-----------
QUERY:


GRANT SELECT ON LARGE OBJECT 42 TO public;
RESULT:
	[]

-----------
QUERY:

COMMENT ON LARGE OBJECT 42 IS 'the ultimate answer';
RESULT:
	[]

-----------
QUERY:


RESET SESSION AUTHORIZATION;
RESULT:
	[]

-----------
QUERY:


-- Test psql/* REPLACED */ ''s \lo_list et al (we assume no other LOs exist yet)
-- \lo_list
-- \lo_list+
-- \lo_unlink 42
-- \dl

-- Load a file
CREATE TABLE lotest_stash_values (loid oid, fd integer);
RESULT:
	[]

-----------
QUERY:

-- lo_creat(mode integer) returns oid
-- The mode arg to lo_creat is unused, some vestigal holdover from ancient times
-- returns the large object id
INSERT INTO lotest_stash_values (loid) SELECT lo_creat(42);
RESULT:
	[]

-----------
QUERY:


-- NOTE: large objects require transactions
BEGIN;
RESULT:
	[]

-----------
QUERY:


-- lo_open(lobjId oid, mode integer) returns integer
-- The mode parameter to lo_open uses two constants:
--   INV_WRITE = 0x20000
--   INV_READ  = 0x40000
-- The return value is a file descriptor-like value which remains valid for the
-- transaction.
UPDATE lotest_stash_values SET fd = lo_open(loid, CAST(x'20000' | x'40000' AS integer));
RESULT:
	[]

-----------
QUERY:


-- loread/lowrite names are wonky, different from other functions which are lo_*
-- lowrite(fd integer, data bytea) returns integer
-- the integer is the number of bytes written
SELECT lowrite(fd, '
I wandered lonely as a cloud
That floats on high o''er vales and hills,
When all at once I saw a crowd,
A host, of golden daffodils;
RESULT:
	ERROR - unterminated quoted string at or near "'
I wandered lonely as a cloud
That floats on high o''er vales and hills,
When all at once I saw a crowd,
A host, of golden daffodils;"
LINE 6: SELECT lowrite(fd, '
                           ^


-----------
QUERY:

Beside the lake, beneath the trees,
Fluttering and dancing in the breeze.

Continuous as the stars that shine
And twinkle on the milky way,
They stretched in never-ending line
Along the margin of a bay:
Ten thousand saw I at a glance,
Tossing their heads in sprightly dance.

The waves beside them danced;
RESULT:
	ERROR - syntax error at or near "Beside"
LINE 2: Beside the lake, beneath the trees,
        ^


-----------
QUERY:
 but they
Out-did the sparkling waves in glee:
A poet could not but be gay,
In such a jocund company:
I gazed--and gazed--but little thought
What wealth the show to me had brought:

For oft, when on my couch I lie
In vacant or in pensive mood,
They flash upon that inward eye
Which is the bliss of solitude;
RESULT:
	ERROR - syntax error at or near "but"
LINE 1:  but they
         ^


-----------
QUERY:

And then my heart with pleasure fills,
And dances with the daffodils.

         -- William Wordsworth
') FROM lotest_stash_values;
RESULT:
	ERROR - syntax error at or near "And"
LINE 2: And then my heart with pleasure fills,
        ^


-----------
QUERY:


-- lo_close(fd integer) returns integer
-- return value is 0 for success, or <0 for error (actually only -1, but...)
SELECT lo_close(fd) FROM lotest_stash_values;
RESULT:
	ERROR - current transaction is aborted, commands ignored until end of transaction block


-----------
QUERY:


END;
RESULT:
	[]

-----------
QUERY:


-- Copy to another large object.
-- Note: we intentionally don/* REPLACED */ ''t remove the object created here /* REPLACED */ ,
-- it/* REPLACED */ ''s left behind to help test pg_dump.

SELECT lo_from_bytea(0, lo_get(loid)) AS newloid FROM lotest_stash_values
-- \gset

-- Add a comment to it, as well, for pg_dump/pg_upgrade testing.
COMMENT ON LARGE OBJECT :newloid IS 'I Wandered Lonely as a Cloud';
RESULT:
	ERROR - syntax error at or near "ON"
LINE 11: COMMENT ON LARGE OBJECT :newloid IS 'I Wandered Lonely as a ...
                 ^


-----------
QUERY:


-- Read out a portion
BEGIN;
RESULT:
	[]

-----------
QUERY:

UPDATE lotest_stash_values SET fd=lo_open(loid, CAST(x'20000' | x'40000' AS integer));
RESULT:
	[]

-----------
QUERY:


-- lo_lseek(fd integer, offset integer, whence integer) returns integer
-- offset is in bytes, whence is one of three values:
--  SEEK_SET (= 0) meaning relative to beginning
--  SEEK_CUR (= 1) meaning relative to current position
--  SEEK_END (= 2) meaning relative to end (offset better be negative)
-- returns current position in file
SELECT lo_lseek(fd, 104, 0) FROM lotest_stash_values;
RESULT:
	[(104,)]

-----------
QUERY:


SELECT lo_lseek(fd, -19, 1) FROM lotest_stash_values;
RESULT:
	[(85,)]

-----------
QUERY:


SELECT lowrite(fd, 'n') FROM lotest_stash_values;
RESULT:
	[(1,)]

-----------
QUERY:


SELECT lo_tell(fd) FROM lotest_stash_values;
RESULT:
	[(86,)]

-----------
QUERY:


SELECT lo_lseek(fd, -744, 2) FROM lotest_stash_values;
RESULT:
	ERROR - invalid large object seek target: -658


-----------
QUERY:


SELECT loread(fd, 28) FROM lotest_stash_values;
RESULT:
	ERROR - current transaction is aborted, commands ignored until end of transaction block


-----------
QUERY:


SELECT lo_close(fd) FROM lotest_stash_values;
RESULT:
	ERROR - current transaction is aborted, commands ignored until end of transaction block


-----------
QUERY:


END;
RESULT:
	[]

-----------
QUERY:


-- Test resource management
BEGIN;
RESULT:
	[]

-----------
QUERY:

SELECT lo_open(loid, x'40000'::int) from lotest_stash_values;
RESULT:
	[(0,)]

-----------
QUERY:

ABORT;
RESULT:
	[]

-----------
QUERY:


-- \set filename /* REPLACED */ PG_ABS_BUILDDIR '/results/invalid/path'
-- \set dobody 'DECLARE loid oid;
RESULT:
	ERROR - can't execute an empty query

-----------
QUERY:
 BEGIN '
-- \set dobody /* REPLACED */ 'DECLARE loid oid;
RESULT:
	ERROR - syntax error at or near "'
-- \set dobody /* REPLACED */ '"
LINE 1:  BEGIN '
               ^


-----------
QUERY:
 BEGIN ' 'SELECT tbl.loid INTO loid FROM lotest_stash_values tbl;
RESULT:
	ERROR - syntax error at or near "' '"
LINE 1:  BEGIN ' 'SELECT tbl.loid INTO loid FROM lotest_stash_values...
               ^


-----------
QUERY:
 '
-- \set dobody /* REPLACED */ 'DECLARE loid oid;
RESULT:
	ERROR - syntax error at or near "'
-- \set dobody /* REPLACED */ '"
LINE 1:  '
         ^


-----------
QUERY:
 BEGIN SELECT tbl.loid INTO loid FROM lotest_stash_values tbl;
RESULT:
	ERROR - syntax error at or near "SELECT"
LINE 1:  BEGIN SELECT tbl.loid INTO loid FROM lotest_stash_values tb...
               ^


-----------
QUERY:
 ' 'PERFORM lo_export(loid, ' /* REPLACED */ PG_ABS_BUILDDIR '/results/invalid/path' ');
RESULT:
	ERROR - syntax error at or near "' '"
LINE 1:  ' 'PERFORM lo_export(loid, ' /* REPLACED */  '/home/keuscha...
         ^


-----------
QUERY:
 '
-- \set dobody /* REPLACED */ 'DECLARE loid oid;
RESULT:
	ERROR - syntax error at or near "'
-- \set dobody /* REPLACED */ '"
LINE 1:  '
         ^


-----------
QUERY:
 BEGIN SELECT tbl.loid INTO loid FROM lotest_stash_values tbl;
RESULT:
	ERROR - syntax error at or near "SELECT"
LINE 1:  BEGIN SELECT tbl.loid INTO loid FROM lotest_stash_values tb...
               ^


-----------
QUERY:
 PERFORM lo_export(loid, ' PG_ABS_BUILDDIR '/results/invalid/path);
RESULT:
	ERROR - syntax error at or near "PERFORM"
LINE 1:  PERFORM lo_export(loid, /home/keuscha/Documents/FS2024/AST/...
         ^


-----------
QUERY:
 ' 'EXCEPTION WHEN UNDEFINED_FILE THEN '
-- \set dobody /* REPLACED */ 'DECLARE loid oid;
RESULT:
	ERROR - syntax error at or near "' '"
LINE 1:  ' 'EXCEPTION WHEN UNDEFINED_FILE THEN '
         ^


-----------
QUERY:
 BEGIN SELECT tbl.loid INTO loid FROM lotest_stash_values tbl;
RESULT:
	ERROR - syntax error at or near "SELECT"
LINE 1:  BEGIN SELECT tbl.loid INTO loid FROM lotest_stash_values tb...
               ^


-----------
QUERY:
 PERFORM lo_export(loid, ' PG_ABS_BUILDDIR '/results/invalid/path);
RESULT:
	ERROR - syntax error at or near "PERFORM"
LINE 1:  PERFORM lo_export(loid, /home/keuscha/Documents/FS2024/AST/...
         ^


-----------
QUERY:
 EXCEPTION WHEN UNDEFINED_FILE THEN ' 'RAISE NOTICE ''could not open file, as expected'';
RESULT:
	ERROR - syntax error at or near "EXCEPTION"
LINE 1:  EXCEPTION WHEN UNDEFINED_FILE THEN ' 'RAISE NOTICE ''could ...
         ^


-----------
QUERY:
 END'
DO /* REPLACED */ 'DECLARE loid oid;
RESULT:
	ERROR - syntax error at or near "'
DO /* REPLACED */ '"
LINE 1:  END'
            ^


-----------
QUERY:
 BEGIN SELECT tbl.loid INTO loid FROM lotest_stash_values tbl;
RESULT:
	ERROR - syntax error at or near "SELECT"
LINE 1:  BEGIN SELECT tbl.loid INTO loid FROM lotest_stash_values tb...
               ^


-----------
QUERY:
 PERFORM lo_export(loid, ' PG_ABS_BUILDDIR '/results/invalid/path);
RESULT:
	ERROR - syntax error at or near "PERFORM"
LINE 1:  PERFORM lo_export(loid, /home/keuscha/Documents/FS2024/AST/...
         ^


-----------
QUERY:
 EXCEPTION WHEN UNDEFINED_FILE THEN RAISE NOTICE ''could not open file, as expected'';
RESULT:
	ERROR - syntax error at or near "EXCEPTION"
LINE 1:  EXCEPTION WHEN UNDEFINED_FILE THEN RAISE NOTICE ''could not...
         ^


-----------
QUERY:
 END';
RESULT:
	ERROR - unterminated quoted string at or near "';"
LINE 1:  END';
            ^


-----------
QUERY:


-- Test truncation.
BEGIN;
RESULT:
	[]

-----------
QUERY:

UPDATE lotest_stash_values SET fd=lo_open(loid, CAST(x'20000' | x'40000' AS integer));
RESULT:
	[]

-----------
QUERY:


SELECT lo_truncate(fd, 11) FROM lotest_stash_values;
RESULT:
	[(0,)]

-----------
QUERY:


SELECT lo_truncate(fd, 10000) FROM lotest_stash_values;
RESULT:
	[(0,)]

-----------
QUERY:

SELECT lo_lseek(fd, 0, 2) FROM lotest_stash_values;
RESULT:
	[(10000,)]

-----------
QUERY:

SELECT lo_tell(fd) FROM lotest_stash_values;
RESULT:
	[(10000,)]

-----------
QUERY:


SELECT lo_truncate(fd, 5000) FROM lotest_stash_values;
RESULT:
	[(0,)]

-----------
QUERY:

SELECT lo_lseek(fd, 0, 2) FROM lotest_stash_values;
RESULT:
	[(5000,)]

-----------
QUERY:

SELECT lo_tell(fd) FROM lotest_stash_values;
RESULT:
	[(5000,)]

-----------
QUERY:


SELECT lo_close(fd) FROM lotest_stash_values;
RESULT:
	[(0,)]

-----------
QUERY:

END;
RESULT:
	[]

-----------
QUERY:


-- Test 64-bit large object functions.
BEGIN;
RESULT:
	[]

-----------
QUERY:

UPDATE lotest_stash_values SET fd = lo_open(loid, CAST(x'20000' | x'40000' AS integer));
RESULT:
	[]

-----------
QUERY:


SELECT lo_lseek64(fd, 4294967296, 0) FROM lotest_stash_values;
RESULT:
	[(4294967296,)]

-----------
QUERY:

SELECT lowrite(fd, 'offset:4GB') FROM lotest_stash_values;
RESULT:
	[(10,)]

-----------
QUERY:

SELECT lo_tell64(fd) FROM lotest_stash_values;
RESULT:
	[(4294967306,)]

-----------
QUERY:


SELECT lo_lseek64(fd, -10, 1) FROM lotest_stash_values;
RESULT:
	[(4294967296,)]

-----------
QUERY:

SELECT lo_tell64(fd) FROM lotest_stash_values;
RESULT:
	[(4294967296,)]

-----------
QUERY:


SELECT lo_truncate64(fd, 5000000000) FROM lotest_stash_values;
RESULT:
	[(0,)]

-----------
QUERY:

SELECT lo_lseek64(fd, 0, 2) FROM lotest_stash_values;
RESULT:
	[(5000000000,)]

-----------
QUERY:

SELECT lo_tell64(fd) FROM lotest_stash_values;
RESULT:
	[(5000000000,)]

-----------
QUERY:


SELECT lo_truncate64(fd, 3000000000) FROM lotest_stash_values;
RESULT:
	[(0,)]

-----------
QUERY:

SELECT lo_lseek64(fd, 0, 2) FROM lotest_stash_values;
RESULT:
	[(3000000000,)]

-----------
QUERY:

SELECT lo_tell64(fd) FROM lotest_stash_values;
RESULT:
	[(3000000000,)]

-----------
QUERY:


SELECT lo_close(fd) FROM lotest_stash_values;
RESULT:
	[(0,)]

-----------
QUERY:

END;
RESULT:
	[]

-----------
QUERY:


-- lo_unlink(lobjId oid) returns integer
-- return value appears to always be 1
SELECT lo_unlink(loid) from lotest_stash_values;
RESULT:
	[(1,)]

-----------
QUERY:


TRUNCATE lotest_stash_values;
RESULT:
	[]

-----------
QUERY:


-- \set filename /* REPLACED */ PG_ABS_SRCDIR '/data/tenk.data'
INSERT INTO lotest_stash_values (loid) SELECT lo_import(/* REPLACED */ PG_ABS_SRCDIR '/data/tenk.data');
RESULT:
	[]

-----------
QUERY:


BEGIN;
RESULT:
	[]

-----------
QUERY:

UPDATE lotest_stash_values SET fd=lo_open(loid, CAST(x'20000' | x'40000' AS integer));
RESULT:
	[]

-----------
QUERY:


-- verify length of large object
SELECT lo_lseek(fd, 0, 2) FROM lotest_stash_values;
RESULT:
	[(670800,)]

-----------
QUERY:


-- with the default BLCKSZ, LOBLKSIZE = 2048, so this positions us for a block
-- edge case
SELECT lo_lseek(fd, 2030, 0) FROM lotest_stash_values;
RESULT:
	[(2030,)]

-----------
QUERY:


-- this should get half of the value from page 0 and half from page 1 of the
-- large object
SELECT loread(fd, 36) FROM lotest_stash_values;
RESULT:
	[(<memory at 0x7472603de080>,)]

-----------
QUERY:


SELECT lo_tell(fd) FROM lotest_stash_values;
RESULT:
	[(2066,)]

-----------
QUERY:


SELECT lo_lseek(fd, -26, 1) FROM lotest_stash_values;
RESULT:
	[(2040,)]

-----------
QUERY:


SELECT lowrite(fd, 'abcdefghijklmnop') FROM lotest_stash_values;
RESULT:
	[(16,)]

-----------
QUERY:


SELECT lo_lseek(fd, 2030, 0) FROM lotest_stash_values;
RESULT:
	[(2030,)]

-----------
QUERY:


SELECT loread(fd, 36) FROM lotest_stash_values;
RESULT:
	[(<memory at 0x7472603df880>,)]

-----------
QUERY:


SELECT lo_close(fd) FROM lotest_stash_values;
RESULT:
	[(0,)]

-----------
QUERY:

END;
RESULT:
	[]

-----------
QUERY:


-- \set filename /* REPLACED */ PG_ABS_BUILDDIR '/results/lotest.txt'
SELECT lo_export(loid, /* REPLACED */ PG_ABS_BUILDDIR '/results/lotest.txt') FROM lotest_stash_values;
RESULT:
	[(1,)]

-----------
QUERY:


-- \lo_import /* REPLACED */ PG_ABS_BUILDDIR /* REPLACED */ ''/results/lotest.txt/* REPLACED */ ''

-- \set newloid :LASTOID

-- just make sure \lo_export does not barf
-- \set filename /* REPLACED */ PG_ABS_BUILDDIR '/results/lotest2.txt'
-- \lo_export /* REPLACED */ :LASTOID /* REPLACED */ PG_ABS_BUILDDIR /* REPLACED */ ''/results/lotest2.txt/* REPLACED */ ''

-- This is a hack to test that export/import are reversible
-- This uses knowledge about the inner workings of large object mechanism
-- which should not be used outside it.  This makes it a HACK
SELECT pageno, data FROM pg_largeobject WHERE loid = (SELECT loid from lotest_stash_values)
EXCEPT
SELECT pageno, data FROM pg_largeobject WHERE loid = /* REPLACED */ :LASTOID;
RESULT:
	ERROR - syntax error at or near ":"
LINE 16: ...ta FROM pg_largeobject WHERE loid = /* REPLACED */ :LASTOID;
                                                               ^


-----------
QUERY:


SELECT lo_unlink(loid) FROM lotest_stash_values;
RESULT:
	[(1,)]

-----------
QUERY:


TRUNCATE lotest_stash_values;
RESULT:
	[]

-----------
QUERY:


-- \lo_unlink /* REPLACED */ :LASTOID

-- \set filename /* REPLACED */ PG_ABS_BUILDDIR '/results/lotest.txt'
-- \lo_import /* REPLACED */ PG_ABS_BUILDDIR /* REPLACED */ ''/results/lotest.txt/* REPLACED */ ''

-- \set newloid_1 :LASTOID

SELECT lo_from_bytea(0, lo_get(/* REPLACED */ :LASTOID_1)) AS newloid_2
-- \gset

SELECT fipshash(lo_get(/* REPLACED */ :LASTOID_1)) = fipshash(lo_get(/* REPLACED */ :LASTOID_2));
RESULT:
	ERROR - syntax error at or near ":"
LINE 10: SELECT lo_from_bytea(0, lo_get(/* REPLACED */ :LASTOID_1)) A...
                                                       ^


-----------
QUERY:


SELECT lo_get(/* REPLACED */ :LASTOID_1, 0, 20);
RESULT:
	ERROR - syntax error at or near ":"
LINE 3: SELECT lo_get(/* REPLACED */ :LASTOID_1, 0, 20);
                                     ^


-----------
QUERY:

SELECT lo_get(/* REPLACED */ :LASTOID_1, 10, 20);
RESULT:
	ERROR - syntax error at or near ":"
LINE 2: SELECT lo_get(/* REPLACED */ :LASTOID_1, 10, 20);
                                     ^


-----------
QUERY:

SELECT lo_put(/* REPLACED */ :LASTOID_1, 5, decode('afafafaf', 'hex'));
RESULT:
	ERROR - syntax error at or near ":"
LINE 2: SELECT lo_put(/* REPLACED */ :LASTOID_1, 5, decode('afafafaf...
                                     ^


-----------
QUERY:

SELECT lo_get(/* REPLACED */ :LASTOID_1, 0, 20);
RESULT:
	ERROR - syntax error at or near ":"
LINE 2: SELECT lo_get(/* REPLACED */ :LASTOID_1, 0, 20);
                                     ^


-----------
QUERY:


SELECT lo_put(/* REPLACED */ :LASTOID_1, 4294967310, 'foo');
RESULT:
	ERROR - syntax error at or near ":"
LINE 3: SELECT lo_put(/* REPLACED */ :LASTOID_1, 4294967310, 'foo');
                                     ^


-----------
QUERY:

SELECT lo_get(/* REPLACED */ :LASTOID_1);
RESULT:
	ERROR - syntax error at or near ":"
LINE 2: SELECT lo_get(/* REPLACED */ :LASTOID_1);
                                     ^


-----------
QUERY:

SELECT lo_get(/* REPLACED */ :LASTOID_1, 4294967294, 100);
RESULT:
	ERROR - syntax error at or near ":"
LINE 2: SELECT lo_get(/* REPLACED */ :LASTOID_1, 4294967294, 100);
                                     ^


-----------
QUERY:


-- \lo_unlink /* REPLACED */ :LASTOID_1
-- \lo_unlink /* REPLACED */ :LASTOID_2

-- This object is left in the database for pg_dump test purposes
SELECT lo_from_bytea(0, E'\\xdeadbeef') AS newloid
-- \gset

SET bytea_output TO hex;
RESULT:
	ERROR - syntax error at or near "SET"
LINE 10: SET bytea_output TO hex;
         ^


-----------
QUERY:

SELECT lo_get(/* REPLACED */ :LASTOID);
RESULT:
	ERROR - syntax error at or near ":"
LINE 2: SELECT lo_get(/* REPLACED */ :LASTOID);
                                     ^


-----------
QUERY:


-- Create one more object that we leave behind for testing pg_dump/pg_upgrade /* REPLACED */ ,
-- this one intentionally has an OID in the system range
SELECT lo_create(2121);
RESULT:
	[(2121,)]

-----------
QUERY:


COMMENT ON LARGE OBJECT 2121 IS 'testing comments';
RESULT:
	[]

-----------
QUERY:


-- Test writes on large objects in read-only transactions
START TRANSACTION READ ONLY;
RESULT:
	[]

-----------
QUERY:

-- INV_READ ... ok
SELECT lo_open(2121, x'40000'::int);
RESULT:
	[(0,)]

-----------
QUERY:

-- INV_WRITE ... error
SELECT lo_open(2121, x'20000'::int);
RESULT:
	ERROR - cannot execute lo_open(INV_WRITE) in a read-only transaction


-----------
QUERY:

ROLLBACK;
RESULT:
	[]

-----------
QUERY:


START TRANSACTION READ ONLY;
RESULT:
	[]

-----------
QUERY:

SELECT lo_create(42);
RESULT:
	ERROR - cannot execute lo_create() in a read-only transaction


-----------
QUERY:

ROLLBACK;
RESULT:
	[]

-----------
QUERY:


START TRANSACTION READ ONLY;
RESULT:
	[]

-----------
QUERY:

SELECT lo_creat(42);
RESULT:
	ERROR - cannot execute lo_creat() in a read-only transaction


-----------
QUERY:

ROLLBACK;
RESULT:
	[]

-----------
QUERY:


START TRANSACTION READ ONLY;
RESULT:
	[]

-----------
QUERY:

SELECT lo_unlink(42);
RESULT:
	ERROR - cannot execute lo_unlink() in a read-only transaction


-----------
QUERY:

ROLLBACK;
RESULT:
	[]

-----------
QUERY:


START TRANSACTION READ ONLY;
RESULT:
	[]

-----------
QUERY:

SELECT lowrite(42, 'x');
RESULT:
	ERROR - cannot execute lowrite() in a read-only transaction


-----------
QUERY:

ROLLBACK;
RESULT:
	[]

-----------
QUERY:


START TRANSACTION READ ONLY;
RESULT:
	[]

-----------
QUERY:

SELECT lo_import(/* REPLACED */ PG_ABS_BUILDDIR '/results/lotest.txt');
RESULT:
	ERROR - cannot execute lo_import() in a read-only transaction


-----------
QUERY:

ROLLBACK;
RESULT:
	[]

-----------
QUERY:


START TRANSACTION READ ONLY;
RESULT:
	[]

-----------
QUERY:

SELECT lo_truncate(42, 0);
RESULT:
	ERROR - cannot execute lo_truncate() in a read-only transaction


-----------
QUERY:

ROLLBACK;
RESULT:
	[]

-----------
QUERY:


START TRANSACTION READ ONLY;
RESULT:
	[]

-----------
QUERY:

SELECT lo_truncate64(42, 0);
RESULT:
	ERROR - cannot execute lo_truncate64() in a read-only transaction


-----------
QUERY:

ROLLBACK;
RESULT:
	[]

-----------
QUERY:


START TRANSACTION READ ONLY;
RESULT:
	[]

-----------
QUERY:

SELECT lo_from_bytea(0, 'x');
RESULT:
	ERROR - cannot execute lo_from_bytea() in a read-only transaction


-----------
QUERY:

ROLLBACK;
RESULT:
	[]

-----------
QUERY:


START TRANSACTION READ ONLY;
RESULT:
	[]

-----------
QUERY:

SELECT lo_put(42, 0, 'x');
RESULT:
	ERROR - cannot execute lo_put() in a read-only transaction


-----------
QUERY:

ROLLBACK;
RESULT:
	[]

-----------
QUERY:


-- Clean up
DROP TABLE lotest_stash_values;
RESULT:
	[]

-----------
QUERY:


DROP ROLE regress_lo_user;
RESULT:
	ERROR - role "regress_lo_user" cannot be dropped because some objects depend on it
DETAIL:  owner of large object 42

