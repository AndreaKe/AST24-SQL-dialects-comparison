--
-- MERGE
--

CREATE USER regress_merge_privs
ERROR: --
-- MERGE
--

CREATE USER regress_merge_privs

Parser Error: syntax error at or near "USER"

CREATE USER regress_merge_no_privs
ERROR: 
CREATE USER regress_merge_no_privs

Parser Error: syntax error at or near "USER"

CREATE USER regress_merge_none
ERROR: 
CREATE USER regress_merge_none

Parser Error: syntax error at or near "USER"


DROP TABLE IF EXISTS target

DROP TABLE IF EXISTS source

CREATE TABLE target (tid integer, balance integer)
  WITH (autovacuum_enabled=off)

CREATE TABLE source (sid integer, delta integer) -- no index
  WITH (autovacuum_enabled=off)

INSERT INTO target VALUES (1, 10)

INSERT INTO target VALUES (2, 20)

INSERT INTO target VALUES (3, 30)

SELECT t.ctid is not null as matched, t.*, s.* FROM source s FULL OUTER JOIN target t ON s.sid = t.tid ORDER BY t.tid, s.sid
ERROR: 
SELECT t.ctid is not null as matched, t.*, s.* FROM source s FULL OUTER JOIN target t ON s.sid = t.tid ORDER BY t.tid, s.sid

Binder Error: Table "t" does not have a column named "ctid"


ALTER TABLE target OWNER TO regress_merge_privs
ERROR: 

ALTER TABLE target OWNER TO regress_merge_privs

Parser Error: syntax error at or near "OWNER"

ALTER TABLE source OWNER TO regress_merge_privs
ERROR: 
ALTER TABLE source OWNER TO regress_merge_privs

Parser Error: syntax error at or near "OWNER"


CREATE TABLE target2 (tid integer, balance integer)
  WITH (autovacuum_enabled=off)

CREATE TABLE source2 (sid integer, delta integer)
  WITH (autovacuum_enabled=off)


ALTER TABLE target2 OWNER TO regress_merge_no_privs
ERROR: 

ALTER TABLE target2 OWNER TO regress_merge_no_privs

Parser Error: syntax error at or near "OWNER"

ALTER TABLE source2 OWNER TO regress_merge_no_privs
ERROR: 
ALTER TABLE source2 OWNER TO regress_merge_no_privs

Parser Error: syntax error at or near "OWNER"


GRANT INSERT ON target TO regress_merge_no_privs
ERROR: 

GRANT INSERT ON target TO regress_merge_no_privs

Parser Error: syntax error at or near "GRANT"


SET SESSION AUTHORIZATION regress_merge_privs
ERROR: 

SET SESSION AUTHORIZATION regress_merge_privs

Parser Error: syntax error at or near "AUTHORIZATION"


EXPLAIN (COSTS OFF)
MERGE INTO target t
USING source AS s
ON t.tid = s.sid
WHEN MATCHED THEN
	DELETE
ERROR: 

EXPLAIN (COSTS OFF)
MERGE INTO target t
USING source AS s
ON t.tid = s.sid
WHEN MATCHED THEN
	DELETE

Parser Error: syntax error at or near "MERGE"


--
-- Errors
--
MERGE INTO target t RANDOMWORD
USING source AS s
ON t.tid = s.sid
WHEN MATCHED THEN
	UPDATE SET balance = 0
ERROR: 

--
-- Errors
--
MERGE INTO target t RANDOMWORD
USING source AS s
ON t.tid = s.sid
WHEN MATCHED THEN
	UPDATE SET balance = 0

Parser Error: syntax error at or near "MERGE"

-- MATCHED/INSERT error
MERGE INTO target t
USING source AS s
ON t.tid = s.sid
WHEN MATCHED THEN
	INSERT DEFAULT VALUES
ERROR: 
-- MATCHED/INSERT error
MERGE INTO target t
USING source AS s
ON t.tid = s.sid
WHEN MATCHED THEN
	INSERT DEFAULT VALUES

Parser Error: syntax error at or near "MERGE"

-- incorrectly specifying INTO target
MERGE INTO target t
USING source AS s
ON t.tid = s.sid
WHEN NOT MATCHED THEN
	INSERT INTO target DEFAULT VALUES
ERROR: 
-- incorrectly specifying INTO target
MERGE INTO target t
USING source AS s
ON t.tid = s.sid
WHEN NOT MATCHED THEN
	INSERT INTO target DEFAULT VALUES

Parser Error: syntax error at or near "MERGE"

-- Multiple VALUES clause
MERGE INTO target t
USING source AS s
ON t.tid = s.sid
WHEN NOT MATCHED THEN
	INSERT VALUES (1,1), (2,2)
ERROR: 
-- Multiple VALUES clause
MERGE INTO target t
USING source AS s
ON t.tid = s.sid
WHEN NOT MATCHED THEN
	INSERT VALUES (1,1), (2,2)

Parser Error: syntax error at or near "MERGE"

-- SELECT query for INSERT
MERGE INTO target t
USING source AS s
ON t.tid = s.sid
WHEN NOT MATCHED THEN
	INSERT SELECT (1, 1)
ERROR: 
-- SELECT query for INSERT
MERGE INTO target t
USING source AS s
ON t.tid = s.sid
WHEN NOT MATCHED THEN
	INSERT SELECT (1, 1)

Parser Error: syntax error at or near "MERGE"

-- NOT MATCHED/UPDATE
MERGE INTO target t
USING source AS s
ON t.tid = s.sid
WHEN NOT MATCHED THEN
	UPDATE SET balance = 0
ERROR: 
-- NOT MATCHED/UPDATE
MERGE INTO target t
USING source AS s
ON t.tid = s.sid
WHEN NOT MATCHED THEN
	UPDATE SET balance = 0

Parser Error: syntax error at or near "MERGE"

-- UPDATE tablename
MERGE INTO target t
USING source AS s
ON t.tid = s.sid
WHEN MATCHED THEN
	UPDATE target SET balance = 0
ERROR: 
-- UPDATE tablename
MERGE INTO target t
USING source AS s
ON t.tid = s.sid
WHEN MATCHED THEN
	UPDATE target SET balance = 0

Parser Error: syntax error at or near "MERGE"

-- source and target names the same
MERGE INTO target
USING target
ON tid = tid
WHEN MATCHED THEN DO NOTHING
ERROR: 
-- source and target names the same
MERGE INTO target
USING target
ON tid = tid
WHEN MATCHED THEN DO NOTHING

Parser Error: syntax error at or near "MERGE"

-- used in a CTE without RETURNING
WITH foo AS (
  MERGE INTO target USING source ON (true)
  WHEN MATCHED THEN DELETE
) SELECT * FROM foo
ERROR: 
-- used in a CTE without RETURNING
WITH foo AS (
  MERGE INTO target USING source ON (true)
  WHEN MATCHED THEN DELETE
) SELECT * FROM foo

Parser Error: syntax error at or near "MERGE"

-- used in COPY without RETURNING
COPY (
  MERGE INTO target USING source ON (true)
  WHEN MATCHED THEN DELETE
) TO stdout
ERROR: 
-- used in COPY without RETURNING
COPY (
  MERGE INTO target USING source ON (true)
  WHEN MATCHED THEN DELETE
) TO stdout

Parser Error: syntax error at or near "MERGE"


-- unsupported relation types
-- materialized view
CREATE MATERIALIZED VIEW mv AS SELECT * FROM target
ERROR: 

-- unsupported relation types
-- materialized view
CREATE MATERIALIZED VIEW mv AS SELECT * FROM target

Parser Error: syntax error at or near "MATERIALIZED"

MERGE INTO mv t
USING source s
ON t.tid = s.sid
WHEN NOT MATCHED THEN
	INSERT DEFAULT VALUES
ERROR: 
MERGE INTO mv t
USING source s
ON t.tid = s.sid
WHEN NOT MATCHED THEN
	INSERT DEFAULT VALUES

Parser Error: syntax error at or near "MERGE"

DROP MATERIALIZED VIEW mv
ERROR: 
DROP MATERIALIZED VIEW mv

Not implemented Error: Cannot drop this type yet


-- permissions

SET SESSION AUTHORIZATION regress_merge_none
ERROR: 

-- permissions

SET SESSION AUTHORIZATION regress_merge_none

Parser Error: syntax error at or near "AUTHORIZATION"

MERGE INTO target
USING (SELECT 1)
ON true
WHEN MATCHED THEN
	DO NOTHING
ERROR: 
MERGE INTO target
USING (SELECT 1)
ON true
WHEN MATCHED THEN
	DO NOTHING

Parser Error: syntax error at or near "MERGE"


SET SESSION AUTHORIZATION regress_merge_privs
ERROR: 

SET SESSION AUTHORIZATION regress_merge_privs

Parser Error: syntax error at or near "AUTHORIZATION"

MERGE INTO target
USING source2
ON target.tid = source2.sid
WHEN MATCHED THEN
	UPDATE SET balance = 0
ERROR: 
MERGE INTO target
USING source2
ON target.tid = source2.sid
WHEN MATCHED THEN
	UPDATE SET balance = 0

Parser Error: syntax error at or near "MERGE"


GRANT INSERT ON target TO regress_merge_no_privs
ERROR: 

GRANT INSERT ON target TO regress_merge_no_privs

Parser Error: syntax error at or near "GRANT"

SET SESSION AUTHORIZATION regress_merge_no_privs
ERROR: 
SET SESSION AUTHORIZATION regress_merge_no_privs

Parser Error: syntax error at or near "AUTHORIZATION"


MERGE INTO target
USING source2
ON target.tid = source2.sid
WHEN MATCHED THEN
	UPDATE SET balance = 0
ERROR: 

MERGE INTO target
USING source2
ON target.tid = source2.sid
WHEN MATCHED THEN
	UPDATE SET balance = 0

Parser Error: syntax error at or near "MERGE"


GRANT UPDATE ON target2 TO regress_merge_privs
ERROR: 

GRANT UPDATE ON target2 TO regress_merge_privs

Parser Error: syntax error at or near "GRANT"

SET SESSION AUTHORIZATION regress_merge_privs
ERROR: 
SET SESSION AUTHORIZATION regress_merge_privs

Parser Error: syntax error at or near "AUTHORIZATION"


MERGE INTO target2
USING source
ON target2.tid = source.sid
WHEN MATCHED THEN
	DELETE
ERROR: 

MERGE INTO target2
USING source
ON target2.tid = source.sid
WHEN MATCHED THEN
	DELETE

Parser Error: syntax error at or near "MERGE"


MERGE INTO target2
USING source
ON target2.tid = source.sid
WHEN NOT MATCHED THEN
	INSERT DEFAULT VALUES
ERROR: 

MERGE INTO target2
USING source
ON target2.tid = source.sid
WHEN NOT MATCHED THEN
	INSERT DEFAULT VALUES

Parser Error: syntax error at or near "MERGE"


-- check if the target can be accessed from source relation subquery /* REPLACED */, we should
-- not be able to do so
MERGE INTO target t
USING (SELECT * FROM source WHERE t.tid > sid) s
ON t.tid = s.sid
WHEN NOT MATCHED THEN
	INSERT DEFAULT VALUES
ERROR: 

-- check if the target can be accessed from source relation subquery /* REPLACED */, we should
-- not be able to do so
MERGE INTO target t
USING (SELECT * FROM source WHERE t.tid > sid) s
ON t.tid = s.sid
WHEN NOT MATCHED THEN
	INSERT DEFAULT VALUES

Parser Error: syntax error at or near "MERGE"


--
-- initial tests
--
-- zero rows in source has no effect
MERGE INTO target
USING source
ON target.tid = source.sid
WHEN MATCHED THEN
	UPDATE SET balance = 0
ERROR: 

--
-- initial tests
--
-- zero rows in source has no effect
MERGE INTO target
USING source
ON target.tid = source.sid
WHEN MATCHED THEN
	UPDATE SET balance = 0

Parser Error: syntax error at or near "MERGE"


MERGE INTO target t
USING source AS s
ON t.tid = s.sid
WHEN MATCHED THEN
	UPDATE SET balance = 0
ERROR: 

MERGE INTO target t
USING source AS s
ON t.tid = s.sid
WHEN MATCHED THEN
	UPDATE SET balance = 0

Parser Error: syntax error at or near "MERGE"

MERGE INTO target t
USING source AS s
ON t.tid = s.sid
WHEN MATCHED THEN
	DELETE
ERROR: 
MERGE INTO target t
USING source AS s
ON t.tid = s.sid
WHEN MATCHED THEN
	DELETE

Parser Error: syntax error at or near "MERGE"

BEGIN

MERGE INTO target t
USING source AS s
ON t.tid = s.sid
WHEN NOT MATCHED THEN
	INSERT DEFAULT VALUES
ERROR: 
MERGE INTO target t
USING source AS s
ON t.tid = s.sid
WHEN NOT MATCHED THEN
	INSERT DEFAULT VALUES

Parser Error: syntax error at or near "MERGE"

ROLLBACK


-- insert some non-matching source rows to work from
INSERT INTO source VALUES (4, 40)

SELECT * FROM source ORDER BY sid
RESULT: 
	[(4, 40)]

SELECT * FROM target ORDER BY tid
RESULT: 
	[(1, 10), (2, 20), (3, 30)]


MERGE INTO target t
USING source AS s
ON t.tid = s.sid
WHEN NOT MATCHED THEN
	DO NOTHING
ERROR: 

MERGE INTO target t
USING source AS s
ON t.tid = s.sid
WHEN NOT MATCHED THEN
	DO NOTHING

Parser Error: syntax error at or near "MERGE"

MERGE INTO target t
USING source AS s
ON t.tid = s.sid
WHEN MATCHED THEN
	UPDATE SET balance = 0
ERROR: 
MERGE INTO target t
USING source AS s
ON t.tid = s.sid
WHEN MATCHED THEN
	UPDATE SET balance = 0

Parser Error: syntax error at or near "MERGE"

MERGE INTO target t
USING source AS s
ON t.tid = s.sid
WHEN MATCHED THEN
	DELETE
ERROR: 
MERGE INTO target t
USING source AS s
ON t.tid = s.sid
WHEN MATCHED THEN
	DELETE

Parser Error: syntax error at or near "MERGE"

BEGIN

MERGE INTO target t
USING source AS s
ON t.tid = s.sid
WHEN NOT MATCHED THEN
	INSERT DEFAULT VALUES
ERROR: 
MERGE INTO target t
USING source AS s
ON t.tid = s.sid
WHEN NOT MATCHED THEN
	INSERT DEFAULT VALUES

Parser Error: syntax error at or near "MERGE"

SELECT * FROM target ORDER BY tid
RESULT: 
	[(1, 10), (2, 20), (3, 30)]

ROLLBACK


-- index plans
INSERT INTO target SELECT generate_series(1000,2500), 0
ERROR: 

-- index plans
INSERT INTO target SELECT generate_series(1000,2500), 0

Conversion Error: Unimplemented type for cast (BIGINT[] -> INTEGER)
LINE 4: INSERT INTO target SELECT generate_series(1000,2500), 0
                                  ^

ALTER TABLE target ADD PRIMARY KEY (tid)
ERROR: 
ALTER TABLE target ADD PRIMARY KEY (tid)

Not implemented Error: No support for that ALTER TABLE option yet!

ANALYZE target


EXPLAIN (COSTS OFF)
MERGE INTO target t
USING source AS s
ON t.tid = s.sid
WHEN MATCHED THEN
	UPDATE SET balance = 0
ERROR: 

EXPLAIN (COSTS OFF)
MERGE INTO target t
USING source AS s
ON t.tid = s.sid
WHEN MATCHED THEN
	UPDATE SET balance = 0

Parser Error: syntax error at or near "MERGE"

EXPLAIN (COSTS OFF)
MERGE INTO target t
USING source AS s
ON t.tid = s.sid
WHEN MATCHED THEN
	DELETE
ERROR: 
EXPLAIN (COSTS OFF)
MERGE INTO target t
USING source AS s
ON t.tid = s.sid
WHEN MATCHED THEN
	DELETE

Parser Error: syntax error at or near "MERGE"

EXPLAIN (COSTS OFF)
MERGE INTO target t
USING source AS s
ON t.tid = s.sid
WHEN NOT MATCHED THEN
	INSERT VALUES (4, NULL)
ERROR: 
EXPLAIN (COSTS OFF)
MERGE INTO target t
USING source AS s
ON t.tid = s.sid
WHEN NOT MATCHED THEN
	INSERT VALUES (4, NULL)

Parser Error: syntax error at or near "MERGE"

DELETE FROM target WHERE tid > 100

ANALYZE target


-- insert some matching source rows to work from
INSERT INTO source VALUES (2, 5)

INSERT INTO source VALUES (3, 20)

SELECT * FROM source ORDER BY sid
RESULT: 
	[(2, 5), (3, 20), (4, 40)]

SELECT * FROM target ORDER BY tid
RESULT: 
	[(1, 10), (2, 20), (3, 30)]


-- equivalent of an UPDATE join
BEGIN

MERGE INTO target t
USING source AS s
ON t.tid = s.sid
WHEN MATCHED THEN
	UPDATE SET balance = 0
ERROR: 
MERGE INTO target t
USING source AS s
ON t.tid = s.sid
WHEN MATCHED THEN
	UPDATE SET balance = 0

Parser Error: syntax error at or near "MERGE"

SELECT * FROM target ORDER BY tid
RESULT: 
	[(1, 10), (2, 20), (3, 30)]

ROLLBACK


-- equivalent of a DELETE join
BEGIN

MERGE INTO target t
USING source AS s
ON t.tid = s.sid
WHEN MATCHED THEN
	DELETE
ERROR: 
MERGE INTO target t
USING source AS s
ON t.tid = s.sid
WHEN MATCHED THEN
	DELETE

Parser Error: syntax error at or near "MERGE"

SELECT * FROM target ORDER BY tid
RESULT: 
	[(1, 10), (2, 20), (3, 30)]

ROLLBACK


BEGIN

MERGE INTO target t
USING source AS s
ON t.tid = s.sid
WHEN MATCHED THEN
	DO NOTHING
ERROR: 
MERGE INTO target t
USING source AS s
ON t.tid = s.sid
WHEN MATCHED THEN
	DO NOTHING

Parser Error: syntax error at or near "MERGE"

SELECT * FROM target ORDER BY tid
RESULT: 
	[(1, 10), (2, 20), (3, 30)]

ROLLBACK


BEGIN

MERGE INTO target t
USING source AS s
ON t.tid = s.sid
WHEN NOT MATCHED THEN
	INSERT VALUES (4, NULL)
ERROR: 
MERGE INTO target t
USING source AS s
ON t.tid = s.sid
WHEN NOT MATCHED THEN
	INSERT VALUES (4, NULL)

Parser Error: syntax error at or near "MERGE"

SELECT * FROM target ORDER BY tid
RESULT: 
	[(1, 10), (2, 20), (3, 30)]

ROLLBACK


-- duplicate source row causes multiple target row update ERROR
INSERT INTO source VALUES (2, 5)

SELECT * FROM source ORDER BY sid
RESULT: 
	[(2, 5), (2, 5), (3, 20), (4, 40)]

SELECT * FROM target ORDER BY tid
RESULT: 
	[(1, 10), (2, 20), (3, 30)]

BEGIN

MERGE INTO target t
USING source AS s
ON t.tid = s.sid
WHEN MATCHED THEN
	UPDATE SET balance = 0
ERROR: 
MERGE INTO target t
USING source AS s
ON t.tid = s.sid
WHEN MATCHED THEN
	UPDATE SET balance = 0

Parser Error: syntax error at or near "MERGE"

ROLLBACK


BEGIN

MERGE INTO target t
USING source AS s
ON t.tid = s.sid
WHEN MATCHED THEN
	DELETE
ERROR: 
MERGE INTO target t
USING source AS s
ON t.tid = s.sid
WHEN MATCHED THEN
	DELETE

Parser Error: syntax error at or near "MERGE"

ROLLBACK


-- remove duplicate MATCHED data from source data
DELETE FROM source WHERE sid = 2

INSERT INTO source VALUES (2, 5)

SELECT * FROM source ORDER BY sid
RESULT: 
	[(2, 5), (3, 20), (4, 40)]

SELECT * FROM target ORDER BY tid
RESULT: 
	[(1, 10), (2, 20), (3, 30)]


-- duplicate source row on INSERT should fail because of target_pkey
INSERT INTO source VALUES (4, 40)

BEGIN

MERGE INTO target t
USING source AS s
ON t.tid = s.sid
WHEN NOT MATCHED THEN
  INSERT VALUES (4, NULL)
ERROR: 
MERGE INTO target t
USING source AS s
ON t.tid = s.sid
WHEN NOT MATCHED THEN
  INSERT VALUES (4, NULL)

Parser Error: syntax error at or near "MERGE"

SELECT * FROM target ORDER BY tid
RESULT: 
	[(1, 10), (2, 20), (3, 30)]

ROLLBACK


-- remove duplicate NOT MATCHED data from source data
DELETE FROM source WHERE sid = 4

INSERT INTO source VALUES (4, 40)

SELECT * FROM source ORDER BY sid
RESULT: 
	[(2, 5), (3, 20), (4, 40)]

SELECT * FROM target ORDER BY tid
RESULT: 
	[(1, 10), (2, 20), (3, 30)]


-- remove constraints
alter table target drop CONSTRAINT target_pkey
ERROR: 

-- remove constraints
alter table target drop CONSTRAINT target_pkey

Not implemented Error: No support for that ALTER TABLE option yet!

alter table target alter column tid drop not null


-- multiple actions
BEGIN

MERGE INTO target t
USING source AS s
ON t.tid = s.sid
WHEN NOT MATCHED THEN
	INSERT VALUES (4, 4)
WHEN MATCHED THEN
	UPDATE SET balance = 0
ERROR: 
MERGE INTO target t
USING source AS s
ON t.tid = s.sid
WHEN NOT MATCHED THEN
	INSERT VALUES (4, 4)
WHEN MATCHED THEN
	UPDATE SET balance = 0

Parser Error: syntax error at or near "MERGE"

SELECT * FROM target ORDER BY tid
RESULT: 
	[(1, 10), (2, 20), (3, 30)]

ROLLBACK


-- should be equivalent
BEGIN

MERGE INTO target t
USING source AS s
ON t.tid = s.sid
WHEN MATCHED THEN
	UPDATE SET balance = 0
WHEN NOT MATCHED THEN
	INSERT VALUES (4, 4)
ERROR: 
MERGE INTO target t
USING source AS s
ON t.tid = s.sid
WHEN MATCHED THEN
	UPDATE SET balance = 0
WHEN NOT MATCHED THEN
	INSERT VALUES (4, 4)

Parser Error: syntax error at or near "MERGE"

SELECT * FROM target ORDER BY tid
RESULT: 
	[(1, 10), (2, 20), (3, 30)]

ROLLBACK


-- column references
-- do a simple equivalent of an UPDATE join
BEGIN

MERGE INTO target t
USING source AS s
ON t.tid = s.sid
WHEN MATCHED THEN
	UPDATE SET balance = t.balance + s.delta
ERROR: 
MERGE INTO target t
USING source AS s
ON t.tid = s.sid
WHEN MATCHED THEN
	UPDATE SET balance = t.balance + s.delta

Parser Error: syntax error at or near "MERGE"

SELECT * FROM target ORDER BY tid
RESULT: 
	[(1, 10), (2, 20), (3, 30)]

ROLLBACK


-- do a simple equivalent of an INSERT SELECT
BEGIN

MERGE INTO target t
USING source AS s
ON t.tid = s.sid
WHEN NOT MATCHED THEN
	INSERT VALUES (s.sid, s.delta)
ERROR: 
MERGE INTO target t
USING source AS s
ON t.tid = s.sid
WHEN NOT MATCHED THEN
	INSERT VALUES (s.sid, s.delta)

Parser Error: syntax error at or near "MERGE"

SELECT * FROM target ORDER BY tid
RESULT: 
	[(1, 10), (2, 20), (3, 30)]

ROLLBACK


-- and again with duplicate source rows
INSERT INTO source VALUES (5, 50)

INSERT INTO source VALUES (5, 50)


-- do a simple equivalent of an INSERT SELECT
BEGIN

MERGE INTO target t
USING source AS s
ON t.tid = s.sid
WHEN NOT MATCHED THEN
  INSERT VALUES (s.sid, s.delta)
ERROR: 
MERGE INTO target t
USING source AS s
ON t.tid = s.sid
WHEN NOT MATCHED THEN
  INSERT VALUES (s.sid, s.delta)

Parser Error: syntax error at or near "MERGE"

SELECT * FROM target ORDER BY tid
RESULT: 
	[(1, 10), (2, 20), (3, 30)]

ROLLBACK


-- removing duplicate source rows
DELETE FROM source WHERE sid = 5


-- and again with explicitly identified column list
BEGIN

MERGE INTO target t
USING source AS s
ON t.tid = s.sid
WHEN NOT MATCHED THEN
	INSERT (tid, balance) VALUES (s.sid, s.delta)
ERROR: 
MERGE INTO target t
USING source AS s
ON t.tid = s.sid
WHEN NOT MATCHED THEN
	INSERT (tid, balance) VALUES (s.sid, s.delta)

Parser Error: syntax error at or near "MERGE"

SELECT * FROM target ORDER BY tid
RESULT: 
	[(1, 10), (2, 20), (3, 30)]

ROLLBACK


-- and again with a subtle error: referring to non-existent target row for NOT MATCHED
MERGE INTO target t
USING source AS s
ON t.tid = s.sid
WHEN NOT MATCHED THEN
	INSERT (tid, balance) VALUES (t.tid, s.delta)
ERROR: 

-- and again with a subtle error: referring to non-existent target row for NOT MATCHED
MERGE INTO target t
USING source AS s
ON t.tid = s.sid
WHEN NOT MATCHED THEN
	INSERT (tid, balance) VALUES (t.tid, s.delta)

Parser Error: syntax error at or near "MERGE"


-- and again with a constant ON clause
BEGIN

MERGE INTO target t
USING source AS s
ON (SELECT true)
WHEN NOT MATCHED THEN
	INSERT (tid, balance) VALUES (t.tid, s.delta)
ERROR: 
MERGE INTO target t
USING source AS s
ON (SELECT true)
WHEN NOT MATCHED THEN
	INSERT (tid, balance) VALUES (t.tid, s.delta)

Parser Error: syntax error at or near "MERGE"

SELECT * FROM target ORDER BY tid
RESULT: 
	[(1, 10), (2, 20), (3, 30)]

ROLLBACK


-- now the classic UPSERT
BEGIN

MERGE INTO target t
USING source AS s
ON t.tid = s.sid
WHEN MATCHED THEN
	UPDATE SET balance = t.balance + s.delta
WHEN NOT MATCHED THEN
	INSERT VALUES (s.sid, s.delta)
ERROR: 
MERGE INTO target t
USING source AS s
ON t.tid = s.sid
WHEN MATCHED THEN
	UPDATE SET balance = t.balance + s.delta
WHEN NOT MATCHED THEN
	INSERT VALUES (s.sid, s.delta)

Parser Error: syntax error at or near "MERGE"

SELECT * FROM target ORDER BY tid
RESULT: 
	[(1, 10), (2, 20), (3, 30)]

ROLLBACK


-- unreachable WHEN clause should ERROR
BEGIN

MERGE INTO target t
USING source AS s
ON t.tid = s.sid
WHEN MATCHED THEN /* Terminal WHEN clause for MATCHED */
	DELETE
WHEN MATCHED THEN
	UPDATE SET balance = t.balance - s.delta
ERROR: 
MERGE INTO target t
USING source AS s
ON t.tid = s.sid
WHEN MATCHED THEN /* Terminal WHEN clause for MATCHED */
	DELETE
WHEN MATCHED THEN
	UPDATE SET balance = t.balance - s.delta

Parser Error: syntax error at or near "MERGE"

ROLLBACK


-- conditional WHEN clause
CREATE TABLE wq_target (tid integer not null, balance integer DEFAULT -1)
  WITH (autovacuum_enabled=off)

CREATE TABLE wq_source (balance integer, sid integer)
  WITH (autovacuum_enabled=off)


INSERT INTO wq_source (sid, balance) VALUES (1, 100)


BEGIN

-- try a simple INSERT with default values first
MERGE INTO wq_target t
USING wq_source s ON t.tid = s.sid
WHEN NOT MATCHED THEN
	INSERT (tid) VALUES (s.sid)
ERROR: 
-- try a simple INSERT with default values first
MERGE INTO wq_target t
USING wq_source s ON t.tid = s.sid
WHEN NOT MATCHED THEN
	INSERT (tid) VALUES (s.sid)

Parser Error: syntax error at or near "MERGE"

SELECT * FROM wq_target
RESULT: 
	[]

ROLLBACK


-- this time with a FALSE condition
MERGE INTO wq_target t
USING wq_source s ON t.tid = s.sid
WHEN NOT MATCHED AND FALSE THEN
	INSERT (tid) VALUES (s.sid)
ERROR: 

-- this time with a FALSE condition
MERGE INTO wq_target t
USING wq_source s ON t.tid = s.sid
WHEN NOT MATCHED AND FALSE THEN
	INSERT (tid) VALUES (s.sid)

Parser Error: syntax error at or near "MERGE"

SELECT * FROM wq_target
RESULT: 
	[]


-- this time with an actual condition which returns false
MERGE INTO wq_target t
USING wq_source s ON t.tid = s.sid
WHEN NOT MATCHED AND s.balance <> 100 THEN
	INSERT (tid) VALUES (s.sid)
ERROR: 

-- this time with an actual condition which returns false
MERGE INTO wq_target t
USING wq_source s ON t.tid = s.sid
WHEN NOT MATCHED AND s.balance <> 100 THEN
	INSERT (tid) VALUES (s.sid)

Parser Error: syntax error at or near "MERGE"

SELECT * FROM wq_target
RESULT: 
	[]


BEGIN

-- and now with a condition which returns true
MERGE INTO wq_target t
USING wq_source s ON t.tid = s.sid
WHEN NOT MATCHED AND s.balance = 100 THEN
	INSERT (tid) VALUES (s.sid)
ERROR: 
-- and now with a condition which returns true
MERGE INTO wq_target t
USING wq_source s ON t.tid = s.sid
WHEN NOT MATCHED AND s.balance = 100 THEN
	INSERT (tid) VALUES (s.sid)

Parser Error: syntax error at or near "MERGE"

SELECT * FROM wq_target
RESULT: 
	[]

ROLLBACK


-- conditions in the NOT MATCHED clause can only refer to source columns
BEGIN

MERGE INTO wq_target t
USING wq_source s ON t.tid = s.sid
WHEN NOT MATCHED AND t.balance = 100 THEN
	INSERT (tid) VALUES (s.sid)
ERROR: 
MERGE INTO wq_target t
USING wq_source s ON t.tid = s.sid
WHEN NOT MATCHED AND t.balance = 100 THEN
	INSERT (tid) VALUES (s.sid)

Parser Error: syntax error at or near "MERGE"

SELECT * FROM wq_target
RESULT: 
	[]

ROLLBACK


MERGE INTO wq_target t
USING wq_source s ON t.tid = s.sid
WHEN NOT MATCHED AND s.balance = 100 THEN
	INSERT (tid) VALUES (s.sid)
ERROR: 

MERGE INTO wq_target t
USING wq_source s ON t.tid = s.sid
WHEN NOT MATCHED AND s.balance = 100 THEN
	INSERT (tid) VALUES (s.sid)

Parser Error: syntax error at or near "MERGE"

SELECT * FROM wq_target
RESULT: 
	[]


-- conditions in MATCHED clause can refer to both source and target
SELECT * FROM wq_source
RESULT: 
	[(100, 1)]

MERGE INTO wq_target t
USING wq_source s ON t.tid = s.sid
WHEN MATCHED AND s.balance = 100 THEN
	UPDATE SET balance = t.balance + s.balance
ERROR: 
MERGE INTO wq_target t
USING wq_source s ON t.tid = s.sid
WHEN MATCHED AND s.balance = 100 THEN
	UPDATE SET balance = t.balance + s.balance

Parser Error: syntax error at or near "MERGE"

SELECT * FROM wq_target
RESULT: 
	[]


MERGE INTO wq_target t
USING wq_source s ON t.tid = s.sid
WHEN MATCHED AND t.balance = 100 THEN
	UPDATE SET balance = t.balance + s.balance
ERROR: 

MERGE INTO wq_target t
USING wq_source s ON t.tid = s.sid
WHEN MATCHED AND t.balance = 100 THEN
	UPDATE SET balance = t.balance + s.balance

Parser Error: syntax error at or near "MERGE"

SELECT * FROM wq_target
RESULT: 
	[]


-- check if AND works
MERGE INTO wq_target t
USING wq_source s ON t.tid = s.sid
WHEN MATCHED AND t.balance = 99 AND s.balance > 100 THEN
	UPDATE SET balance = t.balance + s.balance
ERROR: 

-- check if AND works
MERGE INTO wq_target t
USING wq_source s ON t.tid = s.sid
WHEN MATCHED AND t.balance = 99 AND s.balance > 100 THEN
	UPDATE SET balance = t.balance + s.balance

Parser Error: syntax error at or near "MERGE"

SELECT * FROM wq_target
RESULT: 
	[]


MERGE INTO wq_target t
USING wq_source s ON t.tid = s.sid
WHEN MATCHED AND t.balance = 99 AND s.balance = 100 THEN
	UPDATE SET balance = t.balance + s.balance
ERROR: 

MERGE INTO wq_target t
USING wq_source s ON t.tid = s.sid
WHEN MATCHED AND t.balance = 99 AND s.balance = 100 THEN
	UPDATE SET balance = t.balance + s.balance

Parser Error: syntax error at or near "MERGE"

SELECT * FROM wq_target
RESULT: 
	[]


-- check if OR works
MERGE INTO wq_target t
USING wq_source s ON t.tid = s.sid
WHEN MATCHED AND t.balance = 99 OR s.balance > 100 THEN
	UPDATE SET balance = t.balance + s.balance
ERROR: 

-- check if OR works
MERGE INTO wq_target t
USING wq_source s ON t.tid = s.sid
WHEN MATCHED AND t.balance = 99 OR s.balance > 100 THEN
	UPDATE SET balance = t.balance + s.balance

Parser Error: syntax error at or near "MERGE"

SELECT * FROM wq_target
RESULT: 
	[]


MERGE INTO wq_target t
USING wq_source s ON t.tid = s.sid
WHEN MATCHED AND t.balance = 199 OR s.balance > 100 THEN
	UPDATE SET balance = t.balance + s.balance
ERROR: 

MERGE INTO wq_target t
USING wq_source s ON t.tid = s.sid
WHEN MATCHED AND t.balance = 199 OR s.balance > 100 THEN
	UPDATE SET balance = t.balance + s.balance

Parser Error: syntax error at or near "MERGE"

SELECT * FROM wq_target
RESULT: 
	[]


-- check source-side whole-row references
BEGIN

MERGE INTO wq_target t
USING wq_source s ON (t.tid = s.sid)
WHEN matched and t = s or t.tid = s.sid THEN
	UPDATE SET balance = t.balance + s.balance
ERROR: 
MERGE INTO wq_target t
USING wq_source s ON (t.tid = s.sid)
WHEN matched and t = s or t.tid = s.sid THEN
	UPDATE SET balance = t.balance + s.balance

Parser Error: syntax error at or near "MERGE"

SELECT * FROM wq_target
RESULT: 
	[]

ROLLBACK


-- check if subqueries work in the conditions?
MERGE INTO wq_target t
USING wq_source s ON t.tid = s.sid
WHEN MATCHED AND t.balance > (SELECT max(balance) FROM target) THEN
	UPDATE SET balance = t.balance + s.balance
ERROR: 

-- check if subqueries work in the conditions?
MERGE INTO wq_target t
USING wq_source s ON t.tid = s.sid
WHEN MATCHED AND t.balance > (SELECT max(balance) FROM target) THEN
	UPDATE SET balance = t.balance + s.balance

Parser Error: syntax error at or near "MERGE"


-- check if we can access system columns in the conditions
MERGE INTO wq_target t
USING wq_source s ON t.tid = s.sid
WHEN MATCHED AND t.xmin = t.xmax THEN
	UPDATE SET balance = t.balance + s.balance
ERROR: 

-- check if we can access system columns in the conditions
MERGE INTO wq_target t
USING wq_source s ON t.tid = s.sid
WHEN MATCHED AND t.xmin = t.xmax THEN
	UPDATE SET balance = t.balance + s.balance

Parser Error: syntax error at or near "MERGE"


MERGE INTO wq_target t
USING wq_source s ON t.tid = s.sid
WHEN MATCHED AND t.tableoid >= 0 THEN
	UPDATE SET balance = t.balance + s.balance
ERROR: 

MERGE INTO wq_target t
USING wq_source s ON t.tid = s.sid
WHEN MATCHED AND t.tableoid >= 0 THEN
	UPDATE SET balance = t.balance + s.balance

Parser Error: syntax error at or near "MERGE"

SELECT * FROM wq_target
RESULT: 
	[]


DROP TABLE wq_target, wq_source
ERROR: 

DROP TABLE wq_target, wq_source

Not implemented Error: Can only drop one object at a time


-- test triggers
create or replace function merge_trigfunc () returns trigger
language plpgsql as
$$
DECLARE
	line text;
BEGIN
	SELECT INTO line format('%s %s %s trigger%s',
		TG_WHEN, TG_OP, TG_LEVEL, CASE
		WHEN TG_OP = 'INSERT' AND TG_LEVEL = 'ROW'
			THEN format(' row: %s', NEW)
		WHEN TG_OP = 'UPDATE' AND TG_LEVEL = 'ROW'
			THEN format(' row: %s -> %s', OLD, NEW)
		WHEN TG_OP = 'DELETE' AND TG_LEVEL = 'ROW'
			THEN format(' row: %s', OLD)
		END);

	RAISE NOTICE '%', line;
	IF (TG_WHEN = 'BEFORE' AND TG_LEVEL = 'ROW') THEN
		IF (TG_OP = 'DELETE') THEN
			RETURN OLD;
		ELSE
			RETURN NEW;
		END IF;
	ELSE
		RETURN NULL;
	END IF;
END;
$$
ERROR: 

-- test triggers
create or replace function merge_trigfunc () returns trigger
language plpgsql as
$$
DECLARE
	line text;
BEGIN
	SELECT INTO line format('%s %s %s trigger%s',
		TG_WHEN, TG_OP, TG_LEVEL, CASE
		WHEN TG_OP = 'INSERT' AND TG_LEVEL = 'ROW'
			THEN format(' row: %s', NEW)
		WHEN TG_OP = 'UPDATE' AND TG_LEVEL = 'ROW'
			THEN format(' row: %s -> %s', OLD, NEW)
		WHEN TG_OP = 'DELETE' AND TG_LEVEL = 'ROW'
			THEN format(' row: %s', OLD)
		END);

	RAISE NOTICE '%', line;
	IF (TG_WHEN = 'BEFORE' AND TG_LEVEL = 'ROW') THEN
		IF (TG_OP = 'DELETE') THEN
			RETURN OLD;
		ELSE
			RETURN NEW;
		END IF;
	ELSE
		RETURN NULL;
	END IF;
END;
$$

Parser Error: syntax error at or near "returns"

CREATE TRIGGER merge_bsi BEFORE INSERT ON target FOR EACH STATEMENT EXECUTE PROCEDURE merge_trigfunc ()
ERROR: 
CREATE TRIGGER merge_bsi BEFORE INSERT ON target FOR EACH STATEMENT EXECUTE PROCEDURE merge_trigfunc ()

Parser Error: syntax error at or near "TRIGGER"

CREATE TRIGGER merge_bsu BEFORE UPDATE ON target FOR EACH STATEMENT EXECUTE PROCEDURE merge_trigfunc ()
ERROR: 
CREATE TRIGGER merge_bsu BEFORE UPDATE ON target FOR EACH STATEMENT EXECUTE PROCEDURE merge_trigfunc ()

Parser Error: syntax error at or near "TRIGGER"

CREATE TRIGGER merge_bsd BEFORE DELETE ON target FOR EACH STATEMENT EXECUTE PROCEDURE merge_trigfunc ()
ERROR: 
CREATE TRIGGER merge_bsd BEFORE DELETE ON target FOR EACH STATEMENT EXECUTE PROCEDURE merge_trigfunc ()

Parser Error: syntax error at or near "TRIGGER"

CREATE TRIGGER merge_asi AFTER INSERT ON target FOR EACH STATEMENT EXECUTE PROCEDURE merge_trigfunc ()
ERROR: 
CREATE TRIGGER merge_asi AFTER INSERT ON target FOR EACH STATEMENT EXECUTE PROCEDURE merge_trigfunc ()

Parser Error: syntax error at or near "TRIGGER"

CREATE TRIGGER merge_asu AFTER UPDATE ON target FOR EACH STATEMENT EXECUTE PROCEDURE merge_trigfunc ()
ERROR: 
CREATE TRIGGER merge_asu AFTER UPDATE ON target FOR EACH STATEMENT EXECUTE PROCEDURE merge_trigfunc ()

Parser Error: syntax error at or near "TRIGGER"

CREATE TRIGGER merge_asd AFTER DELETE ON target FOR EACH STATEMENT EXECUTE PROCEDURE merge_trigfunc ()
ERROR: 
CREATE TRIGGER merge_asd AFTER DELETE ON target FOR EACH STATEMENT EXECUTE PROCEDURE merge_trigfunc ()

Parser Error: syntax error at or near "TRIGGER"

CREATE TRIGGER merge_bri BEFORE INSERT ON target FOR EACH ROW EXECUTE PROCEDURE merge_trigfunc ()
ERROR: 
CREATE TRIGGER merge_bri BEFORE INSERT ON target FOR EACH ROW EXECUTE PROCEDURE merge_trigfunc ()

Parser Error: syntax error at or near "TRIGGER"

CREATE TRIGGER merge_bru BEFORE UPDATE ON target FOR EACH ROW EXECUTE PROCEDURE merge_trigfunc ()
ERROR: 
CREATE TRIGGER merge_bru BEFORE UPDATE ON target FOR EACH ROW EXECUTE PROCEDURE merge_trigfunc ()

Parser Error: syntax error at or near "TRIGGER"

CREATE TRIGGER merge_brd BEFORE DELETE ON target FOR EACH ROW EXECUTE PROCEDURE merge_trigfunc ()
ERROR: 
CREATE TRIGGER merge_brd BEFORE DELETE ON target FOR EACH ROW EXECUTE PROCEDURE merge_trigfunc ()

Parser Error: syntax error at or near "TRIGGER"

CREATE TRIGGER merge_ari AFTER INSERT ON target FOR EACH ROW EXECUTE PROCEDURE merge_trigfunc ()
ERROR: 
CREATE TRIGGER merge_ari AFTER INSERT ON target FOR EACH ROW EXECUTE PROCEDURE merge_trigfunc ()

Parser Error: syntax error at or near "TRIGGER"

CREATE TRIGGER merge_aru AFTER UPDATE ON target FOR EACH ROW EXECUTE PROCEDURE merge_trigfunc ()
ERROR: 
CREATE TRIGGER merge_aru AFTER UPDATE ON target FOR EACH ROW EXECUTE PROCEDURE merge_trigfunc ()

Parser Error: syntax error at or near "TRIGGER"

CREATE TRIGGER merge_ard AFTER DELETE ON target FOR EACH ROW EXECUTE PROCEDURE merge_trigfunc ()
ERROR: 
CREATE TRIGGER merge_ard AFTER DELETE ON target FOR EACH ROW EXECUTE PROCEDURE merge_trigfunc ()

Parser Error: syntax error at or near "TRIGGER"


-- now the classic UPSERT, with a DELETE
BEGIN

UPDATE target SET balance = 0 WHERE tid = 3

--EXPLAIN (ANALYZE ON, COSTS OFF, SUMMARY OFF, TIMING OFF)
MERGE INTO target t
USING source AS s
ON t.tid = s.sid
WHEN MATCHED AND t.balance > s.delta THEN
	UPDATE SET balance = t.balance - s.delta
WHEN MATCHED THEN
	DELETE
WHEN NOT MATCHED THEN
	INSERT VALUES (s.sid, s.delta)
ERROR: 
--EXPLAIN (ANALYZE ON, COSTS OFF, SUMMARY OFF, TIMING OFF)
MERGE INTO target t
USING source AS s
ON t.tid = s.sid
WHEN MATCHED AND t.balance > s.delta THEN
	UPDATE SET balance = t.balance - s.delta
WHEN MATCHED THEN
	DELETE
WHEN NOT MATCHED THEN
	INSERT VALUES (s.sid, s.delta)

Parser Error: syntax error at or near "MERGE"

SELECT * FROM target ORDER BY tid
RESULT: 
	[(1, 10), (2, 20), (3, 0)]

ROLLBACK


-- Test behavior of triggers that turn UPDATE/DELETE into no-ops
create or replace function skip_merge_op() returns trigger
language plpgsql as
$$
BEGIN
	RETURN NULL;
END;
$$
ERROR: 

-- Test behavior of triggers that turn UPDATE/DELETE into no-ops
create or replace function skip_merge_op() returns trigger
language plpgsql as
$$
BEGIN
	RETURN NULL;
END;
$$

Parser Error: syntax error at or near "returns"


SELECT * FROM target full outer join source on (sid = tid)
RESULT: 
	[(3, 30, 3, 20), (2, 20, 2, 5), (None, None, 4, 40), (1, 10, None, None)]

create trigger merge_skip BEFORE INSERT OR UPDATE or DELETE
  ON target FOR EACH ROW EXECUTE FUNCTION skip_merge_op()
ERROR: 
create trigger merge_skip BEFORE INSERT OR UPDATE or DELETE
  ON target FOR EACH ROW EXECUTE FUNCTION skip_merge_op()

Parser Error: syntax error at or near "trigger"

DO $$
DECLARE
  result integer;
BEGIN
MERGE INTO target t
USING source AS s
ON t.tid = s.sid
WHEN MATCHED AND s.sid = 3 THEN UPDATE SET balance = t.balance + s.delta
WHEN MATCHED THEN DELETE
WHEN NOT MATCHED THEN INSERT VALUES (sid, delta);
IF FOUND THEN
  RAISE NOTICE 'Found';
ELSE
  RAISE NOTICE 'Not found';
END IF;
GET DIAGNOSTICS result := ROW_COUNT;
RAISE NOTICE 'ROW_COUNT = %', result;
END;
$$
ERROR: 
DO $$
DECLARE
  result integer;
BEGIN
MERGE INTO target t
USING source AS s
ON t.tid = s.sid
WHEN MATCHED AND s.sid = 3 THEN UPDATE SET balance = t.balance + s.delta
WHEN MATCHED THEN DELETE
WHEN NOT MATCHED THEN INSERT VALUES (sid, delta);
IF FOUND THEN
  RAISE NOTICE 'Found';
ELSE
  RAISE NOTICE 'Not found';
END IF;
GET DIAGNOSTICS result := ROW_COUNT;
RAISE NOTICE 'ROW_COUNT = %', result;
END;
$$

Parser Error: syntax error at or near "DO"

SELECT * FROM target FULL OUTER JOIN source ON (sid = tid)
RESULT: 
	[(3, 30, 3, 20), (2, 20, 2, 5), (None, None, 4, 40), (1, 10, None, None)]

DROP TRIGGER merge_skip ON target
ERROR: 
DROP TRIGGER merge_skip ON target

Not implemented Error: Cannot drop this type yet

DROP FUNCTION skip_merge_op()
ERROR: 
DROP FUNCTION skip_merge_op()

Parser Error: syntax error at or near "("


-- test from PL/pgSQL
-- make sure MERGE INTO isn''t interpreted to mean returning variables like SELECT INTO
BEGIN

DO LANGUAGE plpgsql $$
BEGIN
MERGE INTO target t
USING source AS s
ON t.tid = s.sid
WHEN MATCHED AND t.balance > s.delta THEN
	UPDATE SET balance = t.balance - s.delta;
END;
$$
ERROR: 
DO LANGUAGE plpgsql $$
BEGIN
MERGE INTO target t
USING source AS s
ON t.tid = s.sid
WHEN MATCHED AND t.balance > s.delta THEN
	UPDATE SET balance = t.balance - s.delta;
END;
$$

Parser Error: syntax error at or near "DO"

ROLLBACK


--source constants
BEGIN

MERGE INTO target t
USING (SELECT 9 AS sid, 57 AS delta) AS s
ON t.tid = s.sid
WHEN NOT MATCHED THEN
	INSERT (tid, balance) VALUES (s.sid, s.delta)
ERROR: 
MERGE INTO target t
USING (SELECT 9 AS sid, 57 AS delta) AS s
ON t.tid = s.sid
WHEN NOT MATCHED THEN
	INSERT (tid, balance) VALUES (s.sid, s.delta)

Parser Error: syntax error at or near "MERGE"

SELECT * FROM target ORDER BY tid
RESULT: 
	[(1, 10), (2, 20), (3, 30)]

ROLLBACK


--source query
BEGIN

MERGE INTO target t
USING (SELECT sid, delta FROM source WHERE delta > 0) AS s
ON t.tid = s.sid
WHEN NOT MATCHED THEN
	INSERT (tid, balance) VALUES (s.sid, s.delta)
ERROR: 
MERGE INTO target t
USING (SELECT sid, delta FROM source WHERE delta > 0) AS s
ON t.tid = s.sid
WHEN NOT MATCHED THEN
	INSERT (tid, balance) VALUES (s.sid, s.delta)

Parser Error: syntax error at or near "MERGE"

SELECT * FROM target ORDER BY tid
RESULT: 
	[(1, 10), (2, 20), (3, 30)]

ROLLBACK


BEGIN

MERGE INTO target t
USING (SELECT sid, delta as newname FROM source WHERE delta > 0) AS s
ON t.tid = s.sid
WHEN NOT MATCHED THEN
	INSERT (tid, balance) VALUES (s.sid, s.newname)
ERROR: 
MERGE INTO target t
USING (SELECT sid, delta as newname FROM source WHERE delta > 0) AS s
ON t.tid = s.sid
WHEN NOT MATCHED THEN
	INSERT (tid, balance) VALUES (s.sid, s.newname)

Parser Error: syntax error at or near "MERGE"

SELECT * FROM target ORDER BY tid
RESULT: 
	[(1, 10), (2, 20), (3, 30)]

ROLLBACK


--self-merge
BEGIN

MERGE INTO target t1
USING target t2
ON t1.tid = t2.tid
WHEN MATCHED THEN
	UPDATE SET balance = t1.balance + t2.balance
WHEN NOT MATCHED THEN
	INSERT VALUES (t2.tid, t2.balance)
ERROR: 
MERGE INTO target t1
USING target t2
ON t1.tid = t2.tid
WHEN MATCHED THEN
	UPDATE SET balance = t1.balance + t2.balance
WHEN NOT MATCHED THEN
	INSERT VALUES (t2.tid, t2.balance)

Parser Error: syntax error at or near "MERGE"

SELECT * FROM target ORDER BY tid
RESULT: 
	[(1, 10), (2, 20), (3, 30)]

ROLLBACK


BEGIN

MERGE INTO target t
USING (SELECT tid as sid, balance as delta FROM target WHERE balance > 0) AS s
ON t.tid = s.sid
WHEN NOT MATCHED THEN
	INSERT (tid, balance) VALUES (s.sid, s.delta)
ERROR: 
MERGE INTO target t
USING (SELECT tid as sid, balance as delta FROM target WHERE balance > 0) AS s
ON t.tid = s.sid
WHEN NOT MATCHED THEN
	INSERT (tid, balance) VALUES (s.sid, s.delta)

Parser Error: syntax error at or near "MERGE"

SELECT * FROM target ORDER BY tid
RESULT: 
	[(1, 10), (2, 20), (3, 30)]

ROLLBACK


BEGIN

MERGE INTO target t
USING
(SELECT sid, max(delta) AS delta
 FROM source
 GROUP BY sid
 HAVING count(*) = 1
 ORDER BY sid ASC) AS s
ON t.tid = s.sid
WHEN NOT MATCHED THEN
	INSERT (tid, balance) VALUES (s.sid, s.delta)
ERROR: 
MERGE INTO target t
USING
(SELECT sid, max(delta) AS delta
 FROM source
 GROUP BY sid
 HAVING count(*) = 1
 ORDER BY sid ASC) AS s
ON t.tid = s.sid
WHEN NOT MATCHED THEN
	INSERT (tid, balance) VALUES (s.sid, s.delta)

Parser Error: syntax error at or near "MERGE"

SELECT * FROM target ORDER BY tid
RESULT: 
	[(1, 10), (2, 20), (3, 30)]

ROLLBACK


-- plpgsql parameters and results
BEGIN

CREATE FUNCTION merge_func (p_id integer, p_bal integer)
RETURNS INTEGER
LANGUAGE plpgsql
AS $$
DECLARE
 result integer;
BEGIN
MERGE INTO target t
USING (SELECT p_id AS sid) AS s
ON t.tid = s.sid
WHEN MATCHED THEN
	UPDATE SET balance = t.balance - p_bal;
IF FOUND THEN
	GET DIAGNOSTICS result := ROW_COUNT;
END IF;
RETURN result;
END;
$$
ERROR: 
CREATE FUNCTION merge_func (p_id integer, p_bal integer)
RETURNS INTEGER
LANGUAGE plpgsql
AS $$
DECLARE
 result integer;
BEGIN
MERGE INTO target t
USING (SELECT p_id AS sid) AS s
ON t.tid = s.sid
WHEN MATCHED THEN
	UPDATE SET balance = t.balance - p_bal;
IF FOUND THEN
	GET DIAGNOSTICS result := ROW_COUNT;
END IF;
RETURN result;
END;
$$

Parser Error: syntax error at or near "integer"

SELECT merge_func(3, 4)
ERROR: 
SELECT merge_func(3, 4)

Catalog Error: Scalar Function with name merge_func does not exist!
Did you mean "trunc"?

SELECT * FROM target ORDER BY tid
RESULT: 
	[(1, 10), (2, 20), (3, 30)]

ROLLBACK


-- PREPARE
BEGIN

prepare foom as merge into target t using (select 1 as sid) s on (t.tid = s.sid) when matched then update set balance = 1
ERROR: 
prepare foom as merge into target t using (select 1 as sid) s on (t.tid = s.sid) when matched then update set balance = 1

Parser Error: syntax error at or near "merge"

execute foom
ERROR: 
execute foom

Binder Error: Prepared statement "foom" does not exist

SELECT * FROM target ORDER BY tid
RESULT: 
	[(1, 10), (2, 20), (3, 30)]

ROLLBACK


BEGIN

PREPARE foom2 (integer, integer) AS
MERGE INTO target t
USING (SELECT 1) s
ON t.tid = $1
WHEN MATCHED THEN
UPDATE SET balance = $2
ERROR: 
PREPARE foom2 (integer, integer) AS
MERGE INTO target t
USING (SELECT 1) s
ON t.tid = $1
WHEN MATCHED THEN
UPDATE SET balance = $2

Parser Error: syntax error at or near "MERGE"

--EXPLAIN (ANALYZE ON, COSTS OFF, SUMMARY OFF, TIMING OFF)
execute foom2 (1, 1)
ERROR: 
--EXPLAIN (ANALYZE ON, COSTS OFF, SUMMARY OFF, TIMING OFF)
execute foom2 (1, 1)

Binder Error: Prepared statement "foom2" does not exist

SELECT * FROM target ORDER BY tid
RESULT: 
	[(1, 10), (2, 20), (3, 30)]

ROLLBACK


-- subqueries in source relation

CREATE TABLE sq_target (tid integer NOT NULL, balance integer)
  WITH (autovacuum_enabled=off)

CREATE TABLE sq_source (delta integer, sid integer, balance integer DEFAULT 0)
  WITH (autovacuum_enabled=off)


INSERT INTO sq_target(tid, balance) VALUES (1,100), (2,200), (3,300)

INSERT INTO sq_source(sid, delta) VALUES (1,10), (2,20), (4,40)


BEGIN

MERGE INTO sq_target t
USING (SELECT * FROM sq_source) s
ON tid = sid
WHEN MATCHED AND t.balance > delta THEN
	UPDATE SET balance = t.balance + delta
ERROR: 
MERGE INTO sq_target t
USING (SELECT * FROM sq_source) s
ON tid = sid
WHEN MATCHED AND t.balance > delta THEN
	UPDATE SET balance = t.balance + delta

Parser Error: syntax error at or near "MERGE"

SELECT * FROM sq_target
RESULT: 
	[(1, 100), (2, 200), (3, 300)]

ROLLBACK


-- try a view
CREATE VIEW v AS SELECT * FROM sq_source WHERE sid < 2


BEGIN

MERGE INTO sq_target
USING v
ON tid = sid
WHEN MATCHED THEN
    UPDATE SET balance = v.balance + delta
ERROR: 
MERGE INTO sq_target
USING v
ON tid = sid
WHEN MATCHED THEN
    UPDATE SET balance = v.balance + delta

Parser Error: syntax error at or near "MERGE"

SELECT * FROM sq_target
RESULT: 
	[(1, 100), (2, 200), (3, 300)]

ROLLBACK


-- ambiguous reference to a column
BEGIN

MERGE INTO sq_target
USING v
ON tid = sid
WHEN MATCHED AND tid >= 2 THEN
    UPDATE SET balance = balance + delta
WHEN NOT MATCHED THEN
	INSERT (balance, tid) VALUES (balance + delta, sid)
WHEN MATCHED AND tid < 2 THEN
	DELETE
ERROR: 
MERGE INTO sq_target
USING v
ON tid = sid
WHEN MATCHED AND tid >= 2 THEN
    UPDATE SET balance = balance + delta
WHEN NOT MATCHED THEN
	INSERT (balance, tid) VALUES (balance + delta, sid)
WHEN MATCHED AND tid < 2 THEN
	DELETE

Parser Error: syntax error at or near "MERGE"

ROLLBACK


BEGIN

INSERT INTO sq_source (sid, balance, delta) VALUES (-1, -1, -10)

MERGE INTO sq_target t
USING v
ON tid = sid
WHEN MATCHED AND tid >= 2 THEN
    UPDATE SET balance = t.balance + delta
WHEN NOT MATCHED THEN
	INSERT (balance, tid) VALUES (balance + delta, sid)
WHEN MATCHED AND tid < 2 THEN
	DELETE
ERROR: 
MERGE INTO sq_target t
USING v
ON tid = sid
WHEN MATCHED AND tid >= 2 THEN
    UPDATE SET balance = t.balance + delta
WHEN NOT MATCHED THEN
	INSERT (balance, tid) VALUES (balance + delta, sid)
WHEN MATCHED AND tid < 2 THEN
	DELETE

Parser Error: syntax error at or near "MERGE"

SELECT * FROM sq_target
RESULT: 
	[(1, 100), (2, 200), (3, 300)]

ROLLBACK


-- CTEs
BEGIN

INSERT INTO sq_source (sid, balance, delta) VALUES (-1, -1, -10)

WITH targq AS (
	SELECT * FROM v
)
MERGE INTO sq_target t
USING v
ON tid = sid
WHEN MATCHED AND tid >= 2 THEN
    UPDATE SET balance = t.balance + delta
WHEN NOT MATCHED THEN
	INSERT (balance, tid) VALUES (balance + delta, sid)
WHEN MATCHED AND tid < 2 THEN
	DELETE
ERROR: 
WITH targq AS (
	SELECT * FROM v
)
MERGE INTO sq_target t
USING v
ON tid = sid
WHEN MATCHED AND tid >= 2 THEN
    UPDATE SET balance = t.balance + delta
WHEN NOT MATCHED THEN
	INSERT (balance, tid) VALUES (balance + delta, sid)
WHEN MATCHED AND tid < 2 THEN
	DELETE

Parser Error: syntax error at or near "MERGE"

ROLLBACK


-- RETURNING
SELECT * FROM sq_source ORDER BY sid
RESULT: 
	[(10, 1, 0), (20, 2, 0), (40, 4, 0)]

SELECT * FROM sq_target ORDER BY tid
RESULT: 
	[(1, 100), (2, 200), (3, 300)]


BEGIN

CREATE TABLE merge_actions(action text, abbrev text)

INSERT INTO merge_actions VALUES ('INSERT', 'ins'), ('UPDATE', 'upd'), ('DELETE', 'del')

MERGE INTO sq_target t
USING sq_source s
ON tid = sid
WHEN MATCHED AND tid >= 2 THEN
    UPDATE SET balance = t.balance + delta
WHEN NOT MATCHED THEN
    INSERT (balance, tid) VALUES (balance + delta, sid)
WHEN MATCHED AND tid < 2 THEN
    DELETE
RETURNING (SELECT abbrev FROM merge_actions
            WHERE action = merge_action()) AS action,
          t.*,
          CASE merge_action()
              WHEN 'INSERT' THEN 'Inserted '||t
              WHEN 'UPDATE' THEN 'Added '||delta||' to balance'
              WHEN 'DELETE' THEN 'Removed '||t
          END AS description
ERROR: 
MERGE INTO sq_target t
USING sq_source s
ON tid = sid
WHEN MATCHED AND tid >= 2 THEN
    UPDATE SET balance = t.balance + delta
WHEN NOT MATCHED THEN
    INSERT (balance, tid) VALUES (balance + delta, sid)
WHEN MATCHED AND tid < 2 THEN
    DELETE
RETURNING (SELECT abbrev FROM merge_actions
            WHERE action = merge_action()) AS action,
          t.*,
          CASE merge_action()
              WHEN 'INSERT' THEN 'Inserted '||t
              WHEN 'UPDATE' THEN 'Added '||delta||' to balance'
              WHEN 'DELETE' THEN 'Removed '||t
          END AS description

Parser Error: syntax error at or near "MERGE"

ROLLBACK


-- error when using merge_action() outside MERGE
SELECT merge_action() FROM sq_target
ERROR: 

-- error when using merge_action() outside MERGE
SELECT merge_action() FROM sq_target

Catalog Error: Scalar Function with name merge_action does not exist!
Did you mean "mean"?

UPDATE sq_target SET balance = balance + 1 RETURNING merge_action()
ERROR: 
UPDATE sq_target SET balance = balance + 1 RETURNING merge_action()

Catalog Error: Scalar Function with name merge_action does not exist!
Did you mean "mean"?
LINE 2: ...get SET balance = balance + 1 RETURNING merge_action()
                                                  ^


-- RETURNING in CTEs
CREATE TABLE sq_target_merge_log (tid integer NOT NULL, last_change text)

INSERT INTO sq_target_merge_log VALUES (1, 'Original value')

BEGIN

WITH m AS (
    MERGE INTO sq_target t
    USING sq_source s
    ON tid = sid
    WHEN MATCHED AND tid >= 2 THEN
        UPDATE SET balance = t.balance + delta
    WHEN NOT MATCHED THEN
        INSERT (balance, tid) VALUES (balance + delta, sid)
    WHEN MATCHED AND tid < 2 THEN
        DELETE
    RETURNING merge_action() AS action, t.*,
              CASE merge_action()
                  WHEN 'INSERT' THEN 'Inserted '||t
                  WHEN 'UPDATE' THEN 'Added '||delta||' to balance'
                  WHEN 'DELETE' THEN 'Removed '||t
              END AS description
), m2 AS (
    MERGE INTO sq_target_merge_log l
    USING m
    ON l.tid = m.tid
    WHEN MATCHED THEN
        UPDATE SET last_change = description
    WHEN NOT MATCHED THEN
        INSERT VALUES (m.tid, description)
    RETURNING action, merge_action() AS log_action, l.*
)
SELECT * FROM m2
ERROR: 
WITH m AS (
    MERGE INTO sq_target t
    USING sq_source s
    ON tid = sid
    WHEN MATCHED AND tid >= 2 THEN
        UPDATE SET balance = t.balance + delta
    WHEN NOT MATCHED THEN
        INSERT (balance, tid) VALUES (balance + delta, sid)
    WHEN MATCHED AND tid < 2 THEN
        DELETE
    RETURNING merge_action() AS action, t.*,
              CASE merge_action()
                  WHEN 'INSERT' THEN 'Inserted '||t
                  WHEN 'UPDATE' THEN 'Added '||delta||' to balance'
                  WHEN 'DELETE' THEN 'Removed '||t
              END AS description
), m2 AS (
    MERGE INTO sq_target_merge_log l
    USING m
    ON l.tid = m.tid
    WHEN MATCHED THEN
        UPDATE SET last_change = description
    WHEN NOT MATCHED THEN
        INSERT VALUES (m.tid, description)
    RETURNING action, merge_action() AS log_action, l.*
)
SELECT * FROM m2

Parser Error: syntax error at or near "MERGE"

SELECT * FROM sq_target_merge_log ORDER BY tid
RESULT: 
	[(1, 'Original value')]

ROLLBACK


-- COPY (MERGE ... RETURNING) TO ...
BEGIN

COPY (
    MERGE INTO sq_target t
    USING sq_source s
    ON tid = sid
    WHEN MATCHED AND tid >= 2 THEN
        UPDATE SET balance = t.balance + delta
    WHEN NOT MATCHED THEN
        INSERT (balance, tid) VALUES (balance + delta, sid)
    WHEN MATCHED AND tid < 2 THEN
        DELETE
    RETURNING merge_action(), t.*
) TO stdout
ERROR: 
COPY (
    MERGE INTO sq_target t
    USING sq_source s
    ON tid = sid
    WHEN MATCHED AND tid >= 2 THEN
        UPDATE SET balance = t.balance + delta
    WHEN NOT MATCHED THEN
        INSERT (balance, tid) VALUES (balance + delta, sid)
    WHEN MATCHED AND tid < 2 THEN
        DELETE
    RETURNING merge_action(), t.*
) TO stdout

Parser Error: syntax error at or near "MERGE"

ROLLBACK


-- SQL function with MERGE ... RETURNING
BEGIN

CREATE FUNCTION merge_into_sq_target(sid int, balance int, delta int,
                                     OUT action text, OUT tid int, OUT new_balance int)
LANGUAGE sql AS
$$
    MERGE INTO sq_target t
    USING (VALUES ($1, $2, $3)) AS v(sid, balance, delta)
    ON tid = v.sid
    WHEN MATCHED AND tid >= 2 THEN
        UPDATE SET balance = t.balance + v.delta
    WHEN NOT MATCHED THEN
        INSERT (balance, tid) VALUES (v.balance + v.delta, v.sid)
    WHEN MATCHED AND tid < 2 THEN
        DELETE
    RETURNING merge_action(), t.*;
$$
ERROR: 
CREATE FUNCTION merge_into_sq_target(sid int, balance int, delta int,
                                     OUT action text, OUT tid int, OUT new_balance int)
LANGUAGE sql AS
$$
    MERGE INTO sq_target t
    USING (VALUES ($1, $2, $3)) AS v(sid, balance, delta)
    ON tid = v.sid
    WHEN MATCHED AND tid >= 2 THEN
        UPDATE SET balance = t.balance + v.delta
    WHEN NOT MATCHED THEN
        INSERT (balance, tid) VALUES (v.balance + v.delta, v.sid)
    WHEN MATCHED AND tid < 2 THEN
        DELETE
    RETURNING merge_action(), t.*;
$$

Parser Error: syntax error at or near "int"

SELECT m.*
FROM (VALUES (1, 0, 0), (3, 0, 20), (4, 100, 10)) AS v(sid, balance, delta),
LATERAL (SELECT action, tid, new_balance FROM merge_into_sq_target(sid, balance, delta)) m
ERROR: 
SELECT m.*
FROM (VALUES (1, 0, 0), (3, 0, 20), (4, 100, 10)) AS v(sid, balance, delta),
LATERAL (SELECT action, tid, new_balance FROM merge_into_sq_target(sid, balance, delta)) m

Catalog Error: Table Function with name merge_into_sq_target does not exist!
Did you mean "range"?

ROLLBACK


-- SQL SRF with MERGE ... RETURNING
BEGIN

CREATE FUNCTION merge_sq_source_into_sq_target()
RETURNS TABLE (action text, tid int, balance int)
LANGUAGE sql AS
$$
    MERGE INTO sq_target t
    USING sq_source s
    ON tid = sid
    WHEN MATCHED AND tid >= 2 THEN
        UPDATE SET balance = t.balance + delta
    WHEN NOT MATCHED THEN
        INSERT (balance, tid) VALUES (balance + delta, sid)
    WHEN MATCHED AND tid < 2 THEN
        DELETE
    RETURNING merge_action(), t.*;
$$
ERROR: 
CREATE FUNCTION merge_sq_source_into_sq_target()
RETURNS TABLE (action text, tid int, balance int)
LANGUAGE sql AS
$$
    MERGE INTO sq_target t
    USING sq_source s
    ON tid = sid
    WHEN MATCHED AND tid >= 2 THEN
        UPDATE SET balance = t.balance + delta
    WHEN NOT MATCHED THEN
        INSERT (balance, tid) VALUES (balance + delta, sid)
    WHEN MATCHED AND tid < 2 THEN
        DELETE
    RETURNING merge_action(), t.*;
$$

Parser Error: syntax error at or near "RETURNS"

SELECT * FROM merge_sq_source_into_sq_target()
ERROR: 
SELECT * FROM merge_sq_source_into_sq_target()

Catalog Error: Table Function with name merge_sq_source_into_sq_target does not exist!
Did you mean "parquet_scan"?

ROLLBACK


-- PL/pgSQL function with MERGE ... RETURNING ... INTO
BEGIN

CREATE FUNCTION merge_into_sq_target(sid int, balance int, delta int,
                                     OUT r_action text, OUT r_tid int, OUT r_balance int)
LANGUAGE plpgsql AS
$$
BEGIN
    MERGE INTO sq_target t
    USING (VALUES ($1, $2, $3)) AS v(sid, balance, delta)
    ON tid = v.sid
    WHEN MATCHED AND tid >= 2 THEN
        UPDATE SET balance = t.balance + v.delta
    WHEN NOT MATCHED THEN
        INSERT (balance, tid) VALUES (v.balance + v.delta, v.sid)
    WHEN MATCHED AND tid < 2 THEN
        DELETE
    RETURNING merge_action(), t.* INTO r_action, r_tid, r_balance;
END;
$$
ERROR: 
CREATE FUNCTION merge_into_sq_target(sid int, balance int, delta int,
                                     OUT r_action text, OUT r_tid int, OUT r_balance int)
LANGUAGE plpgsql AS
$$
BEGIN
    MERGE INTO sq_target t
    USING (VALUES ($1, $2, $3)) AS v(sid, balance, delta)
    ON tid = v.sid
    WHEN MATCHED AND tid >= 2 THEN
        UPDATE SET balance = t.balance + v.delta
    WHEN NOT MATCHED THEN
        INSERT (balance, tid) VALUES (v.balance + v.delta, v.sid)
    WHEN MATCHED AND tid < 2 THEN
        DELETE
    RETURNING merge_action(), t.* INTO r_action, r_tid, r_balance;
END;
$$

Parser Error: syntax error at or near "int"

SELECT m.*
FROM (VALUES (1, 0, 0), (3, 0, 20), (4, 100, 10)) AS v(sid, balance, delta),
LATERAL (SELECT r_action, r_tid, r_balance FROM merge_into_sq_target(sid, balance, delta)) m
ERROR: 
SELECT m.*
FROM (VALUES (1, 0, 0), (3, 0, 20), (4, 100, 10)) AS v(sid, balance, delta),
LATERAL (SELECT r_action, r_tid, r_balance FROM merge_into_sq_target(sid, balance, delta)) m

Catalog Error: Table Function with name merge_into_sq_target does not exist!
Did you mean "range"?

ROLLBACK


-- EXPLAIN
CREATE TABLE ex_mtarget (a int, b int)
  WITH (autovacuum_enabled=off)

CREATE TABLE ex_msource (a int, b int)
  WITH (autovacuum_enabled=off)

INSERT INTO ex_mtarget SELECT i, i*10 FROM generate_series(1,100,2) i
ERROR: 
INSERT INTO ex_mtarget SELECT i, i*10 FROM generate_series(1,100,2) i

Binder Error: No function matches the given name and argument types '*(STRUCT(generate_series BIGINT), INTEGER_LITERAL)'. You might need to add explicit type casts.
	Candidate functions:
	*(TINYINT, TINYINT) -> TINYINT
	*(SMALLINT, SMALLINT) -> SMALLINT
	*(INTEGER, INTEGER) -> INTEGER
	*(BIGINT, BIGINT) -> BIGINT
	*(HUGEINT, HUGEINT) -> HUGEINT
	*(FLOAT, FLOAT) -> FLOAT
	*(DOUBLE, DOUBLE) -> DOUBLE
	*(DECIMAL, DECIMAL) -> DECIMAL
	*(UTINYINT, UTINYINT) -> UTINYINT
	*(USMALLINT, USMALLINT) -> USMALLINT
	*(UINTEGER, UINTEGER) -> UINTEGER
	*(UBIGINT, UBIGINT) -> UBIGINT
	*(UHUGEINT, UHUGEINT) -> UHUGEINT
	*(INTERVAL, BIGINT) -> INTERVAL
	*(BIGINT, INTERVAL) -> INTERVAL

LINE 2: INSERT INTO ex_mtarget SELECT i, i*10 FROM generate_series(1,100,2) i
                                          ^

INSERT INTO ex_msource SELECT i, i*10 FROM generate_series(1,100,1) i
ERROR: 
INSERT INTO ex_msource SELECT i, i*10 FROM generate_series(1,100,1) i

Binder Error: No function matches the given name and argument types '*(STRUCT(generate_series BIGINT), INTEGER_LITERAL)'. You might need to add explicit type casts.
	Candidate functions:
	*(TINYINT, TINYINT) -> TINYINT
	*(SMALLINT, SMALLINT) -> SMALLINT
	*(INTEGER, INTEGER) -> INTEGER
	*(BIGINT, BIGINT) -> BIGINT
	*(HUGEINT, HUGEINT) -> HUGEINT
	*(FLOAT, FLOAT) -> FLOAT
	*(DOUBLE, DOUBLE) -> DOUBLE
	*(DECIMAL, DECIMAL) -> DECIMAL
	*(UTINYINT, UTINYINT) -> UTINYINT
	*(USMALLINT, USMALLINT) -> USMALLINT
	*(UINTEGER, UINTEGER) -> UINTEGER
	*(UBIGINT, UBIGINT) -> UBIGINT
	*(UHUGEINT, UHUGEINT) -> UHUGEINT
	*(INTERVAL, BIGINT) -> INTERVAL
	*(BIGINT, INTERVAL) -> INTERVAL

LINE 2: INSERT INTO ex_msource SELECT i, i*10 FROM generate_series(1,100,1) i
                                          ^


CREATE FUNCTION explain_merge(query text) RETURNS SETOF text
LANGUAGE plpgsql AS
$$
DECLARE ln text;
BEGIN
    FOR ln IN
        EXECUTE 'explain (analyze, timing off, summary off, costs off) ' ||
		  query
    LOOP
        ln := regexp_replace(ln, '(Memory( Usage)?|Buckets|Batches): \S*',  '\1: xxx', 'g');
        RETURN NEXT ln;
    END LOOP;
END;
$$
ERROR: 

CREATE FUNCTION explain_merge(query text) RETURNS SETOF text
LANGUAGE plpgsql AS
$$
DECLARE ln text;
BEGIN
    FOR ln IN
        EXECUTE 'explain (analyze, timing off, summary off, costs off) ' ||
		  query
    LOOP
        ln := regexp_replace(ln, '(Memory( Usage)?|Buckets|Batches): \S*',  '\1: xxx', 'g');
        RETURN NEXT ln;
    END LOOP;
END;
$$

Parser Error: syntax error at or near "text"


-- only updates
SELECT explain_merge('
MERGE INTO ex_mtarget t USING ex_msource s ON t.a = s.a
WHEN MATCHED THEN
	UPDATE SET b = t.b + 1')
ERROR: 

-- only updates
SELECT explain_merge('
MERGE INTO ex_mtarget t USING ex_msource s ON t.a = s.a
WHEN MATCHED THEN
	UPDATE SET b = t.b + 1')

Catalog Error: Scalar Function with name explain_merge does not exist!
Did you mean "age"?


-- only updates to selected tuples
SELECT explain_merge('
MERGE INTO ex_mtarget t USING ex_msource s ON t.a = s.a
WHEN MATCHED AND t.a < 10 THEN
	UPDATE SET b = t.b + 1')
ERROR: 

-- only updates to selected tuples
SELECT explain_merge('
MERGE INTO ex_mtarget t USING ex_msource s ON t.a = s.a
WHEN MATCHED AND t.a < 10 THEN
	UPDATE SET b = t.b + 1')

Catalog Error: Scalar Function with name explain_merge does not exist!
Did you mean "age"?


-- updates + deletes
SELECT explain_merge('
MERGE INTO ex_mtarget t USING ex_msource s ON t.a = s.a
WHEN MATCHED AND t.a < 10 THEN
	UPDATE SET b = t.b + 1
WHEN MATCHED AND t.a >= 10 AND t.a <= 20 THEN
	DELETE')
ERROR: 

-- updates + deletes
SELECT explain_merge('
MERGE INTO ex_mtarget t USING ex_msource s ON t.a = s.a
WHEN MATCHED AND t.a < 10 THEN
	UPDATE SET b = t.b + 1
WHEN MATCHED AND t.a >= 10 AND t.a <= 20 THEN
	DELETE')

Catalog Error: Scalar Function with name explain_merge does not exist!
Did you mean "age"?


-- only inserts
SELECT explain_merge('
MERGE INTO ex_mtarget t USING ex_msource s ON t.a = s.a
WHEN NOT MATCHED AND s.a < 10 THEN
	INSERT VALUES (a, b)')
ERROR: 

-- only inserts
SELECT explain_merge('
MERGE INTO ex_mtarget t USING ex_msource s ON t.a = s.a
WHEN NOT MATCHED AND s.a < 10 THEN
	INSERT VALUES (a, b)')

Catalog Error: Scalar Function with name explain_merge does not exist!
Did you mean "age"?


-- all three
SELECT explain_merge('
MERGE INTO ex_mtarget t USING ex_msource s ON t.a = s.a
WHEN MATCHED AND t.a < 10 THEN
	UPDATE SET b = t.b + 1
WHEN MATCHED AND t.a >= 30 AND t.a <= 40 THEN
	DELETE
WHEN NOT MATCHED AND s.a < 20 THEN
	INSERT VALUES (a, b)')
ERROR: 

-- all three
SELECT explain_merge('
MERGE INTO ex_mtarget t USING ex_msource s ON t.a = s.a
WHEN MATCHED AND t.a < 10 THEN
	UPDATE SET b = t.b + 1
WHEN MATCHED AND t.a >= 30 AND t.a <= 40 THEN
	DELETE
WHEN NOT MATCHED AND s.a < 20 THEN
	INSERT VALUES (a, b)')

Catalog Error: Scalar Function with name explain_merge does not exist!
Did you mean "age"?


-- nothing
SELECT explain_merge('
MERGE INTO ex_mtarget t USING ex_msource s ON t.a = s.a AND t.a < -1000
WHEN MATCHED AND t.a < 10 THEN
	DO NOTHING')
ERROR: 

-- nothing
SELECT explain_merge('
MERGE INTO ex_mtarget t USING ex_msource s ON t.a = s.a AND t.a < -1000
WHEN MATCHED AND t.a < 10 THEN
	DO NOTHING')

Catalog Error: Scalar Function with name explain_merge does not exist!
Did you mean "age"?


DROP TABLE ex_msource, ex_mtarget
ERROR: 

DROP TABLE ex_msource, ex_mtarget

Not implemented Error: Can only drop one object at a time

DROP FUNCTION explain_merge(text)
ERROR: 
DROP FUNCTION explain_merge(text)

Parser Error: syntax error at or near "("


-- EXPLAIN SubPlans and InitPlans
CREATE TABLE src (a int, b int, c int, d int)

CREATE TABLE tgt (a int, b int, c int, d int)

CREATE TABLE ref (ab int, cd int)


EXPLAIN (verbose, costs off)
MERGE INTO tgt t
USING (SELECT *, (SELECT count(*) FROM ref r
                   WHERE r.ab = s.a + s.b
                     AND r.cd = s.c - s.d) cnt
         FROM src s) s
ON t.a = s.a AND t.b < s.cnt
WHEN MATCHED AND t.c > s.cnt THEN
  UPDATE SET (b, c) = (SELECT s.b, s.cnt)
ERROR: 

EXPLAIN (verbose, costs off)
MERGE INTO tgt t
USING (SELECT *, (SELECT count(*) FROM ref r
                   WHERE r.ab = s.a + s.b
                     AND r.cd = s.c - s.d) cnt
         FROM src s) s
ON t.a = s.a AND t.b < s.cnt
WHEN MATCHED AND t.c > s.cnt THEN
  UPDATE SET (b, c) = (SELECT s.b, s.cnt)

Parser Error: syntax error at or near "MERGE"


DROP TABLE src, tgt, ref
ERROR: 

DROP TABLE src, tgt, ref

Not implemented Error: Can only drop one object at a time


-- Subqueries
BEGIN

MERGE INTO sq_target t
USING v
ON tid = sid
WHEN MATCHED THEN
    UPDATE SET balance = (SELECT count(*) FROM sq_target)
ERROR: 
MERGE INTO sq_target t
USING v
ON tid = sid
WHEN MATCHED THEN
    UPDATE SET balance = (SELECT count(*) FROM sq_target)

Parser Error: syntax error at or near "MERGE"

SELECT * FROM sq_target WHERE tid = 1
RESULT: 
	[(1, 100)]

ROLLBACK


BEGIN

MERGE INTO sq_target t
USING v
ON tid = sid
WHEN MATCHED AND (SELECT count(*) > 0 FROM sq_target) THEN
    UPDATE SET balance = 42
ERROR: 
MERGE INTO sq_target t
USING v
ON tid = sid
WHEN MATCHED AND (SELECT count(*) > 0 FROM sq_target) THEN
    UPDATE SET balance = 42

Parser Error: syntax error at or near "MERGE"

SELECT * FROM sq_target WHERE tid = 1
RESULT: 
	[(1, 100)]

ROLLBACK


BEGIN

MERGE INTO sq_target t
USING v
ON tid = sid AND (SELECT count(*) > 0 FROM sq_target)
WHEN MATCHED THEN
    UPDATE SET balance = 42
ERROR: 
MERGE INTO sq_target t
USING v
ON tid = sid AND (SELECT count(*) > 0 FROM sq_target)
WHEN MATCHED THEN
    UPDATE SET balance = 42

Parser Error: syntax error at or near "MERGE"

SELECT * FROM sq_target WHERE tid = 1
RESULT: 
	[(1, 100)]

ROLLBACK


DROP TABLE sq_target, sq_target_merge_log, sq_source CASCADE
ERROR: 

DROP TABLE sq_target, sq_target_merge_log, sq_source CASCADE

Not implemented Error: Can only drop one object at a time


CREATE TABLE pa_target (tid integer, balance float, val text)
	PARTITION BY LIST (tid)
ERROR: 

CREATE TABLE pa_target (tid integer, balance float, val text)
	PARTITION BY LIST (tid)

Parser Error: syntax error at or near "PARTITION"


CREATE TABLE part1 PARTITION OF pa_target FOR VALUES IN (1,4)
  WITH (autovacuum_enabled=off)
ERROR: 

CREATE TABLE part1 PARTITION OF pa_target FOR VALUES IN (1,4)
  WITH (autovacuum_enabled=off)

Parser Error: syntax error at or near "PARTITION"

CREATE TABLE part2 PARTITION OF pa_target FOR VALUES IN (2,5,6)
  WITH (autovacuum_enabled=off)
ERROR: 
CREATE TABLE part2 PARTITION OF pa_target FOR VALUES IN (2,5,6)
  WITH (autovacuum_enabled=off)

Parser Error: syntax error at or near "PARTITION"

CREATE TABLE part3 PARTITION OF pa_target FOR VALUES IN (3,8,9)
  WITH (autovacuum_enabled=off)
ERROR: 
CREATE TABLE part3 PARTITION OF pa_target FOR VALUES IN (3,8,9)
  WITH (autovacuum_enabled=off)

Parser Error: syntax error at or near "PARTITION"

CREATE TABLE part4 PARTITION OF pa_target DEFAULT
  WITH (autovacuum_enabled=off)
ERROR: 
CREATE TABLE part4 PARTITION OF pa_target DEFAULT
  WITH (autovacuum_enabled=off)

Parser Error: syntax error at or near "PARTITION"


CREATE TABLE pa_source (sid integer, delta float)

-- insert many rows to the source table
INSERT INTO pa_source SELECT id, id * 10  FROM generate_series(1,14) AS id
ERROR: 
-- insert many rows to the source table
INSERT INTO pa_source SELECT id, id * 10  FROM generate_series(1,14) AS id

Binder Error: No function matches the given name and argument types '*(STRUCT(generate_series BIGINT), INTEGER_LITERAL)'. You might need to add explicit type casts.
	Candidate functions:
	*(TINYINT, TINYINT) -> TINYINT
	*(SMALLINT, SMALLINT) -> SMALLINT
	*(INTEGER, INTEGER) -> INTEGER
	*(BIGINT, BIGINT) -> BIGINT
	*(HUGEINT, HUGEINT) -> HUGEINT
	*(FLOAT, FLOAT) -> FLOAT
	*(DOUBLE, DOUBLE) -> DOUBLE
	*(DECIMAL, DECIMAL) -> DECIMAL
	*(UTINYINT, UTINYINT) -> UTINYINT
	*(USMALLINT, USMALLINT) -> USMALLINT
	*(UINTEGER, UINTEGER) -> UINTEGER
	*(UBIGINT, UBIGINT) -> UBIGINT
	*(UHUGEINT, UHUGEINT) -> UHUGEINT
	*(INTERVAL, BIGINT) -> INTERVAL
	*(BIGINT, INTERVAL) -> INTERVAL

LINE 3: INSERT INTO pa_source SELECT id, id * 10  FROM generate_series(1,14) AS id
                                            ^

-- insert a few rows in the target table (odd numbered tid)
INSERT INTO pa_target SELECT id, id * 100, 'initial' FROM generate_series(1,14,2) AS id
ERROR: 
-- insert a few rows in the target table (odd numbered tid)
INSERT INTO pa_target SELECT id, id * 100, 'initial' FROM generate_series(1,14,2) AS id

Catalog Error: Table with name pa_target does not exist!
Did you mean "target"?


-- try simple MERGE
BEGIN

MERGE INTO pa_target t
  USING pa_source s
  ON t.tid = s.sid
  WHEN MATCHED THEN
    UPDATE SET balance = balance + delta, val = val || ' updated by merge'
  WHEN NOT MATCHED THEN
    INSERT VALUES (sid, delta, 'inserted by merge')
ERROR: 
MERGE INTO pa_target t
  USING pa_source s
  ON t.tid = s.sid
  WHEN MATCHED THEN
    UPDATE SET balance = balance + delta, val = val || ' updated by merge'
  WHEN NOT MATCHED THEN
    INSERT VALUES (sid, delta, 'inserted by merge')

Parser Error: syntax error at or near "MERGE"

SELECT * FROM pa_target ORDER BY tid
ERROR: 
SELECT * FROM pa_target ORDER BY tid

Catalog Error: Table with name pa_target does not exist!
Did you mean "target"?

ROLLBACK


-- same with a constant qual
BEGIN

MERGE INTO pa_target t
  USING pa_source s
  ON t.tid = s.sid AND tid = 1
  WHEN MATCHED THEN
    UPDATE SET balance = balance + delta, val = val || ' updated by merge'
  WHEN NOT MATCHED THEN
    INSERT VALUES (sid, delta, 'inserted by merge')
ERROR: 
MERGE INTO pa_target t
  USING pa_source s
  ON t.tid = s.sid AND tid = 1
  WHEN MATCHED THEN
    UPDATE SET balance = balance + delta, val = val || ' updated by merge'
  WHEN NOT MATCHED THEN
    INSERT VALUES (sid, delta, 'inserted by merge')

Parser Error: syntax error at or near "MERGE"

SELECT * FROM pa_target ORDER BY tid
ERROR: 
SELECT * FROM pa_target ORDER BY tid

Catalog Error: Table with name pa_target does not exist!
Did you mean "target"?

ROLLBACK


-- try updating the partition key column
BEGIN

CREATE FUNCTION merge_func() RETURNS integer LANGUAGE plpgsql AS $$
DECLARE
  result integer;
BEGIN
MERGE INTO pa_target t
  USING pa_source s
  ON t.tid = s.sid
  WHEN MATCHED THEN
    UPDATE SET tid = tid + 1, balance = balance + delta, val = val || ' updated by merge'
  WHEN NOT MATCHED THEN
    INSERT VALUES (sid, delta, 'inserted by merge');
IF FOUND THEN
  GET DIAGNOSTICS result := ROW_COUNT;
END IF;
RETURN result;
END;
$$
ERROR: 
CREATE FUNCTION merge_func() RETURNS integer LANGUAGE plpgsql AS $$
DECLARE
  result integer;
BEGIN
MERGE INTO pa_target t
  USING pa_source s
  ON t.tid = s.sid
  WHEN MATCHED THEN
    UPDATE SET tid = tid + 1, balance = balance + delta, val = val || ' updated by merge'
  WHEN NOT MATCHED THEN
    INSERT VALUES (sid, delta, 'inserted by merge');
IF FOUND THEN
  GET DIAGNOSTICS result := ROW_COUNT;
END IF;
RETURN result;
END;
$$

Parser Error: syntax error at or near "RETURNS"

SELECT merge_func()
ERROR: 
SELECT merge_func()

Catalog Error: Scalar Function with name merge_func does not exist!
Did you mean "trunc"?

SELECT * FROM pa_target ORDER BY tid
ERROR: 
SELECT * FROM pa_target ORDER BY tid

Catalog Error: Table with name pa_target does not exist!
Did you mean "target"?

ROLLBACK


-- update partition key to partition not initially scanned
BEGIN

MERGE INTO pa_target t
  USING pa_source s
  ON t.tid = s.sid AND t.tid = 1
  WHEN MATCHED THEN
    UPDATE SET tid = tid + 1, balance = balance + delta, val = val || ' updated by merge'
  RETURNING merge_action(), t.*
ERROR: 
MERGE INTO pa_target t
  USING pa_source s
  ON t.tid = s.sid AND t.tid = 1
  WHEN MATCHED THEN
    UPDATE SET tid = tid + 1, balance = balance + delta, val = val || ' updated by merge'
  RETURNING merge_action(), t.*

Parser Error: syntax error at or near "MERGE"

SELECT * FROM pa_target ORDER BY tid
ERROR: 
SELECT * FROM pa_target ORDER BY tid

Catalog Error: Table with name pa_target does not exist!
Did you mean "target"?

ROLLBACK


DROP TABLE pa_target CASCADE
ERROR: 

DROP TABLE pa_target CASCADE

Catalog Error: Table with name pa_target does not exist!
Did you mean "target"?


-- The target table is partitioned in the same way, but this time by attaching
-- partitions which have columns in different order, dropped columns etc.
CREATE TABLE pa_target (tid integer, balance float, val text)
	PARTITION BY LIST (tid)
ERROR: 

-- The target table is partitioned in the same way, but this time by attaching
-- partitions which have columns in different order, dropped columns etc.
CREATE TABLE pa_target (tid integer, balance float, val text)
	PARTITION BY LIST (tid)

Parser Error: syntax error at or near "PARTITION"


CREATE TABLE part1 (tid integer, balance float, val text)
  WITH (autovacuum_enabled=off)

CREATE TABLE part2 (balance float, tid integer, val text)
  WITH (autovacuum_enabled=off)

CREATE TABLE part3 (tid integer, balance float, val text)
  WITH (autovacuum_enabled=off)

CREATE TABLE part4 (extraid text, tid integer, balance float, val text)
  WITH (autovacuum_enabled=off)

ALTER TABLE part4 DROP COLUMN extraid


ALTER TABLE pa_target ATTACH PARTITION part1 FOR VALUES IN (1,4)
ERROR: 

ALTER TABLE pa_target ATTACH PARTITION part1 FOR VALUES IN (1,4)

Parser Error: syntax error at or near "ATTACH"

ALTER TABLE pa_target ATTACH PARTITION part2 FOR VALUES IN (2,5,6)
ERROR: 
ALTER TABLE pa_target ATTACH PARTITION part2 FOR VALUES IN (2,5,6)

Parser Error: syntax error at or near "ATTACH"

ALTER TABLE pa_target ATTACH PARTITION part3 FOR VALUES IN (3,8,9)
ERROR: 
ALTER TABLE pa_target ATTACH PARTITION part3 FOR VALUES IN (3,8,9)

Parser Error: syntax error at or near "ATTACH"

ALTER TABLE pa_target ATTACH PARTITION part4 DEFAULT
ERROR: 
ALTER TABLE pa_target ATTACH PARTITION part4 DEFAULT

Parser Error: syntax error at or near "ATTACH"


-- insert a few rows in the target table (odd numbered tid)
INSERT INTO pa_target SELECT id, id * 100, 'initial' FROM generate_series(1,14,2) AS id
ERROR: 

-- insert a few rows in the target table (odd numbered tid)
INSERT INTO pa_target SELECT id, id * 100, 'initial' FROM generate_series(1,14,2) AS id

Catalog Error: Table with name pa_target does not exist!
Did you mean "target"?


-- try simple MERGE
BEGIN

DO $$
DECLARE
  result integer;
BEGIN
MERGE INTO pa_target t
  USING pa_source s
  ON t.tid = s.sid
  WHEN MATCHED THEN
    UPDATE SET balance = balance + delta, val = val || ' updated by merge'
  WHEN NOT MATCHED THEN
    INSERT VALUES (sid, delta, 'inserted by merge');
GET DIAGNOSTICS result := ROW_COUNT;
RAISE NOTICE 'ROW_COUNT = %', result;
END;
$$
ERROR: 
DO $$
DECLARE
  result integer;
BEGIN
MERGE INTO pa_target t
  USING pa_source s
  ON t.tid = s.sid
  WHEN MATCHED THEN
    UPDATE SET balance = balance + delta, val = val || ' updated by merge'
  WHEN NOT MATCHED THEN
    INSERT VALUES (sid, delta, 'inserted by merge');
GET DIAGNOSTICS result := ROW_COUNT;
RAISE NOTICE 'ROW_COUNT = %', result;
END;
$$

Parser Error: syntax error at or near "DO"

SELECT * FROM pa_target ORDER BY tid
ERROR: 
SELECT * FROM pa_target ORDER BY tid

Catalog Error: Table with name pa_target does not exist!
Did you mean "target"?

ROLLBACK


-- same with a constant qual
BEGIN

MERGE INTO pa_target t
  USING pa_source s
  ON t.tid = s.sid AND tid IN (1, 5)
  WHEN MATCHED AND tid % 5 = 0 THEN DELETE
  WHEN MATCHED THEN
    UPDATE SET balance = balance + delta, val = val || ' updated by merge'
  WHEN NOT MATCHED THEN
    INSERT VALUES (sid, delta, 'inserted by merge')
ERROR: 
MERGE INTO pa_target t
  USING pa_source s
  ON t.tid = s.sid AND tid IN (1, 5)
  WHEN MATCHED AND tid % 5 = 0 THEN DELETE
  WHEN MATCHED THEN
    UPDATE SET balance = balance + delta, val = val || ' updated by merge'
  WHEN NOT MATCHED THEN
    INSERT VALUES (sid, delta, 'inserted by merge')

Parser Error: syntax error at or near "MERGE"

SELECT * FROM pa_target ORDER BY tid
ERROR: 
SELECT * FROM pa_target ORDER BY tid

Catalog Error: Table with name pa_target does not exist!
Did you mean "target"?

ROLLBACK


-- try updating the partition key column
BEGIN

DO $$
DECLARE
  result integer;
BEGIN
MERGE INTO pa_target t
  USING pa_source s
  ON t.tid = s.sid
  WHEN MATCHED THEN
    UPDATE SET tid = tid + 1, balance = balance + delta, val = val || ' updated by merge'
  WHEN NOT MATCHED THEN
    INSERT VALUES (sid, delta, 'inserted by merge');
GET DIAGNOSTICS result := ROW_COUNT;
RAISE NOTICE 'ROW_COUNT = %', result;
END;
$$
ERROR: 
DO $$
DECLARE
  result integer;
BEGIN
MERGE INTO pa_target t
  USING pa_source s
  ON t.tid = s.sid
  WHEN MATCHED THEN
    UPDATE SET tid = tid + 1, balance = balance + delta, val = val || ' updated by merge'
  WHEN NOT MATCHED THEN
    INSERT VALUES (sid, delta, 'inserted by merge');
GET DIAGNOSTICS result := ROW_COUNT;
RAISE NOTICE 'ROW_COUNT = %', result;
END;
$$

Parser Error: syntax error at or near "DO"

SELECT * FROM pa_target ORDER BY tid
ERROR: 
SELECT * FROM pa_target ORDER BY tid

Catalog Error: Table with name pa_target does not exist!
Did you mean "target"?

ROLLBACK


-- as above, but blocked by BEFORE DELETE ROW trigger
BEGIN

CREATE FUNCTION trig_fn() RETURNS trigger LANGUAGE plpgsql AS
  $$ BEGIN RETURN NULL; END; $$
ERROR: 
CREATE FUNCTION trig_fn() RETURNS trigger LANGUAGE plpgsql AS
  $$ BEGIN RETURN NULL; END; $$

Parser Error: syntax error at or near "RETURNS"

CREATE TRIGGER del_trig BEFORE DELETE ON pa_target
  FOR EACH ROW EXECUTE PROCEDURE trig_fn()
ERROR: 
CREATE TRIGGER del_trig BEFORE DELETE ON pa_target
  FOR EACH ROW EXECUTE PROCEDURE trig_fn()

Parser Error: syntax error at or near "TRIGGER"

DO $$
DECLARE
  result integer;
BEGIN
MERGE INTO pa_target t
  USING pa_source s
  ON t.tid = s.sid
  WHEN MATCHED THEN
    UPDATE SET tid = tid + 1, balance = balance + delta, val = val || ' updated by merge'
  WHEN NOT MATCHED THEN
    INSERT VALUES (sid, delta, 'inserted by merge');
GET DIAGNOSTICS result := ROW_COUNT;
RAISE NOTICE 'ROW_COUNT = %', result;
END;
$$
ERROR: 
DO $$
DECLARE
  result integer;
BEGIN
MERGE INTO pa_target t
  USING pa_source s
  ON t.tid = s.sid
  WHEN MATCHED THEN
    UPDATE SET tid = tid + 1, balance = balance + delta, val = val || ' updated by merge'
  WHEN NOT MATCHED THEN
    INSERT VALUES (sid, delta, 'inserted by merge');
GET DIAGNOSTICS result := ROW_COUNT;
RAISE NOTICE 'ROW_COUNT = %', result;
END;
$$

Parser Error: syntax error at or near "DO"

SELECT * FROM pa_target ORDER BY tid
ERROR: 
SELECT * FROM pa_target ORDER BY tid

Catalog Error: Table with name pa_target does not exist!
Did you mean "target"?

ROLLBACK


-- as above, but blocked by BEFORE INSERT ROW trigger
BEGIN

CREATE FUNCTION trig_fn() RETURNS trigger LANGUAGE plpgsql AS
  $$ BEGIN RETURN NULL; END; $$
ERROR: 
CREATE FUNCTION trig_fn() RETURNS trigger LANGUAGE plpgsql AS
  $$ BEGIN RETURN NULL; END; $$

Parser Error: syntax error at or near "RETURNS"

CREATE TRIGGER ins_trig BEFORE INSERT ON pa_target
  FOR EACH ROW EXECUTE PROCEDURE trig_fn()
ERROR: 
CREATE TRIGGER ins_trig BEFORE INSERT ON pa_target
  FOR EACH ROW EXECUTE PROCEDURE trig_fn()

Parser Error: syntax error at or near "TRIGGER"

DO $$
DECLARE
  result integer;
BEGIN
MERGE INTO pa_target t
  USING pa_source s
  ON t.tid = s.sid
  WHEN MATCHED THEN
    UPDATE SET tid = tid + 1, balance = balance + delta, val = val || ' updated by merge'
  WHEN NOT MATCHED THEN
    INSERT VALUES (sid, delta, 'inserted by merge');
GET DIAGNOSTICS result := ROW_COUNT;
RAISE NOTICE 'ROW_COUNT = %', result;
END;
$$
ERROR: 
DO $$
DECLARE
  result integer;
BEGIN
MERGE INTO pa_target t
  USING pa_source s
  ON t.tid = s.sid
  WHEN MATCHED THEN
    UPDATE SET tid = tid + 1, balance = balance + delta, val = val || ' updated by merge'
  WHEN NOT MATCHED THEN
    INSERT VALUES (sid, delta, 'inserted by merge');
GET DIAGNOSTICS result := ROW_COUNT;
RAISE NOTICE 'ROW_COUNT = %', result;
END;
$$

Parser Error: syntax error at or near "DO"

SELECT * FROM pa_target ORDER BY tid
ERROR: 
SELECT * FROM pa_target ORDER BY tid

Catalog Error: Table with name pa_target does not exist!
Did you mean "target"?

ROLLBACK


-- test RLS enforcement
BEGIN

ALTER TABLE pa_target ENABLE ROW LEVEL SECURITY
ERROR: 
ALTER TABLE pa_target ENABLE ROW LEVEL SECURITY

Parser Error: syntax error at or near "ENABLE"

ALTER TABLE pa_target FORCE ROW LEVEL SECURITY
ERROR: 
ALTER TABLE pa_target FORCE ROW LEVEL SECURITY

Parser Error: syntax error at or near "FORCE"

CREATE POLICY pa_target_pol ON pa_target USING (tid != 0)
ERROR: 
CREATE POLICY pa_target_pol ON pa_target USING (tid != 0)

Parser Error: syntax error at or near "POLICY"

MERGE INTO pa_target t
  USING pa_source s
  ON t.tid = s.sid AND t.tid IN (1,2,3,4)
  WHEN MATCHED THEN
    UPDATE SET tid = tid - 1
ERROR: 
MERGE INTO pa_target t
  USING pa_source s
  ON t.tid = s.sid AND t.tid IN (1,2,3,4)
  WHEN MATCHED THEN
    UPDATE SET tid = tid - 1

Parser Error: syntax error at or near "MERGE"

ROLLBACK


DROP TABLE pa_source

DROP TABLE pa_target CASCADE
ERROR: 
DROP TABLE pa_target CASCADE

Catalog Error: Table with name pa_target does not exist!
Did you mean "target"?


-- Sub-partitioning
CREATE TABLE pa_target (logts timestamp, tid integer, balance float, val text)
	PARTITION BY RANGE (logts)
ERROR: 

-- Sub-partitioning
CREATE TABLE pa_target (logts timestamp, tid integer, balance float, val text)
	PARTITION BY RANGE (logts)

Parser Error: syntax error at or near "PARTITION"


CREATE TABLE part_m01 PARTITION OF pa_target
	FOR VALUES FROM ('2017-01-01') TO ('2017-02-01')
	PARTITION BY LIST (tid)
ERROR: 

CREATE TABLE part_m01 PARTITION OF pa_target
	FOR VALUES FROM ('2017-01-01') TO ('2017-02-01')
	PARTITION BY LIST (tid)

Parser Error: syntax error at or near "PARTITION"

CREATE TABLE part_m01_odd PARTITION OF part_m01
	FOR VALUES IN (1,3,5,7,9) WITH (autovacuum_enabled=off)
ERROR: 
CREATE TABLE part_m01_odd PARTITION OF part_m01
	FOR VALUES IN (1,3,5,7,9) WITH (autovacuum_enabled=off)

Parser Error: syntax error at or near "PARTITION"

CREATE TABLE part_m01_even PARTITION OF part_m01
	FOR VALUES IN (2,4,6,8) WITH (autovacuum_enabled=off)
ERROR: 
CREATE TABLE part_m01_even PARTITION OF part_m01
	FOR VALUES IN (2,4,6,8) WITH (autovacuum_enabled=off)

Parser Error: syntax error at or near "PARTITION"

CREATE TABLE part_m02 PARTITION OF pa_target
	FOR VALUES FROM ('2017-02-01') TO ('2017-03-01')
	PARTITION BY LIST (tid)
ERROR: 
CREATE TABLE part_m02 PARTITION OF pa_target
	FOR VALUES FROM ('2017-02-01') TO ('2017-03-01')
	PARTITION BY LIST (tid)

Parser Error: syntax error at or near "PARTITION"

CREATE TABLE part_m02_odd PARTITION OF part_m02
	FOR VALUES IN (1,3,5,7,9) WITH (autovacuum_enabled=off)
ERROR: 
CREATE TABLE part_m02_odd PARTITION OF part_m02
	FOR VALUES IN (1,3,5,7,9) WITH (autovacuum_enabled=off)

Parser Error: syntax error at or near "PARTITION"

CREATE TABLE part_m02_even PARTITION OF part_m02
	FOR VALUES IN (2,4,6,8) WITH (autovacuum_enabled=off)
ERROR: 
CREATE TABLE part_m02_even PARTITION OF part_m02
	FOR VALUES IN (2,4,6,8) WITH (autovacuum_enabled=off)

Parser Error: syntax error at or near "PARTITION"


CREATE TABLE pa_source (sid integer, delta float)
  WITH (autovacuum_enabled=off)

-- insert many rows to the source table
INSERT INTO pa_source SELECT id, id * 10  FROM generate_series(1,14) AS id
ERROR: 
-- insert many rows to the source table
INSERT INTO pa_source SELECT id, id * 10  FROM generate_series(1,14) AS id

Binder Error: No function matches the given name and argument types '*(STRUCT(generate_series BIGINT), INTEGER_LITERAL)'. You might need to add explicit type casts.
	Candidate functions:
	*(TINYINT, TINYINT) -> TINYINT
	*(SMALLINT, SMALLINT) -> SMALLINT
	*(INTEGER, INTEGER) -> INTEGER
	*(BIGINT, BIGINT) -> BIGINT
	*(HUGEINT, HUGEINT) -> HUGEINT
	*(FLOAT, FLOAT) -> FLOAT
	*(DOUBLE, DOUBLE) -> DOUBLE
	*(DECIMAL, DECIMAL) -> DECIMAL
	*(UTINYINT, UTINYINT) -> UTINYINT
	*(USMALLINT, USMALLINT) -> USMALLINT
	*(UINTEGER, UINTEGER) -> UINTEGER
	*(UBIGINT, UBIGINT) -> UBIGINT
	*(UHUGEINT, UHUGEINT) -> UHUGEINT
	*(INTERVAL, BIGINT) -> INTERVAL
	*(BIGINT, INTERVAL) -> INTERVAL

LINE 3: INSERT INTO pa_source SELECT id, id * 10  FROM generate_series(1,14) AS id
                                            ^

-- insert a few rows in the target table (odd numbered tid)
INSERT INTO pa_target SELECT '2017-01-31', id, id * 100, 'initial' FROM generate_series(1,9,3) AS id
ERROR: 
-- insert a few rows in the target table (odd numbered tid)
INSERT INTO pa_target SELECT '2017-01-31', id, id * 100, 'initial' FROM generate_series(1,9,3) AS id

Catalog Error: Table with name pa_target does not exist!
Did you mean "target"?

INSERT INTO pa_target SELECT '2017-02-28', id, id * 100, 'initial' FROM generate_series(2,9,3) AS id
ERROR: 
INSERT INTO pa_target SELECT '2017-02-28', id, id * 100, 'initial' FROM generate_series(2,9,3) AS id

Catalog Error: Table with name pa_target does not exist!
Did you mean "target"?


-- try simple MERGE
BEGIN

MERGE INTO pa_target t
  USING (SELECT '2017-01-15' AS slogts, * FROM pa_source WHERE sid < 10) s
  ON t.tid = s.sid
  WHEN MATCHED THEN
    UPDATE SET balance = balance + delta, val = val || ' updated by merge'
  WHEN NOT MATCHED THEN
    INSERT VALUES (slogts::timestamp, sid, delta, 'inserted by merge')
  RETURNING merge_action(), t.*
ERROR: 
MERGE INTO pa_target t
  USING (SELECT '2017-01-15' AS slogts, * FROM pa_source WHERE sid < 10) s
  ON t.tid = s.sid
  WHEN MATCHED THEN
    UPDATE SET balance = balance + delta, val = val || ' updated by merge'
  WHEN NOT MATCHED THEN
    INSERT VALUES (slogts::timestamp, sid, delta, 'inserted by merge')
  RETURNING merge_action(), t.*

Parser Error: syntax error at or near "MERGE"

SELECT * FROM pa_target ORDER BY tid
ERROR: 
SELECT * FROM pa_target ORDER BY tid

Catalog Error: Table with name pa_target does not exist!
Did you mean "target"?

ROLLBACK


DROP TABLE pa_source

DROP TABLE pa_target CASCADE
ERROR: 
DROP TABLE pa_target CASCADE

Catalog Error: Table with name pa_target does not exist!
Did you mean "target"?


-- Partitioned table with primary key

CREATE TABLE pa_target (tid integer PRIMARY KEY) PARTITION BY LIST (tid)
ERROR: 

-- Partitioned table with primary key

CREATE TABLE pa_target (tid integer PRIMARY KEY) PARTITION BY LIST (tid)

Parser Error: syntax error at or near "PARTITION"

CREATE TABLE pa_targetp PARTITION OF pa_target DEFAULT
ERROR: 
CREATE TABLE pa_targetp PARTITION OF pa_target DEFAULT

Parser Error: syntax error at or near "PARTITION"

CREATE TABLE pa_source (sid integer)


INSERT INTO pa_source VALUES (1), (2)


EXPLAIN (VERBOSE, COSTS OFF)
MERGE INTO pa_target t USING pa_source s ON t.tid = s.sid
  WHEN NOT MATCHED THEN INSERT VALUES (s.sid)
ERROR: 

EXPLAIN (VERBOSE, COSTS OFF)
MERGE INTO pa_target t USING pa_source s ON t.tid = s.sid
  WHEN NOT MATCHED THEN INSERT VALUES (s.sid)

Parser Error: syntax error at or near "MERGE"


MERGE INTO pa_target t USING pa_source s ON t.tid = s.sid
  WHEN NOT MATCHED THEN INSERT VALUES (s.sid)
ERROR: 

MERGE INTO pa_target t USING pa_source s ON t.tid = s.sid
  WHEN NOT MATCHED THEN INSERT VALUES (s.sid)

Parser Error: syntax error at or near "MERGE"


TABLE pa_target
ERROR: 

TABLE pa_target

Catalog Error: Table with name pa_target does not exist!
Did you mean "target"?


-- Partition-less partitioned table
-- (the bug we are checking for appeared only if table had partitions before)

DROP TABLE pa_targetp
ERROR: 

-- Partition-less partitioned table
-- (the bug we are checking for appeared only if table had partitions before)

DROP TABLE pa_targetp

Catalog Error: Table with name pa_targetp does not exist!
Did you mean "target"?


EXPLAIN (VERBOSE, COSTS OFF)
MERGE INTO pa_target t USING pa_source s ON t.tid = s.sid
  WHEN NOT MATCHED THEN INSERT VALUES (s.sid)
ERROR: 

EXPLAIN (VERBOSE, COSTS OFF)
MERGE INTO pa_target t USING pa_source s ON t.tid = s.sid
  WHEN NOT MATCHED THEN INSERT VALUES (s.sid)

Parser Error: syntax error at or near "MERGE"


MERGE INTO pa_target t USING pa_source s ON t.tid = s.sid
  WHEN NOT MATCHED THEN INSERT VALUES (s.sid)
ERROR: 

MERGE INTO pa_target t USING pa_source s ON t.tid = s.sid
  WHEN NOT MATCHED THEN INSERT VALUES (s.sid)

Parser Error: syntax error at or near "MERGE"


DROP TABLE pa_source

DROP TABLE pa_target CASCADE
ERROR: 
DROP TABLE pa_target CASCADE

Catalog Error: Table with name pa_target does not exist!
Did you mean "target"?


-- some complex joins on the source side

CREATE TABLE cj_target (tid integer, balance float, val text)
  WITH (autovacuum_enabled=off)

CREATE TABLE cj_source1 (sid1 integer, scat integer, delta integer)
  WITH (autovacuum_enabled=off)

CREATE TABLE cj_source2 (sid2 integer, sval text)
  WITH (autovacuum_enabled=off)

INSERT INTO cj_source1 VALUES (1, 10, 100)

INSERT INTO cj_source1 VALUES (1, 20, 200)

INSERT INTO cj_source1 VALUES (2, 20, 300)

INSERT INTO cj_source1 VALUES (3, 10, 400)

INSERT INTO cj_source2 VALUES (1, 'initial source2')

INSERT INTO cj_source2 VALUES (2, 'initial source2')

INSERT INTO cj_source2 VALUES (3, 'initial source2')


-- source relation is an unaliased join
MERGE INTO cj_target t
USING cj_source1 s1
	INNER JOIN cj_source2 s2 ON sid1 = sid2
ON t.tid = sid1
WHEN NOT MATCHED THEN
	INSERT VALUES (sid1, delta, sval)
ERROR: 

-- source relation is an unaliased join
MERGE INTO cj_target t
USING cj_source1 s1
	INNER JOIN cj_source2 s2 ON sid1 = sid2
ON t.tid = sid1
WHEN NOT MATCHED THEN
	INSERT VALUES (sid1, delta, sval)

Parser Error: syntax error at or near "MERGE"


-- try accessing columns from either side of the source join
MERGE INTO cj_target t
USING cj_source2 s2
	INNER JOIN cj_source1 s1 ON sid1 = sid2 AND scat = 20
ON t.tid = sid1
WHEN NOT MATCHED THEN
	INSERT VALUES (sid2, delta, sval)
WHEN MATCHED THEN
	DELETE
ERROR: 

-- try accessing columns from either side of the source join
MERGE INTO cj_target t
USING cj_source2 s2
	INNER JOIN cj_source1 s1 ON sid1 = sid2 AND scat = 20
ON t.tid = sid1
WHEN NOT MATCHED THEN
	INSERT VALUES (sid2, delta, sval)
WHEN MATCHED THEN
	DELETE

Parser Error: syntax error at or near "MERGE"


-- some simple expressions in INSERT targetlist
MERGE INTO cj_target t
USING cj_source2 s2
	INNER JOIN cj_source1 s1 ON sid1 = sid2
ON t.tid = sid1
WHEN NOT MATCHED THEN
	INSERT VALUES (sid2, delta + scat, sval)
WHEN MATCHED THEN
	UPDATE SET val = val || ' updated by merge'
ERROR: 

-- some simple expressions in INSERT targetlist
MERGE INTO cj_target t
USING cj_source2 s2
	INNER JOIN cj_source1 s1 ON sid1 = sid2
ON t.tid = sid1
WHEN NOT MATCHED THEN
	INSERT VALUES (sid2, delta + scat, sval)
WHEN MATCHED THEN
	UPDATE SET val = val || ' updated by merge'

Parser Error: syntax error at or near "MERGE"


MERGE INTO cj_target t
USING cj_source2 s2
	INNER JOIN cj_source1 s1 ON sid1 = sid2 AND scat = 20
ON t.tid = sid1
WHEN MATCHED THEN
	UPDATE SET val = val || ' ' || delta::text
ERROR: 

MERGE INTO cj_target t
USING cj_source2 s2
	INNER JOIN cj_source1 s1 ON sid1 = sid2 AND scat = 20
ON t.tid = sid1
WHEN MATCHED THEN
	UPDATE SET val = val || ' ' || delta::text

Parser Error: syntax error at or near "MERGE"


SELECT * FROM cj_target
RESULT: 
	[]


-- try it with an outer join and PlaceHolderVar
MERGE INTO cj_target t
USING (SELECT *, 'join input'::text AS phv FROM cj_source1) fj
	FULL JOIN cj_source2 fj2 ON fj.scat = fj2.sid2 * 10
ON t.tid = fj.scat
WHEN NOT MATCHED THEN
	INSERT (tid, balance, val) VALUES (fj.scat, fj.delta, fj.phv)
ERROR: 

-- try it with an outer join and PlaceHolderVar
MERGE INTO cj_target t
USING (SELECT *, 'join input'::text AS phv FROM cj_source1) fj
	FULL JOIN cj_source2 fj2 ON fj.scat = fj2.sid2 * 10
ON t.tid = fj.scat
WHEN NOT MATCHED THEN
	INSERT (tid, balance, val) VALUES (fj.scat, fj.delta, fj.phv)

Parser Error: syntax error at or near "MERGE"


SELECT * FROM cj_target
RESULT: 
	[]


ALTER TABLE cj_source1 RENAME COLUMN sid1 TO sid

ALTER TABLE cj_source2 RENAME COLUMN sid2 TO sid


TRUNCATE cj_target


MERGE INTO cj_target t
USING cj_source1 s1
	INNER JOIN cj_source2 s2 ON s1.sid = s2.sid
ON t.tid = s1.sid
WHEN NOT MATCHED THEN
	INSERT VALUES (s2.sid, delta, sval)
ERROR: 

MERGE INTO cj_target t
USING cj_source1 s1
	INNER JOIN cj_source2 s2 ON s1.sid = s2.sid
ON t.tid = s1.sid
WHEN NOT MATCHED THEN
	INSERT VALUES (s2.sid, delta, sval)

Parser Error: syntax error at or near "MERGE"


DROP TABLE cj_source2, cj_source1, cj_target
ERROR: 

DROP TABLE cj_source2, cj_source1, cj_target

Not implemented Error: Can only drop one object at a time


-- Function scans
CREATE TABLE fs_target (a int, b int, c text)
  WITH (autovacuum_enabled=off)

MERGE INTO fs_target t
USING generate_series(1,100,1) AS id
ON t.a = id
WHEN MATCHED THEN
	UPDATE SET b = b + id
WHEN NOT MATCHED THEN
	INSERT VALUES (id, -1)
ERROR: 
MERGE INTO fs_target t
USING generate_series(1,100,1) AS id
ON t.a = id
WHEN MATCHED THEN
	UPDATE SET b = b + id
WHEN NOT MATCHED THEN
	INSERT VALUES (id, -1)

Parser Error: syntax error at or near "MERGE"


MERGE INTO fs_target t
USING generate_series(1,100,2) AS id
ON t.a = id
WHEN MATCHED THEN
	UPDATE SET b = b + id, c = 'updated '|| id.*::text
WHEN NOT MATCHED THEN
	INSERT VALUES (id, -1, 'inserted ' || id.*::text)
ERROR: 

MERGE INTO fs_target t
USING generate_series(1,100,2) AS id
ON t.a = id
WHEN MATCHED THEN
	UPDATE SET b = b + id, c = 'updated '|| id.*::text
WHEN NOT MATCHED THEN
	INSERT VALUES (id, -1, 'inserted ' || id.*::text)

Parser Error: syntax error at or near "MERGE"


SELECT count(*) FROM fs_target
RESULT: 
	[(0,)]

DROP TABLE fs_target


-- SERIALIZABLE test
-- handled in isolation tests

-- Inheritance-based partitioning
CREATE TABLE measurement (
    city_id         int not null,
    logdate         date not null,
    peaktemp        int,
    unitsales       int
) WITH (autovacuum_enabled=off)

CREATE TABLE measurement_y2006m02 (
    CHECK ( logdate >= DATE '2006-02-01' AND logdate < DATE '2006-03-01' )
) INHERITS (measurement) WITH (autovacuum_enabled=off)
ERROR: 
CREATE TABLE measurement_y2006m02 (
    CHECK ( logdate >= DATE '2006-02-01' AND logdate < DATE '2006-03-01' )
) INHERITS (measurement) WITH (autovacuum_enabled=off)

Parser Error: syntax error at or near "INHERITS"

CREATE TABLE measurement_y2006m03 (
    CHECK ( logdate >= DATE '2006-03-01' AND logdate < DATE '2006-04-01' )
) INHERITS (measurement) WITH (autovacuum_enabled=off)
ERROR: 
CREATE TABLE measurement_y2006m03 (
    CHECK ( logdate >= DATE '2006-03-01' AND logdate < DATE '2006-04-01' )
) INHERITS (measurement) WITH (autovacuum_enabled=off)

Parser Error: syntax error at or near "INHERITS"

CREATE TABLE measurement_y2007m01 (
    filler          text,
    peaktemp        int,
    logdate         date not null,
    city_id         int not null,
    unitsales       int
    CHECK ( logdate >= DATE '2007-01-01' AND logdate < DATE '2007-02-01')
) WITH (autovacuum_enabled=off)

ALTER TABLE measurement_y2007m01 DROP COLUMN filler

ALTER TABLE measurement_y2007m01 INHERIT measurement
ERROR: 
ALTER TABLE measurement_y2007m01 INHERIT measurement

Parser Error: syntax error at or near "INHERIT"

INSERT INTO measurement VALUES (0, '2005-07-21', 5, 15)


CREATE OR REPLACE FUNCTION measurement_insert_trigger()
RETURNS TRIGGER AS $$
BEGIN
    IF ( NEW.logdate >= DATE '2006-02-01' AND
         NEW.logdate < DATE '2006-03-01' ) THEN
        INSERT INTO measurement_y2006m02 VALUES (NEW.*);
    ELSIF ( NEW.logdate >= DATE '2006-03-01' AND
            NEW.logdate < DATE '2006-04-01' ) THEN
        INSERT INTO measurement_y2006m03 VALUES (NEW.*);
    ELSIF ( NEW.logdate >= DATE '2007-01-01' AND
            NEW.logdate < DATE '2007-02-01' ) THEN
        INSERT INTO measurement_y2007m01 (city_id, logdate, peaktemp, unitsales)
            VALUES (NEW.*);
    ELSE
        RAISE EXCEPTION 'Date out of range.  Fix the measurement_insert_trigger() function!';
    END IF;
    RETURN NULL;
END;
$$ LANGUAGE plpgsql 
ERROR: 

CREATE OR REPLACE FUNCTION measurement_insert_trigger()
RETURNS TRIGGER AS $$
BEGIN
    IF ( NEW.logdate >= DATE '2006-02-01' AND
         NEW.logdate < DATE '2006-03-01' ) THEN
        INSERT INTO measurement_y2006m02 VALUES (NEW.*);
    ELSIF ( NEW.logdate >= DATE '2006-03-01' AND
            NEW.logdate < DATE '2006-04-01' ) THEN
        INSERT INTO measurement_y2006m03 VALUES (NEW.*);
    ELSIF ( NEW.logdate >= DATE '2007-01-01' AND
            NEW.logdate < DATE '2007-02-01' ) THEN
        INSERT INTO measurement_y2007m01 (city_id, logdate, peaktemp, unitsales)
            VALUES (NEW.*);
    ELSE
        RAISE EXCEPTION 'Date out of range.  Fix the measurement_insert_trigger() function!';
    END IF;
    RETURN NULL;
END;
$$ LANGUAGE plpgsql 

Parser Error: syntax error at or near "RETURNS"

CREATE TRIGGER insert_measurement_trigger
    BEFORE INSERT ON measurement
    FOR EACH ROW EXECUTE PROCEDURE measurement_insert_trigger()
ERROR: 
CREATE TRIGGER insert_measurement_trigger
    BEFORE INSERT ON measurement
    FOR EACH ROW EXECUTE PROCEDURE measurement_insert_trigger()

Parser Error: syntax error at or near "TRIGGER"

INSERT INTO measurement VALUES (1, '2006-02-10', 35, 10)

INSERT INTO measurement VALUES (1, '2006-02-16', 45, 20)

INSERT INTO measurement VALUES (1, '2006-03-17', 25, 10)

INSERT INTO measurement VALUES (1, '2006-03-27', 15, 40)

INSERT INTO measurement VALUES (1, '2007-01-15', 10, 10)

INSERT INTO measurement VALUES (1, '2007-01-17', 10, 10)


SELECT tableoid::regclass, * FROM measurement ORDER BY city_id, logdate
ERROR: 

SELECT tableoid::regclass, * FROM measurement ORDER BY city_id, logdate

Binder Error: Referenced column "tableoid" not found in FROM clause!
Candidate bindings: "measurement.city_id"


CREATE TABLE new_measurement (LIKE measurement) WITH (autovacuum_enabled=off)
ERROR: 

CREATE TABLE new_measurement (LIKE measurement) WITH (autovacuum_enabled=off)

Not implemented Error: ColumnDef type not handled yet

INSERT INTO new_measurement VALUES (0, '2005-07-21', 25, 20)
ERROR: 
INSERT INTO new_measurement VALUES (0, '2005-07-21', 25, 20)

Catalog Error: Table with name new_measurement does not exist!
Did you mean "measurement"?

INSERT INTO new_measurement VALUES (1, '2006-03-01', 20, 10)
ERROR: 
INSERT INTO new_measurement VALUES (1, '2006-03-01', 20, 10)

Catalog Error: Table with name new_measurement does not exist!
Did you mean "measurement"?

INSERT INTO new_measurement VALUES (1, '2006-02-16', 50, 10)
ERROR: 
INSERT INTO new_measurement VALUES (1, '2006-02-16', 50, 10)

Catalog Error: Table with name new_measurement does not exist!
Did you mean "measurement"?

INSERT INTO new_measurement VALUES (2, '2006-02-10', 20, 20)
ERROR: 
INSERT INTO new_measurement VALUES (2, '2006-02-10', 20, 20)

Catalog Error: Table with name new_measurement does not exist!
Did you mean "measurement"?

INSERT INTO new_measurement VALUES (1, '2006-03-27', NULL, NULL)
ERROR: 
INSERT INTO new_measurement VALUES (1, '2006-03-27', NULL, NULL)

Catalog Error: Table with name new_measurement does not exist!
Did you mean "measurement"?

INSERT INTO new_measurement VALUES (1, '2007-01-17', NULL, NULL)
ERROR: 
INSERT INTO new_measurement VALUES (1, '2007-01-17', NULL, NULL)

Catalog Error: Table with name new_measurement does not exist!
Did you mean "measurement"?

INSERT INTO new_measurement VALUES (1, '2007-01-15', 5, NULL)
ERROR: 
INSERT INTO new_measurement VALUES (1, '2007-01-15', 5, NULL)

Catalog Error: Table with name new_measurement does not exist!
Did you mean "measurement"?

INSERT INTO new_measurement VALUES (1, '2007-01-16', 10, 10)
ERROR: 
INSERT INTO new_measurement VALUES (1, '2007-01-16', 10, 10)

Catalog Error: Table with name new_measurement does not exist!
Did you mean "measurement"?


BEGIN

MERGE INTO ONLY measurement m
 USING new_measurement nm ON
      (m.city_id = nm.city_id and m.logdate=nm.logdate)
WHEN MATCHED AND nm.peaktemp IS NULL THEN DELETE
WHEN MATCHED THEN UPDATE
     SET peaktemp = greatest(m.peaktemp, nm.peaktemp),
        unitsales = m.unitsales + coalesce(nm.unitsales, 0)
WHEN NOT MATCHED THEN INSERT
     (city_id, logdate, peaktemp, unitsales)
   VALUES (city_id, logdate, peaktemp, unitsales)
ERROR: 
MERGE INTO ONLY measurement m
 USING new_measurement nm ON
      (m.city_id = nm.city_id and m.logdate=nm.logdate)
WHEN MATCHED AND nm.peaktemp IS NULL THEN DELETE
WHEN MATCHED THEN UPDATE
     SET peaktemp = greatest(m.peaktemp, nm.peaktemp),
        unitsales = m.unitsales + coalesce(nm.unitsales, 0)
WHEN NOT MATCHED THEN INSERT
     (city_id, logdate, peaktemp, unitsales)
   VALUES (city_id, logdate, peaktemp, unitsales)

Parser Error: syntax error at or near "MERGE"


SELECT tableoid::regclass, * FROM measurement ORDER BY city_id, logdate, peaktemp
ERROR: 

SELECT tableoid::regclass, * FROM measurement ORDER BY city_id, logdate, peaktemp

Binder Error: Referenced column "tableoid" not found in FROM clause!
Candidate bindings: "measurement.city_id"

ROLLBACK


MERGE into measurement m
 USING new_measurement nm ON
      (m.city_id = nm.city_id and m.logdate=nm.logdate)
WHEN MATCHED AND nm.peaktemp IS NULL THEN DELETE
WHEN MATCHED THEN UPDATE
     SET peaktemp = greatest(m.peaktemp, nm.peaktemp),
        unitsales = m.unitsales + coalesce(nm.unitsales, 0)
WHEN NOT MATCHED THEN INSERT
     (city_id, logdate, peaktemp, unitsales)
   VALUES (city_id, logdate, peaktemp, unitsales)
ERROR: 

MERGE into measurement m
 USING new_measurement nm ON
      (m.city_id = nm.city_id and m.logdate=nm.logdate)
WHEN MATCHED AND nm.peaktemp IS NULL THEN DELETE
WHEN MATCHED THEN UPDATE
     SET peaktemp = greatest(m.peaktemp, nm.peaktemp),
        unitsales = m.unitsales + coalesce(nm.unitsales, 0)
WHEN NOT MATCHED THEN INSERT
     (city_id, logdate, peaktemp, unitsales)
   VALUES (city_id, logdate, peaktemp, unitsales)

Parser Error: syntax error at or near "MERGE"


SELECT tableoid::regclass, * FROM measurement ORDER BY city_id, logdate
ERROR: 

SELECT tableoid::regclass, * FROM measurement ORDER BY city_id, logdate

Binder Error: Referenced column "tableoid" not found in FROM clause!
Candidate bindings: "measurement.city_id"


BEGIN

MERGE INTO new_measurement nm
 USING ONLY measurement m ON
      (nm.city_id = m.city_id and nm.logdate=m.logdate)
WHEN MATCHED THEN DELETE
ERROR: 
MERGE INTO new_measurement nm
 USING ONLY measurement m ON
      (nm.city_id = m.city_id and nm.logdate=m.logdate)
WHEN MATCHED THEN DELETE

Parser Error: syntax error at or near "MERGE"


SELECT * FROM new_measurement ORDER BY city_id, logdate
ERROR: 

SELECT * FROM new_measurement ORDER BY city_id, logdate

Catalog Error: Table with name new_measurement does not exist!
Did you mean "measurement"?

ROLLBACK


MERGE INTO new_measurement nm
 USING measurement m ON
      (nm.city_id = m.city_id and nm.logdate=m.logdate)
WHEN MATCHED THEN DELETE
ERROR: 

MERGE INTO new_measurement nm
 USING measurement m ON
      (nm.city_id = m.city_id and nm.logdate=m.logdate)
WHEN MATCHED THEN DELETE

Parser Error: syntax error at or near "MERGE"


SELECT * FROM new_measurement ORDER BY city_id, logdate
ERROR: 

SELECT * FROM new_measurement ORDER BY city_id, logdate

Catalog Error: Table with name new_measurement does not exist!
Did you mean "measurement"?


DROP TABLE measurement, new_measurement CASCADE
ERROR: 

DROP TABLE measurement, new_measurement CASCADE

Not implemented Error: Can only drop one object at a time

DROP FUNCTION measurement_insert_trigger()
ERROR: 
DROP FUNCTION measurement_insert_trigger()

Parser Error: syntax error at or near "("


-- prepare

RESET SESSION AUTHORIZATION
ERROR: 

-- prepare

RESET SESSION AUTHORIZATION

Parser Error: syntax error at or near "AUTHORIZATION"

DROP TABLE target, target2
ERROR: 
DROP TABLE target, target2

Not implemented Error: Can only drop one object at a time

DROP TABLE source, source2
ERROR: 
DROP TABLE source, source2

Not implemented Error: Can only drop one object at a time

DROP FUNCTION merge_trigfunc()
ERROR: 
DROP FUNCTION merge_trigfunc()

Parser Error: syntax error at or near "("

DROP USER regress_merge_privs
ERROR: 
DROP USER regress_merge_privs

Parser Error: syntax error at or near "USER"

DROP USER regress_merge_no_privs
ERROR: 
DROP USER regress_merge_no_privs

Parser Error: syntax error at or near "USER"

DROP USER regress_merge_none
ERROR: 
DROP USER regress_merge_none

Parser Error: syntax error at or near "USER"


