-- directory paths and dlsuffix are passed to us in environment variables
-- \getenv libdir ''/home/keuscha/Documents/FS2024/AST/project/postgresql/src/test/regress''
-- \getenv dlsuffix ''.so''

-- \set regresslib /* REPLACED */ ''/home/keuscha/Documents/FS2024/AST/project/postgresql/src/test/regress'' ''/regress'' /* REPLACED */ ''.so''

--
-- num_nulls()
--

SELECT num_nonnulls(NULL)
ERROR: -- directory paths and dlsuffix are passed to us in environment variables
-- \getenv libdir ''/home/keuscha/Documents/FS2024/AST/project/postgresql/src/test/regress''
-- \getenv dlsuffix ''.so''

-- \set regresslib /* REPLACED */ ''/home/keuscha/Documents/FS2024/AST/project/postgresql/src/test/regress'' ''/regress'' /* REPLACED */ ''.so''

--
-- num_nulls()
--

SELECT num_nonnulls(NULL)

Catalog Error: Scalar Function with name num_nonnulls does not exist!
Did you mean "enum_last"?

SELECT num_nonnulls('1')
ERROR: 
SELECT num_nonnulls('1')

Catalog Error: Scalar Function with name num_nonnulls does not exist!
Did you mean "enum_last"?

SELECT num_nonnulls(NULL::text)
ERROR: 
SELECT num_nonnulls(NULL::text)

Catalog Error: Scalar Function with name num_nonnulls does not exist!
Did you mean "enum_last"?

SELECT num_nonnulls(NULL::text, NULL::int)
ERROR: 
SELECT num_nonnulls(NULL::text, NULL::int)

Catalog Error: Scalar Function with name num_nonnulls does not exist!
Did you mean "enum_last"?

SELECT num_nonnulls(1, 2, NULL::text, NULL::point, '', int8 '9', 1.0 / NULL)
ERROR: 
SELECT num_nonnulls(1, 2, NULL::text, NULL::point, '', int8 '9', 1.0 / NULL)

Catalog Error: Scalar Function with name num_nonnulls does not exist!
Did you mean "enum_last"?

SELECT num_nonnulls(VARIADIC '{1,2,NULL,3}'::int[])
ERROR: 
SELECT num_nonnulls(VARIADIC '{1,2,NULL,3}'::int[])

Catalog Error: Scalar Function with name num_nonnulls does not exist!
Did you mean "enum_last"?

SELECT num_nonnulls(VARIADIC '{"1","2","3","4"}'::text[])
ERROR: 
SELECT num_nonnulls(VARIADIC '{"1","2","3","4"}'::text[])

Catalog Error: Scalar Function with name num_nonnulls does not exist!
Did you mean "enum_last"?

SELECT num_nonnulls(VARIADIC ARRAY(SELECT CASE WHEN i <> 40 THEN i END FROM generate_series(1, 100) i))
ERROR: 
SELECT num_nonnulls(VARIADIC ARRAY(SELECT CASE WHEN i <> 40 THEN i END FROM generate_series(1, 100) i))

Catalog Error: Scalar Function with name num_nonnulls does not exist!
Did you mean "enum_last"?


SELECT num_nulls(NULL)
ERROR: 

SELECT num_nulls(NULL)

Catalog Error: Scalar Function with name num_nulls does not exist!
Did you mean "enum_last"?

SELECT num_nulls('1')
ERROR: 
SELECT num_nulls('1')

Catalog Error: Scalar Function with name num_nulls does not exist!
Did you mean "enum_last"?

SELECT num_nulls(NULL::text)
ERROR: 
SELECT num_nulls(NULL::text)

Catalog Error: Scalar Function with name num_nulls does not exist!
Did you mean "enum_last"?

SELECT num_nulls(NULL::text, NULL::int)
ERROR: 
SELECT num_nulls(NULL::text, NULL::int)

Catalog Error: Scalar Function with name num_nulls does not exist!
Did you mean "enum_last"?

SELECT num_nulls(1, 2, NULL::text, NULL::point, '', int8 '9', 1.0 / NULL)
ERROR: 
SELECT num_nulls(1, 2, NULL::text, NULL::point, '', int8 '9', 1.0 / NULL)

Catalog Error: Scalar Function with name num_nulls does not exist!
Did you mean "enum_last"?

SELECT num_nulls(VARIADIC '{1,2,NULL,3}'::int[])
ERROR: 
SELECT num_nulls(VARIADIC '{1,2,NULL,3}'::int[])

Catalog Error: Scalar Function with name num_nulls does not exist!
Did you mean "enum_last"?

SELECT num_nulls(VARIADIC '{"1","2","3","4"}'::text[])
ERROR: 
SELECT num_nulls(VARIADIC '{"1","2","3","4"}'::text[])

Catalog Error: Scalar Function with name num_nulls does not exist!
Did you mean "enum_last"?

SELECT num_nulls(VARIADIC ARRAY(SELECT CASE WHEN i <> 40 THEN i END FROM generate_series(1, 100) i))
ERROR: 
SELECT num_nulls(VARIADIC ARRAY(SELECT CASE WHEN i <> 40 THEN i END FROM generate_series(1, 100) i))

Catalog Error: Scalar Function with name num_nulls does not exist!
Did you mean "enum_last"?


-- special cases
SELECT num_nonnulls(VARIADIC NULL::text[])
ERROR: 

-- special cases
SELECT num_nonnulls(VARIADIC NULL::text[])

Catalog Error: Scalar Function with name num_nonnulls does not exist!
Did you mean "enum_last"?

SELECT num_nonnulls(VARIADIC '{}'::int[])
ERROR: 
SELECT num_nonnulls(VARIADIC '{}'::int[])

Catalog Error: Scalar Function with name num_nonnulls does not exist!
Did you mean "enum_last"?

SELECT num_nulls(VARIADIC NULL::text[])
ERROR: 
SELECT num_nulls(VARIADIC NULL::text[])

Catalog Error: Scalar Function with name num_nulls does not exist!
Did you mean "enum_last"?

SELECT num_nulls(VARIADIC '{}'::int[])
ERROR: 
SELECT num_nulls(VARIADIC '{}'::int[])

Catalog Error: Scalar Function with name num_nulls does not exist!
Did you mean "enum_last"?


-- should fail, one or more arguments is required
SELECT num_nonnulls()
ERROR: 

-- should fail, one or more arguments is required
SELECT num_nonnulls()

Catalog Error: Scalar Function with name num_nonnulls does not exist!
Did you mean "enum_last"?

SELECT num_nulls()
ERROR: 
SELECT num_nulls()

Catalog Error: Scalar Function with name num_nulls does not exist!
Did you mean "enum_last"?


--
-- canonicalize_path()
--

CREATE FUNCTION test_canonicalize_path(text)
   RETURNS text
   AS /* REPLACED */ '/home/keuscha/Documents/FS2024/AST/project/postgresql/src/test/regress/regress.so'
   LANGUAGE C STRICT IMMUTABLE
ERROR: 

--
-- canonicalize_path()
--

CREATE FUNCTION test_canonicalize_path(text)
   RETURNS text
   AS /* REPLACED */ '/home/keuscha/Documents/FS2024/AST/project/postgresql/src/test/regress/regress.so'
   LANGUAGE C STRICT IMMUTABLE

Parser Error: syntax error at or near "RETURNS"


SELECT test_canonicalize_path('/')
ERROR: 

SELECT test_canonicalize_path('/')

Catalog Error: Scalar Function with name test_canonicalize_path does not exist!
Did you mean "list_concat"?

SELECT test_canonicalize_path('/./abc/def/')
ERROR: 
SELECT test_canonicalize_path('/./abc/def/')

Catalog Error: Scalar Function with name test_canonicalize_path does not exist!
Did you mean "list_concat"?

SELECT test_canonicalize_path('/./../abc/def')
ERROR: 
SELECT test_canonicalize_path('/./../abc/def')

Catalog Error: Scalar Function with name test_canonicalize_path does not exist!
Did you mean "list_concat"?

SELECT test_canonicalize_path('/./../../abc/def/')
ERROR: 
SELECT test_canonicalize_path('/./../../abc/def/')

Catalog Error: Scalar Function with name test_canonicalize_path does not exist!
Did you mean "list_concat"?

SELECT test_canonicalize_path('/abc/.././def/ghi')
ERROR: 
SELECT test_canonicalize_path('/abc/.././def/ghi')

Catalog Error: Scalar Function with name test_canonicalize_path does not exist!
Did you mean "list_concat"?

SELECT test_canonicalize_path('/abc/./../def/ghi//')
ERROR: 
SELECT test_canonicalize_path('/abc/./../def/ghi//')

Catalog Error: Scalar Function with name test_canonicalize_path does not exist!
Did you mean "list_concat"?

SELECT test_canonicalize_path('/abc/def/../..')
ERROR: 
SELECT test_canonicalize_path('/abc/def/../..')

Catalog Error: Scalar Function with name test_canonicalize_path does not exist!
Did you mean "list_concat"?

SELECT test_canonicalize_path('/abc/def/../../..')
ERROR: 
SELECT test_canonicalize_path('/abc/def/../../..')

Catalog Error: Scalar Function with name test_canonicalize_path does not exist!
Did you mean "list_concat"?

SELECT test_canonicalize_path('/abc/def/../../../../ghi/jkl')
ERROR: 
SELECT test_canonicalize_path('/abc/def/../../../../ghi/jkl')

Catalog Error: Scalar Function with name test_canonicalize_path does not exist!
Did you mean "list_concat"?

SELECT test_canonicalize_path('.')
ERROR: 
SELECT test_canonicalize_path('.')

Catalog Error: Scalar Function with name test_canonicalize_path does not exist!
Did you mean "list_concat"?

SELECT test_canonicalize_path('./')
ERROR: 
SELECT test_canonicalize_path('./')

Catalog Error: Scalar Function with name test_canonicalize_path does not exist!
Did you mean "list_concat"?

SELECT test_canonicalize_path('./abc/..')
ERROR: 
SELECT test_canonicalize_path('./abc/..')

Catalog Error: Scalar Function with name test_canonicalize_path does not exist!
Did you mean "list_concat"?

SELECT test_canonicalize_path('abc/../')
ERROR: 
SELECT test_canonicalize_path('abc/../')

Catalog Error: Scalar Function with name test_canonicalize_path does not exist!
Did you mean "list_concat"?

SELECT test_canonicalize_path('abc/../def')
ERROR: 
SELECT test_canonicalize_path('abc/../def')

Catalog Error: Scalar Function with name test_canonicalize_path does not exist!
Did you mean "list_concat"?

SELECT test_canonicalize_path('..')
ERROR: 
SELECT test_canonicalize_path('..')

Catalog Error: Scalar Function with name test_canonicalize_path does not exist!
Did you mean "list_concat"?

SELECT test_canonicalize_path('../abc/def')
ERROR: 
SELECT test_canonicalize_path('../abc/def')

Catalog Error: Scalar Function with name test_canonicalize_path does not exist!
Did you mean "list_concat"?

SELECT test_canonicalize_path('../abc/..')
ERROR: 
SELECT test_canonicalize_path('../abc/..')

Catalog Error: Scalar Function with name test_canonicalize_path does not exist!
Did you mean "list_concat"?

SELECT test_canonicalize_path('../abc/../def')
ERROR: 
SELECT test_canonicalize_path('../abc/../def')

Catalog Error: Scalar Function with name test_canonicalize_path does not exist!
Did you mean "list_concat"?

SELECT test_canonicalize_path('../abc/../../def/ghi')
ERROR: 
SELECT test_canonicalize_path('../abc/../../def/ghi')

Catalog Error: Scalar Function with name test_canonicalize_path does not exist!
Did you mean "list_concat"?

SELECT test_canonicalize_path('./abc/./def/.')
ERROR: 
SELECT test_canonicalize_path('./abc/./def/.')

Catalog Error: Scalar Function with name test_canonicalize_path does not exist!
Did you mean "list_concat"?

SELECT test_canonicalize_path('./abc/././def/.')
ERROR: 
SELECT test_canonicalize_path('./abc/././def/.')

Catalog Error: Scalar Function with name test_canonicalize_path does not exist!
Did you mean "list_concat"?

SELECT test_canonicalize_path('./abc/./def/.././ghi/../../../jkl/mno')
ERROR: 
SELECT test_canonicalize_path('./abc/./def/.././ghi/../../../jkl/mno')

Catalog Error: Scalar Function with name test_canonicalize_path does not exist!
Did you mean "list_concat"?


--
-- pg_log_backend_memory_contexts()
--
-- Memory contexts are logged and they are not returned to the function.
-- Furthermore, their contents can vary depending on the timing. However,
-- we can at least verify that the code doesn''t fail, and that the
-- permissions are set properly.
--

SELECT pg_log_backend_memory_contexts(pg_backend_pid())
ERROR: 

--
-- pg_log_backend_memory_contexts()
--
-- Memory contexts are logged and they are not returned to the function.
-- Furthermore, their contents can vary depending on the timing. However,
-- we can at least verify that the code doesn''t fail, and that the
-- permissions are set properly.
--

SELECT pg_log_backend_memory_contexts(pg_backend_pid())

Catalog Error: Scalar Function with name pg_log_backend_memory_contexts does not exist!
Did you mean "pg_get_expr"?


SELECT pg_log_backend_memory_contexts(pid) FROM pg_stat_activity
  WHERE backend_type = 'checkpointer'
ERROR: 

SELECT pg_log_backend_memory_contexts(pid) FROM pg_stat_activity
  WHERE backend_type = 'checkpointer'

Catalog Error: Table with name pg_stat_activity does not exist!
Did you mean "pg_attribute"?


CREATE ROLE regress_log_memory
ERROR: 

CREATE ROLE regress_log_memory

Parser Error: syntax error at or near "ROLE"


SELECT has_function_privilege('regress_log_memory',
  'pg_log_backend_memory_contexts(integer)', 'EXECUTE')
ERROR: 

SELECT has_function_privilege('regress_log_memory',
  'pg_log_backend_memory_contexts(integer)', 'EXECUTE')

Binder Error: Macro function 'has_function_privilege(function, privilege)' requires 2 positional arguments, but 3 positional arguments were provided.
 -- no

GRANT EXECUTE ON FUNCTION pg_log_backend_memory_contexts(integer)
  TO regress_log_memory
ERROR:  -- no

GRANT EXECUTE ON FUNCTION pg_log_backend_memory_contexts(integer)
  TO regress_log_memory

Parser Error: syntax error at or near "GRANT"


SELECT has_function_privilege('regress_log_memory',
  'pg_log_backend_memory_contexts(integer)', 'EXECUTE')
ERROR: 

SELECT has_function_privilege('regress_log_memory',
  'pg_log_backend_memory_contexts(integer)', 'EXECUTE')

Binder Error: Macro function 'has_function_privilege(function, privilege)' requires 2 positional arguments, but 3 positional arguments were provided.
 -- yes

SET ROLE regress_log_memory
ERROR:  -- yes

SET ROLE regress_log_memory

Parser Error: syntax error at or near "regress_log_memory"

SELECT pg_log_backend_memory_contexts(pg_backend_pid())
ERROR: 
SELECT pg_log_backend_memory_contexts(pg_backend_pid())

Catalog Error: Scalar Function with name pg_log_backend_memory_contexts does not exist!
Did you mean "pg_get_expr"?

RESET ROLE
ERROR: 
RESET ROLE

Catalog Error: unrecognized configuration parameter "ROLE"

Did you mean: "threads", "Calendar", "profile_output", "errors_as_json", "home_directory"


REVOKE EXECUTE ON FUNCTION pg_log_backend_memory_contexts(integer)
  FROM regress_log_memory
ERROR: 

REVOKE EXECUTE ON FUNCTION pg_log_backend_memory_contexts(integer)
  FROM regress_log_memory

Parser Error: syntax error at or near "REVOKE"


DROP ROLE regress_log_memory
ERROR: 

DROP ROLE regress_log_memory

Parser Error: syntax error at or near "ROLE"


--
-- Test some built-in SRFs
--
-- The outputs of these are variable, so we can''t just print their results
-- directly, but we can at least verify that the code doesn''t fail.
--
select setting as segsize
from pg_settings where name = 'wal_segment_size'
\gset

select count(*) > 0 as ok from pg_ls_waldir()
ERROR: 

--
-- Test some built-in SRFs
--
-- The outputs of these are variable, so we can''t just print their results
-- directly, but we can at least verify that the code doesn''t fail.
--
select setting as segsize
from pg_settings where name = 'wal_segment_size'
\gset

select count(*) > 0 as ok from pg_ls_waldir()

Parser Error: syntax error at or near "\"

-- Test ProjectSet as well as FunctionScan
select count(*) > 0 as ok from (select pg_ls_waldir()) ss
ERROR: 
-- Test ProjectSet as well as FunctionScan
select count(*) > 0 as ok from (select pg_ls_waldir()) ss

Catalog Error: Scalar Function with name pg_ls_waldir does not exist!
Did you mean "list_mad"?

-- Test not-run-to-completion cases.
select * from pg_ls_waldir() limit 0
ERROR: 
-- Test not-run-to-completion cases.
select * from pg_ls_waldir() limit 0

Catalog Error: Table Function with name pg_ls_waldir does not exist!
Did you mean "glob"?

select count(*) > 0 as ok from (select * from pg_ls_waldir() limit 1) ss
ERROR: 
select count(*) > 0 as ok from (select * from pg_ls_waldir() limit 1) ss

Catalog Error: Table Function with name pg_ls_waldir does not exist!
Did you mean "glob"?

select (w).size = :segsize as ok
from (select pg_ls_waldir() w) ss where length((w).name) = 24 limit 1
ERROR: 
select (w).size = :segsize as ok
from (select pg_ls_waldir() w) ss where length((w).name) = 24 limit 1

Parser Error: syntax error at or near ":"


select count(*) >= 0 as ok from pg_ls_archive_statusdir()
ERROR: 

select count(*) >= 0 as ok from pg_ls_archive_statusdir()

Catalog Error: Table Function with name pg_ls_archive_statusdir does not exist!
Did you mean "parquet_scan"?


-- pg_read_file()
select length(pg_read_file('postmaster.pid')) > 20
ERROR: 

-- pg_read_file()
select length(pg_read_file('postmaster.pid')) > 20

Catalog Error: Scalar Function with name pg_read_file does not exist!
Did you mean "prefix"?

select length(pg_read_file('postmaster.pid', 1, 20))
ERROR: 
select length(pg_read_file('postmaster.pid', 1, 20))

Catalog Error: Scalar Function with name pg_read_file does not exist!
Did you mean "prefix"?

-- Test missing_ok
select pg_read_file('does not exist')
ERROR: 
-- Test missing_ok
select pg_read_file('does not exist')

Catalog Error: Scalar Function with name pg_read_file does not exist!
Did you mean "prefix"?
 -- error
select pg_read_file('does not exist', true) IS NULL
ERROR:  -- error
select pg_read_file('does not exist', true) IS NULL

Catalog Error: Scalar Function with name pg_read_file does not exist!
Did you mean "prefix"?
 -- ok
-- Test invalid argument
select pg_read_file('does not exist', 0, -1)
ERROR:  -- ok
-- Test invalid argument
select pg_read_file('does not exist', 0, -1)

Catalog Error: Scalar Function with name pg_read_file does not exist!
Did you mean "prefix"?
 -- error
select pg_read_file('does not exist', 0, -1, true)
ERROR:  -- error
select pg_read_file('does not exist', 0, -1, true)

Catalog Error: Scalar Function with name pg_read_file does not exist!
Did you mean "prefix"?
 -- error

-- pg_read_binary_file()
select length(pg_read_binary_file('postmaster.pid')) > 20
ERROR:  -- error

-- pg_read_binary_file()
select length(pg_read_binary_file('postmaster.pid')) > 20

Catalog Error: Scalar Function with name pg_read_binary_file does not exist!
Did you mean "pg_has_role"?

select length(pg_read_binary_file('postmaster.pid', 1, 20))
ERROR: 
select length(pg_read_binary_file('postmaster.pid', 1, 20))

Catalog Error: Scalar Function with name pg_read_binary_file does not exist!
Did you mean "pg_has_role"?

-- Test missing_ok
select pg_read_binary_file('does not exist')
ERROR: 
-- Test missing_ok
select pg_read_binary_file('does not exist')

Catalog Error: Scalar Function with name pg_read_binary_file does not exist!
Did you mean "pg_has_role"?
 -- error
select pg_read_binary_file('does not exist', true) IS NULL
ERROR:  -- error
select pg_read_binary_file('does not exist', true) IS NULL

Catalog Error: Scalar Function with name pg_read_binary_file does not exist!
Did you mean "pg_has_role"?
 -- ok
-- Test invalid argument
select pg_read_binary_file('does not exist', 0, -1)
ERROR:  -- ok
-- Test invalid argument
select pg_read_binary_file('does not exist', 0, -1)

Catalog Error: Scalar Function with name pg_read_binary_file does not exist!
Did you mean "pg_has_role"?
 -- error
select pg_read_binary_file('does not exist', 0, -1, true)
ERROR:  -- error
select pg_read_binary_file('does not exist', 0, -1, true)

Catalog Error: Scalar Function with name pg_read_binary_file does not exist!
Did you mean "pg_has_role"?
 -- error

-- pg_stat_file()
select size > 20, isdir from pg_stat_file('postmaster.pid')
ERROR:  -- error

-- pg_stat_file()
select size > 20, isdir from pg_stat_file('postmaster.pid')

Catalog Error: Table Function with name pg_stat_file does not exist!
Did you mean "glob"?


-- pg_ls_dir()
select * from (select pg_ls_dir('.') a) a where a = 'base' limit 1
ERROR: 

-- pg_ls_dir()
select * from (select pg_ls_dir('.') a) a where a = 'base' limit 1

Catalog Error: Scalar Function with name pg_ls_dir does not exist!
Did you mean "pi"?

-- Test missing_ok (second argument)
select pg_ls_dir('does not exist', false, false)
ERROR: 
-- Test missing_ok (second argument)
select pg_ls_dir('does not exist', false, false)

Catalog Error: Scalar Function with name pg_ls_dir does not exist!
Did you mean "pi"?
 -- error
select pg_ls_dir('does not exist', true, false)
ERROR:  -- error
select pg_ls_dir('does not exist', true, false)

Catalog Error: Scalar Function with name pg_ls_dir does not exist!
Did you mean "pi"?
 -- ok
-- Test include_dot_dirs (third argument)
select count(*) = 1 as dot_found
  from pg_ls_dir('.', false, true) as ls where ls = '.'
ERROR:  -- ok
-- Test include_dot_dirs (third argument)
select count(*) = 1 as dot_found
  from pg_ls_dir('.', false, true) as ls where ls = '.'

Catalog Error: Table Function with name pg_ls_dir does not exist!
Did you mean "glob"?

select count(*) = 1 as dot_found
  from pg_ls_dir('.', false, false) as ls where ls = '.'
ERROR: 
select count(*) = 1 as dot_found
  from pg_ls_dir('.', false, false) as ls where ls = '.'

Catalog Error: Table Function with name pg_ls_dir does not exist!
Did you mean "glob"?


-- pg_timezone_names()
select * from (select (pg_timezone_names()).name) ptn where name='UTC' limit 1
ERROR: 

-- pg_timezone_names()
select * from (select (pg_timezone_names()).name) ptn where name='UTC' limit 1

Binder Error: Function "pg_timezone_names" is a table function but it was used as a scalar function. This function has to be called in a FROM clause (similar to a table).


-- pg_tablespace_databases()
select count(*) > 0 from
  (select pg_tablespace_databases(oid) as pts from pg_tablespace
   where spcname = 'pg_default') pts
  join pg_database db on pts.pts = db.oid
ERROR: 

-- pg_tablespace_databases()
select count(*) > 0 from
  (select pg_tablespace_databases(oid) as pts from pg_tablespace
   where spcname = 'pg_default') pts
  join pg_database db on pts.pts = db.oid

Catalog Error: Scalar Function with name pg_tablespace_databases does not exist!
Did you mean "current_database"?


--
-- Test replication slot directory functions
--
CREATE ROLE regress_slot_dir_funcs
ERROR: 

--
-- Test replication slot directory functions
--
CREATE ROLE regress_slot_dir_funcs

Parser Error: syntax error at or near "ROLE"

-- Not available by default.
SELECT has_function_privilege('regress_slot_dir_funcs',
  'pg_ls_logicalsnapdir()', 'EXECUTE')
ERROR: 
-- Not available by default.
SELECT has_function_privilege('regress_slot_dir_funcs',
  'pg_ls_logicalsnapdir()', 'EXECUTE')

Binder Error: Macro function 'has_function_privilege(function, privilege)' requires 2 positional arguments, but 3 positional arguments were provided.

SELECT has_function_privilege('regress_slot_dir_funcs',
  'pg_ls_logicalmapdir()', 'EXECUTE')
ERROR: 
SELECT has_function_privilege('regress_slot_dir_funcs',
  'pg_ls_logicalmapdir()', 'EXECUTE')

Binder Error: Macro function 'has_function_privilege(function, privilege)' requires 2 positional arguments, but 3 positional arguments were provided.

SELECT has_function_privilege('regress_slot_dir_funcs',
  'pg_ls_replslotdir(text)', 'EXECUTE')
ERROR: 
SELECT has_function_privilege('regress_slot_dir_funcs',
  'pg_ls_replslotdir(text)', 'EXECUTE')

Binder Error: Macro function 'has_function_privilege(function, privilege)' requires 2 positional arguments, but 3 positional arguments were provided.

GRANT pg_monitor TO regress_slot_dir_funcs
ERROR: 
GRANT pg_monitor TO regress_slot_dir_funcs

Parser Error: syntax error at or near "GRANT"

-- Role is now part of pg_monitor, so these are available.
SELECT has_function_privilege('regress_slot_dir_funcs',
  'pg_ls_logicalsnapdir()', 'EXECUTE')
ERROR: 
-- Role is now part of pg_monitor, so these are available.
SELECT has_function_privilege('regress_slot_dir_funcs',
  'pg_ls_logicalsnapdir()', 'EXECUTE')

Binder Error: Macro function 'has_function_privilege(function, privilege)' requires 2 positional arguments, but 3 positional arguments were provided.

SELECT has_function_privilege('regress_slot_dir_funcs',
  'pg_ls_logicalmapdir()', 'EXECUTE')
ERROR: 
SELECT has_function_privilege('regress_slot_dir_funcs',
  'pg_ls_logicalmapdir()', 'EXECUTE')

Binder Error: Macro function 'has_function_privilege(function, privilege)' requires 2 positional arguments, but 3 positional arguments were provided.

SELECT has_function_privilege('regress_slot_dir_funcs',
  'pg_ls_replslotdir(text)', 'EXECUTE')
ERROR: 
SELECT has_function_privilege('regress_slot_dir_funcs',
  'pg_ls_replslotdir(text)', 'EXECUTE')

Binder Error: Macro function 'has_function_privilege(function, privilege)' requires 2 positional arguments, but 3 positional arguments were provided.

DROP ROLE regress_slot_dir_funcs
ERROR: 
DROP ROLE regress_slot_dir_funcs

Parser Error: syntax error at or near "ROLE"


--
-- Test adding a support function to a subject function
--

CREATE FUNCTION my_int_eq(int, int) RETURNS bool
  LANGUAGE internal STRICT IMMUTABLE PARALLEL SAFE
  AS $$int4eq$$
ERROR: 

--
-- Test adding a support function to a subject function
--

CREATE FUNCTION my_int_eq(int, int) RETURNS bool
  LANGUAGE internal STRICT IMMUTABLE PARALLEL SAFE
  AS $$int4eq$$

Parser Error: syntax error at or near "RETURNS"


-- By default, planner does not think that''s selective
EXPLAIN (COSTS OFF)
SELECT * FROM tenk1 a JOIN tenk1 b ON a.unique1 = b.unique1
WHERE my_int_eq(a.unique2, 42)
ERROR: 

-- By default, planner does not think that''s selective
EXPLAIN (COSTS OFF)
SELECT * FROM tenk1 a JOIN tenk1 b ON a.unique1 = b.unique1
WHERE my_int_eq(a.unique2, 42)

Not implemented Error: Unimplemented explain type: COSTS


-- With support function that knows it''s int4eq, we get a different plan
CREATE FUNCTION test_support_func(internal)
    RETURNS internal
    AS /* REPLACED */ '/home/keuscha/Documents/FS2024/AST/project/postgresql/src/test/regress/regress.so', 'test_support_func'
    LANGUAGE C STRICT
ERROR: 

-- With support function that knows it''s int4eq, we get a different plan
CREATE FUNCTION test_support_func(internal)
    RETURNS internal
    AS /* REPLACED */ '/home/keuscha/Documents/FS2024/AST/project/postgresql/src/test/regress/regress.so', 'test_support_func'
    LANGUAGE C STRICT

Parser Error: syntax error at or near "RETURNS"


ALTER FUNCTION my_int_eq(int, int) SUPPORT test_support_func
ERROR: 

ALTER FUNCTION my_int_eq(int, int) SUPPORT test_support_func

Parser Error: syntax error at or near "FUNCTION"


EXPLAIN (COSTS OFF)
SELECT * FROM tenk1 a JOIN tenk1 b ON a.unique1 = b.unique1
WHERE my_int_eq(a.unique2, 42)
ERROR: 

EXPLAIN (COSTS OFF)
SELECT * FROM tenk1 a JOIN tenk1 b ON a.unique1 = b.unique1
WHERE my_int_eq(a.unique2, 42)

Not implemented Error: Unimplemented explain type: COSTS


-- Also test non-default rowcount estimate
CREATE FUNCTION my_gen_series(int, int) RETURNS SETOF integer
  LANGUAGE internal STRICT IMMUTABLE PARALLEL SAFE
  AS $$generate_series_int4$$
  SUPPORT test_support_func
ERROR: 

-- Also test non-default rowcount estimate
CREATE FUNCTION my_gen_series(int, int) RETURNS SETOF integer
  LANGUAGE internal STRICT IMMUTABLE PARALLEL SAFE
  AS $$generate_series_int4$$
  SUPPORT test_support_func

Parser Error: syntax error at or near "RETURNS"


EXPLAIN (COSTS OFF)
SELECT * FROM tenk1 a JOIN my_gen_series(1,1000) g ON a.unique1 = g
ERROR: 

EXPLAIN (COSTS OFF)
SELECT * FROM tenk1 a JOIN my_gen_series(1,1000) g ON a.unique1 = g

Not implemented Error: Unimplemented explain type: COSTS


EXPLAIN (COSTS OFF)
SELECT * FROM tenk1 a JOIN my_gen_series(1,10) g ON a.unique1 = g
ERROR: 

EXPLAIN (COSTS OFF)
SELECT * FROM tenk1 a JOIN my_gen_series(1,10) g ON a.unique1 = g

Not implemented Error: Unimplemented explain type: COSTS


-- Test functions for control data
SELECT count(*) > 0 AS ok FROM pg_control_checkpoint()
ERROR: 

-- Test functions for control data
SELECT count(*) > 0 AS ok FROM pg_control_checkpoint()

Catalog Error: Table Function with name pg_control_checkpoint does not exist!
Did you mean "checkpoint"?

SELECT count(*) > 0 AS ok FROM pg_control_init()
ERROR: 
SELECT count(*) > 0 AS ok FROM pg_control_init()

Catalog Error: Table Function with name pg_control_init does not exist!
Did you mean "checkpoint"?

SELECT count(*) > 0 AS ok FROM pg_control_recovery()
ERROR: 
SELECT count(*) > 0 AS ok FROM pg_control_recovery()

Catalog Error: Table Function with name pg_control_recovery does not exist!
Did you mean "glob"?

SELECT count(*) > 0 AS ok FROM pg_control_system()
ERROR: 
SELECT count(*) > 0 AS ok FROM pg_control_system()

Catalog Error: Table Function with name pg_control_system does not exist!
Did you mean "glob"?


-- pg_split_walfile_name, pg_walfile_name & pg_walfile_name_offset
SELECT * FROM pg_split_walfile_name(NULL)
ERROR: 

-- pg_split_walfile_name, pg_walfile_name & pg_walfile_name_offset
SELECT * FROM pg_split_walfile_name(NULL)

Catalog Error: Table Function with name pg_split_walfile_name does not exist!
Did you mean "pg_timezone_names"?

SELECT * FROM pg_split_walfile_name('invalid')
ERROR: 
SELECT * FROM pg_split_walfile_name('invalid')

Catalog Error: Table Function with name pg_split_walfile_name does not exist!
Did you mean "pg_timezone_names"?

SELECT segment_number > 0 AS ok_segment_number, timeline_id
  FROM pg_split_walfile_name('000000010000000100000000')
ERROR: 
SELECT segment_number > 0 AS ok_segment_number, timeline_id
  FROM pg_split_walfile_name('000000010000000100000000')

Catalog Error: Table Function with name pg_split_walfile_name does not exist!
Did you mean "pg_timezone_names"?

SELECT segment_number > 0 AS ok_segment_number, timeline_id
  FROM pg_split_walfile_name('ffffffFF00000001000000af')
ERROR: 
SELECT segment_number > 0 AS ok_segment_number, timeline_id
  FROM pg_split_walfile_name('ffffffFF00000001000000af')

Catalog Error: Table Function with name pg_split_walfile_name does not exist!
Did you mean "pg_timezone_names"?

SELECT setting::int8 AS segment_size
FROM pg_settings
WHERE name = 'wal_segment_size'
\gset
SELECT segment_number, file_offset
FROM pg_walfile_name_offset('0/0'::pg_lsn + :segment_size),
     pg_split_walfile_name(file_name)
ERROR: 
SELECT setting::int8 AS segment_size
FROM pg_settings
WHERE name = 'wal_segment_size'
\gset
SELECT segment_number, file_offset
FROM pg_walfile_name_offset('0/0'::pg_lsn + :segment_size),
     pg_split_walfile_name(file_name)

Parser Error: syntax error at or near "\"

SELECT segment_number, file_offset
FROM pg_walfile_name_offset('0/0'::pg_lsn + :segment_size + 1),
     pg_split_walfile_name(file_name)
ERROR: 
SELECT segment_number, file_offset
FROM pg_walfile_name_offset('0/0'::pg_lsn + :segment_size + 1),
     pg_split_walfile_name(file_name)

Parser Error: syntax error at or near ":"

SELECT segment_number, file_offset = :segment_size - 1
FROM pg_walfile_name_offset('0/0'::pg_lsn + :segment_size - 1),
     pg_split_walfile_name(file_name)
ERROR: 
SELECT segment_number, file_offset = :segment_size - 1
FROM pg_walfile_name_offset('0/0'::pg_lsn + :segment_size - 1),
     pg_split_walfile_name(file_name)

Parser Error: syntax error at or near ":"


-- test stratnum support functions
SELECT gist_stratnum_identity(3::smallint)
ERROR: 

-- test stratnum support functions
SELECT gist_stratnum_identity(3::smallint)

Catalog Error: Scalar Function with name gist_stratnum_identity does not exist!
Did you mean "list_min"?

SELECT gist_stratnum_identity(18::smallint)
ERROR: 
SELECT gist_stratnum_identity(18::smallint)

Catalog Error: Scalar Function with name gist_stratnum_identity does not exist!
Did you mean "list_min"?


-- pg_current_logfile
CREATE ROLE regress_current_logfile
ERROR: 

-- pg_current_logfile
CREATE ROLE regress_current_logfile

Parser Error: syntax error at or near "ROLE"

-- not available by default
SELECT has_function_privilege('regress_current_logfile',
  'pg_current_logfile()', 'EXECUTE')
ERROR: 
-- not available by default
SELECT has_function_privilege('regress_current_logfile',
  'pg_current_logfile()', 'EXECUTE')

Binder Error: Macro function 'has_function_privilege(function, privilege)' requires 2 positional arguments, but 3 positional arguments were provided.

GRANT pg_monitor TO regress_current_logfile
ERROR: 
GRANT pg_monitor TO regress_current_logfile

Parser Error: syntax error at or near "GRANT"

-- role has privileges of pg_monitor and can execute the function
SELECT has_function_privilege('regress_current_logfile',
  'pg_current_logfile()', 'EXECUTE')
ERROR: 
-- role has privileges of pg_monitor and can execute the function
SELECT has_function_privilege('regress_current_logfile',
  'pg_current_logfile()', 'EXECUTE')

Binder Error: Macro function 'has_function_privilege(function, privilege)' requires 2 positional arguments, but 3 positional arguments were provided.

DROP ROLE regress_current_logfile
ERROR: 
DROP ROLE regress_current_logfile

Parser Error: syntax error at or near "ROLE"


-- pg_column_toast_chunk_id
CREATE TABLE test_chunk_id (a TEXT, b TEXT STORAGE EXTERNAL)
ERROR: 

-- pg_column_toast_chunk_id
CREATE TABLE test_chunk_id (a TEXT, b TEXT STORAGE EXTERNAL)

Parser Error: syntax error at or near "STORAGE"

INSERT INTO test_chunk_id VALUES ('x', repeat('x', 8192))
ERROR: 
INSERT INTO test_chunk_id VALUES ('x', repeat('x', 8192))

Catalog Error: Table with name test_chunk_id does not exist!
Did you mean "TEXT_TBL"?

SELECT t.relname AS toastrel FROM pg_class c
  LEFT JOIN pg_class t ON c.reltoastrelid = t.oid
  WHERE c.relname = 'test_chunk_id'
\gset
SELECT pg_column_toast_chunk_id(a) IS NULL,
  pg_column_toast_chunk_id(b) IN (SELECT chunk_id FROM pg_toast.:toastrel)
  FROM test_chunk_id
ERROR: 
SELECT t.relname AS toastrel FROM pg_class c
  LEFT JOIN pg_class t ON c.reltoastrelid = t.oid
  WHERE c.relname = 'test_chunk_id'
\gset
SELECT pg_column_toast_chunk_id(a) IS NULL,
  pg_column_toast_chunk_id(b) IN (SELECT chunk_id FROM pg_toast.:toastrel)
  FROM test_chunk_id

Parser Error: syntax error at or near "\"

DROP TABLE test_chunk_id
ERROR: 
DROP TABLE test_chunk_id

Catalog Error: Table with name test_chunk_id does not exist!
Did you mean "TEXT_TBL"?


