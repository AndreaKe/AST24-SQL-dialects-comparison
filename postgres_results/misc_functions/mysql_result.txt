
-----------
QUERY:
-- directory paths and dlsuffix are passed to us in environment variables
-- \getenv libdir '/home/keuscha/Documents/FS2024/AST/project/postgresql/src/test/regress'
-- \getenv dlsuffix '.so'

-- \set regresslib /* REPLACED */'/home/keuscha/Documents/FS2024/AST/project/postgresql/src/test/regress' '/regress' /* REPLACED */'.so'

--
-- num_nulls()
--

SELECT num_nonnulls(NULL);
RESULT:
	ERROR - (1305, 'FUNCTION test.num_nonnulls does not exist')

-----------
QUERY:

SELECT num_nonnulls('1');
RESULT:
	ERROR - (1305, 'FUNCTION test.num_nonnulls does not exist')

-----------
QUERY:

SELECT num_nonnulls(NULL::text);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::text)' at line 1")

-----------
QUERY:

SELECT num_nonnulls(NULL::text, NULL::int);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::text, NULL::int)' at line 1")

-----------
QUERY:

SELECT num_nonnulls(1, 2, NULL::text, NULL::point, '', int8 '9', 1.0 / NULL);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::text, NULL::point, '', int8 '9', 1.0 / NULL)' at line 1")

-----------
QUERY:

SELECT num_nonnulls(VARIADIC '{1,2,NULL,3}'::int[]);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::int[])' at line 1")

-----------
QUERY:

SELECT num_nonnulls(VARIADIC '{"1","2","3","4"}'::text[]);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::text[])' at line 1")

-----------
QUERY:

SELECT num_nonnulls(VARIADIC ARRAY(SELECT CASE WHEN i <> 40 THEN i END FROM generate_series(1, 100) i));
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(SELECT CASE WHEN i <> 40 THEN i END FROM generate_series(1, 100) i))' at line 1")

-----------
QUERY:


SELECT num_nulls(NULL);
RESULT:
	ERROR - (1305, 'FUNCTION test.num_nulls does not exist')

-----------
QUERY:

SELECT num_nulls('1');
RESULT:
	ERROR - (1305, 'FUNCTION test.num_nulls does not exist')

-----------
QUERY:

SELECT num_nulls(NULL::text);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::text)' at line 1")

-----------
QUERY:

SELECT num_nulls(NULL::text, NULL::int);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::text, NULL::int)' at line 1")

-----------
QUERY:

SELECT num_nulls(1, 2, NULL::text, NULL::point, '', int8 '9', 1.0 / NULL);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::text, NULL::point, '', int8 '9', 1.0 / NULL)' at line 1")

-----------
QUERY:

SELECT num_nulls(VARIADIC '{1,2,NULL,3}'::int[]);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::int[])' at line 1")

-----------
QUERY:

SELECT num_nulls(VARIADIC '{"1","2","3","4"}'::text[]);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::text[])' at line 1")

-----------
QUERY:

SELECT num_nulls(VARIADIC ARRAY(SELECT CASE WHEN i <> 40 THEN i END FROM generate_series(1, 100) i));
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(SELECT CASE WHEN i <> 40 THEN i END FROM generate_series(1, 100) i))' at line 1")

-----------
QUERY:


-- special cases
SELECT num_nonnulls(VARIADIC NULL::text[]);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'NULL::text[])' at line 2")

-----------
QUERY:

SELECT num_nonnulls(VARIADIC '{}'::int[]);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::int[])' at line 1")

-----------
QUERY:

SELECT num_nulls(VARIADIC NULL::text[]);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'NULL::text[])' at line 1")

-----------
QUERY:

SELECT num_nulls(VARIADIC '{}'::int[]);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::int[])' at line 1")

-----------
QUERY:


-- should fail, one or more arguments is required
SELECT num_nonnulls();
RESULT:
	ERROR - (1305, 'FUNCTION test.num_nonnulls does not exist')

-----------
QUERY:

SELECT num_nulls();
RESULT:
	ERROR - (1305, 'FUNCTION test.num_nulls does not exist')

-----------
QUERY:


--
-- canonicalize_path()
--

CREATE FUNCTION test_canonicalize_path(text)
   RETURNS text
   AS /* REPLACED */'/home/keuscha/Documents/FS2024/AST/project/postgresql/src/test/regress/regress.so'
   LANGUAGE C STRICT IMMUTABLE;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')\n   RETURNS text\n   AS /* REPLACED */'/home/keuscha/Documents/FS2024/AST/projec' at line 5")

-----------
QUERY:


SELECT test_canonicalize_path('/');
RESULT:
	ERROR - (1305, 'FUNCTION test.test_canonicalize_path does not exist')

-----------
QUERY:

SELECT test_canonicalize_path('/./abc/def/');
RESULT:
	ERROR - (1305, 'FUNCTION test.test_canonicalize_path does not exist')

-----------
QUERY:

SELECT test_canonicalize_path('/./../abc/def');
RESULT:
	ERROR - (1305, 'FUNCTION test.test_canonicalize_path does not exist')

-----------
QUERY:

SELECT test_canonicalize_path('/./../../abc/def/');
RESULT:
	ERROR - (1305, 'FUNCTION test.test_canonicalize_path does not exist')

-----------
QUERY:

SELECT test_canonicalize_path('/abc/.././def/ghi');
RESULT:
	ERROR - (1305, 'FUNCTION test.test_canonicalize_path does not exist')

-----------
QUERY:

SELECT test_canonicalize_path('/abc/./../def/ghi//');
RESULT:
	ERROR - (1305, 'FUNCTION test.test_canonicalize_path does not exist')

-----------
QUERY:

SELECT test_canonicalize_path('/abc/def/../..');
RESULT:
	ERROR - (1305, 'FUNCTION test.test_canonicalize_path does not exist')

-----------
QUERY:

SELECT test_canonicalize_path('/abc/def/../../..');
RESULT:
	ERROR - (1305, 'FUNCTION test.test_canonicalize_path does not exist')

-----------
QUERY:

SELECT test_canonicalize_path('/abc/def/../../../../ghi/jkl');
RESULT:
	ERROR - (1305, 'FUNCTION test.test_canonicalize_path does not exist')

-----------
QUERY:

SELECT test_canonicalize_path('.');
RESULT:
	ERROR - (1305, 'FUNCTION test.test_canonicalize_path does not exist')

-----------
QUERY:

SELECT test_canonicalize_path('./');
RESULT:
	ERROR - (1305, 'FUNCTION test.test_canonicalize_path does not exist')

-----------
QUERY:

SELECT test_canonicalize_path('./abc/..');
RESULT:
	ERROR - (1305, 'FUNCTION test.test_canonicalize_path does not exist')

-----------
QUERY:

SELECT test_canonicalize_path('abc/../');
RESULT:
	ERROR - (1305, 'FUNCTION test.test_canonicalize_path does not exist')

-----------
QUERY:

SELECT test_canonicalize_path('abc/../def');
RESULT:
	ERROR - (1305, 'FUNCTION test.test_canonicalize_path does not exist')

-----------
QUERY:

SELECT test_canonicalize_path('..');
RESULT:
	ERROR - (1305, 'FUNCTION test.test_canonicalize_path does not exist')

-----------
QUERY:

SELECT test_canonicalize_path('../abc/def');
RESULT:
	ERROR - (1305, 'FUNCTION test.test_canonicalize_path does not exist')

-----------
QUERY:

SELECT test_canonicalize_path('../abc/..');
RESULT:
	ERROR - (1305, 'FUNCTION test.test_canonicalize_path does not exist')

-----------
QUERY:

SELECT test_canonicalize_path('../abc/../def');
RESULT:
	ERROR - (1305, 'FUNCTION test.test_canonicalize_path does not exist')

-----------
QUERY:

SELECT test_canonicalize_path('../abc/../../def/ghi');
RESULT:
	ERROR - (1305, 'FUNCTION test.test_canonicalize_path does not exist')

-----------
QUERY:

SELECT test_canonicalize_path('./abc/./def/.');
RESULT:
	ERROR - (1305, 'FUNCTION test.test_canonicalize_path does not exist')

-----------
QUERY:

SELECT test_canonicalize_path('./abc/././def/.');
RESULT:
	ERROR - (1305, 'FUNCTION test.test_canonicalize_path does not exist')

-----------
QUERY:

SELECT test_canonicalize_path('./abc/./def/.././ghi/../../../jkl/mno');
RESULT:
	ERROR - (1305, 'FUNCTION test.test_canonicalize_path does not exist')

-----------
QUERY:


--
-- pg_log_backend_memory_contexts()
--
-- Memory contexts are logged and they are not returned to the function.
-- Furthermore, their contents can vary depending on the timing. However,
-- we can at least verify that the code doesn/* REPLACED */''t fail, and that the
-- permissions are set properly.
--

SELECT pg_log_backend_memory_contexts(pg_backend_pid());
RESULT:
	ERROR - (1305, 'FUNCTION test.pg_log_backend_memory_contexts does not exist')

-----------
QUERY:


SELECT pg_log_backend_memory_contexts(pid) FROM pg_stat_activity
  WHERE backend_type = 'checkpointer';
RESULT:
	ERROR - (1146, "Table 'test.pg_stat_activity' doesn't exist")

-----------
QUERY:


CREATE ROLE regress_log_memory;
RESULT:
	[]

-----------
QUERY:


SELECT has_function_privilege('regress_log_memory',
  'pg_log_backend_memory_contexts(integer)', 'EXECUTE');
RESULT:
	ERROR - (1305, 'FUNCTION test.has_function_privilege does not exist')

-----------
QUERY:
 -- no

GRANT EXECUTE ON FUNCTION pg_log_backend_memory_contexts(integer)
  TO regress_log_memory;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(integer)\n  TO regress_log_memory' at line 3")

-----------
QUERY:


SELECT has_function_privilege('regress_log_memory',
  'pg_log_backend_memory_contexts(integer)', 'EXECUTE');
RESULT:
	ERROR - (1305, 'FUNCTION test.has_function_privilege does not exist')

-----------
QUERY:
 -- yes

SET ROLE regress_log_memory;
RESULT:
	ERROR - (3530, '`regress_log_memory`@`%` is not granted to `root`@`localhost`')

-----------
QUERY:

SELECT pg_log_backend_memory_contexts(pg_backend_pid());
RESULT:
	ERROR - (1305, 'FUNCTION test.pg_log_backend_memory_contexts does not exist')

-----------
QUERY:

RESET ROLE;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'ROLE' at line 1")

-----------
QUERY:


REVOKE EXECUTE ON FUNCTION pg_log_backend_memory_contexts(integer)
  FROM regress_log_memory;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(integer)\n  FROM regress_log_memory' at line 1")

-----------
QUERY:


DROP ROLE regress_log_memory;
RESULT:
	[]

-----------
QUERY:


--
-- Test some built-in SRFs
--
-- The outputs of these are variable, so we can/* REPLACED */''t just print their results
-- directly, but we can at least verify that the code doesn/* REPLACED */''t fail.
--
select setting as segsize
from pg_settings where name = 'wal_segment_size'
\gset

select count(*) > 0 as ok from pg_ls_waldir();
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '\\gset\n\nselect count(*) > 0 as ok from pg_ls_waldir()' at line 9")

-----------
QUERY:

-- Test ProjectSet as well as FunctionScan
select count(*) > 0 as ok from (select pg_ls_waldir()) ss;
RESULT:
	ERROR - (1305, 'FUNCTION test.pg_ls_waldir does not exist')

-----------
QUERY:

-- Test not-run-to-completion cases.
select * from pg_ls_waldir() limit 0;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '() limit 0' at line 2")

-----------
QUERY:

select count(*) > 0 as ok from (select * from pg_ls_waldir() limit 1) ss;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '() limit 1) ss' at line 1")

-----------
QUERY:

select (w).size = :segsize as ok
from (select pg_ls_waldir() w) ss where length((w).name) = 24 limit 1;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '.size = :segsize as ok\nfrom (select pg_ls_waldir() w) ss where length((w).name) ' at line 1")

-----------
QUERY:


select count(*) >= 0 as ok from pg_ls_archive_statusdir();
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '()' at line 1")

-----------
QUERY:


-- pg_read_file()
select length(pg_read_file('postmaster.pid')) > 20;
RESULT:
	ERROR - (1305, 'FUNCTION test.pg_read_file does not exist')

-----------
QUERY:

select length(pg_read_file('postmaster.pid', 1, 20));
RESULT:
	ERROR - (1305, 'FUNCTION test.pg_read_file does not exist')

-----------
QUERY:

-- Test missing_ok
select pg_read_file('does not exist');
RESULT:
	ERROR - (1305, 'FUNCTION test.pg_read_file does not exist')

-----------
QUERY:
 -- error
select pg_read_file('does not exist', true) IS NULL;
RESULT:
	ERROR - (1305, 'FUNCTION test.pg_read_file does not exist')

-----------
QUERY:
 -- ok
-- Test invalid argument
select pg_read_file('does not exist', 0, -1);
RESULT:
	ERROR - (1305, 'FUNCTION test.pg_read_file does not exist')

-----------
QUERY:
 -- error
select pg_read_file('does not exist', 0, -1, true);
RESULT:
	ERROR - (1305, 'FUNCTION test.pg_read_file does not exist')

-----------
QUERY:
 -- error

-- pg_read_binary_file()
select length(pg_read_binary_file('postmaster.pid')) > 20;
RESULT:
	ERROR - (1305, 'FUNCTION test.pg_read_binary_file does not exist')

-----------
QUERY:

select length(pg_read_binary_file('postmaster.pid', 1, 20));
RESULT:
	ERROR - (1305, 'FUNCTION test.pg_read_binary_file does not exist')

-----------
QUERY:

-- Test missing_ok
select pg_read_binary_file('does not exist');
RESULT:
	ERROR - (1305, 'FUNCTION test.pg_read_binary_file does not exist')

-----------
QUERY:
 -- error
select pg_read_binary_file('does not exist', true) IS NULL;
RESULT:
	ERROR - (1305, 'FUNCTION test.pg_read_binary_file does not exist')

-----------
QUERY:
 -- ok
-- Test invalid argument
select pg_read_binary_file('does not exist', 0, -1);
RESULT:
	ERROR - (1305, 'FUNCTION test.pg_read_binary_file does not exist')

-----------
QUERY:
 -- error
select pg_read_binary_file('does not exist', 0, -1, true);
RESULT:
	ERROR - (1305, 'FUNCTION test.pg_read_binary_file does not exist')

-----------
QUERY:
 -- error

-- pg_stat_file()
select size > 20, isdir from pg_stat_file('postmaster.pid');
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '('postmaster.pid')' at line 4")

-----------
QUERY:


-- pg_ls_dir()
select * from (select pg_ls_dir('.') a) a where a = 'base' limit 1;
RESULT:
	ERROR - (1305, 'FUNCTION test.pg_ls_dir does not exist')

-----------
QUERY:

-- Test missing_ok (second argument)
select pg_ls_dir('does not exist', false, false);
RESULT:
	ERROR - (1305, 'FUNCTION test.pg_ls_dir does not exist')

-----------
QUERY:
 -- error
select pg_ls_dir('does not exist', true, false);
RESULT:
	ERROR - (1305, 'FUNCTION test.pg_ls_dir does not exist')

-----------
QUERY:
 -- ok
-- Test include_dot_dirs (third argument)
select count(*) = 1 as dot_found
  from pg_ls_dir('.', false, true) as ls where ls = '.';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '('.', false, true) as ls where ls = '.'' at line 4")

-----------
QUERY:

select count(*) = 1 as dot_found
  from pg_ls_dir('.', false, false) as ls where ls = '.';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '('.', false, false) as ls where ls = '.'' at line 2")

-----------
QUERY:


-- pg_timezone_names()
select * from (select (pg_timezone_names()).name) ptn where name='UTC' limit 1;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '.name) ptn where name='UTC' limit 1' at line 2")

-----------
QUERY:


-- pg_tablespace_databases()
select count(*) > 0 from
  (select pg_tablespace_databases(oid) as pts from pg_tablespace
   where spcname = 'pg_default') pts
  join pg_database db on pts.pts = db.oid;
RESULT:
	ERROR - (1146, "Table 'test.pg_tablespace' doesn't exist")

-----------
QUERY:


--
-- Test replication slot directory functions
--
CREATE ROLE regress_slot_dir_funcs;
RESULT:
	[]

-----------
QUERY:

-- Not available by default.
SELECT has_function_privilege('regress_slot_dir_funcs',
  'pg_ls_logicalsnapdir()', 'EXECUTE');
RESULT:
	ERROR - (1305, 'FUNCTION test.has_function_privilege does not exist')

-----------
QUERY:

SELECT has_function_privilege('regress_slot_dir_funcs',
  'pg_ls_logicalmapdir()', 'EXECUTE');
RESULT:
	ERROR - (1305, 'FUNCTION test.has_function_privilege does not exist')

-----------
QUERY:

SELECT has_function_privilege('regress_slot_dir_funcs',
  'pg_ls_replslotdir(text)', 'EXECUTE');
RESULT:
	ERROR - (1305, 'FUNCTION test.has_function_privilege does not exist')

-----------
QUERY:

GRANT pg_monitor TO regress_slot_dir_funcs;
RESULT:
	ERROR - (3523, 'Unknown authorization ID `pg_monitor`@`%`')

-----------
QUERY:

-- Role is now part of pg_monitor, so these are available.
SELECT has_function_privilege('regress_slot_dir_funcs',
  'pg_ls_logicalsnapdir()', 'EXECUTE');
RESULT:
	ERROR - (1305, 'FUNCTION test.has_function_privilege does not exist')

-----------
QUERY:

SELECT has_function_privilege('regress_slot_dir_funcs',
  'pg_ls_logicalmapdir()', 'EXECUTE');
RESULT:
	ERROR - (1305, 'FUNCTION test.has_function_privilege does not exist')

-----------
QUERY:

SELECT has_function_privilege('regress_slot_dir_funcs',
  'pg_ls_replslotdir(text)', 'EXECUTE');
RESULT:
	ERROR - (1305, 'FUNCTION test.has_function_privilege does not exist')

-----------
QUERY:

DROP ROLE regress_slot_dir_funcs;
RESULT:
	[]

-----------
QUERY:


--
-- Test adding a support function to a subject function
--

CREATE FUNCTION my_int_eq(int, int) RETURNS bool
  LANGUAGE internal STRICT IMMUTABLE PARALLEL SAFE
  AS $$int4eq$$;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'int, int) RETURNS bool\n  LANGUAGE internal STRICT IMMUTABLE PARALLEL SAFE\n  AS $' at line 5")

-----------
QUERY:


-- By default, planner does not think that/* REPLACED */''s selective
EXPLAIN (COSTS OFF)
SELECT * FROM tenk1 a JOIN tenk1 b ON a.unique1 = b.unique1
WHERE my_int_eq(a.unique2, 42);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'COSTS OFF)\nSELECT * FROM tenk1 a JOIN tenk1 b ON a.unique1 = b.unique1\nWHERE my_' at line 2")

-----------
QUERY:


-- With support function that knows it/* REPLACED */''s int4eq, we get a different plan
CREATE FUNCTION test_support_func(internal)
    RETURNS internal
    AS /* REPLACED */'/home/keuscha/Documents/FS2024/AST/project/postgresql/src/test/regress/regress.so', 'test_support_func'
    LANGUAGE C STRICT;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')\n    RETURNS internal\n    AS /* REPLACED */'/home/keuscha/Documents/FS2024/AST/' at line 2")

-----------
QUERY:


ALTER FUNCTION my_int_eq(int, int) SUPPORT test_support_func;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(int, int) SUPPORT test_support_func' at line 1")

-----------
QUERY:


EXPLAIN (COSTS OFF)
SELECT * FROM tenk1 a JOIN tenk1 b ON a.unique1 = b.unique1
WHERE my_int_eq(a.unique2, 42);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'COSTS OFF)\nSELECT * FROM tenk1 a JOIN tenk1 b ON a.unique1 = b.unique1\nWHERE my_' at line 1")

-----------
QUERY:


-- Also test non-default rowcount estimate
CREATE FUNCTION my_gen_series(int, int) RETURNS SETOF integer
  LANGUAGE internal STRICT IMMUTABLE PARALLEL SAFE
  AS $$generate_series_int4$$
  SUPPORT test_support_func;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'int, int) RETURNS SETOF integer\n  LANGUAGE internal STRICT IMMUTABLE PARALLEL SA' at line 2")

-----------
QUERY:


EXPLAIN (COSTS OFF)
SELECT * FROM tenk1 a JOIN my_gen_series(1,1000) g ON a.unique1 = g;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'COSTS OFF)\nSELECT * FROM tenk1 a JOIN my_gen_series(1,1000) g ON a.unique1 = g' at line 1")

-----------
QUERY:


EXPLAIN (COSTS OFF)
SELECT * FROM tenk1 a JOIN my_gen_series(1,10) g ON a.unique1 = g;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'COSTS OFF)\nSELECT * FROM tenk1 a JOIN my_gen_series(1,10) g ON a.unique1 = g' at line 1")

-----------
QUERY:


-- Test functions for control data
SELECT count(*) > 0 AS ok FROM pg_control_checkpoint();
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '()' at line 2")

-----------
QUERY:

SELECT count(*) > 0 AS ok FROM pg_control_init();
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '()' at line 1")

-----------
QUERY:

SELECT count(*) > 0 AS ok FROM pg_control_recovery();
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '()' at line 1")

-----------
QUERY:

SELECT count(*) > 0 AS ok FROM pg_control_system();
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '()' at line 1")

-----------
QUERY:


-- pg_split_walfile_name, pg_walfile_name & pg_walfile_name_offset
SELECT * FROM pg_split_walfile_name(NULL);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(NULL)' at line 2")

-----------
QUERY:

SELECT * FROM pg_split_walfile_name('invalid');
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '('invalid')' at line 1")

-----------
QUERY:

SELECT segment_number > 0 AS ok_segment_number, timeline_id
  FROM pg_split_walfile_name('000000010000000100000000');
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '('000000010000000100000000')' at line 2")

-----------
QUERY:

SELECT segment_number > 0 AS ok_segment_number, timeline_id
  FROM pg_split_walfile_name('ffffffFF00000001000000af');
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '('ffffffFF00000001000000af')' at line 2")

-----------
QUERY:

SELECT setting::int8 AS segment_size
FROM pg_settings
WHERE name = 'wal_segment_size'
\gset
SELECT segment_number, file_offset
FROM pg_walfile_name_offset('0/0'::pg_lsn + :segment_size),
     pg_split_walfile_name(file_name);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::int8 AS segment_size\nFROM pg_settings\nWHERE name = 'wal_segment_size'\n\\gset\nSE' at line 1")

-----------
QUERY:

SELECT segment_number, file_offset
FROM pg_walfile_name_offset('0/0'::pg_lsn + :segment_size + 1),
     pg_split_walfile_name(file_name);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '('0/0'::pg_lsn + :segment_size + 1),\n     pg_split_walfile_name(file_name)' at line 2")

-----------
QUERY:

SELECT segment_number, file_offset = :segment_size - 1
FROM pg_walfile_name_offset('0/0'::pg_lsn + :segment_size - 1),
     pg_split_walfile_name(file_name);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':segment_size - 1\nFROM pg_walfile_name_offset('0/0'::pg_lsn + :segment_size - 1)' at line 1")

-----------
QUERY:


-- test stratnum support functions
SELECT gist_stratnum_identity(3::smallint);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::smallint)' at line 2")

-----------
QUERY:

SELECT gist_stratnum_identity(18::smallint);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::smallint)' at line 1")

-----------
QUERY:


-- pg_current_logfile
CREATE ROLE regress_current_logfile;
RESULT:
	[]

-----------
QUERY:

-- not available by default
SELECT has_function_privilege('regress_current_logfile',
  'pg_current_logfile()', 'EXECUTE');
RESULT:
	ERROR - (1305, 'FUNCTION test.has_function_privilege does not exist')

-----------
QUERY:

GRANT pg_monitor TO regress_current_logfile;
RESULT:
	ERROR - (3523, 'Unknown authorization ID `pg_monitor`@`%`')

-----------
QUERY:

-- role has privileges of pg_monitor and can execute the function
SELECT has_function_privilege('regress_current_logfile',
  'pg_current_logfile()', 'EXECUTE');
RESULT:
	ERROR - (1305, 'FUNCTION test.has_function_privilege does not exist')

-----------
QUERY:

DROP ROLE regress_current_logfile;
RESULT:
	[]

-----------
QUERY:


-- pg_column_toast_chunk_id
CREATE TABLE test_chunk_id (a TEXT, b TEXT STORAGE EXTERNAL);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'EXTERNAL)' at line 2")

-----------
QUERY:

INSERT INTO test_chunk_id VALUES ('x', repeat('x', 8192));
RESULT:
	ERROR - (1146, "Table 'test.test_chunk_id' doesn't exist")

-----------
QUERY:

SELECT t.relname AS toastrel FROM pg_class c
  LEFT JOIN pg_class t ON c.reltoastrelid = t.oid
  WHERE c.relname = 'test_chunk_id'
\gset
SELECT pg_column_toast_chunk_id(a) IS NULL,
  pg_column_toast_chunk_id(b) IN (SELECT chunk_id FROM pg_toast.:toastrel)
  FROM test_chunk_id;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '\\gset\nSELECT pg_column_toast_chunk_id(a) IS NULL,\n  pg_column_toast_chunk_id(b) ' at line 4")

-----------
QUERY:

DROP TABLE test_chunk_id;
RESULT:
	ERROR - (1051, "Unknown table 'test.test_chunk_id'")
