Guest DBMS identified: postgres
-----------
QUERY:
--
-- MONEY
--
-- Note that we assume lc_monetary has been set to C.
--

CREATE TABLE money_data (m money);
RESULT: [duckdb: ERROR, mySQL: ERROR]

-----------
QUERY:


INSERT INTO money_data VALUES ('123');
RESULT: [duckdb: ERROR, mySQL: ERROR]

-----------
QUERY:

SELECT * FROM money_data;
RESULT: [duckdb: ERROR, mySQL: ERROR]

-----------
QUERY:

SELECT m + '123' FROM money_data;
RESULT: [duckdb: ERROR, mySQL: ERROR]

-----------
QUERY:

SELECT m + '123.45' FROM money_data;
RESULT: [duckdb: ERROR, mySQL: ERROR]

-----------
QUERY:

SELECT m - '123.45' FROM money_data;
RESULT: [duckdb: ERROR, mySQL: ERROR]

-----------
QUERY:

SELECT m / '2'::money FROM money_data;
RESULT: [duckdb: ERROR, mySQL: ERROR]

-----------
QUERY:

SELECT m * 2 FROM money_data;
RESULT: [duckdb: ERROR, mySQL: ERROR]

-----------
QUERY:

SELECT 2 * m FROM money_data;
RESULT: [duckdb: ERROR, mySQL: ERROR]

-----------
QUERY:

SELECT m / 2 FROM money_data;
RESULT: [duckdb: ERROR, mySQL: ERROR]

-----------
QUERY:

SELECT m * 2::int2 FROM money_data;
RESULT: [duckdb: ERROR, mySQL: ERROR]

-----------
QUERY:

SELECT 2::int2 * m FROM money_data;
RESULT: [duckdb: ERROR, mySQL: ERROR]

-----------
QUERY:

SELECT m / 2::int2 FROM money_data;
RESULT: [duckdb: ERROR, mySQL: ERROR]

-----------
QUERY:

SELECT m * 2::int8 FROM money_data;
RESULT: [duckdb: ERROR, mySQL: ERROR]

-----------
QUERY:

SELECT 2::int8 * m FROM money_data;
RESULT: [duckdb: ERROR, mySQL: ERROR]

-----------
QUERY:

SELECT m / 2::int8 FROM money_data;
RESULT: [duckdb: ERROR, mySQL: ERROR]

-----------
QUERY:

SELECT m * 2::float8 FROM money_data;
RESULT: [duckdb: ERROR, mySQL: ERROR]

-----------
QUERY:

SELECT 2::float8 * m FROM money_data;
RESULT: [duckdb: ERROR, mySQL: ERROR]

-----------
QUERY:

SELECT m / 2::float8 FROM money_data;
RESULT: [duckdb: ERROR, mySQL: ERROR]

-----------
QUERY:

SELECT m * 2::float4 FROM money_data;
RESULT: [duckdb: ERROR, mySQL: ERROR]

-----------
QUERY:

SELECT 2::float4 * m FROM money_data;
RESULT: [duckdb: ERROR, mySQL: ERROR]

-----------
QUERY:

SELECT m / 2::float4 FROM money_data;
RESULT: [duckdb: ERROR, mySQL: ERROR]

-----------
QUERY:


-- All true
SELECT m = '$123.00' FROM money_data;
RESULT: [duckdb: SAME, mySQL: SAME]

-----------
QUERY:

SELECT m != '$124.00' FROM money_data;
RESULT: [duckdb: SAME, mySQL: SAME]

-----------
QUERY:

SELECT m <= '$123.00' FROM money_data;
RESULT: [duckdb: SAME, mySQL: SAME]

-----------
QUERY:

SELECT m >= '$123.00' FROM money_data;
RESULT: [duckdb: SAME, mySQL: SAME]

-----------
QUERY:

SELECT m < '$124.00' FROM money_data;
RESULT: [duckdb: SAME, mySQL: SAME]

-----------
QUERY:

SELECT m > '$122.00' FROM money_data;
RESULT: [duckdb: SAME, mySQL: SAME]

-----------
QUERY:


-- All false
SELECT m = '$123.01' FROM money_data;
RESULT: [duckdb: SAME, mySQL: SAME]

-----------
QUERY:

SELECT m != '$123.00' FROM money_data;
RESULT: [duckdb: SAME, mySQL: SAME]

-----------
QUERY:

SELECT m <= '$122.99' FROM money_data;
RESULT: [duckdb: SAME, mySQL: SAME]

-----------
QUERY:

SELECT m >= '$123.01' FROM money_data;
RESULT: [duckdb: SAME, mySQL: SAME]

-----------
QUERY:

SELECT m > '$124.00' FROM money_data;
RESULT: [duckdb: SAME, mySQL: SAME]

-----------
QUERY:

SELECT m < '$122.00' FROM money_data;
RESULT: [duckdb: SAME, mySQL: SAME]

-----------
QUERY:


SELECT cashlarger(m, '$124.00') FROM money_data;
RESULT: [duckdb: SAME, mySQL: SAME]

-----------
QUERY:

SELECT cashsmaller(m, '$124.00') FROM money_data;
RESULT: [duckdb: SAME, mySQL: SAME]

-----------
QUERY:

SELECT cash_words(m) FROM money_data;
RESULT: [duckdb: ERROR, mySQL: ERROR]

-----------
QUERY:

SELECT cash_words(m + '1.23') FROM money_data;
RESULT: [duckdb: ERROR, mySQL: ERROR]

-----------
QUERY:


DELETE FROM money_data;
RESULT: [duckdb: ERROR, mySQL: ERROR]

-----------
QUERY:

INSERT INTO money_data VALUES ('$123.45');
RESULT: [duckdb: SAME, mySQL: SAME]

-----------
QUERY:

SELECT * FROM money_data;
RESULT: [duckdb: ERROR, mySQL: ERROR]

-----------
QUERY:


DELETE FROM money_data;
RESULT: [duckdb: ERROR, mySQL: ERROR]

-----------
QUERY:

INSERT INTO money_data VALUES ('$123.451');
RESULT: [duckdb: SAME, mySQL: SAME]

-----------
QUERY:

SELECT * FROM money_data;
RESULT: [duckdb: ERROR, mySQL: ERROR]

-----------
QUERY:


DELETE FROM money_data;
RESULT: [duckdb: ERROR, mySQL: ERROR]

-----------
QUERY:

INSERT INTO money_data VALUES ('$123.454');
RESULT: [duckdb: SAME, mySQL: SAME]

-----------
QUERY:

SELECT * FROM money_data;
RESULT: [duckdb: ERROR, mySQL: ERROR]

-----------
QUERY:


DELETE FROM money_data;
RESULT: [duckdb: ERROR, mySQL: ERROR]

-----------
QUERY:

INSERT INTO money_data VALUES ('$123.455');
RESULT: [duckdb: SAME, mySQL: SAME]

-----------
QUERY:

SELECT * FROM money_data;
RESULT: [duckdb: ERROR, mySQL: ERROR]

-----------
QUERY:


DELETE FROM money_data;
RESULT: [duckdb: ERROR, mySQL: ERROR]

-----------
QUERY:

INSERT INTO money_data VALUES ('$123.456');
RESULT: [duckdb: SAME, mySQL: SAME]

-----------
QUERY:

SELECT * FROM money_data;
RESULT: [duckdb: ERROR, mySQL: ERROR]

-----------
QUERY:


DELETE FROM money_data;
RESULT: [duckdb: ERROR, mySQL: ERROR]

-----------
QUERY:

INSERT INTO money_data VALUES ('$123.459');
RESULT: [duckdb: SAME, mySQL: SAME]

-----------
QUERY:

SELECT * FROM money_data;
RESULT: [duckdb: ERROR, mySQL: ERROR]

-----------
QUERY:


-- input checks
SELECT '1234567890'::money;
RESULT: [duckdb: ERROR, mySQL: ERROR]

-----------
QUERY:

SELECT '12345678901234567'::money;
RESULT: [duckdb: ERROR, mySQL: ERROR]

-----------
QUERY:

SELECT '123456789012345678'::money;
RESULT: [duckdb: SAME, mySQL: SAME]

-----------
QUERY:

SELECT '9223372036854775807'::money;
RESULT: [duckdb: SAME, mySQL: SAME]

-----------
QUERY:

SELECT '-12345'::money;
RESULT: [duckdb: ERROR, mySQL: ERROR]

-----------
QUERY:

SELECT '-1234567890'::money;
RESULT: [duckdb: ERROR, mySQL: ERROR]

-----------
QUERY:

SELECT '-12345678901234567'::money;
RESULT: [duckdb: ERROR, mySQL: ERROR]

-----------
QUERY:

SELECT '-123456789012345678'::money;
RESULT: [duckdb: SAME, mySQL: SAME]

-----------
QUERY:

SELECT '-9223372036854775808'::money;
RESULT: [duckdb: SAME, mySQL: SAME]

-----------
QUERY:


-- special characters
SELECT '(1)'::money;
RESULT: [duckdb: ERROR, mySQL: ERROR]

-----------
QUERY:

SELECT '($123,456.78)'::money;
RESULT: [duckdb: SAME, mySQL: SAME]

-----------
QUERY:


-- test non-error-throwing API
SELECT pg_input_is_valid('\x0001', 'money');
RESULT: [duckdb: ERROR, mySQL: ERROR]

-----------
QUERY:

SELECT * FROM pg_input_error_info('\x0001', 'money');
RESULT: [duckdb: ERROR, mySQL: ERROR]

-----------
QUERY:

SELECT pg_input_is_valid('192233720368547758.07', 'money');
RESULT: [duckdb: ERROR, mySQL: ERROR]

-----------
QUERY:

SELECT * FROM pg_input_error_info('192233720368547758.07', 'money');
RESULT: [duckdb: ERROR, mySQL: ERROR]

-----------
QUERY:


-- documented minimums and maximums
SELECT '-92233720368547758.08'::money;
RESULT: [duckdb: ERROR, mySQL: ERROR]

-----------
QUERY:

SELECT '92233720368547758.07'::money;
RESULT: [duckdb: ERROR, mySQL: ERROR]

-----------
QUERY:


SELECT '-92233720368547758.09'::money;
RESULT: [duckdb: SAME, mySQL: SAME]

-----------
QUERY:

SELECT '92233720368547758.08'::money;
RESULT: [duckdb: SAME, mySQL: SAME]

-----------
QUERY:


-- rounding
SELECT '-92233720368547758.085'::money;
RESULT: [duckdb: SAME, mySQL: SAME]

-----------
QUERY:

SELECT '92233720368547758.075'::money;
RESULT: [duckdb: SAME, mySQL: SAME]

-----------
QUERY:


-- rounding vs. truncation in division
SELECT '878.08'::money / 11::float8;
RESULT: [duckdb: ERROR, mySQL: ERROR]

-----------
QUERY:

SELECT '878.08'::money / 11::float4;
RESULT: [duckdb: ERROR, mySQL: ERROR]

-----------
QUERY:

SELECT '878.08'::money / 11::bigint;
RESULT: [duckdb: ERROR, mySQL: ERROR]

-----------
QUERY:

SELECT '878.08'::money / 11::int;
RESULT: [duckdb: ERROR, mySQL: ERROR]

-----------
QUERY:

SELECT '878.08'::money / 11::smallint;
RESULT: [duckdb: ERROR, mySQL: ERROR]

-----------
QUERY:


-- check for precision loss in division
SELECT '90000000000000099.00'::money / 10::bigint;
RESULT: [duckdb: ERROR, mySQL: ERROR]

-----------
QUERY:

SELECT '90000000000000099.00'::money / 10::int;
RESULT: [duckdb: ERROR, mySQL: ERROR]

-----------
QUERY:

SELECT '90000000000000099.00'::money / 10::smallint;
RESULT: [duckdb: ERROR, mySQL: ERROR]

-----------
QUERY:


-- Cast int4/int8/numeric to money
SELECT 1234567890::money;
RESULT: [duckdb: ERROR, mySQL: ERROR]

-----------
QUERY:

SELECT 12345678901234567::money;
RESULT: [duckdb: ERROR, mySQL: ERROR]

-----------
QUERY:

SELECT (-12345)::money;
RESULT: [duckdb: ERROR, mySQL: ERROR]

-----------
QUERY:

SELECT (-1234567890)::money;
RESULT: [duckdb: ERROR, mySQL: ERROR]

-----------
QUERY:

SELECT (-12345678901234567)::money;
RESULT: [duckdb: ERROR, mySQL: ERROR]

-----------
QUERY:

SELECT 1234567890::int4::money;
RESULT: [duckdb: ERROR, mySQL: ERROR]

-----------
QUERY:

SELECT 12345678901234567::int8::money;
RESULT: [duckdb: ERROR, mySQL: ERROR]

-----------
QUERY:

SELECT 12345678901234567::numeric::money;
RESULT: [duckdb: ERROR, mySQL: ERROR]

-----------
QUERY:

SELECT (-1234567890)::int4::money;
RESULT: [duckdb: ERROR, mySQL: ERROR]

-----------
QUERY:

SELECT (-12345678901234567)::int8::money;
RESULT: [duckdb: ERROR, mySQL: ERROR]

-----------
QUERY:

SELECT (-12345678901234567)::numeric::money;
RESULT: [duckdb: ERROR, mySQL: ERROR]

-----------
QUERY:


-- Cast from money to numeric
SELECT '12345678901234567'::money::numeric;
RESULT: [duckdb: ERROR, mySQL: ERROR]

-----------
QUERY:

SELECT '-12345678901234567'::money::numeric;
RESULT: [duckdb: ERROR, mySQL: ERROR]

-----------
QUERY:

SELECT '92233720368547758.07'::money::numeric;
RESULT: [duckdb: ERROR, mySQL: ERROR]

-----------
QUERY:

SELECT '-92233720368547758.08'::money::numeric;
RESULT: [duckdb: ERROR, mySQL: ERROR]
=========================================
Summary for test case money/test.sql of postgres
=========================================

=================
Results for duckdb
SAME: 29 queries, which is 29.00%
DIFFERENT: 0 queries, which is 0.00%
ERROR: 71 queries, which is 71.00%

=================
Results for mySQL
SAME: 29 queries, which is 29.00%
DIFFERENT: 0 queries, which is 0.00%
ERROR: 71 queries, which is 71.00%
