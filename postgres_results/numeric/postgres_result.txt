
-----------
QUERY:
--
-- NUMERIC
--

CREATE TABLE num_data (id int4, val numeric(210,10));
RESULT:
	[]

-----------
QUERY:

CREATE TABLE num_exp_add (id1 int4, id2 int4, expected numeric(210,10));
RESULT:
	[]

-----------
QUERY:

CREATE TABLE num_exp_sub (id1 int4, id2 int4, expected numeric(210,10));
RESULT:
	[]

-----------
QUERY:

CREATE TABLE num_exp_div (id1 int4, id2 int4, expected numeric(210,10));
RESULT:
	[]

-----------
QUERY:

CREATE TABLE num_exp_mul (id1 int4, id2 int4, expected numeric(210,10));
RESULT:
	[]

-----------
QUERY:

CREATE TABLE num_exp_sqrt (id int4, expected numeric(210,10));
RESULT:
	[]

-----------
QUERY:

CREATE TABLE num_exp_ln (id int4, expected numeric(210,10));
RESULT:
	[]

-----------
QUERY:

CREATE TABLE num_exp_log10 (id int4, expected numeric(210,10));
RESULT:
	[]

-----------
QUERY:

CREATE TABLE num_exp_power_10_ln (id int4, expected numeric(210,10));
RESULT:
	[]

-----------
QUERY:


CREATE TABLE num_result (id1 int4, id2 int4, result numeric(210,10));
RESULT:
	[]

-----------
QUERY:



-- ******************************
-- * The following EXPECTED results are computed by bc(1)
-- * with a scale of 200
-- ******************************

BEGIN TRANSACTION;
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_add VALUES (0,0,'0');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_sub VALUES (0,0,'0');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_mul VALUES (0,0,'0');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_div VALUES (0,0,'NaN');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_add VALUES (0,1,'0');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_sub VALUES (0,1,'0');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_mul VALUES (0,1,'0');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_div VALUES (0,1,'NaN');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_add VALUES (0,2,'-34338492.215397047');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_sub VALUES (0,2,'34338492.215397047');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_mul VALUES (0,2,'0');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_div VALUES (0,2,'0');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_add VALUES (0,3,'4.31');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_sub VALUES (0,3,'-4.31');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_mul VALUES (0,3,'0');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_div VALUES (0,3,'0');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_add VALUES (0,4,'7799461.4119');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_sub VALUES (0,4,'-7799461.4119');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_mul VALUES (0,4,'0');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_div VALUES (0,4,'0');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_add VALUES (0,5,'16397.038491');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_sub VALUES (0,5,'-16397.038491');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_mul VALUES (0,5,'0');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_div VALUES (0,5,'0');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_add VALUES (0,6,'93901.57763026');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_sub VALUES (0,6,'-93901.57763026');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_mul VALUES (0,6,'0');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_div VALUES (0,6,'0');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_add VALUES (0,7,'-83028485');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_sub VALUES (0,7,'83028485');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_mul VALUES (0,7,'0');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_div VALUES (0,7,'0');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_add VALUES (0,8,'74881');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_sub VALUES (0,8,'-74881');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_mul VALUES (0,8,'0');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_div VALUES (0,8,'0');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_add VALUES (0,9,'-24926804.045047420');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_sub VALUES (0,9,'24926804.045047420');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_mul VALUES (0,9,'0');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_div VALUES (0,9,'0');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_add VALUES (1,0,'0');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_sub VALUES (1,0,'0');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_mul VALUES (1,0,'0');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_div VALUES (1,0,'NaN');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_add VALUES (1,1,'0');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_sub VALUES (1,1,'0');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_mul VALUES (1,1,'0');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_div VALUES (1,1,'NaN');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_add VALUES (1,2,'-34338492.215397047');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_sub VALUES (1,2,'34338492.215397047');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_mul VALUES (1,2,'0');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_div VALUES (1,2,'0');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_add VALUES (1,3,'4.31');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_sub VALUES (1,3,'-4.31');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_mul VALUES (1,3,'0');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_div VALUES (1,3,'0');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_add VALUES (1,4,'7799461.4119');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_sub VALUES (1,4,'-7799461.4119');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_mul VALUES (1,4,'0');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_div VALUES (1,4,'0');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_add VALUES (1,5,'16397.038491');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_sub VALUES (1,5,'-16397.038491');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_mul VALUES (1,5,'0');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_div VALUES (1,5,'0');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_add VALUES (1,6,'93901.57763026');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_sub VALUES (1,6,'-93901.57763026');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_mul VALUES (1,6,'0');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_div VALUES (1,6,'0');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_add VALUES (1,7,'-83028485');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_sub VALUES (1,7,'83028485');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_mul VALUES (1,7,'0');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_div VALUES (1,7,'0');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_add VALUES (1,8,'74881');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_sub VALUES (1,8,'-74881');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_mul VALUES (1,8,'0');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_div VALUES (1,8,'0');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_add VALUES (1,9,'-24926804.045047420');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_sub VALUES (1,9,'24926804.045047420');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_mul VALUES (1,9,'0');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_div VALUES (1,9,'0');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_add VALUES (2,0,'-34338492.215397047');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_sub VALUES (2,0,'-34338492.215397047');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_mul VALUES (2,0,'0');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_div VALUES (2,0,'NaN');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_add VALUES (2,1,'-34338492.215397047');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_sub VALUES (2,1,'-34338492.215397047');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_mul VALUES (2,1,'0');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_div VALUES (2,1,'NaN');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_add VALUES (2,2,'-68676984.430794094');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_sub VALUES (2,2,'0');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_mul VALUES (2,2,'1179132047626883.596862135856320209');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_div VALUES (2,2,'1.00000000000000000000');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_add VALUES (2,3,'-34338487.905397047');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_sub VALUES (2,3,'-34338496.525397047');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_mul VALUES (2,3,'-147998901.44836127257');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_div VALUES (2,3,'-7967167.56737750510440835266');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_add VALUES (2,4,'-26539030.803497047');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_sub VALUES (2,4,'-42137953.627297047');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_mul VALUES (2,4,'-267821744976817.8111137106593');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_div VALUES (2,4,'-4.40267480046830116685');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_add VALUES (2,5,'-34322095.176906047');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_sub VALUES (2,5,'-34354889.253888047');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_mul VALUES (2,5,'-563049578578.769242506736077');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_div VALUES (2,5,'-2094.18866914563535496429');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_add VALUES (2,6,'-34244590.637766787');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_sub VALUES (2,6,'-34432393.793027307');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_mul VALUES (2,6,'-3224438592470.18449811926184222');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_div VALUES (2,6,'-365.68599891479766440940');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_add VALUES (2,7,'-117366977.215397047');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_sub VALUES (2,7,'48689992.784602953');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_mul VALUES (2,7,'2851072985828710.485883795');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_div VALUES (2,7,'.41357483778485235518');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_add VALUES (2,8,'-34263611.215397047');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_sub VALUES (2,8,'-34413373.215397047');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_mul VALUES (2,8,'-2571300635581.146276407');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_div VALUES (2,8,'-458.57416721727870888476');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_add VALUES (2,9,'-59265296.260444467');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_sub VALUES (2,9,'-9411688.170349627');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_mul VALUES (2,9,'855948866655588.453741509242968740');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_div VALUES (2,9,'1.37757299946438931811');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_add VALUES (3,0,'4.31');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_sub VALUES (3,0,'4.31');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_mul VALUES (3,0,'0');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_div VALUES (3,0,'NaN');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_add VALUES (3,1,'4.31');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_sub VALUES (3,1,'4.31');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_mul VALUES (3,1,'0');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_div VALUES (3,1,'NaN');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_add VALUES (3,2,'-34338487.905397047');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_sub VALUES (3,2,'34338496.525397047');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_mul VALUES (3,2,'-147998901.44836127257');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_div VALUES (3,2,'-.00000012551512084352');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_add VALUES (3,3,'8.62');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_sub VALUES (3,3,'0');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_mul VALUES (3,3,'18.5761');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_div VALUES (3,3,'1.00000000000000000000');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_add VALUES (3,4,'7799465.7219');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_sub VALUES (3,4,'-7799457.1019');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_mul VALUES (3,4,'33615678.685289');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_div VALUES (3,4,'.00000055260225961552');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_add VALUES (3,5,'16401.348491');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_sub VALUES (3,5,'-16392.728491');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_mul VALUES (3,5,'70671.23589621');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_div VALUES (3,5,'.00026285234387695504');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_add VALUES (3,6,'93905.88763026');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_sub VALUES (3,6,'-93897.26763026');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_mul VALUES (3,6,'404715.7995864206');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_div VALUES (3,6,'.00004589912234457595');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_add VALUES (3,7,'-83028480.69');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_sub VALUES (3,7,'83028489.31');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_mul VALUES (3,7,'-357852770.35');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_div VALUES (3,7,'-.00000005190989574240');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_add VALUES (3,8,'74885.31');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_sub VALUES (3,8,'-74876.69');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_mul VALUES (3,8,'322737.11');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_div VALUES (3,8,'.00005755799201399553');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_add VALUES (3,9,'-24926799.735047420');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_sub VALUES (3,9,'24926808.355047420');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_mul VALUES (3,9,'-107434525.43415438020');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_div VALUES (3,9,'-.00000017290624149854');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_add VALUES (4,0,'7799461.4119');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_sub VALUES (4,0,'7799461.4119');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_mul VALUES (4,0,'0');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_div VALUES (4,0,'NaN');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_add VALUES (4,1,'7799461.4119');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_sub VALUES (4,1,'7799461.4119');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_mul VALUES (4,1,'0');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_div VALUES (4,1,'NaN');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_add VALUES (4,2,'-26539030.803497047');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_sub VALUES (4,2,'42137953.627297047');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_mul VALUES (4,2,'-267821744976817.8111137106593');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_div VALUES (4,2,'-.22713465002993920385');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_add VALUES (4,3,'7799465.7219');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_sub VALUES (4,3,'7799457.1019');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_mul VALUES (4,3,'33615678.685289');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_div VALUES (4,3,'1809619.81714617169373549883');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_add VALUES (4,4,'15598922.8238');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_sub VALUES (4,4,'0');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_mul VALUES (4,4,'60831598315717.14146161');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_div VALUES (4,4,'1.00000000000000000000');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_add VALUES (4,5,'7815858.450391');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_sub VALUES (4,5,'7783064.373409');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_mul VALUES (4,5,'127888068979.9935054429');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_div VALUES (4,5,'475.66281046305802686061');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_add VALUES (4,6,'7893362.98953026');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_sub VALUES (4,6,'7705559.83426974');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_mul VALUES (4,6,'732381731243.745115764094');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_div VALUES (4,6,'83.05996138436129499606');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_add VALUES (4,7,'-75229023.5881');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_sub VALUES (4,7,'90827946.4119');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_mul VALUES (4,7,'-647577464846017.9715');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_div VALUES (4,7,'-.09393717604145131637');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_add VALUES (4,8,'7874342.4119');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_sub VALUES (4,8,'7724580.4119');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_mul VALUES (4,8,'584031469984.4839');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_div VALUES (4,8,'104.15808298366741897143');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_add VALUES (4,9,'-17127342.633147420');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_sub VALUES (4,9,'32726265.456947420');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_mul VALUES (4,9,'-194415646271340.1815956522980');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_div VALUES (4,9,'-.31289456112403769409');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_add VALUES (5,0,'16397.038491');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_sub VALUES (5,0,'16397.038491');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_mul VALUES (5,0,'0');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_div VALUES (5,0,'NaN');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_add VALUES (5,1,'16397.038491');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_sub VALUES (5,1,'16397.038491');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_mul VALUES (5,1,'0');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_div VALUES (5,1,'NaN');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_add VALUES (5,2,'-34322095.176906047');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_sub VALUES (5,2,'34354889.253888047');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_mul VALUES (5,2,'-563049578578.769242506736077');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_div VALUES (5,2,'-.00047751189505192446');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_add VALUES (5,3,'16401.348491');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_sub VALUES (5,3,'16392.728491');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_mul VALUES (5,3,'70671.23589621');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_div VALUES (5,3,'3804.41728329466357308584');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_add VALUES (5,4,'7815858.450391');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_sub VALUES (5,4,'-7783064.373409');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_mul VALUES (5,4,'127888068979.9935054429');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_div VALUES (5,4,'.00210232958726897192');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_add VALUES (5,5,'32794.076982');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_sub VALUES (5,5,'0');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_mul VALUES (5,5,'268862871.275335557081');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_div VALUES (5,5,'1.00000000000000000000');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_add VALUES (5,6,'110298.61612126');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_sub VALUES (5,6,'-77504.53913926');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_mul VALUES (5,6,'1539707782.76899778633766');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_div VALUES (5,6,'.17461941433576102689');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_add VALUES (5,7,'-83012087.961509');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_sub VALUES (5,7,'83044882.038491');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_mul VALUES (5,7,'-1361421264394.416135');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_div VALUES (5,7,'-.00019748690453643710');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_add VALUES (5,8,'91278.038491');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_sub VALUES (5,8,'-58483.961509');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_mul VALUES (5,8,'1227826639.244571');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_div VALUES (5,8,'.21897461960978085228');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_add VALUES (5,9,'-24910407.006556420');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_sub VALUES (5,9,'24943201.083538420');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_mul VALUES (5,9,'-408725765384.257043660243220');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_div VALUES (5,9,'-.00065780749354660427');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_add VALUES (6,0,'93901.57763026');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_sub VALUES (6,0,'93901.57763026');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_mul VALUES (6,0,'0');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_div VALUES (6,0,'NaN');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_add VALUES (6,1,'93901.57763026');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_sub VALUES (6,1,'93901.57763026');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_mul VALUES (6,1,'0');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_div VALUES (6,1,'NaN');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_add VALUES (6,2,'-34244590.637766787');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_sub VALUES (6,2,'34432393.793027307');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_mul VALUES (6,2,'-3224438592470.18449811926184222');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_div VALUES (6,2,'-.00273458651128995823');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_add VALUES (6,3,'93905.88763026');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_sub VALUES (6,3,'93897.26763026');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_mul VALUES (6,3,'404715.7995864206');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_div VALUES (6,3,'21786.90896293735498839907');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_add VALUES (6,4,'7893362.98953026');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_sub VALUES (6,4,'-7705559.83426974');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_mul VALUES (6,4,'732381731243.745115764094');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_div VALUES (6,4,'.01203949512295682469');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_add VALUES (6,5,'110298.61612126');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_sub VALUES (6,5,'77504.53913926');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_mul VALUES (6,5,'1539707782.76899778633766');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_div VALUES (6,5,'5.72674008674192359679');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_add VALUES (6,6,'187803.15526052');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_sub VALUES (6,6,'0');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_mul VALUES (6,6,'8817506281.4517452372676676');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_div VALUES (6,6,'1.00000000000000000000');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_add VALUES (6,7,'-82934583.42236974');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_sub VALUES (6,7,'83122386.57763026');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_mul VALUES (6,7,'-7796505729750.37795610');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_div VALUES (6,7,'-.00113095617281538980');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_add VALUES (6,8,'168782.57763026');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_sub VALUES (6,8,'19020.57763026');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_mul VALUES (6,8,'7031444034.53149906');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_div VALUES (6,8,'1.25401073209839612184');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_add VALUES (6,9,'-24832902.467417160');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_sub VALUES (6,9,'25020705.622677680');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_mul VALUES (6,9,'-2340666225110.29929521292692920');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_div VALUES (6,9,'-.00376709254265256789');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_add VALUES (7,0,'-83028485');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_sub VALUES (7,0,'-83028485');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_mul VALUES (7,0,'0');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_div VALUES (7,0,'NaN');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_add VALUES (7,1,'-83028485');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_sub VALUES (7,1,'-83028485');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_mul VALUES (7,1,'0');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_div VALUES (7,1,'NaN');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_add VALUES (7,2,'-117366977.215397047');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_sub VALUES (7,2,'-48689992.784602953');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_mul VALUES (7,2,'2851072985828710.485883795');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_div VALUES (7,2,'2.41794207151503385700');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_add VALUES (7,3,'-83028480.69');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_sub VALUES (7,3,'-83028489.31');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_mul VALUES (7,3,'-357852770.35');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_div VALUES (7,3,'-19264149.65197215777262180974');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_add VALUES (7,4,'-75229023.5881');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_sub VALUES (7,4,'-90827946.4119');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_mul VALUES (7,4,'-647577464846017.9715');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_div VALUES (7,4,'-10.64541262725136247686');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_add VALUES (7,5,'-83012087.961509');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_sub VALUES (7,5,'-83044882.038491');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_mul VALUES (7,5,'-1361421264394.416135');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_div VALUES (7,5,'-5063.62688881730941836574');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_add VALUES (7,6,'-82934583.42236974');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_sub VALUES (7,6,'-83122386.57763026');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_mul VALUES (7,6,'-7796505729750.37795610');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_div VALUES (7,6,'-884.20756174009028770294');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_add VALUES (7,7,'-166056970');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_sub VALUES (7,7,'0');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_mul VALUES (7,7,'6893729321395225');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_div VALUES (7,7,'1.00000000000000000000');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_add VALUES (7,8,'-82953604');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_sub VALUES (7,8,'-83103366');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_mul VALUES (7,8,'-6217255985285');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_div VALUES (7,8,'-1108.80577182462841041118');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_add VALUES (7,9,'-107955289.045047420');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_sub VALUES (7,9,'-58101680.954952580');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_mul VALUES (7,9,'2069634775752159.035758700');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_div VALUES (7,9,'3.33089171198810413382');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_add VALUES (8,0,'74881');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_sub VALUES (8,0,'74881');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_mul VALUES (8,0,'0');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_div VALUES (8,0,'NaN');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_add VALUES (8,1,'74881');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_sub VALUES (8,1,'74881');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_mul VALUES (8,1,'0');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_div VALUES (8,1,'NaN');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_add VALUES (8,2,'-34263611.215397047');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_sub VALUES (8,2,'34413373.215397047');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_mul VALUES (8,2,'-2571300635581.146276407');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_div VALUES (8,2,'-.00218067233500788615');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_add VALUES (8,3,'74885.31');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_sub VALUES (8,3,'74876.69');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_mul VALUES (8,3,'322737.11');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_div VALUES (8,3,'17373.78190255220417633410');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_add VALUES (8,4,'7874342.4119');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_sub VALUES (8,4,'-7724580.4119');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_mul VALUES (8,4,'584031469984.4839');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_div VALUES (8,4,'.00960079113741758956');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_add VALUES (8,5,'91278.038491');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_sub VALUES (8,5,'58483.961509');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_mul VALUES (8,5,'1227826639.244571');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_div VALUES (8,5,'4.56673929509287019456');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_add VALUES (8,6,'168782.57763026');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_sub VALUES (8,6,'-19020.57763026');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_mul VALUES (8,6,'7031444034.53149906');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_div VALUES (8,6,'.79744134113322314424');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_add VALUES (8,7,'-82953604');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_sub VALUES (8,7,'83103366');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_mul VALUES (8,7,'-6217255985285');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_div VALUES (8,7,'-.00090187120721280172');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_add VALUES (8,8,'149762');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_sub VALUES (8,8,'0');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_mul VALUES (8,8,'5607164161');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_div VALUES (8,8,'1.00000000000000000000');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_add VALUES (8,9,'-24851923.045047420');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_sub VALUES (8,9,'25001685.045047420');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_mul VALUES (8,9,'-1866544013697.195857020');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_div VALUES (8,9,'-.00300403532938582735');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_add VALUES (9,0,'-24926804.045047420');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_sub VALUES (9,0,'-24926804.045047420');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_mul VALUES (9,0,'0');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_div VALUES (9,0,'NaN');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_add VALUES (9,1,'-24926804.045047420');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_sub VALUES (9,1,'-24926804.045047420');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_mul VALUES (9,1,'0');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_div VALUES (9,1,'NaN');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_add VALUES (9,2,'-59265296.260444467');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_sub VALUES (9,2,'9411688.170349627');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_mul VALUES (9,2,'855948866655588.453741509242968740');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_div VALUES (9,2,'.72591434384152961526');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_add VALUES (9,3,'-24926799.735047420');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_sub VALUES (9,3,'-24926808.355047420');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_mul VALUES (9,3,'-107434525.43415438020');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_div VALUES (9,3,'-5783481.21694835730858468677');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_add VALUES (9,4,'-17127342.633147420');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_sub VALUES (9,4,'-32726265.456947420');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_mul VALUES (9,4,'-194415646271340.1815956522980');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_div VALUES (9,4,'-3.19596478892958416484');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_add VALUES (9,5,'-24910407.006556420');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_sub VALUES (9,5,'-24943201.083538420');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_mul VALUES (9,5,'-408725765384.257043660243220');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_div VALUES (9,5,'-1520.20159364322004505807');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_add VALUES (9,6,'-24832902.467417160');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_sub VALUES (9,6,'-25020705.622677680');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_mul VALUES (9,6,'-2340666225110.29929521292692920');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_div VALUES (9,6,'-265.45671195426965751280');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_add VALUES (9,7,'-107955289.045047420');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_sub VALUES (9,7,'58101680.954952580');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_mul VALUES (9,7,'2069634775752159.035758700');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_div VALUES (9,7,'.30021990699995814689');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_add VALUES (9,8,'-24851923.045047420');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_sub VALUES (9,8,'-25001685.045047420');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_mul VALUES (9,8,'-1866544013697.195857020');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_div VALUES (9,8,'-332.88556569820675471748');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_add VALUES (9,9,'-49853608.090094840');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_sub VALUES (9,9,'0');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_mul VALUES (9,9,'621345559900192.420120630048656400');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_div VALUES (9,9,'1.00000000000000000000');
RESULT:
	[]

-----------
QUERY:

COMMIT TRANSACTION;
RESULT:
	[]

-----------
QUERY:

BEGIN TRANSACTION;
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_sqrt VALUES (0,'0');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_sqrt VALUES (1,'0');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_sqrt VALUES (2,'5859.90547836712524903505');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_sqrt VALUES (3,'2.07605394920266944396');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_sqrt VALUES (4,'2792.75158435189147418923');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_sqrt VALUES (5,'128.05092147657509145473');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_sqrt VALUES (6,'306.43364311096782703406');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_sqrt VALUES (7,'9111.99676251039939975230');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_sqrt VALUES (8,'273.64392922189960397542');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_sqrt VALUES (9,'4992.67503899937593364766');
RESULT:
	[]

-----------
QUERY:

COMMIT TRANSACTION;
RESULT:
	[]

-----------
QUERY:

BEGIN TRANSACTION;
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_ln VALUES (0,'NaN');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_ln VALUES (1,'NaN');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_ln VALUES (2,'17.35177750493897715514');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_ln VALUES (3,'1.46093790411565641971');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_ln VALUES (4,'15.86956523951936572464');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_ln VALUES (5,'9.70485601768871834038');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_ln VALUES (6,'11.45000246622944403127');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_ln VALUES (7,'18.23469429965478772991');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_ln VALUES (8,'11.22365546576315513668');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_ln VALUES (9,'17.03145425013166006962');
RESULT:
	[]

-----------
QUERY:

COMMIT TRANSACTION;
RESULT:
	[]

-----------
QUERY:

BEGIN TRANSACTION;
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_log10 VALUES (0,'NaN');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_log10 VALUES (1,'NaN');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_log10 VALUES (2,'7.53578122160797276459');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_log10 VALUES (3,'.63447727016073160075');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_log10 VALUES (4,'6.89206461372691743345');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_log10 VALUES (5,'4.21476541614777768626');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_log10 VALUES (6,'4.97267288886207207671');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_log10 VALUES (7,'7.91922711353275546914');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_log10 VALUES (8,'4.87437163556421004138');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_log10 VALUES (9,'7.39666659961986567059');
RESULT:
	[]

-----------
QUERY:

COMMIT TRANSACTION;
RESULT:
	[]

-----------
QUERY:

BEGIN TRANSACTION;
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_power_10_ln VALUES (0,'NaN');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_power_10_ln VALUES (1,'NaN');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_power_10_ln VALUES (2,'224790267919917955.13261618583642653184');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_power_10_ln VALUES (3,'28.90266599445155957393');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_power_10_ln VALUES (4,'7405685069594999.07733999469386277636');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_power_10_ln VALUES (5,'5068226527.32127265408584640098');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_power_10_ln VALUES (6,'281839893606.99372343357047819067');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_power_10_ln VALUES (7,'1716699575118597095.42330819910640247627');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_power_10_ln VALUES (8,'167361463828.07491320069016125952');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_exp_power_10_ln VALUES (9,'107511333880052007.04141124673540337457');
RESULT:
	[]

-----------
QUERY:

COMMIT TRANSACTION;
RESULT:
	[]

-----------
QUERY:

BEGIN TRANSACTION;
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_data VALUES (0, '0');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_data VALUES (1, '0');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_data VALUES (2, '-34338492.215397047');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_data VALUES (3, '4.31');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_data VALUES (4, '7799461.4119');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_data VALUES (5, '16397.038491');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_data VALUES (6, '93901.57763026');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_data VALUES (7, '-83028485');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_data VALUES (8, '74881');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_data VALUES (9, '-24926804.045047420');
RESULT:
	[]

-----------
QUERY:

COMMIT TRANSACTION;
RESULT:
	[]

-----------
QUERY:


-- ******************************
-- * Create indices for faster checks
-- ******************************

CREATE UNIQUE INDEX num_exp_add_idx ON num_exp_add (id1, id2);
RESULT:
	[]

-----------
QUERY:

CREATE UNIQUE INDEX num_exp_sub_idx ON num_exp_sub (id1, id2);
RESULT:
	[]

-----------
QUERY:

CREATE UNIQUE INDEX num_exp_div_idx ON num_exp_div (id1, id2);
RESULT:
	[]

-----------
QUERY:

CREATE UNIQUE INDEX num_exp_mul_idx ON num_exp_mul (id1, id2);
RESULT:
	[]

-----------
QUERY:

CREATE UNIQUE INDEX num_exp_sqrt_idx ON num_exp_sqrt (id);
RESULT:
	[]

-----------
QUERY:

CREATE UNIQUE INDEX num_exp_ln_idx ON num_exp_ln (id);
RESULT:
	[]

-----------
QUERY:

CREATE UNIQUE INDEX num_exp_log10_idx ON num_exp_log10 (id);
RESULT:
	[]

-----------
QUERY:

CREATE UNIQUE INDEX num_exp_power_10_ln_idx ON num_exp_power_10_ln (id);
RESULT:
	[]

-----------
QUERY:


VACUUM ANALYZE num_exp_add;
RESULT:
	[]

-----------
QUERY:

VACUUM ANALYZE num_exp_sub;
RESULT:
	[]

-----------
QUERY:

VACUUM ANALYZE num_exp_div;
RESULT:
	[]

-----------
QUERY:

VACUUM ANALYZE num_exp_mul;
RESULT:
	[]

-----------
QUERY:

VACUUM ANALYZE num_exp_sqrt;
RESULT:
	[]

-----------
QUERY:

VACUUM ANALYZE num_exp_ln;
RESULT:
	[]

-----------
QUERY:

VACUUM ANALYZE num_exp_log10;
RESULT:
	[]

-----------
QUERY:

VACUUM ANALYZE num_exp_power_10_ln;
RESULT:
	[]

-----------
QUERY:


-- ******************************
-- * Now check the behaviour of the NUMERIC type
-- ******************************

-- ******************************
-- * Addition check
-- ******************************
DELETE FROM num_result;
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_result SELECT t1.id, t2.id, t1.val + t2.val
    FROM num_data t1, num_data t2;
RESULT:
	[]

-----------
QUERY:

SELECT t1.id1, t1.id2, t1.result, t2.expected
    FROM num_result t1, num_exp_add t2
    WHERE t1.id1 = t2.id1 AND t1.id2 = t2.id2
    AND t1.result != t2.expected;
RESULT:
	[]

-----------
QUERY:


DELETE FROM num_result;
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_result SELECT t1.id, t2.id, round(t1.val + t2.val, 10)
    FROM num_data t1, num_data t2;
RESULT:
	[]

-----------
QUERY:

SELECT t1.id1, t1.id2, t1.result, round(t2.expected, 10) as expected
    FROM num_result t1, num_exp_add t2
    WHERE t1.id1 = t2.id1 AND t1.id2 = t2.id2
    AND t1.result != round(t2.expected, 10);
RESULT:
	[]

-----------
QUERY:


-- ******************************
-- * Subtraction check
-- ******************************
DELETE FROM num_result;
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_result SELECT t1.id, t2.id, t1.val - t2.val
    FROM num_data t1, num_data t2;
RESULT:
	[]

-----------
QUERY:

SELECT t1.id1, t1.id2, t1.result, t2.expected
    FROM num_result t1, num_exp_sub t2
    WHERE t1.id1 = t2.id1 AND t1.id2 = t2.id2
    AND t1.result != t2.expected;
RESULT:
	[]

-----------
QUERY:


DELETE FROM num_result;
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_result SELECT t1.id, t2.id, round(t1.val - t2.val, 40)
    FROM num_data t1, num_data t2;
RESULT:
	[]

-----------
QUERY:

SELECT t1.id1, t1.id2, t1.result, round(t2.expected, 40)
    FROM num_result t1, num_exp_sub t2
    WHERE t1.id1 = t2.id1 AND t1.id2 = t2.id2
    AND t1.result != round(t2.expected, 40);
RESULT:
	[]

-----------
QUERY:


-- ******************************
-- * Multiply check
-- ******************************
DELETE FROM num_result;
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_result SELECT t1.id, t2.id, t1.val * t2.val
    FROM num_data t1, num_data t2;
RESULT:
	[]

-----------
QUERY:

SELECT t1.id1, t1.id2, t1.result, t2.expected
    FROM num_result t1, num_exp_mul t2
    WHERE t1.id1 = t2.id1 AND t1.id2 = t2.id2
    AND t1.result != t2.expected;
RESULT:
	[]

-----------
QUERY:


DELETE FROM num_result;
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_result SELECT t1.id, t2.id, round(t1.val * t2.val, 30)
    FROM num_data t1, num_data t2;
RESULT:
	[]

-----------
QUERY:

SELECT t1.id1, t1.id2, t1.result, round(t2.expected, 30) as expected
    FROM num_result t1, num_exp_mul t2
    WHERE t1.id1 = t2.id1 AND t1.id2 = t2.id2
    AND t1.result != round(t2.expected, 30);
RESULT:
	[]

-----------
QUERY:


-- ******************************
-- * Division check
-- ******************************
DELETE FROM num_result;
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_result SELECT t1.id, t2.id, t1.val / t2.val
    FROM num_data t1, num_data t2
    WHERE t2.val != '0.0';
RESULT:
	[]

-----------
QUERY:

SELECT t1.id1, t1.id2, t1.result, t2.expected
    FROM num_result t1, num_exp_div t2
    WHERE t1.id1 = t2.id1 AND t1.id2 = t2.id2
    AND t1.result != t2.expected;
RESULT:
	[]

-----------
QUERY:


DELETE FROM num_result;
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_result SELECT t1.id, t2.id, round(t1.val / t2.val, 80)
    FROM num_data t1, num_data t2
    WHERE t2.val != '0.0';
RESULT:
	[]

-----------
QUERY:

SELECT t1.id1, t1.id2, t1.result, round(t2.expected, 80) as expected
    FROM num_result t1, num_exp_div t2
    WHERE t1.id1 = t2.id1 AND t1.id2 = t2.id2
    AND t1.result != round(t2.expected, 80);
RESULT:
	[]

-----------
QUERY:


-- ******************************
-- * Square root check
-- ******************************
DELETE FROM num_result;
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_result SELECT id, 0, SQRT(ABS(val))
    FROM num_data;
RESULT:
	[]

-----------
QUERY:

SELECT t1.id1, t1.result, t2.expected
    FROM num_result t1, num_exp_sqrt t2
    WHERE t1.id1 = t2.id
    AND t1.result != t2.expected;
RESULT:
	[]

-----------
QUERY:


-- ******************************
-- * Natural logarithm check
-- ******************************
DELETE FROM num_result;
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_result SELECT id, 0, LN(ABS(val))
    FROM num_data
    WHERE val != '0.0';
RESULT:
	[]

-----------
QUERY:

SELECT t1.id1, t1.result, t2.expected
    FROM num_result t1, num_exp_ln t2
    WHERE t1.id1 = t2.id
    AND t1.result != t2.expected;
RESULT:
	[]

-----------
QUERY:


-- ******************************
-- * Logarithm base 10 check
-- ******************************
DELETE FROM num_result;
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_result SELECT id, 0, LOG(numeric '10', ABS(val))
    FROM num_data
    WHERE val != '0.0';
RESULT:
	[]

-----------
QUERY:

SELECT t1.id1, t1.result, t2.expected
    FROM num_result t1, num_exp_log10 t2
    WHERE t1.id1 = t2.id
    AND t1.result != t2.expected;
RESULT:
	[]

-----------
QUERY:


-- ******************************
-- * POWER(10, LN(value)) check
-- ******************************
DELETE FROM num_result;
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_result SELECT id, 0, POWER(numeric '10', LN(ABS(round(val,200))))
    FROM num_data
    WHERE val != '0.0';
RESULT:
	[]

-----------
QUERY:

SELECT t1.id1, t1.result, t2.expected
    FROM num_result t1, num_exp_power_10_ln t2
    WHERE t1.id1 = t2.id
    AND t1.result != t2.expected;
RESULT:
	[]

-----------
QUERY:


-- ******************************
-- * Check behavior with Inf and NaN inputs.  It/* REPLACED */ ''s easiest to handle these
-- * separately from the num_data framework used above, because some input
-- * combinations will throw errors.
-- ******************************

WITH v(x) AS
  (VALUES('0'::numeric),('1'),('-1'),('4.2'),('inf'),('-inf'),('nan'))
SELECT x1, x2,
  x1 + x2 AS sum,
  x1 - x2 AS diff,
  x1 * x2 AS prod
FROM v AS v1(x1), v AS v2(x2);
RESULT:
	[(Decimal('0'), Decimal('0'), Decimal('0'), Decimal('0'), Decimal('0')), (Decimal('0'), Decimal('1'), Decimal('1'), Decimal('-1'), Decimal('0')), (Decimal('0'), Decimal('-1'), Decimal('-1'), Decimal('1'), Decimal('0')), (Decimal('0'), Decimal('4.2'), Decimal('4.2'), Decimal('-4.2'), Decimal('0.0')), (Decimal('0'), Decimal('Infinity'), Decimal('Infinity'), Decimal('-Infinity'), Decimal('NaN')), (Decimal('0'), Decimal('-Infinity'), Decimal('-Infinity'), Decimal('Infinity'), Decimal('NaN')), (Decimal('0'), Decimal('NaN'), Decimal('NaN'), Decimal('NaN'), Decimal('NaN')), (Decimal('1'), Decimal('0'), Decimal('1'), Decimal('1'), Decimal('0')), (Decimal('1'), Decimal('1'), Decimal('2'), Decimal('0'), Decimal('1')), (Decimal('1'), Decimal('-1'), Decimal('0'), Decimal('2'), Decimal('-1')), (Decimal('1'), Decimal('4.2'), Decimal('5.2'), Decimal('-3.2'), Decimal('4.2')), (Decimal('1'), Decimal('Infinity'), Decimal('Infinity'), Decimal('-Infinity'), Decimal('Infinity')), (Decimal('1'), Decimal('-Infinity'), Decimal('-Infinity'), Decimal('Infinity'), Decimal('-Infinity')), (Decimal('1'), Decimal('NaN'), Decimal('NaN'), Decimal('NaN'), Decimal('NaN')), (Decimal('-1'), Decimal('0'), Decimal('-1'), Decimal('-1'), Decimal('0')), (Decimal('-1'), Decimal('1'), Decimal('0'), Decimal('-2'), Decimal('-1')), (Decimal('-1'), Decimal('-1'), Decimal('-2'), Decimal('0'), Decimal('1')), (Decimal('-1'), Decimal('4.2'), Decimal('3.2'), Decimal('-5.2'), Decimal('-4.2')), (Decimal('-1'), Decimal('Infinity'), Decimal('Infinity'), Decimal('-Infinity'), Decimal('-Infinity')), (Decimal('-1'), Decimal('-Infinity'), Decimal('-Infinity'), Decimal('Infinity'), Decimal('Infinity')), (Decimal('-1'), Decimal('NaN'), Decimal('NaN'), Decimal('NaN'), Decimal('NaN')), (Decimal('4.2'), Decimal('0'), Decimal('4.2'), Decimal('4.2'), Decimal('0.0')), (Decimal('4.2'), Decimal('1'), Decimal('5.2'), Decimal('3.2'), Decimal('4.2')), (Decimal('4.2'), Decimal('-1'), Decimal('3.2'), Decimal('5.2'), Decimal('-4.2')), (Decimal('4.2'), Decimal('4.2'), Decimal('8.4'), Decimal('0.0'), Decimal('17.64')), (Decimal('4.2'), Decimal('Infinity'), Decimal('Infinity'), Decimal('-Infinity'), Decimal('Infinity')), (Decimal('4.2'), Decimal('-Infinity'), Decimal('-Infinity'), Decimal('Infinity'), Decimal('-Infinity')), (Decimal('4.2'), Decimal('NaN'), Decimal('NaN'), Decimal('NaN'), Decimal('NaN')), (Decimal('Infinity'), Decimal('0'), Decimal('Infinity'), Decimal('Infinity'), Decimal('NaN')), (Decimal('Infinity'), Decimal('1'), Decimal('Infinity'), Decimal('Infinity'), Decimal('Infinity')), (Decimal('Infinity'), Decimal('-1'), Decimal('Infinity'), Decimal('Infinity'), Decimal('-Infinity')), (Decimal('Infinity'), Decimal('4.2'), Decimal('Infinity'), Decimal('Infinity'), Decimal('Infinity')), (Decimal('Infinity'), Decimal('Infinity'), Decimal('Infinity'), Decimal('NaN'), Decimal('Infinity')), (Decimal('Infinity'), Decimal('-Infinity'), Decimal('NaN'), Decimal('Infinity'), Decimal('-Infinity')), (Decimal('Infinity'), Decimal('NaN'), Decimal('NaN'), Decimal('NaN'), Decimal('NaN')), (Decimal('-Infinity'), Decimal('0'), Decimal('-Infinity'), Decimal('-Infinity'), Decimal('NaN')), (Decimal('-Infinity'), Decimal('1'), Decimal('-Infinity'), Decimal('-Infinity'), Decimal('-Infinity')), (Decimal('-Infinity'), Decimal('-1'), Decimal('-Infinity'), Decimal('-Infinity'), Decimal('Infinity')), (Decimal('-Infinity'), Decimal('4.2'), Decimal('-Infinity'), Decimal('-Infinity'), Decimal('-Infinity')), (Decimal('-Infinity'), Decimal('Infinity'), Decimal('NaN'), Decimal('-Infinity'), Decimal('-Infinity')), (Decimal('-Infinity'), Decimal('-Infinity'), Decimal('-Infinity'), Decimal('NaN'), Decimal('Infinity')), (Decimal('-Infinity'), Decimal('NaN'), Decimal('NaN'), Decimal('NaN'), Decimal('NaN')), (Decimal('NaN'), Decimal('0'), Decimal('NaN'), Decimal('NaN'), Decimal('NaN')), (Decimal('NaN'), Decimal('1'), Decimal('NaN'), Decimal('NaN'), Decimal('NaN')), (Decimal('NaN'), Decimal('-1'), Decimal('NaN'), Decimal('NaN'), Decimal('NaN')), (Decimal('NaN'), Decimal('4.2'), Decimal('NaN'), Decimal('NaN'), Decimal('NaN')), (Decimal('NaN'), Decimal('Infinity'), Decimal('NaN'), Decimal('NaN'), Decimal('NaN')), (Decimal('NaN'), Decimal('-Infinity'), Decimal('NaN'), Decimal('NaN'), Decimal('NaN')), (Decimal('NaN'), Decimal('NaN'), Decimal('NaN'), Decimal('NaN'), Decimal('NaN'))]

-----------
QUERY:


WITH v(x) AS
  (VALUES('0'::numeric),('1'),('-1'),('4.2'),('inf'),('-inf'),('nan'))
SELECT x1, x2,
  x1 / x2 AS quot,
  x1 % x2 AS mod,
  div(x1, x2) AS div
FROM v AS v1(x1), v AS v2(x2) WHERE x2 != 0;
RESULT:
	[(Decimal('0'), Decimal('1'), Decimal('0E-20'), Decimal('0'), Decimal('0')), (Decimal('1'), Decimal('1'), Decimal('1.00000000000000000000'), Decimal('0'), Decimal('1')), (Decimal('-1'), Decimal('1'), Decimal('-1.00000000000000000000'), Decimal('0'), Decimal('-1')), (Decimal('4.2'), Decimal('1'), Decimal('4.2000000000000000'), Decimal('0.2'), Decimal('4')), (Decimal('Infinity'), Decimal('1'), Decimal('Infinity'), Decimal('NaN'), Decimal('Infinity')), (Decimal('-Infinity'), Decimal('1'), Decimal('-Infinity'), Decimal('NaN'), Decimal('-Infinity')), (Decimal('NaN'), Decimal('1'), Decimal('NaN'), Decimal('NaN'), Decimal('NaN')), (Decimal('0'), Decimal('-1'), Decimal('0E-20'), Decimal('0'), Decimal('0')), (Decimal('1'), Decimal('-1'), Decimal('-1.00000000000000000000'), Decimal('0'), Decimal('-1')), (Decimal('-1'), Decimal('-1'), Decimal('1.00000000000000000000'), Decimal('0'), Decimal('1')), (Decimal('4.2'), Decimal('-1'), Decimal('-4.2000000000000000'), Decimal('0.2'), Decimal('-4')), (Decimal('Infinity'), Decimal('-1'), Decimal('-Infinity'), Decimal('NaN'), Decimal('-Infinity')), (Decimal('-Infinity'), Decimal('-1'), Decimal('Infinity'), Decimal('NaN'), Decimal('Infinity')), (Decimal('NaN'), Decimal('-1'), Decimal('NaN'), Decimal('NaN'), Decimal('NaN')), (Decimal('0'), Decimal('4.2'), Decimal('0E-20'), Decimal('0.0'), Decimal('0')), (Decimal('1'), Decimal('4.2'), Decimal('0.23809523809523809524'), Decimal('1.0'), Decimal('0')), (Decimal('-1'), Decimal('4.2'), Decimal('-0.23809523809523809524'), Decimal('-1.0'), Decimal('0')), (Decimal('4.2'), Decimal('4.2'), Decimal('1.00000000000000000000'), Decimal('0.0'), Decimal('1')), (Decimal('Infinity'), Decimal('4.2'), Decimal('Infinity'), Decimal('NaN'), Decimal('Infinity')), (Decimal('-Infinity'), Decimal('4.2'), Decimal('-Infinity'), Decimal('NaN'), Decimal('-Infinity')), (Decimal('NaN'), Decimal('4.2'), Decimal('NaN'), Decimal('NaN'), Decimal('NaN')), (Decimal('0'), Decimal('Infinity'), Decimal('0'), Decimal('0'), Decimal('0')), (Decimal('1'), Decimal('Infinity'), Decimal('0'), Decimal('1'), Decimal('0')), (Decimal('-1'), Decimal('Infinity'), Decimal('0'), Decimal('-1'), Decimal('0')), (Decimal('4.2'), Decimal('Infinity'), Decimal('0'), Decimal('4.2'), Decimal('0')), (Decimal('Infinity'), Decimal('Infinity'), Decimal('NaN'), Decimal('NaN'), Decimal('NaN')), (Decimal('-Infinity'), Decimal('Infinity'), Decimal('NaN'), Decimal('NaN'), Decimal('NaN')), (Decimal('NaN'), Decimal('Infinity'), Decimal('NaN'), Decimal('NaN'), Decimal('NaN')), (Decimal('0'), Decimal('-Infinity'), Decimal('0'), Decimal('0'), Decimal('0')), (Decimal('1'), Decimal('-Infinity'), Decimal('0'), Decimal('1'), Decimal('0')), (Decimal('-1'), Decimal('-Infinity'), Decimal('0'), Decimal('-1'), Decimal('0')), (Decimal('4.2'), Decimal('-Infinity'), Decimal('0'), Decimal('4.2'), Decimal('0')), (Decimal('Infinity'), Decimal('-Infinity'), Decimal('NaN'), Decimal('NaN'), Decimal('NaN')), (Decimal('-Infinity'), Decimal('-Infinity'), Decimal('NaN'), Decimal('NaN'), Decimal('NaN')), (Decimal('NaN'), Decimal('-Infinity'), Decimal('NaN'), Decimal('NaN'), Decimal('NaN')), (Decimal('0'), Decimal('NaN'), Decimal('NaN'), Decimal('NaN'), Decimal('NaN')), (Decimal('1'), Decimal('NaN'), Decimal('NaN'), Decimal('NaN'), Decimal('NaN')), (Decimal('-1'), Decimal('NaN'), Decimal('NaN'), Decimal('NaN'), Decimal('NaN')), (Decimal('4.2'), Decimal('NaN'), Decimal('NaN'), Decimal('NaN'), Decimal('NaN')), (Decimal('Infinity'), Decimal('NaN'), Decimal('NaN'), Decimal('NaN'), Decimal('NaN')), (Decimal('-Infinity'), Decimal('NaN'), Decimal('NaN'), Decimal('NaN'), Decimal('NaN')), (Decimal('NaN'), Decimal('NaN'), Decimal('NaN'), Decimal('NaN'), Decimal('NaN'))]

-----------
QUERY:


SELECT 'inf'::numeric / '0';
RESULT:
	ERROR - division by zero


-----------
QUERY:

SELECT '-inf'::numeric / '0';
RESULT:
	ERROR - division by zero


-----------
QUERY:

SELECT 'nan'::numeric / '0';
RESULT:
	[(Decimal('NaN'),)]

-----------
QUERY:

SELECT '0'::numeric / '0';
RESULT:
	ERROR - division by zero


-----------
QUERY:

SELECT 'inf'::numeric % '0';
RESULT:
	ERROR - division by zero


-----------
QUERY:

SELECT '-inf'::numeric % '0';
RESULT:
	ERROR - division by zero


-----------
QUERY:

SELECT 'nan'::numeric % '0';
RESULT:
	[(Decimal('NaN'),)]

-----------
QUERY:

SELECT '0'::numeric % '0';
RESULT:
	ERROR - division by zero


-----------
QUERY:

SELECT div('inf'::numeric, '0');
RESULT:
	ERROR - division by zero


-----------
QUERY:

SELECT div('-inf'::numeric, '0');
RESULT:
	ERROR - division by zero


-----------
QUERY:

SELECT div('nan'::numeric, '0');
RESULT:
	[(Decimal('NaN'),)]

-----------
QUERY:

SELECT div('0'::numeric, '0');
RESULT:
	ERROR - division by zero


-----------
QUERY:


WITH v(x) AS
  (VALUES('0'::numeric),('1'),('-1'),('4.2'),('-7.777'),('inf'),('-inf'),('nan'))
SELECT x, -x as minusx, abs(x), floor(x), ceil(x), sign(x), numeric_inc(x) as inc
FROM v;
RESULT:
	[(Decimal('0'), Decimal('0'), Decimal('0'), Decimal('0'), Decimal('0'), Decimal('0'), Decimal('1')), (Decimal('1'), Decimal('-1'), Decimal('1'), Decimal('1'), Decimal('1'), Decimal('1'), Decimal('2')), (Decimal('-1'), Decimal('1'), Decimal('1'), Decimal('-1'), Decimal('-1'), Decimal('-1'), Decimal('0')), (Decimal('4.2'), Decimal('-4.2'), Decimal('4.2'), Decimal('4'), Decimal('5'), Decimal('1'), Decimal('5.2')), (Decimal('-7.777'), Decimal('7.777'), Decimal('7.777'), Decimal('-8'), Decimal('-7'), Decimal('-1'), Decimal('-6.777')), (Decimal('Infinity'), Decimal('-Infinity'), Decimal('Infinity'), Decimal('Infinity'), Decimal('Infinity'), Decimal('1'), Decimal('Infinity')), (Decimal('-Infinity'), Decimal('Infinity'), Decimal('Infinity'), Decimal('-Infinity'), Decimal('-Infinity'), Decimal('-1'), Decimal('-Infinity')), (Decimal('NaN'), Decimal('NaN'), Decimal('NaN'), Decimal('NaN'), Decimal('NaN'), Decimal('NaN'), Decimal('NaN'))]

-----------
QUERY:


WITH v(x) AS
  (VALUES('0'::numeric),('1'),('-1'),('4.2'),('-7.777'),('inf'),('-inf'),('nan'))
SELECT x, round(x), round(x,1) as round1, trunc(x), trunc(x,1) as trunc1
FROM v;
RESULT:
	[(Decimal('0'), Decimal('0'), Decimal('0.0'), Decimal('0'), Decimal('0.0')), (Decimal('1'), Decimal('1'), Decimal('1.0'), Decimal('1'), Decimal('1.0')), (Decimal('-1'), Decimal('-1'), Decimal('-1.0'), Decimal('-1'), Decimal('-1.0')), (Decimal('4.2'), Decimal('4'), Decimal('4.2'), Decimal('4'), Decimal('4.2')), (Decimal('-7.777'), Decimal('-8'), Decimal('-7.8'), Decimal('-7'), Decimal('-7.7')), (Decimal('Infinity'), Decimal('Infinity'), Decimal('Infinity'), Decimal('Infinity'), Decimal('Infinity')), (Decimal('-Infinity'), Decimal('-Infinity'), Decimal('-Infinity'), Decimal('-Infinity'), Decimal('-Infinity')), (Decimal('NaN'), Decimal('NaN'), Decimal('NaN'), Decimal('NaN'), Decimal('NaN'))]

-----------
QUERY:


-- the large values fall into the numeric abbreviation code/* REPLACED */ ''s maximal classes
WITH v(x) AS
  (VALUES('0'::numeric),('1'),('-1'),('4.2'),('-7.777'),('1e340'),('-1e340'),
         ('inf'),('-inf'),('nan'),
         ('inf'),('-inf'),('nan'))
SELECT substring(x::text, 1, 32)
FROM v ORDER BY x;
RESULT:
	[('-Infinity',), ('-Infinity',), ('-1000000000000000000000000000000',), ('-7.777',), ('-1',), ('0',), ('1',), ('4.2',), ('10000000000000000000000000000000',), ('Infinity',), ('Infinity',), ('NaN',), ('NaN',)]

-----------
QUERY:


WITH v(x) AS
  (VALUES('0'::numeric),('1'),('4.2'),('inf'),('nan'))
SELECT x, sqrt(x)
FROM v;
RESULT:
	[(Decimal('0'), Decimal('0E-15')), (Decimal('1'), Decimal('1.000000000000000')), (Decimal('4.2'), Decimal('2.049390153191920')), (Decimal('Infinity'), Decimal('Infinity')), (Decimal('NaN'), Decimal('NaN'))]

-----------
QUERY:


SELECT sqrt('-1'::numeric);
RESULT:
	ERROR - cannot take square root of a negative number


-----------
QUERY:

SELECT sqrt('-inf'::numeric);
RESULT:
	ERROR - cannot take square root of a negative number


-----------
QUERY:


WITH v(x) AS
  (VALUES('1'::numeric),('4.2'),('inf'),('nan'))
SELECT x,
  log(x),
  log10(x),
  ln(x)
FROM v;
RESULT:
	[(Decimal('1'), Decimal('0E-16'), Decimal('0E-16'), Decimal('0E-16')), (Decimal('4.2'), Decimal('0.6232492903979005'), Decimal('0.6232492903979005'), Decimal('1.4350845252893226')), (Decimal('Infinity'), Decimal('Infinity'), Decimal('Infinity'), Decimal('Infinity')), (Decimal('NaN'), Decimal('NaN'), Decimal('NaN'), Decimal('NaN'))]

-----------
QUERY:


SELECT ln('0'::numeric);
RESULT:
	ERROR - cannot take logarithm of zero


-----------
QUERY:

SELECT ln('-1'::numeric);
RESULT:
	ERROR - cannot take logarithm of a negative number


-----------
QUERY:

SELECT ln('-inf'::numeric);
RESULT:
	ERROR - cannot take logarithm of a negative number


-----------
QUERY:


WITH v(x) AS
  (VALUES('2'::numeric),('4.2'),('inf'),('nan'))
SELECT x1, x2,
  log(x1, x2)
FROM v AS v1(x1), v AS v2(x2);
RESULT:
	[(Decimal('2'), Decimal('2'), Decimal('1.0000000000000000')), (Decimal('2'), Decimal('4.2'), Decimal('2.0703893278913979')), (Decimal('2'), Decimal('Infinity'), Decimal('Infinity')), (Decimal('2'), Decimal('NaN'), Decimal('NaN')), (Decimal('4.2'), Decimal('2'), Decimal('0.4830009440873890')), (Decimal('4.2'), Decimal('4.2'), Decimal('1.0000000000000000')), (Decimal('4.2'), Decimal('Infinity'), Decimal('Infinity')), (Decimal('4.2'), Decimal('NaN'), Decimal('NaN')), (Decimal('Infinity'), Decimal('2'), Decimal('0')), (Decimal('Infinity'), Decimal('4.2'), Decimal('0')), (Decimal('Infinity'), Decimal('Infinity'), Decimal('NaN')), (Decimal('Infinity'), Decimal('NaN'), Decimal('NaN')), (Decimal('NaN'), Decimal('2'), Decimal('NaN')), (Decimal('NaN'), Decimal('4.2'), Decimal('NaN')), (Decimal('NaN'), Decimal('Infinity'), Decimal('NaN')), (Decimal('NaN'), Decimal('NaN'), Decimal('NaN'))]

-----------
QUERY:


SELECT log('0'::numeric, '10');
RESULT:
	ERROR - cannot take logarithm of zero


-----------
QUERY:

SELECT log('10'::numeric, '0');
RESULT:
	ERROR - cannot take logarithm of zero


-----------
QUERY:

SELECT log('-inf'::numeric, '10');
RESULT:
	ERROR - cannot take logarithm of a negative number


-----------
QUERY:

SELECT log('10'::numeric, '-inf');
RESULT:
	ERROR - cannot take logarithm of a negative number


-----------
QUERY:

SELECT log('inf'::numeric, '0');
RESULT:
	ERROR - cannot take logarithm of zero


-----------
QUERY:

SELECT log('inf'::numeric, '-inf');
RESULT:
	ERROR - cannot take logarithm of a negative number


-----------
QUERY:

SELECT log('-inf'::numeric, 'inf');
RESULT:
	ERROR - cannot take logarithm of a negative number


-----------
QUERY:


WITH v(x) AS
  (VALUES('0'::numeric),('1'),('2'),('4.2'),('inf'),('nan'))
SELECT x1, x2,
  power(x1, x2)
FROM v AS v1(x1), v AS v2(x2) WHERE x1 != 0 OR x2 >= 0;
RESULT:
	[(Decimal('0'), Decimal('0'), Decimal('1.0000000000000000')), (Decimal('0'), Decimal('1'), Decimal('0E-16')), (Decimal('0'), Decimal('2'), Decimal('0E-16')), (Decimal('0'), Decimal('4.2'), Decimal('0E-16')), (Decimal('0'), Decimal('Infinity'), Decimal('0')), (Decimal('0'), Decimal('NaN'), Decimal('NaN')), (Decimal('1'), Decimal('0'), Decimal('1.0000000000000000')), (Decimal('1'), Decimal('1'), Decimal('1.0000000000000000')), (Decimal('1'), Decimal('2'), Decimal('1.0000000000000000')), (Decimal('1'), Decimal('4.2'), Decimal('1.0000000000000000')), (Decimal('1'), Decimal('Infinity'), Decimal('1')), (Decimal('1'), Decimal('NaN'), Decimal('1')), (Decimal('2'), Decimal('0'), Decimal('1.0000000000000000')), (Decimal('2'), Decimal('1'), Decimal('2.0000000000000000')), (Decimal('2'), Decimal('2'), Decimal('4.0000000000000000')), (Decimal('2'), Decimal('4.2'), Decimal('18.379173679952560')), (Decimal('2'), Decimal('Infinity'), Decimal('Infinity')), (Decimal('2'), Decimal('NaN'), Decimal('NaN')), (Decimal('4.2'), Decimal('0'), Decimal('1.0000000000000000')), (Decimal('4.2'), Decimal('1'), Decimal('4.2000000000000000')), (Decimal('4.2'), Decimal('2'), Decimal('17.640000000000000')), (Decimal('4.2'), Decimal('4.2'), Decimal('414.61691860129675')), (Decimal('4.2'), Decimal('Infinity'), Decimal('Infinity')), (Decimal('4.2'), Decimal('NaN'), Decimal('NaN')), (Decimal('Infinity'), Decimal('0'), Decimal('1')), (Decimal('Infinity'), Decimal('1'), Decimal('Infinity')), (Decimal('Infinity'), Decimal('2'), Decimal('Infinity')), (Decimal('Infinity'), Decimal('4.2'), Decimal('Infinity')), (Decimal('Infinity'), Decimal('Infinity'), Decimal('Infinity')), (Decimal('Infinity'), Decimal('NaN'), Decimal('NaN')), (Decimal('NaN'), Decimal('0'), Decimal('1')), (Decimal('NaN'), Decimal('1'), Decimal('NaN')), (Decimal('NaN'), Decimal('2'), Decimal('NaN')), (Decimal('NaN'), Decimal('4.2'), Decimal('NaN')), (Decimal('NaN'), Decimal('Infinity'), Decimal('NaN')), (Decimal('NaN'), Decimal('NaN'), Decimal('NaN'))]

-----------
QUERY:


SELECT power('0'::numeric, '-1');
RESULT:
	ERROR - zero raised to a negative power is undefined


-----------
QUERY:

SELECT power('0'::numeric, '-inf');
RESULT:
	ERROR - zero raised to a negative power is undefined


-----------
QUERY:

SELECT power('-1'::numeric, 'inf');
RESULT:
	[(Decimal('1'),)]

-----------
QUERY:

SELECT power('-2'::numeric, '3');
RESULT:
	[(Decimal('-8.0000000000000000'),)]

-----------
QUERY:

SELECT power('-2'::numeric, '3.3');
RESULT:
	ERROR - a negative number raised to a non-integer power yields a complex result


-----------
QUERY:

SELECT power('-2'::numeric, '-1');
RESULT:
	[(Decimal('-0.5000000000000000'),)]

-----------
QUERY:

SELECT power('-2'::numeric, '-1.5');
RESULT:
	ERROR - a negative number raised to a non-integer power yields a complex result


-----------
QUERY:

SELECT power('-2'::numeric, 'inf');
RESULT:
	[(Decimal('Infinity'),)]

-----------
QUERY:

SELECT power('-2'::numeric, '-inf');
RESULT:
	[(Decimal('0'),)]

-----------
QUERY:

SELECT power('inf'::numeric, '-2');
RESULT:
	[(Decimal('0'),)]

-----------
QUERY:

SELECT power('inf'::numeric, '-inf');
RESULT:
	[(Decimal('0'),)]

-----------
QUERY:

SELECT power('-inf'::numeric, '2');
RESULT:
	[(Decimal('Infinity'),)]

-----------
QUERY:

SELECT power('-inf'::numeric, '3');
RESULT:
	[(Decimal('-Infinity'),)]

-----------
QUERY:

SELECT power('-inf'::numeric, '4.5');
RESULT:
	ERROR - a negative number raised to a non-integer power yields a complex result


-----------
QUERY:

SELECT power('-inf'::numeric, '-2');
RESULT:
	[(Decimal('0'),)]

-----------
QUERY:

SELECT power('-inf'::numeric, '-3');
RESULT:
	[(Decimal('0'),)]

-----------
QUERY:

SELECT power('-inf'::numeric, '0');
RESULT:
	[(Decimal('1'),)]

-----------
QUERY:

SELECT power('-inf'::numeric, 'inf');
RESULT:
	[(Decimal('Infinity'),)]

-----------
QUERY:

SELECT power('-inf'::numeric, '-inf');
RESULT:
	[(Decimal('0'),)]

-----------
QUERY:


-- ******************************
-- * miscellaneous checks for things that have been broken in the past...
-- ******************************
-- numeric AVG used to fail on some platforms
SELECT AVG(val) FROM num_data;
RESULT:
	[(Decimal('-13430913.592242320700'),)]

-----------
QUERY:

SELECT MAX(val) FROM num_data;
RESULT:
	[(Decimal('7799461.4119000000'),)]

-----------
QUERY:

SELECT MIN(val) FROM num_data;
RESULT:
	[(Decimal('-83028485.0000000000'),)]

-----------
QUERY:

SELECT STDDEV(val) FROM num_data;
RESULT:
	[(Decimal('27791203.28758835329805617386'),)]

-----------
QUERY:

SELECT VARIANCE(val) FROM num_data;
RESULT:
	[(Decimal('772350980172061.69659105821915863601'),)]

-----------
QUERY:


-- Check for appropriate rounding and overflow
CREATE TABLE fract_only (id int, val numeric(4,4));
RESULT:
	[]

-----------
QUERY:

INSERT INTO fract_only VALUES (1, '0.0');
RESULT:
	[]

-----------
QUERY:

INSERT INTO fract_only VALUES (2, '0.1');
RESULT:
	[]

-----------
QUERY:

INSERT INTO fract_only VALUES (3, '1.0');
RESULT:
	ERROR - numeric field overflow
DETAIL:  A field with precision 4, scale 4 must round to an absolute value less than 1.


-----------
QUERY:
	-- should fail
INSERT INTO fract_only VALUES (4, '-0.9999');
RESULT:
	[]

-----------
QUERY:

INSERT INTO fract_only VALUES (5, '0.99994');
RESULT:
	[]

-----------
QUERY:

INSERT INTO fract_only VALUES (6, '0.99995');
RESULT:
	ERROR - numeric field overflow
DETAIL:  A field with precision 4, scale 4 must round to an absolute value less than 1.


-----------
QUERY:
  -- should fail
INSERT INTO fract_only VALUES (7, '0.00001');
RESULT:
	[]

-----------
QUERY:

INSERT INTO fract_only VALUES (8, '0.00017');
RESULT:
	[]

-----------
QUERY:

INSERT INTO fract_only VALUES (9, 'NaN');
RESULT:
	[]

-----------
QUERY:

INSERT INTO fract_only VALUES (10, 'Inf');
RESULT:
	ERROR - numeric field overflow
DETAIL:  A field with precision 4, scale 4 cannot hold an infinite value.


-----------
QUERY:
	-- should fail
INSERT INTO fract_only VALUES (11, '-Inf');
RESULT:
	ERROR - numeric field overflow
DETAIL:  A field with precision 4, scale 4 cannot hold an infinite value.


-----------
QUERY:
	-- should fail
SELECT * FROM fract_only;
RESULT:
	[(1, Decimal('0.0000')), (2, Decimal('0.1000')), (4, Decimal('-0.9999')), (5, Decimal('0.9999')), (7, Decimal('0.0000')), (8, Decimal('0.0002')), (9, Decimal('NaN'))]

-----------
QUERY:

DROP TABLE fract_only;
RESULT:
	[]

-----------
QUERY:


-- Check conversion to integers
SELECT (-9223372036854775808.5)::int8;
RESULT:
	ERROR - bigint out of range


-----------
QUERY:
 -- should fail
SELECT (-9223372036854775808.4)::int8;
RESULT:
	[(-9223372036854775808,)]

-----------
QUERY:
 -- ok
SELECT 9223372036854775807.4::int8;
RESULT:
	[(9223372036854775807,)]

-----------
QUERY:
 -- ok
SELECT 9223372036854775807.5::int8;
RESULT:
	ERROR - bigint out of range


-----------
QUERY:
 -- should fail
SELECT (-2147483648.5)::int4;
RESULT:
	ERROR - integer out of range


-----------
QUERY:
 -- should fail
SELECT (-2147483648.4)::int4;
RESULT:
	[(-2147483648,)]

-----------
QUERY:
 -- ok
SELECT 2147483647.4::int4;
RESULT:
	[(2147483647,)]

-----------
QUERY:
 -- ok
SELECT 2147483647.5::int4;
RESULT:
	ERROR - integer out of range


-----------
QUERY:
 -- should fail
SELECT (-32768.5)::int2;
RESULT:
	ERROR - smallint out of range


-----------
QUERY:
 -- should fail
SELECT (-32768.4)::int2;
RESULT:
	[(-32768,)]

-----------
QUERY:
 -- ok
SELECT 32767.4::int2;
RESULT:
	[(32767,)]

-----------
QUERY:
 -- ok
SELECT 32767.5::int2;
RESULT:
	ERROR - smallint out of range


-----------
QUERY:
 -- should fail

-- Check inf/nan conversion behavior
SELECT 'NaN'::float8::numeric;
RESULT:
	[(Decimal('NaN'),)]

-----------
QUERY:

SELECT 'Infinity'::float8::numeric;
RESULT:
	[(Decimal('Infinity'),)]

-----------
QUERY:

SELECT '-Infinity'::float8::numeric;
RESULT:
	[(Decimal('-Infinity'),)]

-----------
QUERY:

SELECT 'NaN'::numeric::float8;
RESULT:
	[(nan,)]

-----------
QUERY:

SELECT 'Infinity'::numeric::float8;
RESULT:
	[(inf,)]

-----------
QUERY:

SELECT '-Infinity'::numeric::float8;
RESULT:
	[(-inf,)]

-----------
QUERY:

SELECT 'NaN'::float4::numeric;
RESULT:
	[(Decimal('NaN'),)]

-----------
QUERY:

SELECT 'Infinity'::float4::numeric;
RESULT:
	[(Decimal('Infinity'),)]

-----------
QUERY:

SELECT '-Infinity'::float4::numeric;
RESULT:
	[(Decimal('-Infinity'),)]

-----------
QUERY:

SELECT 'NaN'::numeric::float4;
RESULT:
	[(nan,)]

-----------
QUERY:

SELECT 'Infinity'::numeric::float4;
RESULT:
	[(inf,)]

-----------
QUERY:

SELECT '-Infinity'::numeric::float4;
RESULT:
	[(-inf,)]

-----------
QUERY:

SELECT '42'::int2::numeric;
RESULT:
	[(Decimal('42'),)]

-----------
QUERY:

SELECT 'NaN'::numeric::int2;
RESULT:
	ERROR - cannot convert NaN to smallint


-----------
QUERY:

SELECT 'Infinity'::numeric::int2;
RESULT:
	ERROR - cannot convert infinity to smallint


-----------
QUERY:

SELECT '-Infinity'::numeric::int2;
RESULT:
	ERROR - cannot convert infinity to smallint


-----------
QUERY:

SELECT 'NaN'::numeric::int4;
RESULT:
	ERROR - cannot convert NaN to integer


-----------
QUERY:

SELECT 'Infinity'::numeric::int4;
RESULT:
	ERROR - cannot convert infinity to integer


-----------
QUERY:

SELECT '-Infinity'::numeric::int4;
RESULT:
	ERROR - cannot convert infinity to integer


-----------
QUERY:

SELECT 'NaN'::numeric::int8;
RESULT:
	ERROR - cannot convert NaN to bigint


-----------
QUERY:

SELECT 'Infinity'::numeric::int8;
RESULT:
	ERROR - cannot convert infinity to bigint


-----------
QUERY:

SELECT '-Infinity'::numeric::int8;
RESULT:
	ERROR - cannot convert infinity to bigint


-----------
QUERY:


-- Simple check that ceil(), floor(), and round() work correctly
CREATE TABLE ceil_floor_round (a numeric);
RESULT:
	[]

-----------
QUERY:

INSERT INTO ceil_floor_round VALUES ('-5.5');
RESULT:
	[]

-----------
QUERY:

INSERT INTO ceil_floor_round VALUES ('-5.499999');
RESULT:
	[]

-----------
QUERY:

INSERT INTO ceil_floor_round VALUES ('9.5');
RESULT:
	[]

-----------
QUERY:

INSERT INTO ceil_floor_round VALUES ('9.4999999');
RESULT:
	[]

-----------
QUERY:

INSERT INTO ceil_floor_round VALUES ('0.0');
RESULT:
	[]

-----------
QUERY:

INSERT INTO ceil_floor_round VALUES ('0.0000001');
RESULT:
	[]

-----------
QUERY:

INSERT INTO ceil_floor_round VALUES ('-0.000001');
RESULT:
	[]

-----------
QUERY:

SELECT a, ceil(a), ceiling(a), floor(a), round(a) FROM ceil_floor_round;
RESULT:
	[(Decimal('-5.5'), Decimal('-5'), Decimal('-5'), Decimal('-6'), Decimal('-6')), (Decimal('-5.499999'), Decimal('-5'), Decimal('-5'), Decimal('-6'), Decimal('-5')), (Decimal('9.5'), Decimal('10'), Decimal('10'), Decimal('9'), Decimal('10')), (Decimal('9.4999999'), Decimal('10'), Decimal('10'), Decimal('9'), Decimal('9')), (Decimal('0.0'), Decimal('0'), Decimal('0'), Decimal('0'), Decimal('0')), (Decimal('1E-7'), Decimal('1'), Decimal('1'), Decimal('0'), Decimal('0')), (Decimal('-0.000001'), Decimal('0'), Decimal('0'), Decimal('-1'), Decimal('0'))]

-----------
QUERY:

DROP TABLE ceil_floor_round;
RESULT:
	[]

-----------
QUERY:


-- Check rounding, it should round ties away from zero.
SELECT i as pow,
	round((-2.5 * 10 ^ i)::numeric, -i),
	round((-1.5 * 10 ^ i)::numeric, -i),
	round((-0.5 * 10 ^ i)::numeric, -i),
	round((0.5 * 10 ^ i)::numeric, -i),
	round((1.5 * 10 ^ i)::numeric, -i),
	round((2.5 * 10 ^ i)::numeric, -i)
FROM generate_series(-5,5) AS t(i);
RESULT:
	[(-5, Decimal('-0.00003'), Decimal('-0.00002'), Decimal('-0.00001'), Decimal('0.00001'), Decimal('0.00002'), Decimal('0.00003')), (-4, Decimal('-0.0003'), Decimal('-0.0002'), Decimal('-0.0001'), Decimal('0.0001'), Decimal('0.0002'), Decimal('0.0003')), (-3, Decimal('-0.003'), Decimal('-0.002'), Decimal('-0.001'), Decimal('0.001'), Decimal('0.002'), Decimal('0.003')), (-2, Decimal('-0.03'), Decimal('-0.02'), Decimal('-0.01'), Decimal('0.01'), Decimal('0.02'), Decimal('0.03')), (-1, Decimal('-0.3'), Decimal('-0.2'), Decimal('-0.1'), Decimal('0.1'), Decimal('0.2'), Decimal('0.3')), (0, Decimal('-3'), Decimal('-2'), Decimal('-1'), Decimal('1'), Decimal('2'), Decimal('3')), (1, Decimal('-30'), Decimal('-20'), Decimal('-10'), Decimal('10'), Decimal('20'), Decimal('30')), (2, Decimal('-300'), Decimal('-200'), Decimal('-100'), Decimal('100'), Decimal('200'), Decimal('300')), (3, Decimal('-3000'), Decimal('-2000'), Decimal('-1000'), Decimal('1000'), Decimal('2000'), Decimal('3000')), (4, Decimal('-30000'), Decimal('-20000'), Decimal('-10000'), Decimal('10000'), Decimal('20000'), Decimal('30000')), (5, Decimal('-300000'), Decimal('-200000'), Decimal('-100000'), Decimal('100000'), Decimal('200000'), Decimal('300000'))]

-----------
QUERY:


-- Testing for width_bucket(). For convenience, we test both the
-- numeric and float8 versions of the function in this file.

-- errors
SELECT width_bucket(5.0, 3.0, 4.0, 0);
RESULT:
	ERROR - count must be greater than zero


-----------
QUERY:

SELECT width_bucket(5.0, 3.0, 4.0, -5);
RESULT:
	ERROR - count must be greater than zero


-----------
QUERY:

SELECT width_bucket(3.5, 3.0, 3.0, 888);
RESULT:
	ERROR - lower bound cannot equal upper bound


-----------
QUERY:

SELECT width_bucket(5.0::float8, 3.0::float8, 4.0::float8, 0);
RESULT:
	ERROR - count must be greater than zero


-----------
QUERY:

SELECT width_bucket(5.0::float8, 3.0::float8, 4.0::float8, -5);
RESULT:
	ERROR - count must be greater than zero


-----------
QUERY:

SELECT width_bucket(3.5::float8, 3.0::float8, 3.0::float8, 888);
RESULT:
	ERROR - lower bound cannot equal upper bound


-----------
QUERY:

SELECT width_bucket('NaN', 3.0, 4.0, 888);
RESULT:
	ERROR - operand, lower bound, and upper bound cannot be NaN


-----------
QUERY:

SELECT width_bucket(0::float8, 'NaN', 4.0::float8, 888);
RESULT:
	ERROR - operand, lower bound, and upper bound cannot be NaN


-----------
QUERY:

SELECT width_bucket(2.0, 3.0, '-inf', 888);
RESULT:
	ERROR - lower and upper bounds must be finite


-----------
QUERY:

SELECT width_bucket(0::float8, '-inf', 4.0::float8, 888);
RESULT:
	ERROR - lower and upper bounds must be finite


-----------
QUERY:


-- normal operation
CREATE TABLE width_bucket_test (operand_num numeric, operand_f8 float8);
RESULT:
	[]

-----------
QUERY:


COPY width_bucket_test (operand_num) FROM stdin;
RESULT:
	ERROR - can't execute COPY FROM: use the copy_from() method instead

-----------
QUERY:

-5.2
-0.0000000001
0.000000000001
1
1.99999999999999
2
2.00000000000001
3
4
4.5
5
5.5
6
7
8
9
9.99999999999999
10
10.0000000000001
-- \.

UPDATE width_bucket_test SET operand_f8 = operand_num::float8;
RESULT:
	ERROR - syntax error at or near "-"
LINE 2: -5.2
        ^


-----------
QUERY:


SELECT
    operand_num,
    width_bucket(operand_num, 0, 10, 5) AS wb_1,
    width_bucket(operand_f8, 0, 10, 5) AS wb_1f,
    width_bucket(operand_num, 10, 0, 5) AS wb_2,
    width_bucket(operand_f8, 10, 0, 5) AS wb_2f,
    width_bucket(operand_num, 2, 8, 4) AS wb_3,
    width_bucket(operand_f8, 2, 8, 4) AS wb_3f,
    width_bucket(operand_num, 5.0, 5.5, 20) AS wb_4,
    width_bucket(operand_f8, 5.0, 5.5, 20) AS wb_4f,
    width_bucket(operand_num, -25, 25, 10) AS wb_5,
    width_bucket(operand_f8, -25, 25, 10) AS wb_5f
    FROM width_bucket_test;
RESULT:
	[]

-----------
QUERY:


-- Check positive and negative infinity: we require
-- finite bucket bounds, but allow an infinite operand
SELECT width_bucket(0.0::numeric, 'Infinity'::numeric, 5, 10);
RESULT:
	ERROR - lower and upper bounds must be finite


-----------
QUERY:
 -- error
SELECT width_bucket(0.0::numeric, 5, '-Infinity'::numeric, 20);
RESULT:
	ERROR - lower and upper bounds must be finite


-----------
QUERY:
 -- error
SELECT width_bucket('Infinity'::numeric, 1, 10, 10),
       width_bucket('-Infinity'::numeric, 1, 10, 10);
RESULT:
	[(11, 0)]

-----------
QUERY:

SELECT width_bucket(0.0::float8, 'Infinity'::float8, 5, 10);
RESULT:
	ERROR - lower and upper bounds must be finite


-----------
QUERY:
 -- error
SELECT width_bucket(0.0::float8, 5, '-Infinity'::float8, 20);
RESULT:
	ERROR - lower and upper bounds must be finite


-----------
QUERY:
 -- error
SELECT width_bucket('Infinity'::float8, 1, 10, 10),
       width_bucket('-Infinity'::float8, 1, 10, 10);
RESULT:
	[(11, 0)]

-----------
QUERY:


DROP TABLE width_bucket_test;
RESULT:
	[]

-----------
QUERY:


-- Simple test for roundoff error when results should be exact
SELECT x, width_bucket(x::float8, 10, 100, 9) as flt,
       width_bucket(x::numeric, 10, 100, 9) as num
FROM generate_series(0, 110, 10) x;
RESULT:
	[(0, 0, 0), (10, 1, 1), (20, 2, 2), (30, 3, 3), (40, 4, 4), (50, 5, 5), (60, 6, 6), (70, 7, 7), (80, 8, 8), (90, 9, 9), (100, 10, 10), (110, 10, 10)]

-----------
QUERY:

SELECT x, width_bucket(x::float8, 100, 10, 9) as flt,
       width_bucket(x::numeric, 100, 10, 9) as num
FROM generate_series(0, 110, 10) x;
RESULT:
	[(0, 10, 10), (10, 10, 10), (20, 9, 9), (30, 8, 8), (40, 7, 7), (50, 6, 6), (60, 5, 5), (70, 4, 4), (80, 3, 3), (90, 2, 2), (100, 1, 1), (110, 0, 0)]

-----------
QUERY:

-- Another roundoff-error hazard
SELECT width_bucket(0, -1e100::numeric, 1, 10);
RESULT:
	[(10,)]

-----------
QUERY:

SELECT width_bucket(0, -1e100::float8, 1, 10);
RESULT:
	[(10,)]

-----------
QUERY:

SELECT width_bucket(1, 1e100::numeric, 0, 10);
RESULT:
	[(10,)]

-----------
QUERY:

SELECT width_bucket(1, 1e100::float8, 0, 10);
RESULT:
	[(10,)]

-----------
QUERY:


-- Check cases that could trigger overflow or underflow within the calculation
SELECT oper, low, high, cnt, width_bucket(oper, low, high, cnt)
FROM
  (SELECT 1.797e+308::float8 AS big, 5e-324::float8 AS tiny) as v,
  LATERAL (VALUES
    (10.5::float8, -big, big, 1),
    (10.5::float8, -big, big, 2),
    (10.5::float8, -big, big, 3),
    (big / 4, -big / 2, big / 2, 10),
    (10.5::float8, big, -big, 1),
    (10.5::float8, big, -big, 2),
    (10.5::float8, big, -big, 3),
    (big / 4, big / 2, -big / 2, 10),
    (0, 0, tiny, 4),
    (tiny, 0, tiny, 4),
    (0, 0, 1, 2147483647),
    (1, 1, 0, 2147483647)
  ) as sample(oper, low, high, cnt);
RESULT:
	[(10.5, -1.797e+308, 1.797e+308, 1, 1), (10.5, -1.797e+308, 1.797e+308, 2, 2), (10.5, -1.797e+308, 1.797e+308, 3, 2), (4.4925e+307, -8.985e+307, 8.985e+307, 10, 8), (10.5, 1.797e+308, -1.797e+308, 1, 1), (10.5, 1.797e+308, -1.797e+308, 2, 2), (10.5, 1.797e+308, -1.797e+308, 3, 2), (4.4925e+307, 8.985e+307, -8.985e+307, 10, 3), (0.0, 0.0, 5e-324, 4, 1), (5e-324, 0.0, 5e-324, 4, 5), (0.0, 0.0, 1.0, 2147483647, 1), (1.0, 1.0, 0.0, 2147483647, 1)]

-----------
QUERY:

-- These fail because the result would be out of int32 range:
SELECT width_bucket(1::float8, 0, 1, 2147483647);
RESULT:
	ERROR - integer out of range


-----------
QUERY:

SELECT width_bucket(0::float8, 1, 0, 2147483647);
RESULT:
	ERROR - integer out of range


-----------
QUERY:


--
-- TO_CHAR()
--
SELECT to_char(val, '9G999G999G999G999G999')
	FROM num_data;
RESULT:
	[('                     0',), ('                     0',), ('           -34’338’492',), ('                     4',), ('             7’799’461',), ('                16’397',), ('                93’902',), ('           -83’028’485',), ('                74’881',), ('           -24’926’804',)]

-----------
QUERY:


SELECT to_char(val, '9G999G999G999G999G999D999G999G999G999G999')
	FROM num_data;
RESULT:
	[('                      .000’000’000’000’000',), ('                      .000’000’000’000’000',), ('           -34’338’492.215’397’047’000’000',), ('                     4.310’000’000’000’000',), ('             7’799’461.411’900’000’000’000',), ('                16’397.038’491’000’000’000',), ('                93’901.577’630’260’000’000',), ('           -83’028’485.000’000’000’000’000',), ('                74’881.000’000’000’000’000',), ('           -24’926’804.045’047’420’000’000',)]

-----------
QUERY:


SELECT to_char(val, '9999999999999999.999999999999999PR')
	FROM num_data;
RESULT:
	[('                 .000000000000000 ',), ('                 .000000000000000 ',), ('        <34338492.215397047000000>',), ('                4.310000000000000 ',), ('          7799461.411900000000000 ',), ('            16397.038491000000000 ',), ('            93901.577630260000000 ',), ('        <83028485.000000000000000>',), ('            74881.000000000000000 ',), ('        <24926804.045047420000000>',)]

-----------
QUERY:


SELECT to_char(val, '9999999999999999.999999999999999S')
	FROM num_data;
RESULT:
	[('                .000000000000000+',), ('                .000000000000000+',), ('        34338492.215397047000000-',), ('               4.310000000000000+',), ('         7799461.411900000000000+',), ('           16397.038491000000000+',), ('           93901.577630260000000+',), ('        83028485.000000000000000-',), ('           74881.000000000000000+',), ('        24926804.045047420000000-',)]

-----------
QUERY:


SELECT to_char(val, 'MI9999999999999999.999999999999999')     FROM num_data;
RESULT:
	[('                 .000000000000000',), ('                 .000000000000000',), ('-        34338492.215397047000000',), ('                4.310000000000000',), ('          7799461.411900000000000',), ('            16397.038491000000000',), ('            93901.577630260000000',), ('-        83028485.000000000000000',), ('            74881.000000000000000',), ('-        24926804.045047420000000',)]

-----------
QUERY:

SELECT to_char(val, 'FMS9999999999999999.999999999999999')    FROM num_data;
RESULT:
	[('+0.',), ('+0.',), ('-34338492.215397047',), ('+4.31',), ('+7799461.4119',), ('+16397.038491',), ('+93901.57763026',), ('-83028485.',), ('+74881.',), ('-24926804.04504742',)]

-----------
QUERY:

SELECT to_char(val, 'FM9999999999999999.999999999999999THPR') FROM num_data;
RESULT:
	[('0.',), ('0.',), ('<34338492.215397047>',), ('4.31',), ('7799461.4119',), ('16397.038491',), ('93901.57763026',), ('<83028485.>',), ('74881.',), ('<24926804.04504742>',)]

-----------
QUERY:

SELECT to_char(val, 'SG9999999999999999.999999999999999th')   FROM num_data;
RESULT:
	[('+                .000000000000000',), ('+                .000000000000000',), ('-        34338492.215397047000000',), ('+               4.310000000000000',), ('+         7799461.411900000000000',), ('+           16397.038491000000000',), ('+           93901.577630260000000',), ('-        83028485.000000000000000',), ('+           74881.000000000000000',), ('-        24926804.045047420000000',)]

-----------
QUERY:

SELECT to_char(val, '0999999999999999.999999999999999')       FROM num_data;
RESULT:
	[(' 0000000000000000.000000000000000',), (' 0000000000000000.000000000000000',), ('-0000000034338492.215397047000000',), (' 0000000000000004.310000000000000',), (' 0000000007799461.411900000000000',), (' 0000000000016397.038491000000000',), (' 0000000000093901.577630260000000',), ('-0000000083028485.000000000000000',), (' 0000000000074881.000000000000000',), ('-0000000024926804.045047420000000',)]

-----------
QUERY:

SELECT to_char(val, 'S0999999999999999.999999999999999')      FROM num_data;
RESULT:
	[('+0000000000000000.000000000000000',), ('+0000000000000000.000000000000000',), ('-0000000034338492.215397047000000',), ('+0000000000000004.310000000000000',), ('+0000000007799461.411900000000000',), ('+0000000000016397.038491000000000',), ('+0000000000093901.577630260000000',), ('-0000000083028485.000000000000000',), ('+0000000000074881.000000000000000',), ('-0000000024926804.045047420000000',)]

-----------
QUERY:

SELECT to_char(val, 'FM0999999999999999.999999999999999')     FROM num_data;
RESULT:
	[('0000000000000000.',), ('0000000000000000.',), ('-0000000034338492.215397047',), ('0000000000000004.31',), ('0000000007799461.4119',), ('0000000000016397.038491',), ('0000000000093901.57763026',), ('-0000000083028485.',), ('0000000000074881.',), ('-0000000024926804.04504742',)]

-----------
QUERY:

SELECT to_char(val, 'FM9999999999999999.099999999999999') 	FROM num_data;
RESULT:
	[('.0',), ('.0',), ('-34338492.215397047',), ('4.31',), ('7799461.4119',), ('16397.038491',), ('93901.57763026',), ('-83028485.0',), ('74881.0',), ('-24926804.04504742',)]

-----------
QUERY:

SELECT to_char(val, 'FM9999999999990999.990999999999999') 	FROM num_data;
RESULT:
	[('0000.000',), ('0000.000',), ('-34338492.215397047',), ('0004.310',), ('7799461.4119',), ('16397.038491',), ('93901.57763026',), ('-83028485.000',), ('74881.000',), ('-24926804.04504742',)]

-----------
QUERY:

SELECT to_char(val, 'FM0999999999999999.999909999999999') 	FROM num_data;
RESULT:
	[('0000000000000000.00000',), ('0000000000000000.00000',), ('-0000000034338492.215397047',), ('0000000000000004.31000',), ('0000000007799461.41190',), ('0000000000016397.038491',), ('0000000000093901.57763026',), ('-0000000083028485.00000',), ('0000000000074881.00000',), ('-0000000024926804.04504742',)]

-----------
QUERY:

SELECT to_char(val, 'FM9999999990999999.099999999999999') 	FROM num_data;
RESULT:
	[('0000000.0',), ('0000000.0',), ('-34338492.215397047',), ('0000004.31',), ('7799461.4119',), ('0016397.038491',), ('0093901.57763026',), ('-83028485.0',), ('0074881.0',), ('-24926804.04504742',)]

-----------
QUERY:

SELECT to_char(val, 'L9999999999999999.099999999999999')	FROM num_data;
RESULT:
	[('CHF                 .000000000000000',), ('CHF                 .000000000000000',), ('CHF        -34338492.215397047000000',), ('CHF                4.310000000000000',), ('CHF          7799461.411900000000000',), ('CHF            16397.038491000000000',), ('CHF            93901.577630260000000',), ('CHF        -83028485.000000000000000',), ('CHF            74881.000000000000000',), ('CHF        -24926804.045047420000000',)]

-----------
QUERY:

SELECT to_char(val, 'FM9999999999999999.99999999999999')	FROM num_data;
RESULT:
	[('0.',), ('0.',), ('-34338492.215397047',), ('4.31',), ('7799461.4119',), ('16397.038491',), ('93901.57763026',), ('-83028485.',), ('74881.',), ('-24926804.04504742',)]

-----------
QUERY:

SELECT to_char(val, 'S 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 . 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9') FROM num_data;
RESULT:
	[('                                 +. 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0',), ('                                 +. 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0',), ('                 -3 4 3 3 8 4 9 2 . 2 1 5 3 9 7 0 4 7 0 0 0 0 0 0 0 0',), ('                               +4 . 3 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0',), ('                   +7 7 9 9 4 6 1 . 4 1 1 9 0 0 0 0 0 0 0 0 0 0 0 0 0',), ('                       +1 6 3 9 7 . 0 3 8 4 9 1 0 0 0 0 0 0 0 0 0 0 0',), ('                       +9 3 9 0 1 . 5 7 7 6 3 0 2 6 0 0 0 0 0 0 0 0 0',), ('                 -8 3 0 2 8 4 8 5 . 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0',), ('                       +7 4 8 8 1 . 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0',), ('                 -2 4 9 2 6 8 0 4 . 0 4 5 0 4 7 4 2 0 0 0 0 0 0 0 0 0',)]

-----------
QUERY:

SELECT to_char(val, 'FMS 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 . 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9') FROM num_data;
RESULT:
	[('                +0 .                 ',), ('                +0 .                 ',), ('         -3 4 3 3 8 4 9 2 . 2 1 5 3 9 7 0 4 7        ',), ('                +4 . 3 1               ',), ('          +7 7 9 9 4 6 1 . 4 1 1 9             ',), ('            +1 6 3 9 7 . 0 3 8 4 9 1           ',), ('            +9 3 9 0 1 . 5 7 7 6 3 0 2 6         ',), ('         -8 3 0 2 8 4 8 5 .                 ',), ('            +7 4 8 8 1 .                 ',), ('         -2 4 9 2 6 8 0 4 . 0 4 5 0 4 7 4 2         ',)]

-----------
QUERY:

SELECT to_char(val, E'99999 "text" 9999 "9999" 999 "\\"text between quote marks\\"" 9999') FROM num_data;
RESULT:
	[('      text      9999     "text between quote marks"     0',), ('      text      9999     "text between quote marks"     0',), ('      text    -3 9999 433 "text between quote marks" 8492',), ('      text      9999     "text between quote marks"     4',), ('      text      9999  779 "text between quote marks" 9461',), ('      text      9999    1 "text between quote marks" 6397',), ('      text      9999    9 "text between quote marks" 3902',), ('      text    -8 9999 302 "text between quote marks" 8485',), ('      text      9999    7 "text between quote marks" 4881',), ('      text    -2 9999 492 "text between quote marks" 6804',)]

-----------
QUERY:

SELECT to_char(val, '999999SG9999999999')			FROM num_data;
RESULT:
	[('      +         0',), ('      +         0',), ('      -  34338492',), ('      +         4',), ('      +   7799461',), ('      +     16397',), ('      +     93902',), ('      -  83028485',), ('      +     74881',), ('      -  24926804',)]

-----------
QUERY:

SELECT to_char(val, 'FM9999999999999999.999999999999999')	FROM num_data;
RESULT:
	[('0.',), ('0.',), ('-34338492.215397047',), ('4.31',), ('7799461.4119',), ('16397.038491',), ('93901.57763026',), ('-83028485.',), ('74881.',), ('-24926804.04504742',)]

-----------
QUERY:

SELECT to_char(val, '9.999EEEE')				FROM num_data;
RESULT:
	[(' 0.000e+00',), (' 0.000e+00',), ('-3.434e+07',), (' 4.310e+00',), (' 7.799e+06',), (' 1.640e+04',), (' 9.390e+04',), ('-8.303e+07',), (' 7.488e+04',), ('-2.493e+07',)]

-----------
QUERY:


WITH v(val) AS
  (VALUES('0'::numeric),('-4.2'),('4.2e9'),('1.2e-5'),('inf'),('-inf'),('nan'))
SELECT val,
  to_char(val, '9.999EEEE') as numeric,
  to_char(val::float8, '9.999EEEE') as float8,
  to_char(val::float4, '9.999EEEE') as float4
FROM v;
RESULT:
	[(Decimal('0'), ' 0.000e+00', ' 0.000e+00', ' 0.000e+00'), (Decimal('-4.2'), '-4.200e+00', '-4.200e+00', '-4.200e+00'), (Decimal('4200000000'), ' 4.200e+09', ' 4.200e+09', ' 4.200e+09'), (Decimal('0.000012'), ' 1.200e-05', ' 1.200e-05', ' 1.200e-05'), (Decimal('Infinity'), ' #.#######', ' #.#######', ' #.#######'), (Decimal('-Infinity'), ' #.#######', ' #.#######', ' #.#######'), (Decimal('NaN'), ' #.#######', ' #.#######', ' #.#######')]

-----------
QUERY:


WITH v(exp) AS
  (VALUES(-16379),(-16378),(-1234),(-789),(-45),(-5),(-4),(-3),(-2),(-1),(0),
         (1),(2),(3),(4),(5),(38),(275),(2345),(45678),(131070),(131071))
SELECT exp,
  to_char(('1.2345e'||exp)::numeric, '9.999EEEE') as numeric
FROM v;
RESULT:
	[(-16379, ' 1.235e-16379'), (-16378, ' 1.235e-16378'), (-1234, ' 1.235e-1234'), (-789, ' 1.235e-789'), (-45, ' 1.235e-45'), (-5, ' 1.235e-05'), (-4, ' 1.235e-04'), (-3, ' 1.235e-03'), (-2, ' 1.235e-02'), (-1, ' 1.235e-01'), (0, ' 1.235e+00'), (1, ' 1.235e+01'), (2, ' 1.235e+02'), (3, ' 1.235e+03'), (4, ' 1.235e+04'), (5, ' 1.235e+05'), (38, ' 1.235e+38'), (275, ' 1.235e+275'), (2345, ' 1.235e+2345'), (45678, ' 1.235e+45678'), (131070, ' 1.235e+131070'), (131071, ' 1.235e+131071')]

-----------
QUERY:


WITH v(val) AS
  (VALUES('0'::numeric),('-4.2'),('4.2e9'),('1.2e-5'),('inf'),('-inf'),('nan'))
SELECT val,
  to_char(val, 'MI9999999999.99') as numeric,
  to_char(val::float8, 'MI9999999999.99') as float8,
  to_char(val::float4, 'MI9999999999.99') as float4
FROM v;
RESULT:
	[(Decimal('0'), '           .00', '           .00', '           .00'), (Decimal('-4.2'), '-         4.20', '-         4.20', '-         4.20'), (Decimal('4200000000'), ' 4200000000.00', ' 4200000000.00', ' 4200000000'), (Decimal('0.000012'), '           .00', '           .00', '           .00'), (Decimal('Infinity'), '   Infinity', '   Infinity', '   Infinity'), (Decimal('-Infinity'), '-  Infinity', '-  Infinity', '-  Infinity'), (Decimal('NaN'), '        NaN', '        NaN', '        NaN')]

-----------
QUERY:


WITH v(val) AS
  (VALUES('0'::numeric),('-4.2'),('4.2e9'),('1.2e-5'),('inf'),('-inf'),('nan'))
SELECT val,
  to_char(val, 'MI99.99') as numeric,
  to_char(val::float8, 'MI99.99') as float8,
  to_char(val::float4, 'MI99.99') as float4
FROM v;
RESULT:
	[(Decimal('0'), '   .00', '   .00', '   .00'), (Decimal('-4.2'), '- 4.20', '- 4.20', '- 4.20'), (Decimal('4200000000'), ' ##.##', ' ##.##', ' ##.'), (Decimal('0.000012'), '   .00', '   .00', '   .00'), (Decimal('Infinity'), ' ##.##', ' ##.##', ' ##.'), (Decimal('-Infinity'), '-##.##', '-##.##', '-##.'), (Decimal('NaN'), ' ##.##', ' ##.##', ' ##.##')]

-----------
QUERY:


SELECT to_char('100'::numeric, 'FM999.9');
RESULT:
	[('100.',)]

-----------
QUERY:

SELECT to_char('100'::numeric, 'FM999.');
RESULT:
	[('100',)]

-----------
QUERY:

SELECT to_char('100'::numeric, 'FM999');
RESULT:
	[('100',)]

-----------
QUERY:

SELECT to_char('12345678901'::float8, 'FM9999999999D9999900000000000000000');
RESULT:
	[('##########.####',)]

-----------
QUERY:


-- Check parsing of literal text in a format string
SELECT to_char('100'::numeric, 'foo999');
RESULT:
	[('foo 100',)]

-----------
QUERY:

SELECT to_char('100'::numeric, 'f\oo999');
RESULT:
	[('f\\oo 100',)]

-----------
QUERY:

SELECT to_char('100'::numeric, 'f\\oo999');
RESULT:
	[('f\\\\oo 100',)]

-----------
QUERY:

SELECT to_char('100'::numeric, 'f\"oo999');
RESULT:
	[('f"oo 100',)]

-----------
QUERY:

SELECT to_char('100'::numeric, 'f\\"oo999');
RESULT:
	[('f\\"oo 100',)]

-----------
QUERY:

SELECT to_char('100'::numeric, 'f"ool"999');
RESULT:
	[('fool 100',)]

-----------
QUERY:

SELECT to_char('100'::numeric, 'f"\ool"999');
RESULT:
	[('fool 100',)]

-----------
QUERY:

SELECT to_char('100'::numeric, 'f"\\ool"999');
RESULT:
	[('f\\ool 100',)]

-----------
QUERY:

SELECT to_char('100'::numeric, 'f"ool\"999');
RESULT:
	[('fool"999',)]

-----------
QUERY:

SELECT to_char('100'::numeric, 'f"ool\\"999');
RESULT:
	[('fool\\ 100',)]

-----------
QUERY:


-- TO_NUMBER()
--
SET lc_numeric = 'C';
RESULT:
	[]

-----------
QUERY:

SELECT to_number('-34,338,492', '99G999G999');
RESULT:
	[(Decimal('-34338492'),)]

-----------
QUERY:

SELECT to_number('-34,338,492.654,878', '99G999G999D999G999');
RESULT:
	[(Decimal('-34338492.654878'),)]

-----------
QUERY:

SELECT to_number('<564646.654564>', '999999.999999PR');
RESULT:
	[(Decimal('-564646.654564'),)]

-----------
QUERY:

SELECT to_number('0.00001-', '9.999999S');
RESULT:
	[(Decimal('-0.00001'),)]

-----------
QUERY:

SELECT to_number('5.01-', 'FM9.999999S');
RESULT:
	[(Decimal('-5.01'),)]

-----------
QUERY:

SELECT to_number('5.01-', 'FM9.999999MI');
RESULT:
	[(Decimal('-5.01'),)]

-----------
QUERY:

SELECT to_number('5 4 4 4 4 8 . 7 8', '9 9 9 9 9 9 . 9 9');
RESULT:
	[(Decimal('544448.78'),)]

-----------
QUERY:

SELECT to_number('.01', 'FM9.99');
RESULT:
	[(Decimal('0.01'),)]

-----------
QUERY:

SELECT to_number('.0', '99999999.99999999');
RESULT:
	[(Decimal('0.0'),)]

-----------
QUERY:

SELECT to_number('0', '99.99');
RESULT:
	[(Decimal('0'),)]

-----------
QUERY:

SELECT to_number('.-01', 'S99.99');
RESULT:
	[(Decimal('-0.01'),)]

-----------
QUERY:

SELECT to_number('.01-', '99.99S');
RESULT:
	[(Decimal('-0.01'),)]

-----------
QUERY:

SELECT to_number(' . 0 1-', ' 9 9 . 9 9 S');
RESULT:
	[(Decimal('-0.01'),)]

-----------
QUERY:

SELECT to_number('34,50','999,99');
RESULT:
	[(Decimal('3450'),)]

-----------
QUERY:

SELECT to_number('123,000','999G');
RESULT:
	[(Decimal('123'),)]

-----------
QUERY:

SELECT to_number('123456','999G999');
RESULT:
	[(Decimal('123456'),)]

-----------
QUERY:

SELECT to_number('$1234.56','L9,999.99');
RESULT:
	[(Decimal('1234.56'),)]

-----------
QUERY:

SELECT to_number('$1234.56','L99,999.99');
RESULT:
	[(Decimal('1234.56'),)]

-----------
QUERY:

SELECT to_number('$1,234.56','L99,999.99');
RESULT:
	[(Decimal('1234.56'),)]

-----------
QUERY:

SELECT to_number('1234.56','L99,999.99');
RESULT:
	[(Decimal('1234.56'),)]

-----------
QUERY:

SELECT to_number('1,234.56','L99,999.99');
RESULT:
	[(Decimal('1234.56'),)]

-----------
QUERY:

SELECT to_number('42nd', '99th');
RESULT:
	[(Decimal('42'),)]

-----------
QUERY:

RESET lc_numeric;
RESULT:
	[]

-----------
QUERY:


--
-- Input syntax
--

CREATE TABLE num_input_test (n1 numeric);
RESULT:
	[]

-----------
QUERY:


-- good inputs
INSERT INTO num_input_test(n1) VALUES (' 123');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_input_test(n1) VALUES ('   3245874    ');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_input_test(n1) VALUES ('  -93853');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_input_test(n1) VALUES ('555.50');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_input_test(n1) VALUES ('-555.50');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_input_test(n1) VALUES ('NaN ');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_input_test(n1) VALUES ('        nan');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_input_test(n1) VALUES (' inf ');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_input_test(n1) VALUES (' +inf ');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_input_test(n1) VALUES (' -inf ');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_input_test(n1) VALUES (' Infinity ');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_input_test(n1) VALUES (' +inFinity ');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_input_test(n1) VALUES (' -INFINITY ');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_input_test(n1) VALUES ('12_000_000_000');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_input_test(n1) VALUES ('12_000.123_456');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_input_test(n1) VALUES ('23_000_000_000e-1_0');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_input_test(n1) VALUES ('.000_000_000_123e1_0');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_input_test(n1) VALUES ('.000_000_000_123e+1_1');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_input_test(n1) VALUES ('0b10001110111100111100001001010');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_input_test(n1) VALUES ('  -0B_1010_1011_0101_0100_1010_1001_1000_1100_1110_1011_0001_1111_0000_1010_1101_0010  ');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_input_test(n1) VALUES ('  +0o112402761777 ');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_input_test(n1) VALUES ('-0O0012_5524_5230_6334_3167_0261');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_input_test(n1) VALUES ('-0x0000000000000000000000000deadbeef');
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_input_test(n1) VALUES (' 0X_30b1_F33a_6DF0_bD4E_64DF_9BdA_7D15 ');
RESULT:
	[]

-----------
QUERY:


-- bad inputs
INSERT INTO num_input_test(n1) VALUES ('     ');
RESULT:
	ERROR - invalid input syntax for type numeric: "     "
LINE 4: INSERT INTO num_input_test(n1) VALUES ('     ');
                                               ^


-----------
QUERY:

INSERT INTO num_input_test(n1) VALUES ('   1234   %');
RESULT:
	ERROR - invalid input syntax for type numeric: "   1234   %"
LINE 2: INSERT INTO num_input_test(n1) VALUES ('   1234   %');
                                               ^


-----------
QUERY:

INSERT INTO num_input_test(n1) VALUES ('xyz');
RESULT:
	ERROR - invalid input syntax for type numeric: "xyz"
LINE 2: INSERT INTO num_input_test(n1) VALUES ('xyz');
                                               ^


-----------
QUERY:

INSERT INTO num_input_test(n1) VALUES ('- 1234');
RESULT:
	ERROR - invalid input syntax for type numeric: "- 1234"
LINE 2: INSERT INTO num_input_test(n1) VALUES ('- 1234');
                                               ^


-----------
QUERY:

INSERT INTO num_input_test(n1) VALUES ('5 . 0');
RESULT:
	ERROR - invalid input syntax for type numeric: "5 . 0"
LINE 2: INSERT INTO num_input_test(n1) VALUES ('5 . 0');
                                               ^


-----------
QUERY:

INSERT INTO num_input_test(n1) VALUES ('5. 0   ');
RESULT:
	ERROR - invalid input syntax for type numeric: "5. 0   "
LINE 2: INSERT INTO num_input_test(n1) VALUES ('5. 0   ');
                                               ^


-----------
QUERY:

INSERT INTO num_input_test(n1) VALUES ('');
RESULT:
	ERROR - invalid input syntax for type numeric: ""
LINE 2: INSERT INTO num_input_test(n1) VALUES ('');
                                               ^


-----------
QUERY:

INSERT INTO num_input_test(n1) VALUES (' N aN ');
RESULT:
	ERROR - invalid input syntax for type numeric: " N aN "
LINE 2: INSERT INTO num_input_test(n1) VALUES (' N aN ');
                                               ^


-----------
QUERY:

INSERT INTO num_input_test(n1) VALUES ('+NaN');
RESULT:
	ERROR - invalid input syntax for type numeric: "+NaN"
LINE 2: INSERT INTO num_input_test(n1) VALUES ('+NaN');
                                               ^


-----------
QUERY:

INSERT INTO num_input_test(n1) VALUES ('-NaN');
RESULT:
	ERROR - invalid input syntax for type numeric: "-NaN"
LINE 2: INSERT INTO num_input_test(n1) VALUES ('-NaN');
                                               ^


-----------
QUERY:

INSERT INTO num_input_test(n1) VALUES ('+ infinity');
RESULT:
	ERROR - invalid input syntax for type numeric: "+ infinity"
LINE 2: INSERT INTO num_input_test(n1) VALUES ('+ infinity');
                                               ^


-----------
QUERY:

INSERT INTO num_input_test(n1) VALUES ('_123');
RESULT:
	ERROR - invalid input syntax for type numeric: "_123"
LINE 2: INSERT INTO num_input_test(n1) VALUES ('_123');
                                               ^


-----------
QUERY:

INSERT INTO num_input_test(n1) VALUES ('123_');
RESULT:
	ERROR - invalid input syntax for type numeric: "123_"
LINE 2: INSERT INTO num_input_test(n1) VALUES ('123_');
                                               ^


-----------
QUERY:

INSERT INTO num_input_test(n1) VALUES ('12__34');
RESULT:
	ERROR - invalid input syntax for type numeric: "12__34"
LINE 2: INSERT INTO num_input_test(n1) VALUES ('12__34');
                                               ^


-----------
QUERY:

INSERT INTO num_input_test(n1) VALUES ('123_.456');
RESULT:
	ERROR - invalid input syntax for type numeric: "123_.456"
LINE 2: INSERT INTO num_input_test(n1) VALUES ('123_.456');
                                               ^


-----------
QUERY:

INSERT INTO num_input_test(n1) VALUES ('123._456');
RESULT:
	ERROR - invalid input syntax for type numeric: "123._456"
LINE 2: INSERT INTO num_input_test(n1) VALUES ('123._456');
                                               ^


-----------
QUERY:

INSERT INTO num_input_test(n1) VALUES ('1.2e_34');
RESULT:
	ERROR - invalid input syntax for type numeric: "1.2e_34"
LINE 2: INSERT INTO num_input_test(n1) VALUES ('1.2e_34');
                                               ^


-----------
QUERY:

INSERT INTO num_input_test(n1) VALUES ('1.2e34_');
RESULT:
	ERROR - invalid input syntax for type numeric: "1.2e34_"
LINE 2: INSERT INTO num_input_test(n1) VALUES ('1.2e34_');
                                               ^


-----------
QUERY:

INSERT INTO num_input_test(n1) VALUES ('1.2e3__4');
RESULT:
	ERROR - invalid input syntax for type numeric: "1.2e3__4"
LINE 2: INSERT INTO num_input_test(n1) VALUES ('1.2e3__4');
                                               ^


-----------
QUERY:

INSERT INTO num_input_test(n1) VALUES ('0b1112');
RESULT:
	ERROR - invalid input syntax for type numeric: "0b1112"
LINE 2: INSERT INTO num_input_test(n1) VALUES ('0b1112');
                                               ^


-----------
QUERY:

INSERT INTO num_input_test(n1) VALUES ('0c1112');
RESULT:
	ERROR - invalid input syntax for type numeric: "0c1112"
LINE 2: INSERT INTO num_input_test(n1) VALUES ('0c1112');
                                               ^


-----------
QUERY:

INSERT INTO num_input_test(n1) VALUES ('0o12345678');
RESULT:
	ERROR - invalid input syntax for type numeric: "0o12345678"
LINE 2: INSERT INTO num_input_test(n1) VALUES ('0o12345678');
                                               ^


-----------
QUERY:

INSERT INTO num_input_test(n1) VALUES ('0x1eg');
RESULT:
	ERROR - invalid input syntax for type numeric: "0x1eg"
LINE 2: INSERT INTO num_input_test(n1) VALUES ('0x1eg');
                                               ^


-----------
QUERY:

INSERT INTO num_input_test(n1) VALUES ('0x12.34');
RESULT:
	ERROR - invalid input syntax for type numeric: "0x12.34"
LINE 2: INSERT INTO num_input_test(n1) VALUES ('0x12.34');
                                               ^


-----------
QUERY:

INSERT INTO num_input_test(n1) VALUES ('0x__1234');
RESULT:
	ERROR - invalid input syntax for type numeric: "0x__1234"
LINE 2: INSERT INTO num_input_test(n1) VALUES ('0x__1234');
                                               ^


-----------
QUERY:

INSERT INTO num_input_test(n1) VALUES ('0x1234_');
RESULT:
	ERROR - invalid input syntax for type numeric: "0x1234_"
LINE 2: INSERT INTO num_input_test(n1) VALUES ('0x1234_');
                                               ^


-----------
QUERY:

INSERT INTO num_input_test(n1) VALUES ('0x12__34');
RESULT:
	ERROR - invalid input syntax for type numeric: "0x12__34"
LINE 2: INSERT INTO num_input_test(n1) VALUES ('0x12__34');
                                               ^


-----------
QUERY:


SELECT * FROM num_input_test;
RESULT:
	[(Decimal('123'),), (Decimal('3245874'),), (Decimal('-93853'),), (Decimal('555.50'),), (Decimal('-555.50'),), (Decimal('NaN'),), (Decimal('NaN'),), (Decimal('Infinity'),), (Decimal('Infinity'),), (Decimal('-Infinity'),), (Decimal('Infinity'),), (Decimal('Infinity'),), (Decimal('-Infinity'),), (Decimal('12000000000'),), (Decimal('12000.123456'),), (Decimal('2.3000000000'),), (Decimal('1.23'),), (Decimal('12.3'),), (Decimal('299792458'),), (Decimal('-12345678901234567890'),), (Decimal('9999999999'),), (Decimal('-12345678900987654321'),), (Decimal('-3735928559'),), (Decimal('987654321234567898765432123456789'),)]

-----------
QUERY:


-- Also try it with non-error-throwing API
SELECT pg_input_is_valid('34.5', 'numeric');
RESULT:
	[(True,)]

-----------
QUERY:

SELECT pg_input_is_valid('34xyz', 'numeric');
RESULT:
	[(False,)]

-----------
QUERY:

SELECT pg_input_is_valid('1e400000', 'numeric');
RESULT:
	[(False,)]

-----------
QUERY:

SELECT * FROM pg_input_error_info('1e400000', 'numeric');
RESULT:
	[('value overflows numeric format', None, None, '22003')]

-----------
QUERY:

SELECT pg_input_is_valid('1234.567', 'numeric(8,4)');
RESULT:
	[(True,)]

-----------
QUERY:

SELECT pg_input_is_valid('1234.567', 'numeric(7,4)');
RESULT:
	[(False,)]

-----------
QUERY:

SELECT * FROM pg_input_error_info('1234.567', 'numeric(7,4)');
RESULT:
	[('numeric field overflow', 'A field with precision 7, scale 4 must round to an absolute value less than 10^3.', None, '22003')]

-----------
QUERY:

SELECT * FROM pg_input_error_info('0x1234.567', 'numeric');
RESULT:
	[('invalid input syntax for type numeric: "0x1234.567"', None, None, '22P02')]

-----------
QUERY:


--
-- Test precision and scale typemods
--

CREATE TABLE num_typemod_test (
  millions numeric(3, -6),
  thousands numeric(3, -3),
  units numeric(3, 0),
  thousandths numeric(3, 3),
  millionths numeric(3, 6)
);
RESULT:
	[]

-----------
QUERY:

-- \d num_typemod_test

-- rounding of valid inputs
INSERT INTO num_typemod_test VALUES (123456, 123, 0.123, 0.000123, 0.000000123);
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_typemod_test VALUES (654321, 654, 0.654, 0.000654, 0.000000654);
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_typemod_test VALUES (2345678, 2345, 2.345, 0.002345, 0.000002345);
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_typemod_test VALUES (7654321, 7654, 7.654, 0.007654, 0.000007654);
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_typemod_test VALUES (12345678, 12345, 12.345, 0.012345, 0.000012345);
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_typemod_test VALUES (87654321, 87654, 87.654, 0.087654, 0.000087654);
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_typemod_test VALUES (123456789, 123456, 123.456, 0.123456, 0.000123456);
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_typemod_test VALUES (987654321, 987654, 987.654, 0.987654, 0.000987654);
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_typemod_test VALUES ('NaN', 'NaN', 'NaN', 'NaN', 'NaN');
RESULT:
	[]

-----------
QUERY:


SELECT scale(millions), * FROM num_typemod_test ORDER BY millions;
RESULT:
	[(0, Decimal('0'), Decimal('0'), Decimal('0'), Decimal('0.000'), Decimal('0.000000')), (0, Decimal('1000000'), Decimal('1000'), Decimal('1'), Decimal('0.001'), Decimal('0.000001')), (0, Decimal('2000000'), Decimal('2000'), Decimal('2'), Decimal('0.002'), Decimal('0.000002')), (0, Decimal('8000000'), Decimal('8000'), Decimal('8'), Decimal('0.008'), Decimal('0.000008')), (0, Decimal('12000000'), Decimal('12000'), Decimal('12'), Decimal('0.012'), Decimal('0.000012')), (0, Decimal('88000000'), Decimal('88000'), Decimal('88'), Decimal('0.088'), Decimal('0.000088')), (0, Decimal('123000000'), Decimal('123000'), Decimal('123'), Decimal('0.123'), Decimal('0.000123')), (0, Decimal('988000000'), Decimal('988000'), Decimal('988'), Decimal('0.988'), Decimal('0.000988')), (None, Decimal('NaN'), Decimal('NaN'), Decimal('NaN'), Decimal('NaN'), Decimal('NaN'))]

-----------
QUERY:


-- invalid inputs
INSERT INTO num_typemod_test (millions) VALUES ('inf');
RESULT:
	ERROR - numeric field overflow
DETAIL:  A field with precision 3, scale -6 cannot hold an infinite value.


-----------
QUERY:

INSERT INTO num_typemod_test (millions) VALUES (999500000);
RESULT:
	ERROR - numeric field overflow
DETAIL:  A field with precision 3, scale -6 must round to an absolute value less than 10^9.


-----------
QUERY:

INSERT INTO num_typemod_test (thousands) VALUES (999500);
RESULT:
	ERROR - numeric field overflow
DETAIL:  A field with precision 3, scale -3 must round to an absolute value less than 10^6.


-----------
QUERY:

INSERT INTO num_typemod_test (units) VALUES (999.5);
RESULT:
	ERROR - numeric field overflow
DETAIL:  A field with precision 3, scale 0 must round to an absolute value less than 10^3.


-----------
QUERY:

INSERT INTO num_typemod_test (thousandths) VALUES (0.9995);
RESULT:
	ERROR - numeric field overflow
DETAIL:  A field with precision 3, scale 3 must round to an absolute value less than 1.


-----------
QUERY:

INSERT INTO num_typemod_test (millionths) VALUES (0.0009995);
RESULT:
	ERROR - numeric field overflow
DETAIL:  A field with precision 3, scale 6 must round to an absolute value less than 10^-3.


-----------
QUERY:


--
-- Test some corner cases for multiplication
--

select 4790999999999999999999999999999999999999999999999999999999999999999999999999999999999999 * 9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999;
RESULT:
	[(Decimal('47909999999999999999999999999999999999999999999999999999999999999999999999999999999999985209000000000000000000000000000000000000000000000000000000000000000000000000000000000001'),)]

-----------
QUERY:


select 4789999999999999999999999999999999999999999999999999999999999999999999999999999999999999 * 9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999;
RESULT:
	[(Decimal('47899999999999999999999999999999999999999999999999999999999999999999999999999999999999985210000000000000000000000000000000000000000000000000000000000000000000000000000000000001'),)]

-----------
QUERY:


select 4770999999999999999999999999999999999999999999999999999999999999999999999999999999999999 * 9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999;
RESULT:
	[(Decimal('47709999999999999999999999999999999999999999999999999999999999999999999999999999999999985229000000000000000000000000000000000000000000000000000000000000000000000000000000000001'),)]

-----------
QUERY:


select 4769999999999999999999999999999999999999999999999999999999999999999999999999999999999999 * 9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999;
RESULT:
	[(Decimal('47699999999999999999999999999999999999999999999999999999999999999999999999999999999999985230000000000000000000000000000000000000000000000000000000000000000000000000000000000001'),)]

-----------
QUERY:


select trim_scale((0.1 - 2e-16383) * (0.1 - 3e-16383));
RESULT:
	[(Decimal('0.01'),)]

-----------
QUERY:


--
-- Test some corner cases for division
--

select 999999999999999999999::numeric/1000000000000000000000;
RESULT:
	[(Decimal('1.00000000000000000000'),)]

-----------
QUERY:

select div(999999999999999999999::numeric,1000000000000000000000);
RESULT:
	[(Decimal('0'),)]

-----------
QUERY:

select mod(999999999999999999999::numeric,1000000000000000000000);
RESULT:
	[(Decimal('999999999999999999999'),)]

-----------
QUERY:

select div(-9999999999999999999999::numeric,1000000000000000000000);
RESULT:
	[(Decimal('-9'),)]

-----------
QUERY:

select mod(-9999999999999999999999::numeric,1000000000000000000000);
RESULT:
	[(Decimal('-999999999999999999999'),)]

-----------
QUERY:

select div(-9999999999999999999999::numeric,1000000000000000000000)*1000000000000000000000 + mod(-9999999999999999999999::numeric,1000000000000000000000);
RESULT:
	[(Decimal('-9999999999999999999999'),)]

-----------
QUERY:

select mod (70.0,70) ;
RESULT:
	[(Decimal('0.0'),)]

-----------
QUERY:

select div (70.0,70) ;
RESULT:
	[(Decimal('1'),)]

-----------
QUERY:

select 70.0 / 70 ;
RESULT:
	[(Decimal('1.00000000000000000000'),)]

-----------
QUERY:

select 12345678901234567890 % 123;
RESULT:
	[(Decimal('78'),)]

-----------
QUERY:

select 12345678901234567890 / 123;
RESULT:
	[(Decimal('100371373180768845'),)]

-----------
QUERY:

select div(12345678901234567890, 123);
RESULT:
	[(Decimal('100371373180768844'),)]

-----------
QUERY:

select div(12345678901234567890, 123) * 123 + 12345678901234567890 % 123;
RESULT:
	[(Decimal('12345678901234567890'),)]

-----------
QUERY:


--
-- Test some corner cases for square root
--

select sqrt(1.000000000000003::numeric);
RESULT:
	[(Decimal('1.000000000000001'),)]

-----------
QUERY:

select sqrt(1.000000000000004::numeric);
RESULT:
	[(Decimal('1.000000000000002'),)]

-----------
QUERY:

select sqrt(96627521408608.56340355805::numeric);
RESULT:
	[(Decimal('9829929.87811248648'),)]

-----------
QUERY:

select sqrt(96627521408608.56340355806::numeric);
RESULT:
	[(Decimal('9829929.87811248649'),)]

-----------
QUERY:

select sqrt(515549506212297735.073688290367::numeric);
RESULT:
	[(Decimal('718017761.766585921184'),)]

-----------
QUERY:

select sqrt(515549506212297735.073688290368::numeric);
RESULT:
	[(Decimal('718017761.766585921185'),)]

-----------
QUERY:

select sqrt(8015491789940783531003294973900306::numeric);
RESULT:
	[(Decimal('89529278953540017'),)]

-----------
QUERY:

select sqrt(8015491789940783531003294973900307::numeric);
RESULT:
	[(Decimal('89529278953540018'),)]

-----------
QUERY:


--
-- Test code path for raising to integer powers
--

select 10.0 ^ -2147483648 as rounds_to_zero;
RESULT:
	[(Decimal('0E-1000'),)]

-----------
QUERY:

select 10.0 ^ -2147483647 as rounds_to_zero;
RESULT:
	[(Decimal('0E-1000'),)]

-----------
QUERY:

select 10.0 ^ 2147483647 as overflows;
RESULT:
	ERROR - value overflows numeric format


-----------
QUERY:

select 117743296169.0 ^ 1000000000 as overflows;
RESULT:
	ERROR - value overflows numeric format


-----------
QUERY:


-- cases that used to return inaccurate results
select 3.789 ^ 21.0000000000000000;
RESULT:
	[(Decimal('1409343026052.8716016316022141'),)]

-----------
QUERY:

select 3.789 ^ 35.0000000000000000;
RESULT:
	[(Decimal('177158169650516670809.3820586142670135'),)]

-----------
QUERY:

select 1.2 ^ 345;
RESULT:
	[(Decimal('2077446682327378559843444695.6'),)]

-----------
QUERY:

select 0.12 ^ (-20);
RESULT:
	[(Decimal('2608405330458882702.55'),)]

-----------
QUERY:

select 1.000000000123 ^ (-2147483648);
RESULT:
	[(Decimal('0.7678656556403084'),)]

-----------
QUERY:

select coalesce(nullif(0.9999999999 ^ 23300000000000, 0), 0) as rounds_to_zero;
RESULT:
	[(Decimal('0'),)]

-----------
QUERY:

select round(((1 - 1.500012345678e-1000) ^ 1.45e1003) * 1e1000);
RESULT:
	[(Decimal('25218976308958387188077465658068501556514992509509282366'),)]

-----------
QUERY:


-- cases that used to error out
select 0.12 ^ (-25);
RESULT:
	[(Decimal('104825960103961013959336.50'),)]

-----------
QUERY:

select 0.5678 ^ (-85);
RESULT:
	[(Decimal('782333637740774446257.7719'),)]

-----------
QUERY:

select coalesce(nullif(0.9999999999 ^ 70000000000000, 0), 0) as underflows;
RESULT:
	[(Decimal('0'),)]

-----------
QUERY:


-- negative base to integer powers
select (-1.0) ^ 2147483646;
RESULT:
	[(Decimal('1.0000000000000000'),)]

-----------
QUERY:

select (-1.0) ^ 2147483647;
RESULT:
	[(Decimal('-1.0000000000000000'),)]

-----------
QUERY:

select (-1.0) ^ 2147483648;
RESULT:
	[(Decimal('1.0000000000000000'),)]

-----------
QUERY:

select (-1.0) ^ 1000000000000000;
RESULT:
	[(Decimal('1.0000000000000000'),)]

-----------
QUERY:

select (-1.0) ^ 1000000000000001;
RESULT:
	[(Decimal('-1.0000000000000000'),)]

-----------
QUERY:


-- integer powers of 10
select n, 10.0 ^ n as "10^n", (10.0 ^ n) * (10.0 ^ (-n)) = 1 as ok
from generate_series(-20, 20) n;
RESULT:
	[(-20, Decimal('1.0000000000000000E-20'), True), (-19, Decimal('1.0000000000000000E-19'), True), (-18, Decimal('1.0000000000000000E-18'), True), (-17, Decimal('1.0000000000000000E-17'), True), (-16, Decimal('1.0000000000000000E-16'), True), (-15, Decimal('1.0000000000000000E-15'), True), (-14, Decimal('1.0000000000000000E-14'), True), (-13, Decimal('1.0000000000000000E-13'), True), (-12, Decimal('1.0000000000000000E-12'), True), (-11, Decimal('1.0000000000000000E-11'), True), (-10, Decimal('1.0000000000000000E-10'), True), (-9, Decimal('1.0000000000000000E-9'), True), (-8, Decimal('1.0000000000000000E-8'), True), (-7, Decimal('1.0000000000000000E-7'), True), (-6, Decimal('0.0000010000000000000000'), True), (-5, Decimal('0.000010000000000000000'), True), (-4, Decimal('0.00010000000000000000'), True), (-3, Decimal('0.0010000000000000000'), True), (-2, Decimal('0.010000000000000000'), True), (-1, Decimal('0.10000000000000000'), True), (0, Decimal('1.0000000000000000'), True), (1, Decimal('10.000000000000000'), True), (2, Decimal('100.00000000000000'), True), (3, Decimal('1000.0000000000000'), True), (4, Decimal('10000.000000000000'), True), (5, Decimal('100000.00000000000'), True), (6, Decimal('1000000.0000000000'), True), (7, Decimal('10000000.000000000'), True), (8, Decimal('100000000.00000000'), True), (9, Decimal('1000000000.0000000'), True), (10, Decimal('10000000000.000000'), True), (11, Decimal('100000000000.00000'), True), (12, Decimal('1000000000000.0000'), True), (13, Decimal('10000000000000.000'), True), (14, Decimal('100000000000000.00'), True), (15, Decimal('1000000000000000.0'), True), (16, Decimal('10000000000000000.0'), True), (17, Decimal('100000000000000000.0'), True), (18, Decimal('1000000000000000000.0'), True), (19, Decimal('10000000000000000000.0'), True), (20, Decimal('100000000000000000000.0'), True)]

-----------
QUERY:


--
-- Tests for raising to non-integer powers
--

-- special cases
select 0.0 ^ 0.0;
RESULT:
	[(Decimal('1.0000000000000000'),)]

-----------
QUERY:

select (-12.34) ^ 0.0;
RESULT:
	[(Decimal('1.0000000000000000'),)]

-----------
QUERY:

select 12.34 ^ 0.0;
RESULT:
	[(Decimal('1.0000000000000000'),)]

-----------
QUERY:

select 0.0 ^ 12.34;
RESULT:
	[(Decimal('0E-16'),)]

-----------
QUERY:


-- NaNs
select 'NaN'::numeric ^ 'NaN'::numeric;
RESULT:
	[(Decimal('NaN'),)]

-----------
QUERY:

select 'NaN'::numeric ^ 0;
RESULT:
	[(Decimal('1'),)]

-----------
QUERY:

select 'NaN'::numeric ^ 1;
RESULT:
	[(Decimal('NaN'),)]

-----------
QUERY:

select 0 ^ 'NaN'::numeric;
RESULT:
	[(Decimal('NaN'),)]

-----------
QUERY:

select 1 ^ 'NaN'::numeric;
RESULT:
	[(Decimal('1'),)]

-----------
QUERY:


-- invalid inputs
select 0.0 ^ (-12.34);
RESULT:
	ERROR - zero raised to a negative power is undefined


-----------
QUERY:

select (-12.34) ^ 1.2;
RESULT:
	ERROR - a negative number raised to a non-integer power yields a complex result


-----------
QUERY:


-- cases that used to generate inaccurate results
select 32.1 ^ 9.8;
RESULT:
	[(Decimal('580429286790711.10'),)]

-----------
QUERY:

select 32.1 ^ (-9.8);
RESULT:
	[(Decimal('1.722862754788209E-15'),)]

-----------
QUERY:

select 12.3 ^ 45.6;
RESULT:
	[(Decimal('50081010321492803393171165777624533697036806969694.9'),)]

-----------
QUERY:

select 12.3 ^ (-45.6);
RESULT:
	[(Decimal('1.996764828785491E-50'),)]

-----------
QUERY:


-- big test
select 1.234 ^ 5678;
RESULT:
	[(Decimal('307239295662090741644584872593956173493568238595074141254349565406661439636598896798876823220904084953233015553994854875890890858118656468658643918169805277399402542281777901029346337707622181574346585989613344285010764501017625366742865066948856161360224801370482171458030533346309750557140549621313515752078638620714732831815297168231790779296290266207315344008883935010274044001522606235576584215999260117523114297033944018699691024106823438431754073086813382242140602291215149759520833200152654884259619588924545324.597'),)]

-----------
QUERY:


--
-- Tests for EXP()
--

-- special cases
select exp(0.0);
RESULT:
	[(Decimal('1.0000000000000000'),)]

-----------
QUERY:

select exp(1.0);
RESULT:
	[(Decimal('2.7182818284590452'),)]

-----------
QUERY:

select exp(1.0::numeric(71,70));
RESULT:
	[(Decimal('2.7182818284590452353602874713526624977572470936999595749669676277240766'),)]

-----------
QUERY:

select exp('nan'::numeric);
RESULT:
	[(Decimal('NaN'),)]

-----------
QUERY:

select exp('inf'::numeric);
RESULT:
	[(Decimal('Infinity'),)]

-----------
QUERY:

select exp('-inf'::numeric);
RESULT:
	[(Decimal('0'),)]

-----------
QUERY:

select coalesce(nullif(exp(-5000::numeric), 0), 0) as rounds_to_zero;
RESULT:
	[(Decimal('0'),)]

-----------
QUERY:

select coalesce(nullif(exp(-10000::numeric), 0), 0) as underflows;
RESULT:
	[(Decimal('0'),)]

-----------
QUERY:


-- cases that used to generate inaccurate results
select exp(32.999);
RESULT:
	[(Decimal('214429043492155.053'),)]

-----------
QUERY:

select exp(-32.999);
RESULT:
	[(Decimal('4.663547361468248E-15'),)]

-----------
QUERY:

select exp(123.456);
RESULT:
	[(Decimal('413294435277809344957685441227343146614594393746575438.725'),)]

-----------
QUERY:

select exp(-123.456);
RESULT:
	[(Decimal('2.419582541264601E-54'),)]

-----------
QUERY:


-- big test
select exp(1234.5678);
RESULT:
	[(Decimal('146549072930959479983482138503979804217622199675223653966270157446954995433819741094410764947112047906012815540251009949604426069672532417736057033099274204598385314594846509975629046864798765888104789074984927709616261452461385220475510438783429612447831614003668421849727379202555580791042606170523016207262965336641214601082882495255771621327088265411334088968112458492660609809762865582162764292604697957813514621259353683899630997077707406305730694385703091201347848855199354307506425820147289848677003277208302716466011827836279231.9667'),)]

-----------
QUERY:


--
-- Tests for generate_series
--
select * from generate_series(0.0::numeric, 4.0::numeric);
RESULT:
	[(Decimal('0.0'),), (Decimal('1.0'),), (Decimal('2.0'),), (Decimal('3.0'),), (Decimal('4.0'),)]

-----------
QUERY:

select * from generate_series(0.1::numeric, 4.0::numeric, 1.3::numeric);
RESULT:
	[(Decimal('0.1'),), (Decimal('1.4'),), (Decimal('2.7'),), (Decimal('4.0'),)]

-----------
QUERY:

select * from generate_series(4.0::numeric, -1.5::numeric, -2.2::numeric);
RESULT:
	[(Decimal('4.0'),), (Decimal('1.8'),), (Decimal('-0.4'),)]

-----------
QUERY:

-- Trigger errors
select * from generate_series(-100::numeric, 100::numeric, 0::numeric);
RESULT:
	ERROR - step size cannot equal zero


-----------
QUERY:

select * from generate_series(-100::numeric, 100::numeric, 'nan'::numeric);
RESULT:
	ERROR - step size cannot be NaN


-----------
QUERY:

select * from generate_series('nan'::numeric, 100::numeric, 10::numeric);
RESULT:
	ERROR - start value cannot be NaN


-----------
QUERY:

select * from generate_series(0::numeric, 'nan'::numeric, 10::numeric);
RESULT:
	ERROR - stop value cannot be NaN


-----------
QUERY:

select * from generate_series('inf'::numeric, 'inf'::numeric, 10::numeric);
RESULT:
	ERROR - start value cannot be infinity


-----------
QUERY:

select * from generate_series(0::numeric, 'inf'::numeric, 10::numeric);
RESULT:
	ERROR - stop value cannot be infinity


-----------
QUERY:

select * from generate_series(0::numeric, '42'::numeric, '-inf'::numeric);
RESULT:
	ERROR - step size cannot be infinity


-----------
QUERY:

-- Checks maximum, output is truncated
select (i / (10::numeric ^ 131071))::numeric(1,0)
	from generate_series(6 * (10::numeric ^ 131071),
			     9 * (10::numeric ^ 131071),
			     10::numeric ^ 131071) as a(i);
RESULT:
	[(Decimal('6'),), (Decimal('7'),), (Decimal('8'),), (Decimal('9'),)]

-----------
QUERY:

-- Check usage with variables
select * from generate_series(1::numeric, 3::numeric) i, generate_series(i,3) j;
RESULT:
	[(Decimal('1'), Decimal('1')), (Decimal('1'), Decimal('2')), (Decimal('1'), Decimal('3')), (Decimal('2'), Decimal('2')), (Decimal('2'), Decimal('3')), (Decimal('3'), Decimal('3'))]

-----------
QUERY:

select * from generate_series(1::numeric, 3::numeric) i, generate_series(1,i) j;
RESULT:
	[(Decimal('1'), Decimal('1')), (Decimal('2'), Decimal('1')), (Decimal('2'), Decimal('2')), (Decimal('3'), Decimal('1')), (Decimal('3'), Decimal('2')), (Decimal('3'), Decimal('3'))]

-----------
QUERY:

select * from generate_series(1::numeric, 3::numeric) i, generate_series(1,5,i) j;
RESULT:
	[(Decimal('1'), Decimal('1')), (Decimal('1'), Decimal('2')), (Decimal('1'), Decimal('3')), (Decimal('1'), Decimal('4')), (Decimal('1'), Decimal('5')), (Decimal('2'), Decimal('1')), (Decimal('2'), Decimal('3')), (Decimal('2'), Decimal('5')), (Decimal('3'), Decimal('1')), (Decimal('3'), Decimal('4'))]

-----------
QUERY:


--
-- Tests for LN()
--

-- Invalid inputs
select ln(-12.34);
RESULT:
	ERROR - cannot take logarithm of a negative number


-----------
QUERY:

select ln(0.0);
RESULT:
	ERROR - cannot take logarithm of zero


-----------
QUERY:


-- Some random tests
select ln(1.2345678e-28);
RESULT:
	[(Decimal('-64.26166165451762991204894255882820859'),)]

-----------
QUERY:

select ln(0.0456789);
RESULT:
	[(Decimal('-3.0861187944847439'),)]

-----------
QUERY:

select ln(0.349873948359354029493948309745709580730482050975);
RESULT:
	[(Decimal('-1.050182336912082775693991697979750253056317885460'),)]

-----------
QUERY:

select ln(0.99949452);
RESULT:
	[(Decimal('-0.00050560779808326467'),)]

-----------
QUERY:

select ln(1.00049687395);
RESULT:
	[(Decimal('0.00049675054901370394'),)]

-----------
QUERY:

select ln(1234.567890123456789);
RESULT:
	[(Decimal('7.1184763012977896'),)]

-----------
QUERY:

select ln(5.80397490724e5);
RESULT:
	[(Decimal('13.271468476626518'),)]

-----------
QUERY:

select ln(9.342536355e34);
RESULT:
	[(Decimal('80.522470935524187'),)]

-----------
QUERY:


--
-- Tests for LOG() (base 10)
--

-- invalid inputs
select log(-12.34);
RESULT:
	ERROR - cannot take logarithm of a negative number
CONTEXT:  SQL function "log" statement 1


-----------
QUERY:

select log(0.0);
RESULT:
	ERROR - cannot take logarithm of zero
CONTEXT:  SQL function "log" statement 1


-----------
QUERY:


-- some random tests
select log(1.234567e-89);
RESULT:
	[(Decimal('-88.90848533591373725637496492944925187293052336306443143312825869985819779294142441287021741054275'),)]

-----------
QUERY:

select log(3.4634998359873254962349856073435545);
RESULT:
	[(Decimal('0.5395151714070134409152404011959981'),)]

-----------
QUERY:

select log(9.999999999999999999);
RESULT:
	[(Decimal('1.000000000000000000'),)]

-----------
QUERY:

select log(10.00000000000000000);
RESULT:
	[(Decimal('1.00000000000000000'),)]

-----------
QUERY:

select log(10.00000000000000001);
RESULT:
	[(Decimal('1.00000000000000000'),)]

-----------
QUERY:

select log(590489.45235237);
RESULT:
	[(Decimal('5.771212144411727'),)]

-----------
QUERY:


--
-- Tests for LOG() (arbitrary base)
--

-- invalid inputs
select log(-12.34, 56.78);
RESULT:
	ERROR - cannot take logarithm of a negative number


-----------
QUERY:

select log(-12.34, -56.78);
RESULT:
	ERROR - cannot take logarithm of a negative number


-----------
QUERY:

select log(12.34, -56.78);
RESULT:
	ERROR - cannot take logarithm of a negative number


-----------
QUERY:

select log(0.0, 12.34);
RESULT:
	ERROR - cannot take logarithm of zero


-----------
QUERY:

select log(12.34, 0.0);
RESULT:
	ERROR - cannot take logarithm of zero


-----------
QUERY:

select log(1.0, 12.34);
RESULT:
	ERROR - division by zero


-----------
QUERY:


-- some random tests
select log(1.23e-89, 6.4689e45);
RESULT:
	[(Decimal('-0.5152489207781856983977054971756484879653568168479201885425588841094788842469115325262329756'),)]

-----------
QUERY:

select log(0.99923, 4.58934e34);
RESULT:
	[(Decimal('-103611.55579544132'),)]

-----------
QUERY:

select log(1.000016, 8.452010e18);
RESULT:
	[(Decimal('2723830.2877097365'),)]

-----------
QUERY:

select log(3.1954752e47, 9.4792021e-73);
RESULT:
	[(Decimal('-1.51613372350688302142917386143459361608600157692779164475351842333265418126982165'),)]

-----------
QUERY:


--
-- Tests for scale()
--

select scale(numeric 'NaN');
RESULT:
	[(None,)]

-----------
QUERY:

select scale(numeric 'inf');
RESULT:
	[(None,)]

-----------
QUERY:

select scale(NULL::numeric);
RESULT:
	[(None,)]

-----------
QUERY:

select scale(1.12);
RESULT:
	[(2,)]

-----------
QUERY:

select scale(0);
RESULT:
	[(0,)]

-----------
QUERY:

select scale(0.00);
RESULT:
	[(2,)]

-----------
QUERY:

select scale(1.12345);
RESULT:
	[(5,)]

-----------
QUERY:

select scale(110123.12475871856128);
RESULT:
	[(14,)]

-----------
QUERY:

select scale(-1123.12471856128);
RESULT:
	[(11,)]

-----------
QUERY:

select scale(-13.000000000000000);
RESULT:
	[(15,)]

-----------
QUERY:


--
-- Tests for min_scale()
--

select min_scale(numeric 'NaN') is NULL;
RESULT:
	[(True,)]

-----------
QUERY:
 -- should be true
select min_scale(numeric 'inf') is NULL;
RESULT:
	[(True,)]

-----------
QUERY:
 -- should be true
select min_scale(0);
RESULT:
	[(0,)]

-----------
QUERY:
                     -- no digits
select min_scale(0.00);
RESULT:
	[(0,)]

-----------
QUERY:
                  -- no digits again
select min_scale(1.0);
RESULT:
	[(0,)]

-----------
QUERY:
                   -- no scale
select min_scale(1.1);
RESULT:
	[(1,)]

-----------
QUERY:
                   -- scale 1
select min_scale(1.12);
RESULT:
	[(2,)]

-----------
QUERY:
                  -- scale 2
select min_scale(1.123);
RESULT:
	[(3,)]

-----------
QUERY:
                 -- scale 3
select min_scale(1.1234);
RESULT:
	[(4,)]

-----------
QUERY:
                -- scale 4, filled digit
select min_scale(1.12345);
RESULT:
	[(5,)]

-----------
QUERY:
               -- scale 5, 2 NDIGITS
select min_scale(1.1000);
RESULT:
	[(1,)]

-----------
QUERY:
                -- 1 pos in NDIGITS
select min_scale(1e100);
RESULT:
	[(0,)]

-----------
QUERY:
                 -- very big number

--
-- Tests for trim_scale()
--

select trim_scale(numeric 'NaN');
RESULT:
	[(Decimal('NaN'),)]

-----------
QUERY:

select trim_scale(numeric 'inf');
RESULT:
	[(Decimal('Infinity'),)]

-----------
QUERY:

select trim_scale(1.120);
RESULT:
	[(Decimal('1.12'),)]

-----------
QUERY:

select trim_scale(0);
RESULT:
	[(Decimal('0'),)]

-----------
QUERY:

select trim_scale(0.00);
RESULT:
	[(Decimal('0'),)]

-----------
QUERY:

select trim_scale(1.1234500);
RESULT:
	[(Decimal('1.12345'),)]

-----------
QUERY:

select trim_scale(110123.12475871856128000);
RESULT:
	[(Decimal('110123.12475871856128'),)]

-----------
QUERY:

select trim_scale(-1123.124718561280000000);
RESULT:
	[(Decimal('-1123.12471856128'),)]

-----------
QUERY:

select trim_scale(-13.00000000000000000000);
RESULT:
	[(Decimal('-13'),)]

-----------
QUERY:

select trim_scale(1e100);
RESULT:
	[(Decimal('10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000'),)]

-----------
QUERY:


--
-- Tests for SUM()
--

-- cases that need carry propagation
SELECT SUM(9999::numeric) FROM generate_series(1, 100000);
RESULT:
	[(Decimal('999900000'),)]

-----------
QUERY:

SELECT SUM((-9999)::numeric) FROM generate_series(1, 100000);
RESULT:
	[(Decimal('-999900000'),)]

-----------
QUERY:


--
-- Tests for VARIANCE()
--
CREATE TABLE num_variance (a numeric);
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_variance VALUES (0);
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_variance VALUES (3e-500);
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_variance VALUES (-3e-500);
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_variance VALUES (4e-500 - 1e-16383);
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_variance VALUES (-4e-500 + 1e-16383);
RESULT:
	[]

-----------
QUERY:


-- variance is just under 12.5e-1000 and so should round down to 12e-1000
SELECT trim_scale(variance(a) * 1e1000) FROM num_variance;
RESULT:
	[(Decimal('12'),)]

-----------
QUERY:


-- check that parallel execution produces the same result
BEGIN;
RESULT:
	[]

-----------
QUERY:

ALTER TABLE num_variance SET (parallel_workers = 4);
RESULT:
	[]

-----------
QUERY:

SET LOCAL parallel_setup_cost = 0;
RESULT:
	[]

-----------
QUERY:

SET LOCAL max_parallel_workers_per_gather = 4;
RESULT:
	[]

-----------
QUERY:

SELECT trim_scale(variance(a) * 1e1000) FROM num_variance;
RESULT:
	[(Decimal('12'),)]

-----------
QUERY:

ROLLBACK;
RESULT:
	[]

-----------
QUERY:


-- case where sum of squares would overflow but variance does not
DELETE FROM num_variance;
RESULT:
	[]

-----------
QUERY:

INSERT INTO num_variance SELECT 9e131071 + x FROM generate_series(1, 5) x;
RESULT:
	[]

-----------
QUERY:

SELECT variance(a) FROM num_variance;
RESULT:
	[(Decimal('2.5000000000000000'),)]

-----------
QUERY:


-- check that parallel execution produces the same result
BEGIN;
RESULT:
	[]

-----------
QUERY:

ALTER TABLE num_variance SET (parallel_workers = 4);
RESULT:
	[]

-----------
QUERY:

SET LOCAL parallel_setup_cost = 0;
RESULT:
	[]

-----------
QUERY:

SET LOCAL max_parallel_workers_per_gather = 4;
RESULT:
	[]

-----------
QUERY:

SELECT variance(a) FROM num_variance;
RESULT:
	[(Decimal('2.5000000000000000'),)]

-----------
QUERY:

ROLLBACK;
RESULT:
	[]

-----------
QUERY:


DROP TABLE num_variance;
RESULT:
	[]

-----------
QUERY:


--
-- Tests for GCD()
--
SELECT a, b, gcd(a, b), gcd(a, -b), gcd(-b, a), gcd(-b, -a)
FROM (VALUES (0::numeric, 0::numeric),
             (0::numeric, numeric 'NaN'),
             (0::numeric, 46375::numeric),
             (433125::numeric, 46375::numeric),
             (43312.5::numeric, 4637.5::numeric),
             (4331.250::numeric, 463.75000::numeric),
             ('inf', '0'),
             ('inf', '42'),
             ('inf', 'inf')
     ) AS v(a, b);
RESULT:
	[(Decimal('0'), Decimal('0'), Decimal('0'), Decimal('0'), Decimal('0'), Decimal('0')), (Decimal('0'), Decimal('NaN'), Decimal('NaN'), Decimal('NaN'), Decimal('NaN'), Decimal('NaN')), (Decimal('0'), Decimal('46375'), Decimal('46375'), Decimal('46375'), Decimal('46375'), Decimal('46375')), (Decimal('433125'), Decimal('46375'), Decimal('875'), Decimal('875'), Decimal('875'), Decimal('875')), (Decimal('43312.5'), Decimal('4637.5'), Decimal('87.5'), Decimal('87.5'), Decimal('87.5'), Decimal('87.5')), (Decimal('4331.250'), Decimal('463.75000'), Decimal('8.75000'), Decimal('8.75000'), Decimal('8.75000'), Decimal('8.75000')), (Decimal('Infinity'), Decimal('0'), Decimal('NaN'), Decimal('NaN'), Decimal('NaN'), Decimal('NaN')), (Decimal('Infinity'), Decimal('42'), Decimal('NaN'), Decimal('NaN'), Decimal('NaN'), Decimal('NaN')), (Decimal('Infinity'), Decimal('Infinity'), Decimal('NaN'), Decimal('NaN'), Decimal('NaN'), Decimal('NaN'))]

-----------
QUERY:


--
-- Tests for LCM()
--
SELECT a,b, lcm(a, b), lcm(a, -b), lcm(-b, a), lcm(-b, -a)
FROM (VALUES (0::numeric, 0::numeric),
             (0::numeric, numeric 'NaN'),
             (0::numeric, 13272::numeric),
             (13272::numeric, 13272::numeric),
             (423282::numeric, 13272::numeric),
             (42328.2::numeric, 1327.2::numeric),
             (4232.820::numeric, 132.72000::numeric),
             ('inf', '0'),
             ('inf', '42'),
             ('inf', 'inf')
     ) AS v(a, b);
RESULT:
	[(Decimal('0'), Decimal('0'), Decimal('0'), Decimal('0'), Decimal('0'), Decimal('0')), (Decimal('0'), Decimal('NaN'), Decimal('NaN'), Decimal('NaN'), Decimal('NaN'), Decimal('NaN')), (Decimal('0'), Decimal('13272'), Decimal('0'), Decimal('0'), Decimal('0'), Decimal('0')), (Decimal('13272'), Decimal('13272'), Decimal('13272'), Decimal('13272'), Decimal('13272'), Decimal('13272')), (Decimal('423282'), Decimal('13272'), Decimal('11851896'), Decimal('11851896'), Decimal('11851896'), Decimal('11851896')), (Decimal('42328.2'), Decimal('1327.2'), Decimal('1185189.6'), Decimal('1185189.6'), Decimal('1185189.6'), Decimal('1185189.6')), (Decimal('4232.820'), Decimal('132.72000'), Decimal('118518.96000'), Decimal('118518.96000'), Decimal('118518.96000'), Decimal('118518.96000')), (Decimal('Infinity'), Decimal('0'), Decimal('NaN'), Decimal('NaN'), Decimal('NaN'), Decimal('NaN')), (Decimal('Infinity'), Decimal('42'), Decimal('NaN'), Decimal('NaN'), Decimal('NaN'), Decimal('NaN')), (Decimal('Infinity'), Decimal('Infinity'), Decimal('NaN'), Decimal('NaN'), Decimal('NaN'), Decimal('NaN'))]

-----------
QUERY:


SELECT lcm(9999 * (10::numeric)^131068 + (10::numeric^131068 - 1), 2);
RESULT:
	ERROR - value overflows numeric format


-----------
QUERY:
 -- overflow

--
-- Tests for factorial
--
SELECT factorial(4);
RESULT:
	[(Decimal('24'),)]

-----------
QUERY:

SELECT factorial(15);
RESULT:
	[(Decimal('1307674368000'),)]

-----------
QUERY:

SELECT factorial(100000);
RESULT:
	ERROR - value overflows numeric format


-----------
QUERY:

SELECT factorial(0);
RESULT:
	[(Decimal('1'),)]

-----------
QUERY:

SELECT factorial(-4);
RESULT:
	ERROR - factorial of a negative number is undefined


-----------
QUERY:


--
-- Tests for pg_lsn()
--
SELECT pg_lsn(23783416::numeric);
RESULT:
	[('0/16AE7F8',)]

-----------
QUERY:

SELECT pg_lsn(0::numeric);
RESULT:
	[('0/0',)]

-----------
QUERY:

SELECT pg_lsn(18446744073709551615::numeric);
RESULT:
	[('FFFFFFFF/FFFFFFFF',)]

-----------
QUERY:

SELECT pg_lsn(-1::numeric);
RESULT:
	ERROR - pg_lsn out of range


-----------
QUERY:

SELECT pg_lsn(18446744073709551616::numeric);
RESULT:
	ERROR - pg_lsn out of range


-----------
QUERY:

SELECT pg_lsn('NaN'::numeric);
RESULT:
	ERROR - cannot convert NaN to pg_lsn

