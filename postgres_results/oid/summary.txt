Guest DBMS identified: postgres
-----------
QUERY:
--
-- OID
--

CREATE TABLE OID_TBL(f1 oid);
RESULT: [duckdb: SAME, mysql: ERROR]

-----------
QUERY:


INSERT INTO OID_TBL(f1) VALUES ('1234');
RESULT: [duckdb: SAME, mysql: ERROR]

-----------
QUERY:

INSERT INTO OID_TBL(f1) VALUES ('1235');
RESULT: [duckdb: SAME, mysql: ERROR]

-----------
QUERY:

INSERT INTO OID_TBL(f1) VALUES ('987');
RESULT: [duckdb: SAME, mysql: ERROR]

-----------
QUERY:

INSERT INTO OID_TBL(f1) VALUES ('-1040');
RESULT: [duckdb: SAME, mysql: ERROR]

-----------
QUERY:

INSERT INTO OID_TBL(f1) VALUES ('99999999');
RESULT: [duckdb: SAME, mysql: ERROR]

-----------
QUERY:

INSERT INTO OID_TBL(f1) VALUES ('5     ');
RESULT: [duckdb: SAME, mysql: ERROR]

-----------
QUERY:

INSERT INTO OID_TBL(f1) VALUES ('   10  ');
RESULT: [duckdb: SAME, mysql: ERROR]

-----------
QUERY:

-- leading/trailing hard tab is also allowed
INSERT INTO OID_TBL(f1) VALUES ('	  15 	  ');
RESULT: [duckdb: SAME, mysql: ERROR]

-----------
QUERY:


-- bad inputs
INSERT INTO OID_TBL(f1) VALUES ('');
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

INSERT INTO OID_TBL(f1) VALUES ('    ');
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

INSERT INTO OID_TBL(f1) VALUES ('asdfasd');
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

INSERT INTO OID_TBL(f1) VALUES ('99asdfasd');
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

INSERT INTO OID_TBL(f1) VALUES ('5    d');
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

INSERT INTO OID_TBL(f1) VALUES ('    5d');
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

INSERT INTO OID_TBL(f1) VALUES ('5    5');
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

INSERT INTO OID_TBL(f1) VALUES (' - 500');
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

INSERT INTO OID_TBL(f1) VALUES ('32958209582039852935');
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

INSERT INTO OID_TBL(f1) VALUES ('-23582358720398502385');
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:


SELECT * FROM OID_TBL;
RESULT: [duckdb: DIFFERENT, mysql: ERROR]

-----------
QUERY:


-- Also try it with non-error-throwing API
SELECT pg_input_is_valid('1234', 'oid');
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SELECT pg_input_is_valid('01XYZ', 'oid');
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SELECT * FROM pg_input_error_info('01XYZ', 'oid');
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SELECT pg_input_is_valid('9999999999', 'oid');
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SELECT * FROM pg_input_error_info('9999999999', 'oid');
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:


-- While we/* REPLACED */ ''re here, check oidvector as well
SELECT pg_input_is_valid(' 1 2  4 ', 'oidvector');
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SELECT pg_input_is_valid('01 01XYZ', 'oidvector');
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SELECT * FROM pg_input_error_info('01 01XYZ', 'oidvector');
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SELECT pg_input_is_valid('01 9999999999', 'oidvector');
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SELECT * FROM pg_input_error_info('01 9999999999', 'oidvector');
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:


SELECT o.* FROM OID_TBL o WHERE o.f1 = 1234;
RESULT: [duckdb: SAME, mysql: ERROR]

-----------
QUERY:


SELECT o.* FROM OID_TBL o WHERE o.f1 <> '1234';
RESULT: [duckdb: DIFFERENT, mysql: ERROR]

-----------
QUERY:


SELECT o.* FROM OID_TBL o WHERE o.f1 <= '1234';
RESULT: [duckdb: DIFFERENT, mysql: ERROR]

-----------
QUERY:


SELECT o.* FROM OID_TBL o WHERE o.f1 < '1234';
RESULT: [duckdb: DIFFERENT, mysql: ERROR]

-----------
QUERY:


SELECT o.* FROM OID_TBL o WHERE o.f1 >= '1234';
RESULT: [duckdb: DIFFERENT, mysql: ERROR]

-----------
QUERY:


SELECT o.* FROM OID_TBL o WHERE o.f1 > '1234';
RESULT: [duckdb: DIFFERENT, mysql: ERROR]

-----------
QUERY:


DROP TABLE OID_TBL;
RESULT: [duckdb: SAME, mysql: ERROR]


=========================================
Summary for test case oid/test.sql of postgres
=========================================

=================
Results for duckdb
SAME: 21 queries, which is 56.76%
DIFFERENT: 6 queries, which is 16.22%
ERROR: 10 queries, which is 27.03%

=================
Results for mysql
SAME: 10 queries, which is 27.03%
DIFFERENT: 0 queries, which is 0.00%
ERROR: 27 queries, which is 72.97%
