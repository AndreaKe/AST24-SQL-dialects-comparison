
-----------
QUERY:
--
-- PATH
--

--DROP TABLE PATH_TBL /* REPLACED */,

CREATE TABLE PATH_TBL (f1 path);
RESULT:
	[]

-----------
QUERY:


INSERT INTO PATH_TBL VALUES ('[(1,2),(3,4)]');
RESULT:
	[]

-----------
QUERY:


INSERT INTO PATH_TBL VALUES (' ( ( 1 , 2 ) , ( 3 , 4 ) ) ');
RESULT:
	[]

-----------
QUERY:


INSERT INTO PATH_TBL VALUES ('[ (0,0),(3,0),(4,5),(1,6) ]');
RESULT:
	[]

-----------
QUERY:


INSERT INTO PATH_TBL VALUES ('((1,2) ,(3,4 ))');
RESULT:
	[]

-----------
QUERY:


INSERT INTO PATH_TBL VALUES ('1,2 ,3,4 ');
RESULT:
	[]

-----------
QUERY:


INSERT INTO PATH_TBL VALUES (' [1,2,3, 4] ');
RESULT:
	[]

-----------
QUERY:


INSERT INTO PATH_TBL VALUES ('((10,20))');
RESULT:
	[]

-----------
QUERY:
	-- Only one point

INSERT INTO PATH_TBL VALUES ('[ 11,12,13,14 ]');
RESULT:
	[]

-----------
QUERY:


INSERT INTO PATH_TBL VALUES ('( 11,12,13,14) ');
RESULT:
	[]

-----------
QUERY:


-- bad values for parser testing
INSERT INTO PATH_TBL VALUES ('[]');
RESULT:
	ERROR - invalid input syntax for type path: "[]"
LINE 4: INSERT INTO PATH_TBL VALUES ('[]');
                                     ^


-----------
QUERY:


INSERT INTO PATH_TBL VALUES ('[(,2),(3,4)]');
RESULT:
	ERROR - invalid input syntax for type path: "[(,2),(3,4)]"
LINE 3: INSERT INTO PATH_TBL VALUES ('[(,2),(3,4)]');
                                     ^


-----------
QUERY:


INSERT INTO PATH_TBL VALUES ('[(1,2),(3,4)');
RESULT:
	ERROR - invalid input syntax for type path: "[(1,2),(3,4)"
LINE 3: INSERT INTO PATH_TBL VALUES ('[(1,2),(3,4)');
                                     ^


-----------
QUERY:


INSERT INTO PATH_TBL VALUES ('(1,2,3,4');
RESULT:
	ERROR - invalid input syntax for type path: "(1,2,3,4"
LINE 3: INSERT INTO PATH_TBL VALUES ('(1,2,3,4');
                                     ^


-----------
QUERY:


INSERT INTO PATH_TBL VALUES ('(1,2),(3,4)]');
RESULT:
	ERROR - invalid input syntax for type path: "(1,2),(3,4)]"
LINE 3: INSERT INTO PATH_TBL VALUES ('(1,2),(3,4)]');
                                     ^


-----------
QUERY:


SELECT f1 AS open_path FROM PATH_TBL WHERE isopen(f1);
RESULT:
	[('[(1,2),(3,4)]',), ('[(0,0),(3,0),(4,5),(1,6)]',), ('[(1,2),(3,4)]',), ('[(11,12),(13,14)]',)]

-----------
QUERY:


SELECT f1 AS closed_path FROM PATH_TBL WHERE isclosed(f1);
RESULT:
	[('((1,2),(3,4))',), ('((1,2),(3,4))',), ('((1,2),(3,4))',), ('((10,20))',), ('((11,12),(13,14))',)]

-----------
QUERY:


SELECT pclose(f1) AS closed_path FROM PATH_TBL;
RESULT:
	[('((1,2),(3,4))',), ('((1,2),(3,4))',), ('((0,0),(3,0),(4,5),(1,6))',), ('((1,2),(3,4))',), ('((1,2),(3,4))',), ('((1,2),(3,4))',), ('((10,20))',), ('((11,12),(13,14))',), ('((11,12),(13,14))',)]

-----------
QUERY:


SELECT popen(f1) AS open_path FROM PATH_TBL;
RESULT:
	[('[(1,2),(3,4)]',), ('[(1,2),(3,4)]',), ('[(0,0),(3,0),(4,5),(1,6)]',), ('[(1,2),(3,4)]',), ('[(1,2),(3,4)]',), ('[(1,2),(3,4)]',), ('[(10,20)]',), ('[(11,12),(13,14)]',), ('[(11,12),(13,14)]',)]

-----------
QUERY:


-- test non-error-throwing API for some core types
SELECT pg_input_is_valid('[(1,2),(3)]', 'path');
RESULT:
	[(False,)]

-----------
QUERY:

SELECT * FROM pg_input_error_info('[(1,2),(3)]', 'path');
RESULT:
	[('invalid input syntax for type path: "[(1,2),(3)]"', None, None, '22P02')]

-----------
QUERY:

SELECT pg_input_is_valid('[(1,2,6),(3,4,6)]', 'path');
RESULT:
	[(False,)]

-----------
QUERY:

SELECT * FROM pg_input_error_info('[(1,2,6),(3,4,6)]', 'path');
RESULT:
	[('invalid input syntax for type path: "[(1,2,6),(3,4,6)]"', None, None, '22P02')]
