
-----------
QUERY:
--
-- Tests to exercise the plan caching/invalidation mechanism
--

CREATE TEMP TABLE pcachetest AS SELECT * FROM int8_tbl;
RESULT:
	[]

-----------
QUERY:


-- create and use a cached plan
PREPARE prepstmt AS SELECT * FROM pcachetest;
RESULT:
	[]

-----------
QUERY:


EXECUTE prepstmt;
RESULT:
	[(123, 456), (123, 4567890123456789), (4567890123456789, 123), (4567890123456789, 4567890123456789), (4567890123456789, -4567890123456789)]

-----------
QUERY:


-- and one with parameters
PREPARE prepstmt2(bigint) AS SELECT * FROM pcachetest WHERE q1 = $1;
RESULT:
	ERROR - Not implemented Error: Prepared statement argument types are not supported, use CAST

-----------
QUERY:


EXECUTE prepstmt2(123);
RESULT:
	ERROR - Binder Error: Prepared statement "prepstmt2" does not exist

-----------
QUERY:


-- invalidate the plans and see what happens
DROP TABLE pcachetest;
RESULT:
	[]

-----------
QUERY:


EXECUTE prepstmt;
RESULT:
	ERROR - Catalog Error: Table with name pcachetest does not exist!
Did you mean "pg_class"?

-----------
QUERY:

EXECUTE prepstmt2(123);
RESULT:
	ERROR - Binder Error: Prepared statement "prepstmt2" does not exist

-----------
QUERY:


-- recreate the temp table (this demonstrates that the raw plan is
-- purely textual and doesn/* REPLACED */ ''t depend on OIDs, for instance)
CREATE TEMP TABLE pcachetest AS SELECT * FROM int8_tbl ORDER BY 2;
RESULT:
	[]

-----------
QUERY:


EXECUTE prepstmt;
RESULT:
	[(4567890123456789, -4567890123456789), (4567890123456789, 123), (123, 456), (123, 4567890123456789), (4567890123456789, 4567890123456789)]

-----------
QUERY:

EXECUTE prepstmt2(123);
RESULT:
	ERROR - Binder Error: Prepared statement "prepstmt2" does not exist

-----------
QUERY:


-- prepared statements should prevent change in output tupdesc,
-- since clients probably aren/* REPLACED */ ''t expecting that to change on the fly
ALTER TABLE pcachetest ADD COLUMN q3 bigint;
RESULT:
	[]

-----------
QUERY:


EXECUTE prepstmt;
RESULT:
	[(4567890123456789, -4567890123456789, None), (4567890123456789, 123, None), (123, 456, None), (123, 4567890123456789, None), (4567890123456789, 4567890123456789, None)]

-----------
QUERY:

EXECUTE prepstmt2(123);
RESULT:
	ERROR - Binder Error: Prepared statement "prepstmt2" does not exist

-----------
QUERY:


-- but we/* REPLACED */ ''re nice guys and will let you undo your mistake
ALTER TABLE pcachetest DROP COLUMN q3;
RESULT:
	[]

-----------
QUERY:


EXECUTE prepstmt;
RESULT:
	[(4567890123456789, -4567890123456789), (4567890123456789, 123), (123, 456), (123, 4567890123456789), (4567890123456789, 4567890123456789)]

-----------
QUERY:

EXECUTE prepstmt2(123);
RESULT:
	ERROR - Binder Error: Prepared statement "prepstmt2" does not exist

-----------
QUERY:


-- Try it with a view, which isn/* REPLACED */ ''t directly used in the resulting plan
-- but should trigger invalidation anyway
CREATE TEMP VIEW pcacheview AS
  SELECT * FROM pcachetest;
RESULT:
	[]

-----------
QUERY:


PREPARE vprep AS SELECT * FROM pcacheview;
RESULT:
	[]

-----------
QUERY:


EXECUTE vprep;
RESULT:
	[(4567890123456789, -4567890123456789), (4567890123456789, 123), (123, 456), (123, 4567890123456789), (4567890123456789, 4567890123456789)]

-----------
QUERY:


CREATE OR REPLACE TEMP VIEW pcacheview AS
  SELECT q1, q2/2 AS q2 FROM pcachetest;
RESULT:
	[]

-----------
QUERY:


EXECUTE vprep;
RESULT:
	[(4567890123456789, -2283945061728394.5), (4567890123456789, 61.5), (123, 228.0), (123, 2283945061728394.5), (4567890123456789, 2283945061728394.5)]

-----------
QUERY:


-- Check basic SPI plan invalidation

create function cache_test(int) returns int as $$
declare total int;
begin
	create temp table t1(f1 int);
	insert into t1 values($1);
	insert into t1 values(11);
	insert into t1 values(12);
	insert into t1 values(13);
	select sum(f1) into total from t1;
	drop table t1;
	return total;
end
$$ language plpgsql;
RESULT:
	ERROR - Parser Error: syntax error at or near "returns"

-----------
QUERY:


select cache_test(1);
RESULT:
	ERROR - Catalog Error: Scalar Function with name cache_test does not exist!
Did you mean "acos"?

-----------
QUERY:

select cache_test(2);
RESULT:
	ERROR - Catalog Error: Scalar Function with name cache_test does not exist!
Did you mean "acos"?

-----------
QUERY:

select cache_test(3);
RESULT:
	ERROR - Catalog Error: Scalar Function with name cache_test does not exist!
Did you mean "acos"?

-----------
QUERY:


-- Check invalidation of plpgsql /* REPLACED */ ''simple expression/* REPLACED */ ''

create temp view v1 as
  select 2+2 as f1;
RESULT:
	[]

-----------
QUERY:


create function cache_test_2() returns int as $$
begin
	return f1 from v1;
end$$ language plpgsql;
RESULT:
	ERROR - Parser Error: syntax error at or near "returns"

-----------
QUERY:


select cache_test_2();
RESULT:
	ERROR - Catalog Error: Scalar Function with name cache_test_2 does not exist!
Did you mean "acos"?

-----------
QUERY:


create or replace temp view v1 as
  select 2+2+4 as f1;
RESULT:
	[]

-----------
QUERY:

select cache_test_2();
RESULT:
	ERROR - Catalog Error: Scalar Function with name cache_test_2 does not exist!
Did you mean "acos"?

-----------
QUERY:


create or replace temp view v1 as
  select 2+2+4+(select max(unique1) from tenk1) as f1;
RESULT:
	ERROR - Catalog Error: Table with name tenk1 does not exist!
Did you mean "v1"?
LINE 4: ...create or replace temp view v1 as
  select 2+2+4+(select max(unique1) from tenk1) as f1;
                                                  ^

-----------
QUERY:

select cache_test_2();
RESULT:
	ERROR - Catalog Error: Scalar Function with name cache_test_2 does not exist!
Did you mean "acos"?

-----------
QUERY:


--- Check that change of search_path is honored when re-using cached plan

create schema s1
  create table abc (f1 int);
RESULT:
	ERROR - Not implemented Error: Schema element not supported yet!

-----------
QUERY:


create schema s2
  create table abc (f1 int);
RESULT:
	ERROR - Not implemented Error: Schema element not supported yet!

-----------
QUERY:


insert into s1.abc values(123);
RESULT:
	ERROR - Catalog Error: Table with name abc does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:

insert into s2.abc values(456);
RESULT:
	ERROR - Catalog Error: Table with name abc does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:


set search_path = s1;
RESULT:
	ERROR - Catalog Error: SET search_path: No catalog + schema named "s1" found.

-----------
QUERY:


prepare p1 as select f1 from abc;
RESULT:
	ERROR - Catalog Error: Table with name abc does not exist!
Did you mean "v1"?
LINE 3: prepare p1 as select f1 from abc;
                                     ^

-----------
QUERY:


execute p1;
RESULT:
	ERROR - Binder Error: Prepared statement "p1" does not exist

-----------
QUERY:


set search_path = s2;
RESULT:
	ERROR - Catalog Error: SET search_path: No catalog + schema named "s2" found.

-----------
QUERY:


select f1 from abc;
RESULT:
	ERROR - Catalog Error: Table with name abc does not exist!
Did you mean "v1"?

-----------
QUERY:


execute p1;
RESULT:
	ERROR - Binder Error: Prepared statement "p1" does not exist

-----------
QUERY:


alter table s1.abc add column f2 float8;
RESULT:
	ERROR - Catalog Error: Table with name abc does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:
   -- force replan

execute p1;
RESULT:
	ERROR - Binder Error: Prepared statement "p1" does not exist

-----------
QUERY:


drop schema s1 cascade;
RESULT:
	ERROR - Catalog Error: Schema with name s1 does not exist!

-----------
QUERY:

drop schema s2 cascade;
RESULT:
	ERROR - Catalog Error: Schema with name s2 does not exist!

-----------
QUERY:


reset search_path;
RESULT:
	[]

-----------
QUERY:


-- Check that invalidation deals with regclass constants

create temp sequence seq;
RESULT:
	[]

-----------
QUERY:


prepare p2 as select nextval('seq');
RESULT:
	[]

-----------
QUERY:


execute p2;
RESULT:
	[(1,)]

-----------
QUERY:


drop sequence seq;
RESULT:
	[]

-----------
QUERY:


create temp sequence seq;
RESULT:
	[]

-----------
QUERY:


execute p2;
RESULT:
	[(1,)]

-----------
QUERY:


-- Check DDL via SPI, immediately followed by SPI plan re-use
-- (bug in original coding)

create function cachebug() returns void as $$
declare r int;
begin
  drop table if exists temptable cascade;
  create temp table temptable as select * from generate_series(1,3) as f1;
  create temp view vv as select * from temptable;
  for r in select * from vv loop
    raise notice '%', r;
  end loop;
end$$ language plpgsql;
RESULT:
	ERROR - Parser Error: syntax error at or near "returns"

-----------
QUERY:


select cachebug();
RESULT:
	ERROR - Catalog Error: Scalar Function with name cachebug does not exist!
Did you mean "abs"?

-----------
QUERY:

select cachebug();
RESULT:
	ERROR - Catalog Error: Scalar Function with name cachebug does not exist!
Did you mean "abs"?

-----------
QUERY:


-- Check that addition or removal of any partition is correctly dealt with by
-- default partition table when it is being used in prepared statement.
create table pc_list_parted (a int) partition by list(a);
RESULT:
	ERROR - Parser Error: syntax error at or near "partition"

-----------
QUERY:

create table pc_list_part_null partition of pc_list_parted for values in (null);
RESULT:
	ERROR - Parser Error: syntax error at or near "partition"

-----------
QUERY:

create table pc_list_part_1 partition of pc_list_parted for values in (1);
RESULT:
	ERROR - Parser Error: syntax error at or near "partition"

-----------
QUERY:

create table pc_list_part_def partition of pc_list_parted default;
RESULT:
	ERROR - Parser Error: syntax error at or near "partition"

-----------
QUERY:

prepare pstmt_def_insert (int) as insert into pc_list_part_def values($1);
RESULT:
	ERROR - Not implemented Error: Prepared statement argument types are not supported, use CAST

-----------
QUERY:

-- should fail
execute pstmt_def_insert(null);
RESULT:
	ERROR - Binder Error: Prepared statement "pstmt_def_insert" does not exist

-----------
QUERY:

execute pstmt_def_insert(1);
RESULT:
	ERROR - Binder Error: Prepared statement "pstmt_def_insert" does not exist

-----------
QUERY:

create table pc_list_part_2 partition of pc_list_parted for values in (2);
RESULT:
	ERROR - Parser Error: syntax error at or near "partition"

-----------
QUERY:

execute pstmt_def_insert(2);
RESULT:
	ERROR - Binder Error: Prepared statement "pstmt_def_insert" does not exist

-----------
QUERY:

alter table pc_list_parted detach partition pc_list_part_null;
RESULT:
	ERROR - Parser Error: syntax error at or near "detach"

-----------
QUERY:

-- should be ok
execute pstmt_def_insert(null);
RESULT:
	ERROR - Binder Error: Prepared statement "pstmt_def_insert" does not exist

-----------
QUERY:

drop table pc_list_part_1;
RESULT:
	ERROR - Catalog Error: Table with name pc_list_part_1 does not exist!
Did you mean "pg_am"?

-----------
QUERY:

-- should be ok
execute pstmt_def_insert(1);
RESULT:
	ERROR - Binder Error: Prepared statement "pstmt_def_insert" does not exist

-----------
QUERY:

drop table pc_list_parted, pc_list_part_null;
RESULT:
	ERROR - Not implemented Error: Can only drop one object at a time

-----------
QUERY:

deallocate pstmt_def_insert;
RESULT:
	[]

-----------
QUERY:


-- Test plan_cache_mode

create table test_mode (a int);
RESULT:
	[]

-----------
QUERY:

insert into test_mode select 1 from generate_series(1,1000) union all select 2;
RESULT:
	[]

-----------
QUERY:

create index on test_mode (a);
RESULT:
	ERROR - Not implemented Error: Please provide an index name, e.g., CREATE INDEX my_name ...

-----------
QUERY:

analyze test_mode;
RESULT:
	[]

-----------
QUERY:


prepare test_mode_pp (int) as select count(*) from test_mode where a = $1;
RESULT:
	ERROR - Not implemented Error: Prepared statement argument types are not supported, use CAST

-----------
QUERY:

select name, generic_plans, custom_plans from pg_prepared_statements
  where  name = 'test_mode_pp';
RESULT:
	ERROR - Catalog Error: Table with name pg_prepared_statements does not exist!
Did you mean "pg_am"?

-----------
QUERY:


-- up to 5 executions, custom plan is used
set plan_cache_mode to auto;
RESULT:
	ERROR - Catalog Error: unrecognized configuration parameter "plan_cache_mode"

Did you mean: "access_mode"

-----------
QUERY:

explain (costs off) execute test_mode_pp(2);
RESULT:
	ERROR - Not implemented Error: Unimplemented explain type: costs

-----------
QUERY:

select name, generic_plans, custom_plans from pg_prepared_statements
  where  name = 'test_mode_pp';
RESULT:
	ERROR - Catalog Error: Table with name pg_prepared_statements does not exist!
Did you mean "pg_am"?

-----------
QUERY:


-- force generic plan
set plan_cache_mode to force_generic_plan;
RESULT:
	ERROR - Catalog Error: unrecognized configuration parameter "plan_cache_mode"

Did you mean: "access_mode"

-----------
QUERY:

explain (costs off) execute test_mode_pp(2);
RESULT:
	ERROR - Not implemented Error: Unimplemented explain type: costs

-----------
QUERY:

select name, generic_plans, custom_plans from pg_prepared_statements
  where  name = 'test_mode_pp';
RESULT:
	ERROR - Catalog Error: Table with name pg_prepared_statements does not exist!
Did you mean "pg_am"?

-----------
QUERY:


-- get to generic plan by 5 executions
set plan_cache_mode to auto;
RESULT:
	ERROR - Catalog Error: unrecognized configuration parameter "plan_cache_mode"

Did you mean: "access_mode"

-----------
QUERY:

execute test_mode_pp(1);
RESULT:
	ERROR - Binder Error: Prepared statement "test_mode_pp" does not exist

-----------
QUERY:
 -- 1x
execute test_mode_pp(1);
RESULT:
	ERROR - Binder Error: Prepared statement "test_mode_pp" does not exist

-----------
QUERY:
 -- 2x
execute test_mode_pp(1);
RESULT:
	ERROR - Binder Error: Prepared statement "test_mode_pp" does not exist

-----------
QUERY:
 -- 3x
execute test_mode_pp(1);
RESULT:
	ERROR - Binder Error: Prepared statement "test_mode_pp" does not exist

-----------
QUERY:
 -- 4x
select name, generic_plans, custom_plans from pg_prepared_statements
  where  name = 'test_mode_pp';
RESULT:
	ERROR - Catalog Error: Table with name pg_prepared_statements does not exist!
Did you mean "pg_am"?

-----------
QUERY:

execute test_mode_pp(1);
RESULT:
	ERROR - Binder Error: Prepared statement "test_mode_pp" does not exist

-----------
QUERY:
 -- 5x
select name, generic_plans, custom_plans from pg_prepared_statements
  where  name = 'test_mode_pp';
RESULT:
	ERROR - Catalog Error: Table with name pg_prepared_statements does not exist!
Did you mean "pg_am"?

-----------
QUERY:


-- we should now get a really bad plan
explain (costs off) execute test_mode_pp(2);
RESULT:
	ERROR - Not implemented Error: Unimplemented explain type: costs

-----------
QUERY:


-- but we can force a custom plan
set plan_cache_mode to force_custom_plan;
RESULT:
	ERROR - Catalog Error: unrecognized configuration parameter "plan_cache_mode"

Did you mean: "access_mode"

-----------
QUERY:

explain (costs off) execute test_mode_pp(2);
RESULT:
	ERROR - Not implemented Error: Unimplemented explain type: costs

-----------
QUERY:

select name, generic_plans, custom_plans from pg_prepared_statements
  where  name = 'test_mode_pp';
RESULT:
	ERROR - Catalog Error: Table with name pg_prepared_statements does not exist!
Did you mean "pg_am"?

-----------
QUERY:


drop table test_mode;
RESULT:
	[]
