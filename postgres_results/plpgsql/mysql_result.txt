
-----------
QUERY:
--
-- PLPGSQL
--
-- Scenario:
--
--     A building with a modern TP cable installation where any
--     of the wall connectors can be used to plug in phones,
--     ethernet interfaces or local office hubs. The backside
--     of the wall connectors is wired to one of several patch-
--     fields in the building.
--
--     In the patchfields, there are hubs and all the slots
--     representing the wall connectors. In addition there are
--     slots that can represent a phone line from the central
--     phone system.
--
--     Triggers ensure consistency of the patching information.
--
--     Functions are used to build up powerful views that let
--     you look behind the wall when looking at a patchfield
--     or into a room.
--


create table Room (
    roomno	char(8),
    comment	text
);
RESULT:
	[]

-----------
QUERY:


create unique index Room_rno on Room using btree (roomno bpchar_ops);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'using btree (roomno bpchar_ops)' at line 1")

-----------
QUERY:



create table WSlot (
    slotname	char(20),
    roomno	char(8),
    slotlink	char(20),
    backlink	char(20)
);
RESULT:
	[]

-----------
QUERY:


create unique index WSlot_name on WSlot using btree (slotname bpchar_ops);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'using btree (slotname bpchar_ops)' at line 1")

-----------
QUERY:



create table PField (
    name	text,
    comment	text
);
RESULT:
	[]

-----------
QUERY:


create unique index PField_name on PField using btree (name text_ops);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'using btree (name text_ops)' at line 1")

-----------
QUERY:



create table PSlot (
    slotname	char(20),
    pfname	text,
    slotlink	char(20),
    backlink	char(20)
);
RESULT:
	[]

-----------
QUERY:


create unique index PSlot_name on PSlot using btree (slotname bpchar_ops);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'using btree (slotname bpchar_ops)' at line 1")

-----------
QUERY:



create table PLine (
    slotname	char(20),
    phonenumber	char(20),
    comment	text,
    backlink	char(20)
);
RESULT:
	[]

-----------
QUERY:


create unique index PLine_name on PLine using btree (slotname bpchar_ops);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'using btree (slotname bpchar_ops)' at line 1")

-----------
QUERY:



create table Hub (
    name	char(14),
    comment	text,
    nslots	integer
);
RESULT:
	[]

-----------
QUERY:


create unique index Hub_name on Hub using btree (name bpchar_ops);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'using btree (name bpchar_ops)' at line 1")

-----------
QUERY:



create table HSlot (
    slotname	char(20),
    hubname	char(14),
    slotno	integer,
    slotlink	char(20)
);
RESULT:
	[]

-----------
QUERY:


create unique index HSlot_name on HSlot using btree (slotname bpchar_ops);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'using btree (slotname bpchar_ops)' at line 1")

-----------
QUERY:

create index HSlot_hubname on HSlot using btree (hubname bpchar_ops);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'using btree (hubname bpchar_ops)' at line 1")

-----------
QUERY:



create table System (
    name	text,
    comment	text
);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'System (\n    name\ttext,\n    comment\ttext\n)' at line 1")

-----------
QUERY:


create unique index System_name on System using btree (name text_ops);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'System using btree (name text_ops)' at line 1")

-----------
QUERY:



create table IFace (
    slotname	char(20),
    sysname	text,
    ifname	text,
    slotlink	char(20)
);
RESULT:
	[]

-----------
QUERY:


create unique index IFace_name on IFace using btree (slotname bpchar_ops);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'using btree (slotname bpchar_ops)' at line 1")

-----------
QUERY:



create table PHone (
    slotname	char(20),
    comment	text,
    slotlink	char(20)
);
RESULT:
	[]

-----------
QUERY:


create unique index PHone_name on PHone using btree (slotname bpchar_ops);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'using btree (slotname bpchar_ops)' at line 1")

-----------
QUERY:



-- ************************************************************
-- *
-- * Trigger procedures and functions for the patchfield
-- * test of PL/pgSQL
-- *
-- ************************************************************


-- ************************************************************
-- * AFTER UPDATE on Room
-- *	- If room no changes let wall slots follow
-- ************************************************************
create function tg_room_au() returns trigger as '
begin
    if new.roomno != old.roomno then
        update WSlot set roomno = new.roomno where roomno = old.roomno;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'trigger as '\nbegin\n    if new.roomno != old.roomno then\n        update WSlot set' at line 13")

-----------
QUERY:

    end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

    return new;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'return new' at line 1")

-----------
QUERY:

end;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end' at line 1")

-----------
QUERY:

' language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' language plpgsql' at line 1")

-----------
QUERY:


create trigger tg_room_au after update
    on Room for each row execute procedure tg_room_au();
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'procedure tg_room_au()' at line 2")

-----------
QUERY:



-- ************************************************************
-- * AFTER DELETE on Room
-- *	- delete wall slots in this room
-- ************************************************************
create function tg_room_ad() returns trigger as '
begin
    delete from WSlot where roomno = old.roomno;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'trigger as '\nbegin\n    delete from WSlot where roomno = old.roomno' at line 5")

-----------
QUERY:

    return old;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'return old' at line 1")

-----------
QUERY:

end;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end' at line 1")

-----------
QUERY:

' language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' language plpgsql' at line 1")

-----------
QUERY:


create trigger tg_room_ad after delete
    on Room for each row execute procedure tg_room_ad();
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'procedure tg_room_ad()' at line 2")

-----------
QUERY:



-- ************************************************************
-- * BEFORE INSERT or UPDATE on WSlot
-- *	- Check that room exists
-- ************************************************************
create function tg_wslot_biu() returns trigger as $$
begin
    if count(*) = 0 from Room where roomno = new.roomno then
        raise exception 'Room % does not exist', new.roomno;
    end if;
    return new;
end;
$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'trigger as $$\nbegin\n    if count(*) = 0 from Room where roomno = new.roomno then' at line 5")

-----------
QUERY:


create trigger tg_wslot_biu before insert or update
    on WSlot for each row execute procedure tg_wslot_biu();
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'or update\n    on WSlot for each row execute procedure tg_wslot_biu()' at line 1")

-----------
QUERY:



-- ************************************************************
-- * AFTER UPDATE on PField
-- *	- Let PSlots of this field follow
-- ************************************************************
create function tg_pfield_au() returns trigger as '
begin
    if new.name != old.name then
        update PSlot set pfname = new.name where pfname = old.name;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'trigger as '\nbegin\n    if new.name != old.name then\n        update PSlot set pfn' at line 5")

-----------
QUERY:

    end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

    return new;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'return new' at line 1")

-----------
QUERY:

end;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end' at line 1")

-----------
QUERY:

' language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' language plpgsql' at line 1")

-----------
QUERY:


create trigger tg_pfield_au after update
    on PField for each row execute procedure tg_pfield_au();
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'procedure tg_pfield_au()' at line 2")

-----------
QUERY:



-- ************************************************************
-- * AFTER DELETE on PField
-- *	- Remove all slots of this patchfield
-- ************************************************************
create function tg_pfield_ad() returns trigger as '
begin
    delete from PSlot where pfname = old.name;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'trigger as '\nbegin\n    delete from PSlot where pfname = old.name' at line 5")

-----------
QUERY:

    return old;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'return old' at line 1")

-----------
QUERY:

end;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end' at line 1")

-----------
QUERY:

' language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' language plpgsql' at line 1")

-----------
QUERY:


create trigger tg_pfield_ad after delete
    on PField for each row execute procedure tg_pfield_ad();
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'procedure tg_pfield_ad()' at line 2")

-----------
QUERY:



-- ************************************************************
-- * BEFORE INSERT or UPDATE on PSlot
-- *	- Ensure that our patchfield does exist
-- ************************************************************
create function tg_pslot_biu() returns trigger as $proc$
declare
    pfrec	record;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'trigger as $proc$\ndeclare\n    pfrec\trecord' at line 5")

-----------
QUERY:

    ps          alias for new;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'ps          alias for new' at line 1")

-----------
QUERY:

begin
    select into pfrec * from PField where name = ps.pfname;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'select into pfrec * from PField where name = ps.pfname' at line 2")

-----------
QUERY:

    if not found then
        raise exception $$Patchfield "%" does not exist$$, ps.pfname;
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'if not found then\n        raise exception $$Patchfield "%" does not exist$$, ps.\' at line 1')

-----------
QUERY:

    end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

    return ps;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'return ps' at line 1")

-----------
QUERY:

end;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end' at line 1")

-----------
QUERY:

$proc$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '$proc$ language plpgsql' at line 1")

-----------
QUERY:


create trigger tg_pslot_biu before insert or update
    on PSlot for each row execute procedure tg_pslot_biu();
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'or update\n    on PSlot for each row execute procedure tg_pslot_biu()' at line 1")

-----------
QUERY:



-- ************************************************************
-- * AFTER UPDATE on System
-- *	- If system name changes let interfaces follow
-- ************************************************************
create function tg_system_au() returns trigger as '
begin
    if new.name != old.name then
        update IFace set sysname = new.name where sysname = old.name;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'trigger as '\nbegin\n    if new.name != old.name then\n        update IFace set sys' at line 5")

-----------
QUERY:

    end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

    return new;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'return new' at line 1")

-----------
QUERY:

end;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end' at line 1")

-----------
QUERY:

' language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' language plpgsql' at line 1")

-----------
QUERY:


create trigger tg_system_au after update
    on System for each row execute procedure tg_system_au();
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'System for each row execute procedure tg_system_au()' at line 2")

-----------
QUERY:



-- ************************************************************
-- * BEFORE INSERT or UPDATE on IFace
-- *	- set the slotname to IF.sysname.ifname
-- ************************************************************
create function tg_iface_biu() returns trigger as $$
declare
    sname	text;
    sysrec	record;
begin
    select into sysrec * from system where name = new.sysname;
    if not found then
        raise exception $q$system "%" does not exist$q$, new.sysname;
    end if;
    sname := 'IF.' || new.sysname;
    sname := sname || '.';
    sname := sname || new.ifname;
    if length(sname) > 20 then
        raise exception 'IFace slotname "%" too long (20 char max)', sname;
    end if;
    new.slotname := sname;
    return new;
end;
$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'trigger as $$\ndeclare\n    sname\ttext;\n    sysrec\trecord;\nbegin\n    select into s' at line 5")

-----------
QUERY:


create trigger tg_iface_biu before insert or update
    on IFace for each row execute procedure tg_iface_biu();
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'or update\n    on IFace for each row execute procedure tg_iface_biu()' at line 1")

-----------
QUERY:



-- ************************************************************
-- * AFTER INSERT or UPDATE or DELETE on Hub
-- *	- insert/delete/rename slots as required
-- ************************************************************
create function tg_hub_a() returns trigger as '
declare
    hname	text;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'trigger as '\ndeclare\n    hname\ttext' at line 5")

-----------
QUERY:

    dummy	integer;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'dummy\tinteger' at line 1")

-----------
QUERY:

begin
    if tg_op = ''INSERT'' then
	dummy := tg_hub_adjustslots(new.name, 0, new.nslots);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'if tg_op = ''INSERT'' then\n\tdummy := tg_hub_adjustslots(new.name, 0, new.nslots)' at line 2")

-----------
QUERY:

	return new;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'return new' at line 1")

-----------
QUERY:

    end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

    if tg_op = ''UPDATE'' then
	if new.name != old.name then
	    update HSlot set hubname = new.name where hubname = old.name;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'if tg_op = ''UPDATE'' then\n\tif new.name != old.name then\n\t    update HSlot set h' at line 1")

-----------
QUERY:

	end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

	dummy := tg_hub_adjustslots(new.name, old.nslots, new.nslots);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'dummy := tg_hub_adjustslots(new.name, old.nslots, new.nslots)' at line 1")

-----------
QUERY:

	return new;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'return new' at line 1")

-----------
QUERY:

    end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

    if tg_op = ''DELETE'' then
	dummy := tg_hub_adjustslots(old.name, old.nslots, 0);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'if tg_op = ''DELETE'' then\n\tdummy := tg_hub_adjustslots(old.name, old.nslots, 0)' at line 1")

-----------
QUERY:

	return old;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'return old' at line 1")

-----------
QUERY:

    end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

end;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end' at line 1")

-----------
QUERY:

' language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' language plpgsql' at line 1")

-----------
QUERY:


create trigger tg_hub_a after insert or update or delete
    on Hub for each row execute procedure tg_hub_a();
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'or update or delete\n    on Hub for each row execute procedure tg_hub_a()' at line 1")

-----------
QUERY:



-- ************************************************************
-- * Support function to add/remove slots of Hub
-- ************************************************************
create function tg_hub_adjustslots(hname bpchar,
                                   oldnslots integer,
                                   newnslots integer)
returns integer as '
begin
    if newnslots = oldnslots then
        return 0;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'bpchar,\n                                   oldnslots integer,\n                  ' at line 4")

-----------
QUERY:

    end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

    if newnslots < oldnslots then
        delete from HSlot where hubname = hname and slotno > newnslots;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'if newnslots < oldnslots then\n        delete from HSlot where hubname = hname an' at line 1")

-----------
QUERY:

	return 0;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'return 0' at line 1")

-----------
QUERY:

    end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

    for i in oldnslots + 1 .. newnslots loop
        insert into HSlot (slotname, hubname, slotno, slotlink)
		values (''HS.dummy'', hname, i, '''');
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'for i in oldnslots + 1 .. newnslots loop\n        insert into HSlot (slotname, hu' at line 1")

-----------
QUERY:

    end loop;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end loop' at line 1")

-----------
QUERY:

    return 0;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'return 0' at line 1")

-----------
QUERY:

end
' language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end\n' language plpgsql' at line 1")

-----------
QUERY:


-- Test comments
COMMENT ON FUNCTION tg_hub_adjustslots_wrong(bpchar, integer, integer) IS 'function with args';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'COMMENT ON FUNCTION tg_hub_adjustslots_wrong(bpchar, integer, integer) IS 'funct' at line 2")

-----------
QUERY:

COMMENT ON FUNCTION tg_hub_adjustslots(bpchar, integer, integer) IS 'function with args';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'COMMENT ON FUNCTION tg_hub_adjustslots(bpchar, integer, integer) IS 'function wi' at line 1")

-----------
QUERY:

COMMENT ON FUNCTION tg_hub_adjustslots(bpchar, integer, integer) IS NULL;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'COMMENT ON FUNCTION tg_hub_adjustslots(bpchar, integer, integer) IS NULL' at line 1")

-----------
QUERY:


-- ************************************************************
-- * BEFORE INSERT or UPDATE on HSlot
-- *	- prevent from manual manipulation
-- *	- set the slotname to HS.hubname.slotno
-- ************************************************************
create function tg_hslot_biu() returns trigger as '
declare
    sname	text;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'trigger as '\ndeclare\n    sname\ttext' at line 6")

-----------
QUERY:

    xname	HSlot.slotname%TYPE;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'xname\tHSlot.slotname%TYPE' at line 1")

-----------
QUERY:

    hubrec	record;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'hubrec\trecord' at line 1")

-----------
QUERY:

begin
    select into hubrec * from Hub where name = new.hubname;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'select into hubrec * from Hub where name = new.hubname' at line 2")

-----------
QUERY:

    if not found then
        raise exception ''no manual manipulation of HSlot'';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'if not found then\n        raise exception ''no manual manipulation of HSlot''' at line 1")

-----------
QUERY:

    end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

    if new.slotno < 1 or new.slotno > hubrec.nslots then
        raise exception ''no manual manipulation of HSlot'';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'if new.slotno < 1 or new.slotno > hubrec.nslots then\n        raise exception ''n' at line 1")

-----------
QUERY:

    end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

    if tg_op = ''UPDATE'' and new.hubname != old.hubname then
	if count(*) > 0 from Hub where name = old.hubname then
	    raise exception ''no manual manipulation of HSlot'';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'if tg_op = ''UPDATE'' and new.hubname != old.hubname then\n\tif count(*) > 0 from ' at line 1")

-----------
QUERY:

	end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

    end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

    sname := ''HS.'' || trim(new.hubname);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'sname := ''HS.'' || trim(new.hubname)' at line 1")

-----------
QUERY:

    sname := sname || ''.'';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'sname := sname || ''.''' at line 1")

-----------
QUERY:

    sname := sname || new.slotno::text;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'sname := sname || new.slotno::text' at line 1")

-----------
QUERY:

    if length(sname) > 20 then
        raise exception ''HSlot slotname "%" too long (20 char max)'', sname;
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'if length(sname) > 20 then\n        raise exception \'\'HSlot slotname "%" too long\' at line 1')

-----------
QUERY:

    end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

    new.slotname := sname;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'new.slotname := sname' at line 1")

-----------
QUERY:

    return new;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'return new' at line 1")

-----------
QUERY:

end;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end' at line 1")

-----------
QUERY:

' language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' language plpgsql' at line 1")

-----------
QUERY:


create trigger tg_hslot_biu before insert or update
    on HSlot for each row execute procedure tg_hslot_biu();
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'or update\n    on HSlot for each row execute procedure tg_hslot_biu()' at line 1")

-----------
QUERY:



-- ************************************************************
-- * BEFORE DELETE on HSlot
-- *	- prevent from manual manipulation
-- ************************************************************
create function tg_hslot_bd() returns trigger as '
declare
    hubrec	record;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'trigger as '\ndeclare\n    hubrec\trecord' at line 5")

-----------
QUERY:

begin
    select into hubrec * from Hub where name = old.hubname;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'select into hubrec * from Hub where name = old.hubname' at line 2")

-----------
QUERY:

    if not found then
        return old;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'if not found then\n        return old' at line 1")

-----------
QUERY:

    end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

    if old.slotno > hubrec.nslots then
        return old;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'if old.slotno > hubrec.nslots then\n        return old' at line 1")

-----------
QUERY:

    end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

    raise exception ''no manual manipulation of HSlot'';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'raise exception ''no manual manipulation of HSlot''' at line 1")

-----------
QUERY:

end;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end' at line 1")

-----------
QUERY:

' language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' language plpgsql' at line 1")

-----------
QUERY:


create trigger tg_hslot_bd before delete
    on HSlot for each row execute procedure tg_hslot_bd();
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'procedure tg_hslot_bd()' at line 2")

-----------
QUERY:



-- ************************************************************
-- * BEFORE INSERT on all slots
-- *	- Check name prefix
-- ************************************************************
create function tg_chkslotname() returns trigger as '
begin
    if substr(new.slotname, 1, 2) != tg_argv[0] then
        raise exception ''slotname must begin with %'', tg_argv[0];
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'trigger as '\nbegin\n    if substr(new.slotname, 1, 2) != tg_argv[0] then\n        ' at line 5")

-----------
QUERY:

    end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

    return new;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'return new' at line 1")

-----------
QUERY:

end;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end' at line 1")

-----------
QUERY:

' language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' language plpgsql' at line 1")

-----------
QUERY:


create trigger tg_chkslotname before insert
    on PSlot for each row execute procedure tg_chkslotname('PS');
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'procedure tg_chkslotname('PS')' at line 2")

-----------
QUERY:


create trigger tg_chkslotname before insert
    on WSlot for each row execute procedure tg_chkslotname('WS');
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'procedure tg_chkslotname('WS')' at line 2")

-----------
QUERY:


create trigger tg_chkslotname before insert
    on PLine for each row execute procedure tg_chkslotname('PL');
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'procedure tg_chkslotname('PL')' at line 2")

-----------
QUERY:


create trigger tg_chkslotname before insert
    on IFace for each row execute procedure tg_chkslotname('IF');
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'procedure tg_chkslotname('IF')' at line 2")

-----------
QUERY:


create trigger tg_chkslotname before insert
    on PHone for each row execute procedure tg_chkslotname('PH');
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'procedure tg_chkslotname('PH')' at line 2")

-----------
QUERY:



-- ************************************************************
-- * BEFORE INSERT or UPDATE on all slots with slotlink
-- *	- Set slotlink to empty string if NULL value given
-- ************************************************************
create function tg_chkslotlink() returns trigger as '
begin
    if new.slotlink isnull then
        new.slotlink := '''';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'trigger as '\nbegin\n    if new.slotlink isnull then\n        new.slotlink := ''''' at line 5")

-----------
QUERY:

    end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

    return new;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'return new' at line 1")

-----------
QUERY:

end;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end' at line 1")

-----------
QUERY:

' language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' language plpgsql' at line 1")

-----------
QUERY:


create trigger tg_chkslotlink before insert or update
    on PSlot for each row execute procedure tg_chkslotlink();
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'or update\n    on PSlot for each row execute procedure tg_chkslotlink()' at line 1")

-----------
QUERY:


create trigger tg_chkslotlink before insert or update
    on WSlot for each row execute procedure tg_chkslotlink();
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'or update\n    on WSlot for each row execute procedure tg_chkslotlink()' at line 1")

-----------
QUERY:


create trigger tg_chkslotlink before insert or update
    on IFace for each row execute procedure tg_chkslotlink();
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'or update\n    on IFace for each row execute procedure tg_chkslotlink()' at line 1")

-----------
QUERY:


create trigger tg_chkslotlink before insert or update
    on HSlot for each row execute procedure tg_chkslotlink();
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'or update\n    on HSlot for each row execute procedure tg_chkslotlink()' at line 1")

-----------
QUERY:


create trigger tg_chkslotlink before insert or update
    on PHone for each row execute procedure tg_chkslotlink();
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'or update\n    on PHone for each row execute procedure tg_chkslotlink()' at line 1")

-----------
QUERY:



-- ************************************************************
-- * BEFORE INSERT or UPDATE on all slots with backlink
-- *	- Set backlink to empty string if NULL value given
-- ************************************************************
create function tg_chkbacklink() returns trigger as '
begin
    if new.backlink isnull then
        new.backlink := '''';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'trigger as '\nbegin\n    if new.backlink isnull then\n        new.backlink := ''''' at line 5")

-----------
QUERY:

    end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

    return new;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'return new' at line 1")

-----------
QUERY:

end;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end' at line 1")

-----------
QUERY:

' language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' language plpgsql' at line 1")

-----------
QUERY:


create trigger tg_chkbacklink before insert or update
    on PSlot for each row execute procedure tg_chkbacklink();
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'or update\n    on PSlot for each row execute procedure tg_chkbacklink()' at line 1")

-----------
QUERY:


create trigger tg_chkbacklink before insert or update
    on WSlot for each row execute procedure tg_chkbacklink();
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'or update\n    on WSlot for each row execute procedure tg_chkbacklink()' at line 1")

-----------
QUERY:


create trigger tg_chkbacklink before insert or update
    on PLine for each row execute procedure tg_chkbacklink();
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'or update\n    on PLine for each row execute procedure tg_chkbacklink()' at line 1")

-----------
QUERY:



-- ************************************************************
-- * BEFORE UPDATE on PSlot
-- *	- do delete/insert instead of update if name changes
-- ************************************************************
create function tg_pslot_bu() returns trigger as '
begin
    if new.slotname != old.slotname then
        delete from PSlot where slotname = old.slotname;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'trigger as '\nbegin\n    if new.slotname != old.slotname then\n        delete from ' at line 5")

-----------
QUERY:

	insert into PSlot (
		    slotname,
		    pfname,
		    slotlink,
		    backlink
		) values (
		    new.slotname,
		    new.pfname,
		    new.slotlink,
		    new.backlink
		);
RESULT:
	ERROR - (1054, "Unknown column 'new.slotname' in 'field list'")

-----------
QUERY:

        return null;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'return null' at line 1")

-----------
QUERY:

    end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

    return new;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'return new' at line 1")

-----------
QUERY:

end;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end' at line 1")

-----------
QUERY:

' language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' language plpgsql' at line 1")

-----------
QUERY:


create trigger tg_pslot_bu before update
    on PSlot for each row execute procedure tg_pslot_bu();
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'procedure tg_pslot_bu()' at line 2")

-----------
QUERY:



-- ************************************************************
-- * BEFORE UPDATE on WSlot
-- *	- do delete/insert instead of update if name changes
-- ************************************************************
create function tg_wslot_bu() returns trigger as '
begin
    if new.slotname != old.slotname then
        delete from WSlot where slotname = old.slotname;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'trigger as '\nbegin\n    if new.slotname != old.slotname then\n        delete from ' at line 5")

-----------
QUERY:

	insert into WSlot (
		    slotname,
		    roomno,
		    slotlink,
		    backlink
		) values (
		    new.slotname,
		    new.roomno,
		    new.slotlink,
		    new.backlink
		);
RESULT:
	ERROR - (1054, "Unknown column 'new.slotname' in 'field list'")

-----------
QUERY:

        return null;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'return null' at line 1")

-----------
QUERY:

    end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

    return new;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'return new' at line 1")

-----------
QUERY:

end;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end' at line 1")

-----------
QUERY:

' language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' language plpgsql' at line 1")

-----------
QUERY:


create trigger tg_wslot_bu before update
    on WSlot for each row execute procedure tg_Wslot_bu();
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'procedure tg_Wslot_bu()' at line 2")

-----------
QUERY:



-- ************************************************************
-- * BEFORE UPDATE on PLine
-- *	- do delete/insert instead of update if name changes
-- ************************************************************
create function tg_pline_bu() returns trigger as '
begin
    if new.slotname != old.slotname then
        delete from PLine where slotname = old.slotname;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'trigger as '\nbegin\n    if new.slotname != old.slotname then\n        delete from ' at line 5")

-----------
QUERY:

	insert into PLine (
		    slotname,
		    phonenumber,
		    comment,
		    backlink
		) values (
		    new.slotname,
		    new.phonenumber,
		    new.comment,
		    new.backlink
		);
RESULT:
	ERROR - (1054, "Unknown column 'new.slotname' in 'field list'")

-----------
QUERY:

        return null;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'return null' at line 1")

-----------
QUERY:

    end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

    return new;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'return new' at line 1")

-----------
QUERY:

end;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end' at line 1")

-----------
QUERY:

' language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' language plpgsql' at line 1")

-----------
QUERY:


create trigger tg_pline_bu before update
    on PLine for each row execute procedure tg_pline_bu();
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'procedure tg_pline_bu()' at line 2")

-----------
QUERY:



-- ************************************************************
-- * BEFORE UPDATE on IFace
-- *	- do delete/insert instead of update if name changes
-- ************************************************************
create function tg_iface_bu() returns trigger as '
begin
    if new.slotname != old.slotname then
        delete from IFace where slotname = old.slotname;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'trigger as '\nbegin\n    if new.slotname != old.slotname then\n        delete from ' at line 5")

-----------
QUERY:

	insert into IFace (
		    slotname,
		    sysname,
		    ifname,
		    slotlink
		) values (
		    new.slotname,
		    new.sysname,
		    new.ifname,
		    new.slotlink
		);
RESULT:
	ERROR - (1054, "Unknown column 'new.slotname' in 'field list'")

-----------
QUERY:

        return null;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'return null' at line 1")

-----------
QUERY:

    end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

    return new;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'return new' at line 1")

-----------
QUERY:

end;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end' at line 1")

-----------
QUERY:

' language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' language plpgsql' at line 1")

-----------
QUERY:


create trigger tg_iface_bu before update
    on IFace for each row execute procedure tg_iface_bu();
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'procedure tg_iface_bu()' at line 2")

-----------
QUERY:



-- ************************************************************
-- * BEFORE UPDATE on HSlot
-- *	- do delete/insert instead of update if name changes
-- ************************************************************
create function tg_hslot_bu() returns trigger as '
begin
    if new.slotname != old.slotname or new.hubname != old.hubname then
        delete from HSlot where slotname = old.slotname;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'trigger as '\nbegin\n    if new.slotname != old.slotname or new.hubname != old.hub' at line 5")

-----------
QUERY:

	insert into HSlot (
		    slotname,
		    hubname,
		    slotno,
		    slotlink
		) values (
		    new.slotname,
		    new.hubname,
		    new.slotno,
		    new.slotlink
		);
RESULT:
	ERROR - (1054, "Unknown column 'new.slotname' in 'field list'")

-----------
QUERY:

        return null;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'return null' at line 1")

-----------
QUERY:

    end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

    return new;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'return new' at line 1")

-----------
QUERY:

end;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end' at line 1")

-----------
QUERY:

' language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' language plpgsql' at line 1")

-----------
QUERY:


create trigger tg_hslot_bu before update
    on HSlot for each row execute procedure tg_hslot_bu();
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'procedure tg_hslot_bu()' at line 2")

-----------
QUERY:



-- ************************************************************
-- * BEFORE UPDATE on PHone
-- *	- do delete/insert instead of update if name changes
-- ************************************************************
create function tg_phone_bu() returns trigger as '
begin
    if new.slotname != old.slotname then
        delete from PHone where slotname = old.slotname;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'trigger as '\nbegin\n    if new.slotname != old.slotname then\n        delete from ' at line 5")

-----------
QUERY:

	insert into PHone (
		    slotname,
		    comment,
		    slotlink
		) values (
		    new.slotname,
		    new.comment,
		    new.slotlink
		);
RESULT:
	ERROR - (1054, "Unknown column 'new.slotname' in 'field list'")

-----------
QUERY:

        return null;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'return null' at line 1")

-----------
QUERY:

    end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

    return new;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'return new' at line 1")

-----------
QUERY:

end;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end' at line 1")

-----------
QUERY:

' language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' language plpgsql' at line 1")

-----------
QUERY:


create trigger tg_phone_bu before update
    on PHone for each row execute procedure tg_phone_bu();
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'procedure tg_phone_bu()' at line 2")

-----------
QUERY:



-- ************************************************************
-- * AFTER INSERT or UPDATE or DELETE on slot with backlink
-- *	- Ensure that the opponent correctly points back to us
-- ************************************************************
create function tg_backlink_a() returns trigger as '
declare
    dummy	integer;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'trigger as '\ndeclare\n    dummy\tinteger' at line 5")

-----------
QUERY:

begin
    if tg_op = ''INSERT'' then
        if new.backlink != '''' then
	    dummy := tg_backlink_set(new.backlink, new.slotname);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'if tg_op = ''INSERT'' then\n        if new.backlink != '''' then\n\t    dummy := tg' at line 2")

-----------
QUERY:

	end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

	return new;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'return new' at line 1")

-----------
QUERY:

    end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

    if tg_op = ''UPDATE'' then
        if new.backlink != old.backlink then
	    if old.backlink != '''' then
	        dummy := tg_backlink_unset(old.backlink, old.slotname);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'if tg_op = ''UPDATE'' then\n        if new.backlink != old.backlink then\n\t    if ' at line 1")

-----------
QUERY:

	    end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

	    if new.backlink != '''' then
	        dummy := tg_backlink_set(new.backlink, new.slotname);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'if new.backlink != '''' then\n\t        dummy := tg_backlink_set(new.backlink, new' at line 1")

-----------
QUERY:

	    end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

	else
	    if new.slotname != old.slotname and new.backlink != '''' then
	        dummy := tg_slotlink_set(new.backlink, new.slotname);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'else\n\t    if new.slotname != old.slotname and new.backlink != '''' then\n\t       ' at line 1")

-----------
QUERY:

	    end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

	end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

	return new;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'return new' at line 1")

-----------
QUERY:

    end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

    if tg_op = ''DELETE'' then
        if old.backlink != '''' then
	    dummy := tg_backlink_unset(old.backlink, old.slotname);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'if tg_op = ''DELETE'' then\n        if old.backlink != '''' then\n\t    dummy := tg' at line 1")

-----------
QUERY:

	end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

	return old;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'return old' at line 1")

-----------
QUERY:

    end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

end;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end' at line 1")

-----------
QUERY:

' language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' language plpgsql' at line 1")

-----------
QUERY:



create trigger tg_backlink_a after insert or update or delete
    on PSlot for each row execute procedure tg_backlink_a('PS');
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'or update or delete\n    on PSlot for each row execute procedure tg_backlink_a('P' at line 1")

-----------
QUERY:


create trigger tg_backlink_a after insert or update or delete
    on WSlot for each row execute procedure tg_backlink_a('WS');
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'or update or delete\n    on WSlot for each row execute procedure tg_backlink_a('W' at line 1")

-----------
QUERY:


create trigger tg_backlink_a after insert or update or delete
    on PLine for each row execute procedure tg_backlink_a('PL');
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'or update or delete\n    on PLine for each row execute procedure tg_backlink_a('P' at line 1")

-----------
QUERY:



-- ************************************************************
-- * Support function to set the opponents backlink field
-- * if it does not already point to the requested slot
-- ************************************************************
create function tg_backlink_set(myname bpchar, blname bpchar)
returns integer as '
declare
    mytype	char(2);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'bpchar, blname bpchar)\nreturns integer as '\ndeclare\n    mytype\tchar(2)' at line 5")

-----------
QUERY:

    link	char(4);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'link\tchar(4)' at line 1")

-----------
QUERY:

    rec		record;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'rec\t\trecord' at line 1")

-----------
QUERY:

begin
    mytype := substr(myname, 1, 2);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'mytype := substr(myname, 1, 2)' at line 2")

-----------
QUERY:

    link := mytype || substr(blname, 1, 2);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'link := mytype || substr(blname, 1, 2)' at line 1")

-----------
QUERY:

    if link = ''PLPL'' then
        raise exception
		''backlink between two phone lines does not make sense'';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'if link = ''PLPL'' then\n        raise exception\n\t\t''backlink between two phone l' at line 1")

-----------
QUERY:

    end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

    if link in (''PLWS'', ''WSPL'') then
        raise exception
		''direct link of phone line to wall slot not permitted'';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'if link in (''PLWS'', ''WSPL'') then\n        raise exception\n\t\t''direct link of ' at line 1")

-----------
QUERY:

    end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

    if mytype = ''PS'' then
        select into rec * from PSlot where slotname = myname;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'if mytype = ''PS'' then\n        select into rec * from PSlot where slotname = my' at line 1")

-----------
QUERY:

	if not found then
	    raise exception ''% does not exist'', myname;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'if not found then\n\t    raise exception ''% does not exist'', myname' at line 1")

-----------
QUERY:

	end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

	if rec.backlink != blname then
	    update PSlot set backlink = blname where slotname = myname;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'if rec.backlink != blname then\n\t    update PSlot set backlink = blname where slo' at line 1")

-----------
QUERY:

	end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

	return 0;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'return 0' at line 1")

-----------
QUERY:

    end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

    if mytype = ''WS'' then
        select into rec * from WSlot where slotname = myname;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'if mytype = ''WS'' then\n        select into rec * from WSlot where slotname = my' at line 1")

-----------
QUERY:

	if not found then
	    raise exception ''% does not exist'', myname;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'if not found then\n\t    raise exception ''% does not exist'', myname' at line 1")

-----------
QUERY:

	end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

	if rec.backlink != blname then
	    update WSlot set backlink = blname where slotname = myname;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'if rec.backlink != blname then\n\t    update WSlot set backlink = blname where slo' at line 1")

-----------
QUERY:

	end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

	return 0;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'return 0' at line 1")

-----------
QUERY:

    end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

    if mytype = ''PL'' then
        select into rec * from PLine where slotname = myname;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'if mytype = ''PL'' then\n        select into rec * from PLine where slotname = my' at line 1")

-----------
QUERY:

	if not found then
	    raise exception ''% does not exist'', myname;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'if not found then\n\t    raise exception ''% does not exist'', myname' at line 1")

-----------
QUERY:

	end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

	if rec.backlink != blname then
	    update PLine set backlink = blname where slotname = myname;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'if rec.backlink != blname then\n\t    update PLine set backlink = blname where slo' at line 1")

-----------
QUERY:

	end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

	return 0;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'return 0' at line 1")

-----------
QUERY:

    end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

    raise exception ''illegal backlink beginning with %'', mytype;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'raise exception ''illegal backlink beginning with %'', mytype' at line 1")

-----------
QUERY:

end;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end' at line 1")

-----------
QUERY:

' language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' language plpgsql' at line 1")

-----------
QUERY:



-- ************************************************************
-- * Support function to clear out the backlink field if
-- * it still points to specific slot
-- ************************************************************
create function tg_backlink_unset(bpchar, bpchar)
returns integer as '
declare
    myname	alias for $1;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ', bpchar)\nreturns integer as '\ndeclare\n    myname\talias for $1' at line 5")

-----------
QUERY:

    blname	alias for $2;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'blname\talias for $2' at line 1")

-----------
QUERY:

    mytype	char(2);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'mytype\tchar(2)' at line 1")

-----------
QUERY:

    rec		record;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'rec\t\trecord' at line 1")

-----------
QUERY:

begin
    mytype := substr(myname, 1, 2);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'mytype := substr(myname, 1, 2)' at line 2")

-----------
QUERY:

    if mytype = ''PS'' then
        select into rec * from PSlot where slotname = myname;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'if mytype = ''PS'' then\n        select into rec * from PSlot where slotname = my' at line 1")

-----------
QUERY:

	if not found then
	    return 0;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'if not found then\n\t    return 0' at line 1")

-----------
QUERY:

	end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

	if rec.backlink = blname then
	    update PSlot set backlink = '''' where slotname = myname;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'if rec.backlink = blname then\n\t    update PSlot set backlink = '''' where slotna' at line 1")

-----------
QUERY:

	end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

	return 0;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'return 0' at line 1")

-----------
QUERY:

    end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

    if mytype = ''WS'' then
        select into rec * from WSlot where slotname = myname;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'if mytype = ''WS'' then\n        select into rec * from WSlot where slotname = my' at line 1")

-----------
QUERY:

	if not found then
	    return 0;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'if not found then\n\t    return 0' at line 1")

-----------
QUERY:

	end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

	if rec.backlink = blname then
	    update WSlot set backlink = '''' where slotname = myname;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'if rec.backlink = blname then\n\t    update WSlot set backlink = '''' where slotna' at line 1")

-----------
QUERY:

	end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

	return 0;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'return 0' at line 1")

-----------
QUERY:

    end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

    if mytype = ''PL'' then
        select into rec * from PLine where slotname = myname;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'if mytype = ''PL'' then\n        select into rec * from PLine where slotname = my' at line 1")

-----------
QUERY:

	if not found then
	    return 0;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'if not found then\n\t    return 0' at line 1")

-----------
QUERY:

	end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

	if rec.backlink = blname then
	    update PLine set backlink = '''' where slotname = myname;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'if rec.backlink = blname then\n\t    update PLine set backlink = '''' where slotna' at line 1")

-----------
QUERY:

	end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

	return 0;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'return 0' at line 1")

-----------
QUERY:

    end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

end
' language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end\n' language plpgsql' at line 1")

-----------
QUERY:



-- ************************************************************
-- * AFTER INSERT or UPDATE or DELETE on slot with slotlink
-- *	- Ensure that the opponent correctly points back to us
-- ************************************************************
create function tg_slotlink_a() returns trigger as '
declare
    dummy	integer;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'trigger as '\ndeclare\n    dummy\tinteger' at line 5")

-----------
QUERY:

begin
    if tg_op = ''INSERT'' then
        if new.slotlink != '''' then
	    dummy := tg_slotlink_set(new.slotlink, new.slotname);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'if tg_op = ''INSERT'' then\n        if new.slotlink != '''' then\n\t    dummy := tg' at line 2")

-----------
QUERY:

	end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

	return new;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'return new' at line 1")

-----------
QUERY:

    end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

    if tg_op = ''UPDATE'' then
        if new.slotlink != old.slotlink then
	    if old.slotlink != '''' then
	        dummy := tg_slotlink_unset(old.slotlink, old.slotname);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'if tg_op = ''UPDATE'' then\n        if new.slotlink != old.slotlink then\n\t    if ' at line 1")

-----------
QUERY:

	    end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

	    if new.slotlink != '''' then
	        dummy := tg_slotlink_set(new.slotlink, new.slotname);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'if new.slotlink != '''' then\n\t        dummy := tg_slotlink_set(new.slotlink, new' at line 1")

-----------
QUERY:

	    end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

	else
	    if new.slotname != old.slotname and new.slotlink != '''' then
	        dummy := tg_slotlink_set(new.slotlink, new.slotname);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'else\n\t    if new.slotname != old.slotname and new.slotlink != '''' then\n\t       ' at line 1")

-----------
QUERY:

	    end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

	end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

	return new;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'return new' at line 1")

-----------
QUERY:

    end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

    if tg_op = ''DELETE'' then
        if old.slotlink != '''' then
	    dummy := tg_slotlink_unset(old.slotlink, old.slotname);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'if tg_op = ''DELETE'' then\n        if old.slotlink != '''' then\n\t    dummy := tg' at line 1")

-----------
QUERY:

	end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

	return old;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'return old' at line 1")

-----------
QUERY:

    end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

end;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end' at line 1")

-----------
QUERY:

' language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' language plpgsql' at line 1")

-----------
QUERY:



create trigger tg_slotlink_a after insert or update or delete
    on PSlot for each row execute procedure tg_slotlink_a('PS');
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'or update or delete\n    on PSlot for each row execute procedure tg_slotlink_a('P' at line 1")

-----------
QUERY:


create trigger tg_slotlink_a after insert or update or delete
    on WSlot for each row execute procedure tg_slotlink_a('WS');
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'or update or delete\n    on WSlot for each row execute procedure tg_slotlink_a('W' at line 1")

-----------
QUERY:


create trigger tg_slotlink_a after insert or update or delete
    on IFace for each row execute procedure tg_slotlink_a('IF');
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'or update or delete\n    on IFace for each row execute procedure tg_slotlink_a('I' at line 1")

-----------
QUERY:


create trigger tg_slotlink_a after insert or update or delete
    on HSlot for each row execute procedure tg_slotlink_a('HS');
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'or update or delete\n    on HSlot for each row execute procedure tg_slotlink_a('H' at line 1")

-----------
QUERY:


create trigger tg_slotlink_a after insert or update or delete
    on PHone for each row execute procedure tg_slotlink_a('PH');
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'or update or delete\n    on PHone for each row execute procedure tg_slotlink_a('P' at line 1")

-----------
QUERY:



-- ************************************************************
-- * Support function to set the opponents slotlink field
-- * if it does not already point to the requested slot
-- ************************************************************
create function tg_slotlink_set(bpchar, bpchar)
returns integer as '
declare
    myname	alias for $1;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ', bpchar)\nreturns integer as '\ndeclare\n    myname\talias for $1' at line 5")

-----------
QUERY:

    blname	alias for $2;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'blname\talias for $2' at line 1")

-----------
QUERY:

    mytype	char(2);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'mytype\tchar(2)' at line 1")

-----------
QUERY:

    link	char(4);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'link\tchar(4)' at line 1")

-----------
QUERY:

    rec		record;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'rec\t\trecord' at line 1")

-----------
QUERY:

begin
    mytype := substr(myname, 1, 2);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'mytype := substr(myname, 1, 2)' at line 2")

-----------
QUERY:

    link := mytype || substr(blname, 1, 2);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'link := mytype || substr(blname, 1, 2)' at line 1")

-----------
QUERY:

    if link = ''PHPH'' then
        raise exception
		''slotlink between two phones does not make sense'';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'if link = ''PHPH'' then\n        raise exception\n\t\t''slotlink between two phones ' at line 1")

-----------
QUERY:

    end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

    if link in (''PHHS'', ''HSPH'') then
        raise exception
		''link of phone to hub does not make sense'';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'if link in (''PHHS'', ''HSPH'') then\n        raise exception\n\t\t''link of phone t' at line 1")

-----------
QUERY:

    end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

    if link in (''PHIF'', ''IFPH'') then
        raise exception
		''link of phone to hub does not make sense'';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'if link in (''PHIF'', ''IFPH'') then\n        raise exception\n\t\t''link of phone t' at line 1")

-----------
QUERY:

    end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

    if link in (''PSWS'', ''WSPS'') then
        raise exception
		''slotlink from patchslot to wallslot not permitted'';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'if link in (''PSWS'', ''WSPS'') then\n        raise exception\n\t\t''slotlink from p' at line 1")

-----------
QUERY:

    end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

    if mytype = ''PS'' then
        select into rec * from PSlot where slotname = myname;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'if mytype = ''PS'' then\n        select into rec * from PSlot where slotname = my' at line 1")

-----------
QUERY:

	if not found then
	    raise exception ''% does not exist'', myname;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'if not found then\n\t    raise exception ''% does not exist'', myname' at line 1")

-----------
QUERY:

	end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

	if rec.slotlink != blname then
	    update PSlot set slotlink = blname where slotname = myname;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'if rec.slotlink != blname then\n\t    update PSlot set slotlink = blname where slo' at line 1")

-----------
QUERY:

	end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

	return 0;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'return 0' at line 1")

-----------
QUERY:

    end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

    if mytype = ''WS'' then
        select into rec * from WSlot where slotname = myname;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'if mytype = ''WS'' then\n        select into rec * from WSlot where slotname = my' at line 1")

-----------
QUERY:

	if not found then
	    raise exception ''% does not exist'', myname;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'if not found then\n\t    raise exception ''% does not exist'', myname' at line 1")

-----------
QUERY:

	end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

	if rec.slotlink != blname then
	    update WSlot set slotlink = blname where slotname = myname;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'if rec.slotlink != blname then\n\t    update WSlot set slotlink = blname where slo' at line 1")

-----------
QUERY:

	end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

	return 0;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'return 0' at line 1")

-----------
QUERY:

    end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

    if mytype = ''IF'' then
        select into rec * from IFace where slotname = myname;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'if mytype = ''IF'' then\n        select into rec * from IFace where slotname = my' at line 1")

-----------
QUERY:

	if not found then
	    raise exception ''% does not exist'', myname;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'if not found then\n\t    raise exception ''% does not exist'', myname' at line 1")

-----------
QUERY:

	end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

	if rec.slotlink != blname then
	    update IFace set slotlink = blname where slotname = myname;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'if rec.slotlink != blname then\n\t    update IFace set slotlink = blname where slo' at line 1")

-----------
QUERY:

	end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

	return 0;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'return 0' at line 1")

-----------
QUERY:

    end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

    if mytype = ''HS'' then
        select into rec * from HSlot where slotname = myname;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'if mytype = ''HS'' then\n        select into rec * from HSlot where slotname = my' at line 1")

-----------
QUERY:

	if not found then
	    raise exception ''% does not exist'', myname;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'if not found then\n\t    raise exception ''% does not exist'', myname' at line 1")

-----------
QUERY:

	end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

	if rec.slotlink != blname then
	    update HSlot set slotlink = blname where slotname = myname;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'if rec.slotlink != blname then\n\t    update HSlot set slotlink = blname where slo' at line 1")

-----------
QUERY:

	end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

	return 0;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'return 0' at line 1")

-----------
QUERY:

    end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

    if mytype = ''PH'' then
        select into rec * from PHone where slotname = myname;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'if mytype = ''PH'' then\n        select into rec * from PHone where slotname = my' at line 1")

-----------
QUERY:

	if not found then
	    raise exception ''% does not exist'', myname;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'if not found then\n\t    raise exception ''% does not exist'', myname' at line 1")

-----------
QUERY:

	end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

	if rec.slotlink != blname then
	    update PHone set slotlink = blname where slotname = myname;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'if rec.slotlink != blname then\n\t    update PHone set slotlink = blname where slo' at line 1")

-----------
QUERY:

	end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

	return 0;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'return 0' at line 1")

-----------
QUERY:

    end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

    raise exception ''illegal slotlink beginning with %'', mytype;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'raise exception ''illegal slotlink beginning with %'', mytype' at line 1")

-----------
QUERY:

end;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end' at line 1")

-----------
QUERY:

' language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' language plpgsql' at line 1")

-----------
QUERY:



-- ************************************************************
-- * Support function to clear out the slotlink field if
-- * it still points to specific slot
-- ************************************************************
create function tg_slotlink_unset(bpchar, bpchar)
returns integer as '
declare
    myname	alias for $1;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ', bpchar)\nreturns integer as '\ndeclare\n    myname\talias for $1' at line 5")

-----------
QUERY:

    blname	alias for $2;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'blname\talias for $2' at line 1")

-----------
QUERY:

    mytype	char(2);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'mytype\tchar(2)' at line 1")

-----------
QUERY:

    rec		record;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'rec\t\trecord' at line 1")

-----------
QUERY:

begin
    mytype := substr(myname, 1, 2);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'mytype := substr(myname, 1, 2)' at line 2")

-----------
QUERY:

    if mytype = ''PS'' then
        select into rec * from PSlot where slotname = myname;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'if mytype = ''PS'' then\n        select into rec * from PSlot where slotname = my' at line 1")

-----------
QUERY:

	if not found then
	    return 0;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'if not found then\n\t    return 0' at line 1")

-----------
QUERY:

	end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

	if rec.slotlink = blname then
	    update PSlot set slotlink = '''' where slotname = myname;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'if rec.slotlink = blname then\n\t    update PSlot set slotlink = '''' where slotna' at line 1")

-----------
QUERY:

	end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

	return 0;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'return 0' at line 1")

-----------
QUERY:

    end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

    if mytype = ''WS'' then
        select into rec * from WSlot where slotname = myname;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'if mytype = ''WS'' then\n        select into rec * from WSlot where slotname = my' at line 1")

-----------
QUERY:

	if not found then
	    return 0;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'if not found then\n\t    return 0' at line 1")

-----------
QUERY:

	end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

	if rec.slotlink = blname then
	    update WSlot set slotlink = '''' where slotname = myname;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'if rec.slotlink = blname then\n\t    update WSlot set slotlink = '''' where slotna' at line 1")

-----------
QUERY:

	end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

	return 0;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'return 0' at line 1")

-----------
QUERY:

    end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

    if mytype = ''IF'' then
        select into rec * from IFace where slotname = myname;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'if mytype = ''IF'' then\n        select into rec * from IFace where slotname = my' at line 1")

-----------
QUERY:

	if not found then
	    return 0;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'if not found then\n\t    return 0' at line 1")

-----------
QUERY:

	end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

	if rec.slotlink = blname then
	    update IFace set slotlink = '''' where slotname = myname;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'if rec.slotlink = blname then\n\t    update IFace set slotlink = '''' where slotna' at line 1")

-----------
QUERY:

	end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

	return 0;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'return 0' at line 1")

-----------
QUERY:

    end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

    if mytype = ''HS'' then
        select into rec * from HSlot where slotname = myname;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'if mytype = ''HS'' then\n        select into rec * from HSlot where slotname = my' at line 1")

-----------
QUERY:

	if not found then
	    return 0;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'if not found then\n\t    return 0' at line 1")

-----------
QUERY:

	end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

	if rec.slotlink = blname then
	    update HSlot set slotlink = '''' where slotname = myname;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'if rec.slotlink = blname then\n\t    update HSlot set slotlink = '''' where slotna' at line 1")

-----------
QUERY:

	end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

	return 0;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'return 0' at line 1")

-----------
QUERY:

    end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

    if mytype = ''PH'' then
        select into rec * from PHone where slotname = myname;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'if mytype = ''PH'' then\n        select into rec * from PHone where slotname = my' at line 1")

-----------
QUERY:

	if not found then
	    return 0;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'if not found then\n\t    return 0' at line 1")

-----------
QUERY:

	end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

	if rec.slotlink = blname then
	    update PHone set slotlink = '''' where slotname = myname;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'if rec.slotlink = blname then\n\t    update PHone set slotlink = '''' where slotna' at line 1")

-----------
QUERY:

	end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

	return 0;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'return 0' at line 1")

-----------
QUERY:

    end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

end;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end' at line 1")

-----------
QUERY:

' language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' language plpgsql' at line 1")

-----------
QUERY:



-- ************************************************************
-- * Describe the backside of a patchfield slot
-- ************************************************************
create function pslot_backlink_view(bpchar)
returns text as '
<<outer>>
declare
    rec		record;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')\nreturns text as '\n<<outer>>\ndeclare\n    rec\t\trecord' at line 4")

-----------
QUERY:

    bltype	char(2);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'bltype\tchar(2)' at line 1")

-----------
QUERY:

    retval	text;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'retval\ttext' at line 1")

-----------
QUERY:

begin
    select into rec * from PSlot where slotname = $1;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'select into rec * from PSlot where slotname = $1' at line 2")

-----------
QUERY:

    if not found then
        return '''';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'if not found then\n        return ''''' at line 1")

-----------
QUERY:

    end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

    if rec.backlink = '''' then
        return ''-'';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'if rec.backlink = '''' then\n        return ''-''' at line 1")

-----------
QUERY:

    end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

    bltype := substr(rec.backlink, 1, 2);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'bltype := substr(rec.backlink, 1, 2)' at line 1")

-----------
QUERY:

    if bltype = ''PL'' then
        declare
	    rec		record;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'if bltype = ''PL'' then\n        declare\n\t    rec\t\trecord' at line 1")

-----------
QUERY:

	begin
	    select into rec * from PLine where slotname = "outer".rec.backlink;
RESULT:
	ERROR - (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'select into rec * from PLine where slotname = "outer".rec.backlink\' at line 2')

-----------
QUERY:

	    retval := ''Phone line '' || trim(rec.phonenumber);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'retval := ''Phone line '' || trim(rec.phonenumber)' at line 1")

-----------
QUERY:

	    if rec.comment != '''' then
	        retval := retval || '' ('';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'if rec.comment != '''' then\n\t        retval := retval || '' (''' at line 1")

-----------
QUERY:

		retval := retval || rec.comment;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'retval := retval || rec.comment' at line 1")

-----------
QUERY:

		retval := retval || '')'';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'retval := retval || '')''' at line 1")

-----------
QUERY:

	    end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

	    return retval;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'return retval' at line 1")

-----------
QUERY:

	end;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end' at line 1")

-----------
QUERY:

    end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

    if bltype = ''WS'' then
        select into rec * from WSlot where slotname = rec.backlink;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'if bltype = ''WS'' then\n        select into rec * from WSlot where slotname = re' at line 1")

-----------
QUERY:

	retval := trim(rec.slotname) || '' in room '';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'retval := trim(rec.slotname) || '' in room ''' at line 1")

-----------
QUERY:

	retval := retval || trim(rec.roomno);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'retval := retval || trim(rec.roomno)' at line 1")

-----------
QUERY:

	retval := retval || '' -> '';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'retval := retval || '' -> ''' at line 1")

-----------
QUERY:

	return retval || wslot_slotlink_view(rec.slotname);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'return retval || wslot_slotlink_view(rec.slotname)' at line 1")

-----------
QUERY:

    end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

    return rec.backlink;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'return rec.backlink' at line 1")

-----------
QUERY:

end;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end' at line 1")

-----------
QUERY:

' language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' language plpgsql' at line 1")

-----------
QUERY:



-- ************************************************************
-- * Describe the front of a patchfield slot
-- ************************************************************
create function pslot_slotlink_view(bpchar)
returns text as '
declare
    psrec	record;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')\nreturns text as '\ndeclare\n    psrec\trecord' at line 4")

-----------
QUERY:

    sltype	char(2);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'sltype\tchar(2)' at line 1")

-----------
QUERY:

    retval	text;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'retval\ttext' at line 1")

-----------
QUERY:

begin
    select into psrec * from PSlot where slotname = $1;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'select into psrec * from PSlot where slotname = $1' at line 2")

-----------
QUERY:

    if not found then
        return '''';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'if not found then\n        return ''''' at line 1")

-----------
QUERY:

    end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

    if psrec.slotlink = '''' then
        return ''-'';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'if psrec.slotlink = '''' then\n        return ''-''' at line 1")

-----------
QUERY:

    end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

    sltype := substr(psrec.slotlink, 1, 2);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'sltype := substr(psrec.slotlink, 1, 2)' at line 1")

-----------
QUERY:

    if sltype = ''PS'' then
	retval := trim(psrec.slotlink) || '' -> '';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'if sltype = ''PS'' then\n\tretval := trim(psrec.slotlink) || '' -> ''' at line 1")

-----------
QUERY:

	return retval || pslot_backlink_view(psrec.slotlink);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'return retval || pslot_backlink_view(psrec.slotlink)' at line 1")

-----------
QUERY:

    end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

    if sltype = ''HS'' then
        retval := comment from Hub H, HSlot HS
			where HS.slotname = psrec.slotlink
			  and H.name = HS.hubname;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'if sltype = ''HS'' then\n        retval := comment from Hub H, HSlot HS\n\t\t\twhere ' at line 1")

-----------
QUERY:

        retval := retval || '' slot '';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'retval := retval || '' slot ''' at line 1")

-----------
QUERY:

	retval := retval || slotno::text from HSlot
			where slotname = psrec.slotlink;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'retval := retval || slotno::text from HSlot\n\t\t\twhere slotname = psrec.slotlink' at line 1")

-----------
QUERY:

	return retval;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'return retval' at line 1")

-----------
QUERY:

    end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

    return psrec.slotlink;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'return psrec.slotlink' at line 1")

-----------
QUERY:

end;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end' at line 1")

-----------
QUERY:

' language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' language plpgsql' at line 1")

-----------
QUERY:



-- ************************************************************
-- * Describe the front of a wall connector slot
-- ************************************************************
create function wslot_slotlink_view(bpchar)
returns text as '
declare
    rec		record;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')\nreturns text as '\ndeclare\n    rec\t\trecord' at line 4")

-----------
QUERY:

    sltype	char(2);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'sltype\tchar(2)' at line 1")

-----------
QUERY:

    retval	text;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'retval\ttext' at line 1")

-----------
QUERY:

begin
    select into rec * from WSlot where slotname = $1;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'select into rec * from WSlot where slotname = $1' at line 2")

-----------
QUERY:

    if not found then
        return '''';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'if not found then\n        return ''''' at line 1")

-----------
QUERY:

    end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

    if rec.slotlink = '''' then
        return ''-'';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'if rec.slotlink = '''' then\n        return ''-''' at line 1")

-----------
QUERY:

    end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

    sltype := substr(rec.slotlink, 1, 2);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'sltype := substr(rec.slotlink, 1, 2)' at line 1")

-----------
QUERY:

    if sltype = ''PH'' then
        select into rec * from PHone where slotname = rec.slotlink;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'if sltype = ''PH'' then\n        select into rec * from PHone where slotname = re' at line 1")

-----------
QUERY:

	retval := ''Phone '' || trim(rec.slotname);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'retval := ''Phone '' || trim(rec.slotname)' at line 1")

-----------
QUERY:

	if rec.comment != '''' then
	    retval := retval || '' ('';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'if rec.comment != '''' then\n\t    retval := retval || '' (''' at line 1")

-----------
QUERY:

	    retval := retval || rec.comment;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'retval := retval || rec.comment' at line 1")

-----------
QUERY:

	    retval := retval || '')'';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'retval := retval || '')''' at line 1")

-----------
QUERY:

	end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

	return retval;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'return retval' at line 1")

-----------
QUERY:

    end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

    if sltype = ''IF'' then
	declare
	    syrow	System%RowType;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'if sltype = ''IF'' then\n\tdeclare\n\t    syrow\tSystem%RowType' at line 1")

-----------
QUERY:

	    ifrow	IFace%ROWTYPE;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'ifrow\tIFace%ROWTYPE' at line 1")

-----------
QUERY:

        begin
	    select into ifrow * from IFace where slotname = rec.slotlink;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'select into ifrow * from IFace where slotname = rec.slotlink' at line 2")

-----------
QUERY:

	    select into syrow * from System where name = ifrow.sysname;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'into syrow * from System where name = ifrow.sysname' at line 1")

-----------
QUERY:

	    retval := syrow.name || '' IF '';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'retval := syrow.name || '' IF ''' at line 1")

-----------
QUERY:

	    retval := retval || ifrow.ifname;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'retval := retval || ifrow.ifname' at line 1")

-----------
QUERY:

	    if syrow.comment != '''' then
	        retval := retval || '' ('';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'if syrow.comment != '''' then\n\t        retval := retval || '' (''' at line 1")

-----------
QUERY:

		retval := retval || syrow.comment;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'retval := retval || syrow.comment' at line 1")

-----------
QUERY:

		retval := retval || '')'';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'retval := retval || '')''' at line 1")

-----------
QUERY:

	    end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

	    return retval;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'return retval' at line 1")

-----------
QUERY:

	end;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end' at line 1")

-----------
QUERY:

    end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

    return rec.slotlink;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'return rec.slotlink' at line 1")

-----------
QUERY:

end;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end' at line 1")

-----------
QUERY:

' language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' language plpgsql' at line 1")

-----------
QUERY:




-- ************************************************************
-- * View of a patchfield describing backside and patches
-- ************************************************************
create view Pfield_v1 as select PF.pfname, PF.slotname,
	pslot_backlink_view(PF.slotname) as backside,
	pslot_slotlink_view(PF.slotname) as patch
    from PSlot PF;
RESULT:
	ERROR - (1305, 'FUNCTION test.pslot_backlink_view does not exist')

-----------
QUERY:



--
-- First we build the house - so we create the rooms
--
insert into Room values ('001', 'Entrance');
RESULT:
	[]

-----------
QUERY:

insert into Room values ('002', 'Office');
RESULT:
	[]

-----------
QUERY:

insert into Room values ('003', 'Office');
RESULT:
	[]

-----------
QUERY:

insert into Room values ('004', 'Technical');
RESULT:
	[]

-----------
QUERY:

insert into Room values ('101', 'Office');
RESULT:
	[]

-----------
QUERY:

insert into Room values ('102', 'Conference');
RESULT:
	[]

-----------
QUERY:

insert into Room values ('103', 'Restroom');
RESULT:
	[]

-----------
QUERY:

insert into Room values ('104', 'Technical');
RESULT:
	[]

-----------
QUERY:

insert into Room values ('105', 'Office');
RESULT:
	[]

-----------
QUERY:

insert into Room values ('106', 'Office');
RESULT:
	[]

-----------
QUERY:


--
-- Second we install the wall connectors
--
insert into WSlot values ('WS.001.1a', '001', '', '');
RESULT:
	[]

-----------
QUERY:

insert into WSlot values ('WS.001.1b', '001', '', '');
RESULT:
	[]

-----------
QUERY:

insert into WSlot values ('WS.001.2a', '001', '', '');
RESULT:
	[]

-----------
QUERY:

insert into WSlot values ('WS.001.2b', '001', '', '');
RESULT:
	[]

-----------
QUERY:

insert into WSlot values ('WS.001.3a', '001', '', '');
RESULT:
	[]

-----------
QUERY:

insert into WSlot values ('WS.001.3b', '001', '', '');
RESULT:
	[]

-----------
QUERY:


insert into WSlot values ('WS.002.1a', '002', '', '');
RESULT:
	[]

-----------
QUERY:

insert into WSlot values ('WS.002.1b', '002', '', '');
RESULT:
	[]

-----------
QUERY:

insert into WSlot values ('WS.002.2a', '002', '', '');
RESULT:
	[]

-----------
QUERY:

insert into WSlot values ('WS.002.2b', '002', '', '');
RESULT:
	[]

-----------
QUERY:

insert into WSlot values ('WS.002.3a', '002', '', '');
RESULT:
	[]

-----------
QUERY:

insert into WSlot values ('WS.002.3b', '002', '', '');
RESULT:
	[]

-----------
QUERY:


insert into WSlot values ('WS.003.1a', '003', '', '');
RESULT:
	[]

-----------
QUERY:

insert into WSlot values ('WS.003.1b', '003', '', '');
RESULT:
	[]

-----------
QUERY:

insert into WSlot values ('WS.003.2a', '003', '', '');
RESULT:
	[]

-----------
QUERY:

insert into WSlot values ('WS.003.2b', '003', '', '');
RESULT:
	[]

-----------
QUERY:

insert into WSlot values ('WS.003.3a', '003', '', '');
RESULT:
	[]

-----------
QUERY:

insert into WSlot values ('WS.003.3b', '003', '', '');
RESULT:
	[]

-----------
QUERY:


insert into WSlot values ('WS.101.1a', '101', '', '');
RESULT:
	[]

-----------
QUERY:

insert into WSlot values ('WS.101.1b', '101', '', '');
RESULT:
	[]

-----------
QUERY:

insert into WSlot values ('WS.101.2a', '101', '', '');
RESULT:
	[]

-----------
QUERY:

insert into WSlot values ('WS.101.2b', '101', '', '');
RESULT:
	[]

-----------
QUERY:

insert into WSlot values ('WS.101.3a', '101', '', '');
RESULT:
	[]

-----------
QUERY:

insert into WSlot values ('WS.101.3b', '101', '', '');
RESULT:
	[]

-----------
QUERY:


insert into WSlot values ('WS.102.1a', '102', '', '');
RESULT:
	[]

-----------
QUERY:

insert into WSlot values ('WS.102.1b', '102', '', '');
RESULT:
	[]

-----------
QUERY:

insert into WSlot values ('WS.102.2a', '102', '', '');
RESULT:
	[]

-----------
QUERY:

insert into WSlot values ('WS.102.2b', '102', '', '');
RESULT:
	[]

-----------
QUERY:

insert into WSlot values ('WS.102.3a', '102', '', '');
RESULT:
	[]

-----------
QUERY:

insert into WSlot values ('WS.102.3b', '102', '', '');
RESULT:
	[]

-----------
QUERY:


insert into WSlot values ('WS.105.1a', '105', '', '');
RESULT:
	[]

-----------
QUERY:

insert into WSlot values ('WS.105.1b', '105', '', '');
RESULT:
	[]

-----------
QUERY:

insert into WSlot values ('WS.105.2a', '105', '', '');
RESULT:
	[]

-----------
QUERY:

insert into WSlot values ('WS.105.2b', '105', '', '');
RESULT:
	[]

-----------
QUERY:

insert into WSlot values ('WS.105.3a', '105', '', '');
RESULT:
	[]

-----------
QUERY:

insert into WSlot values ('WS.105.3b', '105', '', '');
RESULT:
	[]

-----------
QUERY:


insert into WSlot values ('WS.106.1a', '106', '', '');
RESULT:
	[]

-----------
QUERY:

insert into WSlot values ('WS.106.1b', '106', '', '');
RESULT:
	[]

-----------
QUERY:

insert into WSlot values ('WS.106.2a', '106', '', '');
RESULT:
	[]

-----------
QUERY:

insert into WSlot values ('WS.106.2b', '106', '', '');
RESULT:
	[]

-----------
QUERY:

insert into WSlot values ('WS.106.3a', '106', '', '');
RESULT:
	[]

-----------
QUERY:

insert into WSlot values ('WS.106.3b', '106', '', '');
RESULT:
	[]

-----------
QUERY:


--
-- Now create the patch fields and their slots
--
insert into PField values ('PF0_1', 'Wallslots basement');
RESULT:
	[]

-----------
QUERY:


--
-- The cables for these will be made later, so they are unconnected for now
--
insert into PSlot values ('PS.base.a1', 'PF0_1', '', '');
RESULT:
	[]

-----------
QUERY:

insert into PSlot values ('PS.base.a2', 'PF0_1', '', '');
RESULT:
	[]

-----------
QUERY:

insert into PSlot values ('PS.base.a3', 'PF0_1', '', '');
RESULT:
	[]

-----------
QUERY:

insert into PSlot values ('PS.base.a4', 'PF0_1', '', '');
RESULT:
	[]

-----------
QUERY:

insert into PSlot values ('PS.base.a5', 'PF0_1', '', '');
RESULT:
	[]

-----------
QUERY:

insert into PSlot values ('PS.base.a6', 'PF0_1', '', '');
RESULT:
	[]

-----------
QUERY:


--
-- These are already wired to the wall connectors
--
insert into PSlot values ('PS.base.b1', 'PF0_1', '', 'WS.002.1a');
RESULT:
	[]

-----------
QUERY:

insert into PSlot values ('PS.base.b2', 'PF0_1', '', 'WS.002.1b');
RESULT:
	[]

-----------
QUERY:

insert into PSlot values ('PS.base.b3', 'PF0_1', '', 'WS.002.2a');
RESULT:
	[]

-----------
QUERY:

insert into PSlot values ('PS.base.b4', 'PF0_1', '', 'WS.002.2b');
RESULT:
	[]

-----------
QUERY:

insert into PSlot values ('PS.base.b5', 'PF0_1', '', 'WS.002.3a');
RESULT:
	[]

-----------
QUERY:

insert into PSlot values ('PS.base.b6', 'PF0_1', '', 'WS.002.3b');
RESULT:
	[]

-----------
QUERY:


insert into PSlot values ('PS.base.c1', 'PF0_1', '', 'WS.003.1a');
RESULT:
	[]

-----------
QUERY:

insert into PSlot values ('PS.base.c2', 'PF0_1', '', 'WS.003.1b');
RESULT:
	[]

-----------
QUERY:

insert into PSlot values ('PS.base.c3', 'PF0_1', '', 'WS.003.2a');
RESULT:
	[]

-----------
QUERY:

insert into PSlot values ('PS.base.c4', 'PF0_1', '', 'WS.003.2b');
RESULT:
	[]

-----------
QUERY:

insert into PSlot values ('PS.base.c5', 'PF0_1', '', 'WS.003.3a');
RESULT:
	[]

-----------
QUERY:

insert into PSlot values ('PS.base.c6', 'PF0_1', '', 'WS.003.3b');
RESULT:
	[]

-----------
QUERY:


--
-- This patchfield will be renamed later into PF0_2 - so its
-- slots references in pfname should follow
--
insert into PField values ('PF0_X', 'Phonelines basement');
RESULT:
	[]

-----------
QUERY:


insert into PSlot values ('PS.base.ta1', 'PF0_X', '', '');
RESULT:
	[]

-----------
QUERY:

insert into PSlot values ('PS.base.ta2', 'PF0_X', '', '');
RESULT:
	[]

-----------
QUERY:

insert into PSlot values ('PS.base.ta3', 'PF0_X', '', '');
RESULT:
	[]

-----------
QUERY:

insert into PSlot values ('PS.base.ta4', 'PF0_X', '', '');
RESULT:
	[]

-----------
QUERY:

insert into PSlot values ('PS.base.ta5', 'PF0_X', '', '');
RESULT:
	[]

-----------
QUERY:

insert into PSlot values ('PS.base.ta6', 'PF0_X', '', '');
RESULT:
	[]

-----------
QUERY:


insert into PSlot values ('PS.base.tb1', 'PF0_X', '', '');
RESULT:
	[]

-----------
QUERY:

insert into PSlot values ('PS.base.tb2', 'PF0_X', '', '');
RESULT:
	[]

-----------
QUERY:

insert into PSlot values ('PS.base.tb3', 'PF0_X', '', '');
RESULT:
	[]

-----------
QUERY:

insert into PSlot values ('PS.base.tb4', 'PF0_X', '', '');
RESULT:
	[]

-----------
QUERY:

insert into PSlot values ('PS.base.tb5', 'PF0_X', '', '');
RESULT:
	[]

-----------
QUERY:

insert into PSlot values ('PS.base.tb6', 'PF0_X', '', '');
RESULT:
	[]

-----------
QUERY:


insert into PField values ('PF1_1', 'Wallslots first floor');
RESULT:
	[]

-----------
QUERY:


insert into PSlot values ('PS.first.a1', 'PF1_1', '', 'WS.101.1a');
RESULT:
	[]

-----------
QUERY:

insert into PSlot values ('PS.first.a2', 'PF1_1', '', 'WS.101.1b');
RESULT:
	[]

-----------
QUERY:

insert into PSlot values ('PS.first.a3', 'PF1_1', '', 'WS.101.2a');
RESULT:
	[]

-----------
QUERY:

insert into PSlot values ('PS.first.a4', 'PF1_1', '', 'WS.101.2b');
RESULT:
	[]

-----------
QUERY:

insert into PSlot values ('PS.first.a5', 'PF1_1', '', 'WS.101.3a');
RESULT:
	[]

-----------
QUERY:

insert into PSlot values ('PS.first.a6', 'PF1_1', '', 'WS.101.3b');
RESULT:
	[]

-----------
QUERY:


insert into PSlot values ('PS.first.b1', 'PF1_1', '', 'WS.102.1a');
RESULT:
	[]

-----------
QUERY:

insert into PSlot values ('PS.first.b2', 'PF1_1', '', 'WS.102.1b');
RESULT:
	[]

-----------
QUERY:

insert into PSlot values ('PS.first.b3', 'PF1_1', '', 'WS.102.2a');
RESULT:
	[]

-----------
QUERY:

insert into PSlot values ('PS.first.b4', 'PF1_1', '', 'WS.102.2b');
RESULT:
	[]

-----------
QUERY:

insert into PSlot values ('PS.first.b5', 'PF1_1', '', 'WS.102.3a');
RESULT:
	[]

-----------
QUERY:

insert into PSlot values ('PS.first.b6', 'PF1_1', '', 'WS.102.3b');
RESULT:
	[]

-----------
QUERY:


insert into PSlot values ('PS.first.c1', 'PF1_1', '', 'WS.105.1a');
RESULT:
	[]

-----------
QUERY:

insert into PSlot values ('PS.first.c2', 'PF1_1', '', 'WS.105.1b');
RESULT:
	[]

-----------
QUERY:

insert into PSlot values ('PS.first.c3', 'PF1_1', '', 'WS.105.2a');
RESULT:
	[]

-----------
QUERY:

insert into PSlot values ('PS.first.c4', 'PF1_1', '', 'WS.105.2b');
RESULT:
	[]

-----------
QUERY:

insert into PSlot values ('PS.first.c5', 'PF1_1', '', 'WS.105.3a');
RESULT:
	[]

-----------
QUERY:

insert into PSlot values ('PS.first.c6', 'PF1_1', '', 'WS.105.3b');
RESULT:
	[]

-----------
QUERY:


insert into PSlot values ('PS.first.d1', 'PF1_1', '', 'WS.106.1a');
RESULT:
	[]

-----------
QUERY:

insert into PSlot values ('PS.first.d2', 'PF1_1', '', 'WS.106.1b');
RESULT:
	[]

-----------
QUERY:

insert into PSlot values ('PS.first.d3', 'PF1_1', '', 'WS.106.2a');
RESULT:
	[]

-----------
QUERY:

insert into PSlot values ('PS.first.d4', 'PF1_1', '', 'WS.106.2b');
RESULT:
	[]

-----------
QUERY:

insert into PSlot values ('PS.first.d5', 'PF1_1', '', 'WS.106.3a');
RESULT:
	[]

-----------
QUERY:

insert into PSlot values ('PS.first.d6', 'PF1_1', '', 'WS.106.3b');
RESULT:
	[]

-----------
QUERY:


--
-- Now we wire the wall connectors 1a-2a in room 001 to the
-- patchfield. In the second update we make an error, and
-- correct it after
--
update PSlot set backlink = 'WS.001.1a' where slotname = 'PS.base.a1';
RESULT:
	[]

-----------
QUERY:

update PSlot set backlink = 'WS.001.1b' where slotname = 'PS.base.a3';
RESULT:
	[]

-----------
QUERY:

select * from WSlot where roomno = '001' order by slotname;
RESULT:
	(('WS.001.1a', '001', '', ''), ('WS.001.1b', '001', '', ''), ('WS.001.2a', '001', '', ''), ('WS.001.2b', '001', '', ''), ('WS.001.3a', '001', '', ''), ('WS.001.3b', '001', '', ''))

-----------
QUERY:

select * from PSlot where slotname ~ 'PS.base.a' order by slotname;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '~ 'PS.base.a' order by slotname' at line 1")

-----------
QUERY:

update PSlot set backlink = 'WS.001.2a' where slotname = 'PS.base.a3';
RESULT:
	[]

-----------
QUERY:

select * from WSlot where roomno = '001' order by slotname;
RESULT:
	(('WS.001.1a', '001', '', ''), ('WS.001.1b', '001', '', ''), ('WS.001.2a', '001', '', ''), ('WS.001.2b', '001', '', ''), ('WS.001.3a', '001', '', ''), ('WS.001.3b', '001', '', ''))

-----------
QUERY:

select * from PSlot where slotname ~ 'PS.base.a' order by slotname;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '~ 'PS.base.a' order by slotname' at line 1")

-----------
QUERY:

update PSlot set backlink = 'WS.001.1b' where slotname = 'PS.base.a2';
RESULT:
	[]

-----------
QUERY:

select * from WSlot where roomno = '001' order by slotname;
RESULT:
	(('WS.001.1a', '001', '', ''), ('WS.001.1b', '001', '', ''), ('WS.001.2a', '001', '', ''), ('WS.001.2b', '001', '', ''), ('WS.001.3a', '001', '', ''), ('WS.001.3b', '001', '', ''))

-----------
QUERY:

select * from PSlot where slotname ~ 'PS.base.a' order by slotname;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '~ 'PS.base.a' order by slotname' at line 1")

-----------
QUERY:


--
-- Same procedure for 2b-3b but this time updating the WSlot instead
-- of the PSlot. Due to the triggers the result is the same:
-- WSlot and corresponding PSlot point to each other.
--
update WSlot set backlink = 'PS.base.a4' where slotname = 'WS.001.2b';
RESULT:
	[]

-----------
QUERY:

update WSlot set backlink = 'PS.base.a6' where slotname = 'WS.001.3a';
RESULT:
	[]

-----------
QUERY:

select * from WSlot where roomno = '001' order by slotname;
RESULT:
	(('WS.001.1a', '001', '', ''), ('WS.001.1b', '001', '', ''), ('WS.001.2a', '001', '', ''), ('WS.001.2b', '001', '', 'PS.base.a4'), ('WS.001.3a', '001', '', 'PS.base.a6'), ('WS.001.3b', '001', '', ''))

-----------
QUERY:

select * from PSlot where slotname ~ 'PS.base.a' order by slotname;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '~ 'PS.base.a' order by slotname' at line 1")

-----------
QUERY:

update WSlot set backlink = 'PS.base.a6' where slotname = 'WS.001.3b';
RESULT:
	[]

-----------
QUERY:

select * from WSlot where roomno = '001' order by slotname;
RESULT:
	(('WS.001.1a', '001', '', ''), ('WS.001.1b', '001', '', ''), ('WS.001.2a', '001', '', ''), ('WS.001.2b', '001', '', 'PS.base.a4'), ('WS.001.3a', '001', '', 'PS.base.a6'), ('WS.001.3b', '001', '', 'PS.base.a6'))

-----------
QUERY:

select * from PSlot where slotname ~ 'PS.base.a' order by slotname;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '~ 'PS.base.a' order by slotname' at line 1")

-----------
QUERY:

update WSlot set backlink = 'PS.base.a5' where slotname = 'WS.001.3a';
RESULT:
	[]

-----------
QUERY:

select * from WSlot where roomno = '001' order by slotname;
RESULT:
	(('WS.001.1a', '001', '', ''), ('WS.001.1b', '001', '', ''), ('WS.001.2a', '001', '', ''), ('WS.001.2b', '001', '', 'PS.base.a4'), ('WS.001.3a', '001', '', 'PS.base.a5'), ('WS.001.3b', '001', '', 'PS.base.a6'))

-----------
QUERY:

select * from PSlot where slotname ~ 'PS.base.a' order by slotname;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '~ 'PS.base.a' order by slotname' at line 1")

-----------
QUERY:


insert into PField values ('PF1_2', 'Phonelines first floor');
RESULT:
	[]

-----------
QUERY:


insert into PSlot values ('PS.first.ta1', 'PF1_2', '', '');
RESULT:
	[]

-----------
QUERY:

insert into PSlot values ('PS.first.ta2', 'PF1_2', '', '');
RESULT:
	[]

-----------
QUERY:

insert into PSlot values ('PS.first.ta3', 'PF1_2', '', '');
RESULT:
	[]

-----------
QUERY:

insert into PSlot values ('PS.first.ta4', 'PF1_2', '', '');
RESULT:
	[]

-----------
QUERY:

insert into PSlot values ('PS.first.ta5', 'PF1_2', '', '');
RESULT:
	[]

-----------
QUERY:

insert into PSlot values ('PS.first.ta6', 'PF1_2', '', '');
RESULT:
	[]

-----------
QUERY:


insert into PSlot values ('PS.first.tb1', 'PF1_2', '', '');
RESULT:
	[]

-----------
QUERY:

insert into PSlot values ('PS.first.tb2', 'PF1_2', '', '');
RESULT:
	[]

-----------
QUERY:

insert into PSlot values ('PS.first.tb3', 'PF1_2', '', '');
RESULT:
	[]

-----------
QUERY:

insert into PSlot values ('PS.first.tb4', 'PF1_2', '', '');
RESULT:
	[]

-----------
QUERY:

insert into PSlot values ('PS.first.tb5', 'PF1_2', '', '');
RESULT:
	[]

-----------
QUERY:

insert into PSlot values ('PS.first.tb6', 'PF1_2', '', '');
RESULT:
	[]

-----------
QUERY:


--
-- Fix the wrong name for patchfield PF0_2
--
update PField set name = 'PF0_2' where name = 'PF0_X';
RESULT:
	[]

-----------
QUERY:


select * from PSlot order by slotname;
RESULT:
	(('PS.base.a1', 'PF0_1', '', 'WS.001.1a'), ('PS.base.a2', 'PF0_1', '', 'WS.001.1b'), ('PS.base.a3', 'PF0_1', '', 'WS.001.2a'), ('PS.base.a4', 'PF0_1', '', ''), ('PS.base.a5', 'PF0_1', '', ''), ('PS.base.a6', 'PF0_1', '', ''), ('PS.base.b1', 'PF0_1', '', 'WS.002.1a'), ('PS.base.b2', 'PF0_1', '', 'WS.002.1b'), ('PS.base.b3', 'PF0_1', '', 'WS.002.2a'), ('PS.base.b4', 'PF0_1', '', 'WS.002.2b'), ('PS.base.b5', 'PF0_1', '', 'WS.002.3a'), ('PS.base.b6', 'PF0_1', '', 'WS.002.3b'), ('PS.base.c1', 'PF0_1', '', 'WS.003.1a'), ('PS.base.c2', 'PF0_1', '', 'WS.003.1b'), ('PS.base.c3', 'PF0_1', '', 'WS.003.2a'), ('PS.base.c4', 'PF0_1', '', 'WS.003.2b'), ('PS.base.c5', 'PF0_1', '', 'WS.003.3a'), ('PS.base.c6', 'PF0_1', '', 'WS.003.3b'), ('PS.base.ta1', 'PF0_X', '', ''), ('PS.base.ta2', 'PF0_X', '', ''), ('PS.base.ta3', 'PF0_X', '', ''), ('PS.base.ta4', 'PF0_X', '', ''), ('PS.base.ta5', 'PF0_X', '', ''), ('PS.base.ta6', 'PF0_X', '', ''), ('PS.base.tb1', 'PF0_X', '', ''), ('PS.base.tb2', 'PF0_X', '', ''), ('PS.base.tb3', 'PF0_X', '', ''), ('PS.base.tb4', 'PF0_X', '', ''), ('PS.base.tb5', 'PF0_X', '', ''), ('PS.base.tb6', 'PF0_X', '', ''), ('PS.first.a1', 'PF1_1', '', 'WS.101.1a'), ('PS.first.a2', 'PF1_1', '', 'WS.101.1b'), ('PS.first.a3', 'PF1_1', '', 'WS.101.2a'), ('PS.first.a4', 'PF1_1', '', 'WS.101.2b'), ('PS.first.a5', 'PF1_1', '', 'WS.101.3a'), ('PS.first.a6', 'PF1_1', '', 'WS.101.3b'), ('PS.first.b1', 'PF1_1', '', 'WS.102.1a'), ('PS.first.b2', 'PF1_1', '', 'WS.102.1b'), ('PS.first.b3', 'PF1_1', '', 'WS.102.2a'), ('PS.first.b4', 'PF1_1', '', 'WS.102.2b'), ('PS.first.b5', 'PF1_1', '', 'WS.102.3a'), ('PS.first.b6', 'PF1_1', '', 'WS.102.3b'), ('PS.first.c1', 'PF1_1', '', 'WS.105.1a'), ('PS.first.c2', 'PF1_1', '', 'WS.105.1b'), ('PS.first.c3', 'PF1_1', '', 'WS.105.2a'), ('PS.first.c4', 'PF1_1', '', 'WS.105.2b'), ('PS.first.c5', 'PF1_1', '', 'WS.105.3a'), ('PS.first.c6', 'PF1_1', '', 'WS.105.3b'), ('PS.first.d1', 'PF1_1', '', 'WS.106.1a'), ('PS.first.d2', 'PF1_1', '', 'WS.106.1b'), ('PS.first.d3', 'PF1_1', '', 'WS.106.2a'), ('PS.first.d4', 'PF1_1', '', 'WS.106.2b'), ('PS.first.d5', 'PF1_1', '', 'WS.106.3a'), ('PS.first.d6', 'PF1_1', '', 'WS.106.3b'), ('PS.first.ta1', 'PF1_2', '', ''), ('PS.first.ta2', 'PF1_2', '', ''), ('PS.first.ta3', 'PF1_2', '', ''), ('PS.first.ta4', 'PF1_2', '', ''), ('PS.first.ta5', 'PF1_2', '', ''), ('PS.first.ta6', 'PF1_2', '', ''), ('PS.first.tb1', 'PF1_2', '', ''), ('PS.first.tb2', 'PF1_2', '', ''), ('PS.first.tb3', 'PF1_2', '', ''), ('PS.first.tb4', 'PF1_2', '', ''), ('PS.first.tb5', 'PF1_2', '', ''), ('PS.first.tb6', 'PF1_2', '', ''))

-----------
QUERY:

select * from WSlot order by slotname;
RESULT:
	(('WS.001.1a', '001', '', ''), ('WS.001.1b', '001', '', ''), ('WS.001.2a', '001', '', ''), ('WS.001.2b', '001', '', 'PS.base.a4'), ('WS.001.3a', '001', '', 'PS.base.a5'), ('WS.001.3b', '001', '', 'PS.base.a6'), ('WS.002.1a', '002', '', ''), ('WS.002.1b', '002', '', ''), ('WS.002.2a', '002', '', ''), ('WS.002.2b', '002', '', ''), ('WS.002.3a', '002', '', ''), ('WS.002.3b', '002', '', ''), ('WS.003.1a', '003', '', ''), ('WS.003.1b', '003', '', ''), ('WS.003.2a', '003', '', ''), ('WS.003.2b', '003', '', ''), ('WS.003.3a', '003', '', ''), ('WS.003.3b', '003', '', ''), ('WS.101.1a', '101', '', ''), ('WS.101.1b', '101', '', ''), ('WS.101.2a', '101', '', ''), ('WS.101.2b', '101', '', ''), ('WS.101.3a', '101', '', ''), ('WS.101.3b', '101', '', ''), ('WS.102.1a', '102', '', ''), ('WS.102.1b', '102', '', ''), ('WS.102.2a', '102', '', ''), ('WS.102.2b', '102', '', ''), ('WS.102.3a', '102', '', ''), ('WS.102.3b', '102', '', ''), ('WS.105.1a', '105', '', ''), ('WS.105.1b', '105', '', ''), ('WS.105.2a', '105', '', ''), ('WS.105.2b', '105', '', ''), ('WS.105.3a', '105', '', ''), ('WS.105.3b', '105', '', ''), ('WS.106.1a', '106', '', ''), ('WS.106.1b', '106', '', ''), ('WS.106.2a', '106', '', ''), ('WS.106.2b', '106', '', ''), ('WS.106.3a', '106', '', ''), ('WS.106.3b', '106', '', ''))

-----------
QUERY:


--
-- Install the central phone system and create the phone numbers.
-- They are wired on insert to the patchfields. Again the
-- triggers automatically tell the PSlots to update their
-- backlink field.
--
insert into PLine values ('PL.001', '-0', 'Central call', 'PS.base.ta1');
RESULT:
	[]

-----------
QUERY:

insert into PLine values ('PL.002', '-101', '', 'PS.base.ta2');
RESULT:
	[]

-----------
QUERY:

insert into PLine values ('PL.003', '-102', '', 'PS.base.ta3');
RESULT:
	[]

-----------
QUERY:

insert into PLine values ('PL.004', '-103', '', 'PS.base.ta5');
RESULT:
	[]

-----------
QUERY:

insert into PLine values ('PL.005', '-104', '', 'PS.base.ta6');
RESULT:
	[]

-----------
QUERY:

insert into PLine values ('PL.006', '-106', '', 'PS.base.tb2');
RESULT:
	[]

-----------
QUERY:

insert into PLine values ('PL.007', '-108', '', 'PS.base.tb3');
RESULT:
	[]

-----------
QUERY:

insert into PLine values ('PL.008', '-109', '', 'PS.base.tb4');
RESULT:
	[]

-----------
QUERY:

insert into PLine values ('PL.009', '-121', '', 'PS.base.tb5');
RESULT:
	[]

-----------
QUERY:

insert into PLine values ('PL.010', '-122', '', 'PS.base.tb6');
RESULT:
	[]

-----------
QUERY:

insert into PLine values ('PL.015', '-134', '', 'PS.first.ta1');
RESULT:
	[]

-----------
QUERY:

insert into PLine values ('PL.016', '-137', '', 'PS.first.ta3');
RESULT:
	[]

-----------
QUERY:

insert into PLine values ('PL.017', '-139', '', 'PS.first.ta4');
RESULT:
	[]

-----------
QUERY:

insert into PLine values ('PL.018', '-362', '', 'PS.first.tb1');
RESULT:
	[]

-----------
QUERY:

insert into PLine values ('PL.019', '-363', '', 'PS.first.tb2');
RESULT:
	[]

-----------
QUERY:

insert into PLine values ('PL.020', '-364', '', 'PS.first.tb3');
RESULT:
	[]

-----------
QUERY:

insert into PLine values ('PL.021', '-365', '', 'PS.first.tb5');
RESULT:
	[]

-----------
QUERY:

insert into PLine values ('PL.022', '-367', '', 'PS.first.tb6');
RESULT:
	[]

-----------
QUERY:

insert into PLine values ('PL.028', '-501', 'Fax entrance', 'PS.base.ta2');
RESULT:
	[]

-----------
QUERY:

insert into PLine values ('PL.029', '-502', 'Fax first floor', 'PS.first.ta1');
RESULT:
	[]

-----------
QUERY:


--
-- Buy some phones, plug them into the wall and patch the
-- phone lines to the corresponding patchfield slots.
--
insert into PHone values ('PH.hc001', 'Hicom standard', 'WS.001.1a');
RESULT:
	[]

-----------
QUERY:

update PSlot set slotlink = 'PS.base.ta1' where slotname = 'PS.base.a1';
RESULT:
	[]

-----------
QUERY:

insert into PHone values ('PH.hc002', 'Hicom standard', 'WS.002.1a');
RESULT:
	[]

-----------
QUERY:

update PSlot set slotlink = 'PS.base.ta5' where slotname = 'PS.base.b1';
RESULT:
	[]

-----------
QUERY:

insert into PHone values ('PH.hc003', 'Hicom standard', 'WS.002.2a');
RESULT:
	[]

-----------
QUERY:

update PSlot set slotlink = 'PS.base.tb2' where slotname = 'PS.base.b3';
RESULT:
	[]

-----------
QUERY:

insert into PHone values ('PH.fax001', 'Canon fax', 'WS.001.2a');
RESULT:
	[]

-----------
QUERY:

update PSlot set slotlink = 'PS.base.ta2' where slotname = 'PS.base.a3';
RESULT:
	[]

-----------
QUERY:


--
-- Install a hub at one of the patchfields, plug a computers
-- ethernet interface into the wall and patch it to the hub.
--
insert into Hub values ('base.hub1', 'Patchfield PF0_1 hub', 16);
RESULT:
	[]

-----------
QUERY:

insert into System values ('orion', 'PC');
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'System values ('orion', 'PC')' at line 1")

-----------
QUERY:

insert into IFace values ('IF', 'orion', 'eth0', 'WS.002.1b');
RESULT:
	[]

-----------
QUERY:

update PSlot set slotlink = 'HS.base.hub1.1' where slotname = 'PS.base.b2';
RESULT:
	[]

-----------
QUERY:


--
-- Now we take a look at the patchfield
--
select * from PField_v1 where pfname = 'PF0_1' order by slotname;
RESULT:
	ERROR - (1146, "Table 'test.PField_v1' doesn't exist")

-----------
QUERY:

select * from PField_v1 where pfname = 'PF0_2' order by slotname;
RESULT:
	ERROR - (1146, "Table 'test.PField_v1' doesn't exist")

-----------
QUERY:


--
-- Finally we want errors
--
insert into PField values ('PF1_1', 'should fail due to unique index');
RESULT:
	[]

-----------
QUERY:

update PSlot set backlink = 'WS.not.there' where slotname = 'PS.base.a1';
RESULT:
	[]

-----------
QUERY:

update PSlot set backlink = 'XX.illegal' where slotname = 'PS.base.a1';
RESULT:
	[]

-----------
QUERY:

update PSlot set slotlink = 'PS.not.there' where slotname = 'PS.base.a1';
RESULT:
	[]

-----------
QUERY:

update PSlot set slotlink = 'XX.illegal' where slotname = 'PS.base.a1';
RESULT:
	[]

-----------
QUERY:

insert into HSlot values ('HS', 'base.hub1', 1, '');
RESULT:
	[]

-----------
QUERY:

insert into HSlot values ('HS', 'base.hub1', 20, '');
RESULT:
	[]

-----------
QUERY:

delete from HSlot;
RESULT:
	[]

-----------
QUERY:

insert into IFace values ('IF', 'notthere', 'eth0', '');
RESULT:
	[]

-----------
QUERY:

insert into IFace values ('IF', 'orion', 'ethernet_interface_name_too_long', '');
RESULT:
	[]

-----------
QUERY:



--
-- The following tests are unrelated to the scenario outlined above /* REPLACED */ ,
-- they merely exercise specific parts of PL/pgSQL
--

--
-- Test recursion, per bug report 7-Sep-01
--
CREATE FUNCTION recursion_test(int,int) RETURNS text AS '
DECLARE rslt text;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'int,int) RETURNS text AS '\nDECLARE rslt text' at line 9")

-----------
QUERY:

BEGIN
    IF $1 <= 0 THEN
        rslt = CAST($2 AS TEXT);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'IF $1 <= 0 THEN\n        rslt = CAST($2 AS TEXT)' at line 2")

-----------
QUERY:

    ELSE
        rslt = CAST($1 AS TEXT) || '','' || recursion_test($1 - 1, $2);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'ELSE\n        rslt = CAST($1 AS TEXT) || '','' || recursion_test($1 - 1, $2)' at line 1")

-----------
QUERY:

    END IF;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'END IF' at line 1")

-----------
QUERY:

    RETURN rslt;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'RETURN rslt' at line 1")

-----------
QUERY:

END;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'END' at line 1")

-----------
QUERY:
' LANGUAGE plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' LANGUAGE plpgsql' at line 1")

-----------
QUERY:


SELECT recursion_test(4,3);
RESULT:
	ERROR - (1305, 'FUNCTION test.recursion_test does not exist')

-----------
QUERY:


--
-- Test the FOUND magic variable
--
CREATE TABLE found_test_tbl (a int);
RESULT:
	[]

-----------
QUERY:


create function test_found()
  returns boolean as '
  declare
  begin
  insert into found_test_tbl values (1);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'as '\n  declare\n  begin\n  insert into found_test_tbl values (1)' at line 2")

-----------
QUERY:

  if FOUND then
     insert into found_test_tbl values (2);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'if FOUND then\n     insert into found_test_tbl values (2)' at line 1")

-----------
QUERY:

  end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:


  update found_test_tbl set a = 100 where a = 1;
RESULT:
	[]

-----------
QUERY:

  if FOUND then
    insert into found_test_tbl values (3);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'if FOUND then\n    insert into found_test_tbl values (3)' at line 1")

-----------
QUERY:

  end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:


  delete from found_test_tbl where a = 9999;
RESULT:
	[]

-----------
QUERY:
 -- matches no rows
  if not FOUND then
    insert into found_test_tbl values (4);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'if not FOUND then\n    insert into found_test_tbl values (4)' at line 2")

-----------
QUERY:

  end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:


  for i in 1 .. 10 loop
    -- no need to do anything
  end loop;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'for i in 1 .. 10 loop\n    -- no need to do anything\n  end loop' at line 1")

-----------
QUERY:

  if FOUND then
    insert into found_test_tbl values (5);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'if FOUND then\n    insert into found_test_tbl values (5)' at line 1")

-----------
QUERY:

  end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:


  -- never executes the loop
  for i in 2 .. 1 loop
    -- no need to do anything
  end loop;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'for i in 2 .. 1 loop\n    -- no need to do anything\n  end loop' at line 2")

-----------
QUERY:

  if not FOUND then
    insert into found_test_tbl values (6);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'if not FOUND then\n    insert into found_test_tbl values (6)' at line 1")

-----------
QUERY:

  end if;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end if' at line 1")

-----------
QUERY:

  return true;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'return true' at line 1")

-----------
QUERY:

  end;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end' at line 1")

-----------
QUERY:
' language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' language plpgsql' at line 1")

-----------
QUERY:


select test_found();
RESULT:
	ERROR - (1305, 'FUNCTION test.test_found does not exist')

-----------
QUERY:

select * from found_test_tbl;
RESULT:
	()

-----------
QUERY:


--
-- Test set-returning functions for PL/pgSQL
--

create function test_table_func_rec() returns setof found_test_tbl as '
DECLARE
	rec RECORD;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'setof found_test_tbl as '\nDECLARE\n\trec RECORD' at line 5")

-----------
QUERY:

BEGIN
	FOR rec IN select * from found_test_tbl LOOP
		RETURN NEXT rec;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'FOR rec IN select * from found_test_tbl LOOP\n\t\tRETURN NEXT rec' at line 2")

-----------
QUERY:

	END LOOP;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'END LOOP' at line 1")

-----------
QUERY:

	RETURN;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'RETURN' at line 1")

-----------
QUERY:

END;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'END' at line 1")

-----------
QUERY:
' language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' language plpgsql' at line 1")

-----------
QUERY:


select * from test_table_func_rec();
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '()' at line 1")

-----------
QUERY:


create function test_table_func_row() returns setof found_test_tbl as '
DECLARE
	row found_test_tbl%ROWTYPE;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'setof found_test_tbl as '\nDECLARE\n\trow found_test_tbl%ROWTYPE' at line 1")

-----------
QUERY:

BEGIN
	FOR row IN select * from found_test_tbl LOOP
		RETURN NEXT row;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'FOR row IN select * from found_test_tbl LOOP\n\t\tRETURN NEXT row' at line 2")

-----------
QUERY:

	END LOOP;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'END LOOP' at line 1")

-----------
QUERY:

	RETURN;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'RETURN' at line 1")

-----------
QUERY:

END;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'END' at line 1")

-----------
QUERY:
' language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' language plpgsql' at line 1")

-----------
QUERY:


select * from test_table_func_row();
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '()' at line 1")

-----------
QUERY:


create function test_ret_set_scalar(int,int) returns setof int as '
DECLARE
	i int;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'int,int) returns setof int as '\nDECLARE\n\ti int' at line 1")

-----------
QUERY:

BEGIN
	FOR i IN $1 .. $2 LOOP
		RETURN NEXT i + 1;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'FOR i IN $1 .. $2 LOOP\n\t\tRETURN NEXT i + 1' at line 2")

-----------
QUERY:

	END LOOP;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'END LOOP' at line 1")

-----------
QUERY:

	RETURN;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'RETURN' at line 1")

-----------
QUERY:

END;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'END' at line 1")

-----------
QUERY:
' language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' language plpgsql' at line 1")

-----------
QUERY:


select * from test_ret_set_scalar(1,10);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(1,10)' at line 1")

-----------
QUERY:


create function test_ret_set_rec_dyn(int) returns setof record as '
DECLARE
	retval RECORD;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'int) returns setof record as '\nDECLARE\n\tretval RECORD' at line 1")

-----------
QUERY:

BEGIN
	IF $1 > 10 THEN
		SELECT INTO retval 5, 10, 15;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'IF $1 > 10 THEN\n\t\tSELECT INTO retval 5, 10, 15' at line 2")

-----------
QUERY:

		RETURN NEXT retval;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'RETURN NEXT retval' at line 1")

-----------
QUERY:

		RETURN NEXT retval;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'RETURN NEXT retval' at line 1")

-----------
QUERY:

	ELSE
		SELECT INTO retval 50, 5::numeric, ''xxx''::text;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'ELSE\n\t\tSELECT INTO retval 50, 5::numeric, ''xxx''::text' at line 1")

-----------
QUERY:

		RETURN NEXT retval;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'RETURN NEXT retval' at line 1")

-----------
QUERY:

		RETURN NEXT retval;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'RETURN NEXT retval' at line 1")

-----------
QUERY:

	END IF;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'END IF' at line 1")

-----------
QUERY:

	RETURN;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'RETURN' at line 1")

-----------
QUERY:

END;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'END' at line 1")

-----------
QUERY:
' language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' language plpgsql' at line 1")

-----------
QUERY:


SELECT * FROM test_ret_set_rec_dyn(1500) AS (a int, b int, c int);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(1500) AS (a int, b int, c int)' at line 1")

-----------
QUERY:

SELECT * FROM test_ret_set_rec_dyn(5) AS (a int, b numeric, c text);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(5) AS (a int, b numeric, c text)' at line 1")

-----------
QUERY:


create function test_ret_rec_dyn(int) returns record as '
DECLARE
	retval RECORD;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'int) returns record as '\nDECLARE\n\tretval RECORD' at line 1")

-----------
QUERY:

BEGIN
	IF $1 > 10 THEN
		SELECT INTO retval 5, 10, 15;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'IF $1 > 10 THEN\n\t\tSELECT INTO retval 5, 10, 15' at line 2")

-----------
QUERY:

		RETURN retval;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'RETURN retval' at line 1")

-----------
QUERY:

	ELSE
		SELECT INTO retval 50, 5::numeric, ''xxx''::text;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'ELSE\n\t\tSELECT INTO retval 50, 5::numeric, ''xxx''::text' at line 1")

-----------
QUERY:

		RETURN retval;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'RETURN retval' at line 1")

-----------
QUERY:

	END IF;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'END IF' at line 1")

-----------
QUERY:

END;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'END' at line 1")

-----------
QUERY:
' language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' language plpgsql' at line 1")

-----------
QUERY:


SELECT * FROM test_ret_rec_dyn(1500) AS (a int, b int, c int);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(1500) AS (a int, b int, c int)' at line 1")

-----------
QUERY:

SELECT * FROM test_ret_rec_dyn(5) AS (a int, b numeric, c text);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(5) AS (a int, b numeric, c text)' at line 1")

-----------
QUERY:


--
-- Test some simple polymorphism cases.
--

create function f1(x anyelement) returns anyelement as $$
begin
  return x + 1;
end$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'anyelement) returns anyelement as $$\nbegin\n  return x + 1;\nend$$ language plpgsq' at line 5")

-----------
QUERY:


select f1(42) as int, f1(4.5) as num;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'int, f1(4.5) as num' at line 1")

-----------
QUERY:

select f1(point(3,4));
RESULT:
	ERROR - (1305, 'FUNCTION test.f1 does not exist')

-----------
QUERY:
  -- fail for lack of + operator

drop function f1(x anyelement);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(x anyelement)' at line 3")

-----------
QUERY:


create function f1(x anyelement) returns anyarray as $$
begin
  return array[x + 1, x + 2];
end$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'anyelement) returns anyarray as $$\nbegin\n  return array[x + 1, x + 2];\nend$$ lan' at line 1")

-----------
QUERY:


select f1(42) as int, f1(4.5) as num;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'int, f1(4.5) as num' at line 1")

-----------
QUERY:


drop function f1(x anyelement);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(x anyelement)' at line 1")

-----------
QUERY:


create function f1(x anyarray) returns anyelement as $$
begin
  return x[1];
end$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'anyarray) returns anyelement as $$\nbegin\n  return x[1];\nend$$ language plpgsql' at line 1")

-----------
QUERY:


select f1(array[2,4]) as int, f1(array[4.5, 7.7]) as num;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '[2,4]) as int, f1(array[4.5, 7.7]) as num' at line 1")

-----------
QUERY:


select f1(stavalues1) from pg_statistic;
RESULT:
	ERROR - (1146, "Table 'test.pg_statistic' doesn't exist")

-----------
QUERY:
  -- fail, can/* REPLACED */ ''t infer element type

drop function f1(x anyarray);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(x anyarray)' at line 3")

-----------
QUERY:


create function f1(x anyarray) returns anyarray as $$
begin
  return x;
end$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'anyarray) returns anyarray as $$\nbegin\n  return x;\nend$$ language plpgsql' at line 1")

-----------
QUERY:


select f1(array[2,4]) as int, f1(array[4.5, 7.7]) as num;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '[2,4]) as int, f1(array[4.5, 7.7]) as num' at line 1")

-----------
QUERY:


select f1(stavalues1) from pg_statistic;
RESULT:
	ERROR - (1146, "Table 'test.pg_statistic' doesn't exist")

-----------
QUERY:
  -- fail, can/* REPLACED */ ''t infer element type

drop function f1(x anyarray);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(x anyarray)' at line 3")

-----------
QUERY:


-- fail, can/* REPLACED */ ''t infer type:
create function f1(x anyelement) returns anyrange as $$
begin
  return array[x + 1, x + 2];
end$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'anyelement) returns anyrange as $$\nbegin\n  return array[x + 1, x + 2];\nend$$ lan' at line 2")

-----------
QUERY:


create function f1(x anyrange) returns anyarray as $$
begin
  return array[lower(x), upper(x)];
end$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'anyrange) returns anyarray as $$\nbegin\n  return array[lower(x), upper(x)];\nend$$' at line 1")

-----------
QUERY:


select f1(int4range(42, 49)) as int, f1(float8range(4.5, 7.8)) as num;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'int, f1(float8range(4.5, 7.8)) as num' at line 1")

-----------
QUERY:


drop function f1(x anyrange);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(x anyrange)' at line 1")

-----------
QUERY:


create function f1(x anycompatible, y anycompatible) returns anycompatiblearray as $$
begin
  return array[x, y];
end$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'anycompatible, y anycompatible) returns anycompatiblearray as $$\nbegin\n  return ' at line 1")

-----------
QUERY:


select f1(2, 4) as int, f1(2, 4.5) as num;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'int, f1(2, 4.5) as num' at line 1")

-----------
QUERY:


drop function f1(x anycompatible, y anycompatible);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(x anycompatible, y anycompatible)' at line 1")

-----------
QUERY:


create function f1(x anycompatiblerange, y anycompatible, z anycompatible) returns anycompatiblearray as $$
begin
  return array[lower(x), upper(x), y, z];
end$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'anycompatiblerange, y anycompatible, z anycompatible) returns anycompatiblearray' at line 1")

-----------
QUERY:


select f1(int4range(42, 49), 11, 2::smallint) as int, f1(float8range(4.5, 7.8), 7.8, 11::real) as num;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::smallint) as int, f1(float8range(4.5, 7.8), 7.8, 11::real) as num' at line 1")

-----------
QUERY:


select f1(int4range(42, 49), 11, 4.5) as fail;
RESULT:
	ERROR - (1305, 'FUNCTION test.f1 does not exist')

-----------
QUERY:
  -- range type doesn/* REPLACED */ ''t fit

drop function f1(x anycompatiblerange, y anycompatible, z anycompatible);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(x anycompatiblerange, y anycompatible, z anycompatible)' at line 3")

-----------
QUERY:


-- fail, can/* REPLACED */ ''t infer type:
create function f1(x anycompatible) returns anycompatiblerange as $$
begin
  return array[x + 1, x + 2];
end$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'anycompatible) returns anycompatiblerange as $$\nbegin\n  return array[x + 1, x + ' at line 2")

-----------
QUERY:


create function f1(x anycompatiblerange, y anycompatiblearray) returns anycompatiblerange as $$
begin
  return x;
end$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'anycompatiblerange, y anycompatiblearray) returns anycompatiblerange as $$\nbegin' at line 1")

-----------
QUERY:


select f1(int4range(42, 49), array[11]) as int, f1(float8range(4.5, 7.8), array[7]) as num;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '[11]) as int, f1(float8range(4.5, 7.8), array[7]) as num' at line 1")

-----------
QUERY:


drop function f1(x anycompatiblerange, y anycompatiblearray);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(x anycompatiblerange, y anycompatiblearray)' at line 1")

-----------
QUERY:


create function f1(a anyelement, b anyarray,
                   c anycompatible, d anycompatible,
                   OUT x anyarray, OUT y anycompatiblearray)
as $$
begin
  x := a || b;
  y := array[c, d];
end$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'anyelement, b anyarray,\n                   c anycompatible, d anycompatible,\n   ' at line 1")

-----------
QUERY:


select x, pg_typeof(x), y, pg_typeof(y)
  from f1(11, array[1, 2], 42, 34.5);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(11, array[1, 2], 42, 34.5)' at line 2")

-----------
QUERY:

select x, pg_typeof(x), y, pg_typeof(y)
  from f1(11, array[1, 2], point(1,2), point(3,4));
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(11, array[1, 2], point(1,2), point(3,4))' at line 2")

-----------
QUERY:

select x, pg_typeof(x), y, pg_typeof(y)
  from f1(11, '{1,2}', point(1,2), '(3,4)');
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(11, '{1,2}', point(1,2), '(3,4)')' at line 2")

-----------
QUERY:

select x, pg_typeof(x), y, pg_typeof(y)
  from f1(11, array[1, 2.2], 42, 34.5);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(11, array[1, 2.2], 42, 34.5)' at line 2")

-----------
QUERY:
  -- fail

drop function f1(a anyelement, b anyarray,
                 c anycompatible, d anycompatible);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(a anyelement, b anyarray,\n                 c anycompatible, d anycompatible)' at line 3")

-----------
QUERY:


--
-- Test handling of OUT parameters, including polymorphic cases.
-- Note that RETURN is optional with OUT params /* REPLACED */ , we try both ways.
--

-- wrong way to do it:
create function f1(in i int, out j int) returns int as $$
begin
  return i+1;
end$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'in i int, out j int) returns int as $$\nbegin\n  return i+1;\nend$$ language plpgsq' at line 7")

-----------
QUERY:


create function f1(in i int, out j int) as $$
begin
  j := i+1;
  return;
end$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'in i int, out j int) as $$\nbegin\n  j := i+1;\n  return;\nend$$ language plpgsql' at line 1")

-----------
QUERY:


select f1(42);
RESULT:
	ERROR - (1305, 'FUNCTION test.f1 does not exist')

-----------
QUERY:

select * from f1(42);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(42)' at line 1")

-----------
QUERY:


create or replace function f1(inout i int) as $$
begin
  i := i+1;
end$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'function f1(inout i int) as $$\nbegin\n  i := i+1;\nend$$ language plpgsql' at line 1")

-----------
QUERY:


select f1(42);
RESULT:
	ERROR - (1305, 'FUNCTION test.f1 does not exist')

-----------
QUERY:

select * from f1(42);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(42)' at line 1")

-----------
QUERY:


drop function f1(int);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(int)' at line 1")

-----------
QUERY:


create function f1(in i int, out j int) returns setof int as $$
begin
  j := i+1;
  return next;
  j := i+2;
  return next;
  return;
end$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'in i int, out j int) returns setof int as $$\nbegin\n  j := i+1;\n  return next;\n  ' at line 1")

-----------
QUERY:


select * from f1(42);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(42)' at line 1")

-----------
QUERY:


drop function f1(int);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(int)' at line 1")

-----------
QUERY:


create function f1(in i int, out j int, out k text) as $$
begin
  j := i;
  j := j+1;
  k := 'foo';
end$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'in i int, out j int, out k text) as $$\nbegin\n  j := i;\n  j := j+1;\n  k := 'foo';' at line 1")

-----------
QUERY:


select f1(42);
RESULT:
	ERROR - (1305, 'FUNCTION test.f1 does not exist')

-----------
QUERY:

select * from f1(42);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(42)' at line 1")

-----------
QUERY:


drop function f1(int);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(int)' at line 1")

-----------
QUERY:


create function f1(in i int, out j int, out k text) returns setof record as $$
begin
  j := i+1;
  k := 'foo';
  return next;
  j := j+1;
  k := 'foot';
  return next;
end$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'in i int, out j int, out k text) returns setof record as $$\nbegin\n  j := i+1;\n  ' at line 1")

-----------
QUERY:


select * from f1(42);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(42)' at line 1")

-----------
QUERY:


drop function f1(int);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(int)' at line 1")

-----------
QUERY:


create function duplic(in i anyelement, out j anyelement, out k anyarray) as $$
begin
  j := i;
  k := array[j,j];
  return;
end$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'in i anyelement, out j anyelement, out k anyarray) as $$\nbegin\n  j := i;\n  k := ' at line 1")

-----------
QUERY:


select * from duplic(42);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(42)' at line 1")

-----------
QUERY:

select * from duplic('foo'::text);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '('foo'::text)' at line 1")

-----------
QUERY:


drop function duplic(anyelement);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(anyelement)' at line 1")

-----------
QUERY:


create function duplic(in i anycompatiblerange, out j anycompatible, out k anycompatiblearray) as $$
begin
  j := lower(i);
  k := array[lower(i),upper(i)];
  return;
end$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'in i anycompatiblerange, out j anycompatible, out k anycompatiblearray) as $$\nbe' at line 1")

-----------
QUERY:


select * from duplic(int4range(42,49));
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(int4range(42,49))' at line 1")

-----------
QUERY:

select * from duplic(textrange('aaa', 'bbb'));
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(textrange('aaa', 'bbb'))' at line 1")

-----------
QUERY:


drop function duplic(anycompatiblerange);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(anycompatiblerange)' at line 1")

-----------
QUERY:


--
-- test PERFORM
--

create table perform_test (
	a	INT,
	b	INT
);
RESULT:
	[]

-----------
QUERY:


create function perform_simple_func(int) returns boolean as '
BEGIN
	IF $1 < 20 THEN
		INSERT INTO perform_test VALUES ($1, $1 + 10);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'int) returns boolean as '\nBEGIN\n\tIF $1 < 20 THEN\n\t\tINSERT INTO perform_test VALU' at line 1")

-----------
QUERY:

		RETURN TRUE;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'RETURN TRUE' at line 1")

-----------
QUERY:

	ELSE
		RETURN FALSE;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'ELSE\n\t\tRETURN FALSE' at line 1")

-----------
QUERY:

	END IF;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'END IF' at line 1")

-----------
QUERY:

END;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'END' at line 1")

-----------
QUERY:
' language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' language plpgsql' at line 1")

-----------
QUERY:


create function perform_test_func() returns void as '
BEGIN
	IF FOUND then
		INSERT INTO perform_test VALUES (100, 100);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'void as '\nBEGIN\n\tIF FOUND then\n\t\tINSERT INTO perform_test VALUES (100, 100)' at line 1")

-----------
QUERY:

	END IF;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'END IF' at line 1")

-----------
QUERY:


	PERFORM perform_simple_func(5);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'PERFORM perform_simple_func(5)' at line 1")

-----------
QUERY:


	IF FOUND then
		INSERT INTO perform_test VALUES (100, 100);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'IF FOUND then\n\t\tINSERT INTO perform_test VALUES (100, 100)' at line 1")

-----------
QUERY:

	END IF;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'END IF' at line 1")

-----------
QUERY:


	PERFORM perform_simple_func(50);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'PERFORM perform_simple_func(50)' at line 1")

-----------
QUERY:


	IF FOUND then
		INSERT INTO perform_test VALUES (100, 100);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'IF FOUND then\n\t\tINSERT INTO perform_test VALUES (100, 100)' at line 1")

-----------
QUERY:

	END IF;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'END IF' at line 1")

-----------
QUERY:


	RETURN;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'RETURN' at line 1")

-----------
QUERY:

END;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'END' at line 1")

-----------
QUERY:
' language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' language plpgsql' at line 1")

-----------
QUERY:


SELECT perform_test_func();
RESULT:
	ERROR - (1305, 'FUNCTION test.perform_test_func does not exist')

-----------
QUERY:

SELECT * FROM perform_test;
RESULT:
	()

-----------
QUERY:


drop table perform_test;
RESULT:
	[]

-----------
QUERY:


--
-- Test proper snapshot handling in simple expressions
--

create temp table users(login text, id serial);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'temp table users(login text, id serial)' at line 5")

-----------
QUERY:


create function sp_id_user(a_login text) returns int as $$
declare x int;
begin
  select into x id from users where login = a_login;
  if found then return x; end if;
  return 0;
end$$ language plpgsql stable;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'as $$\ndeclare x int;\nbegin\n  select into x id from users where login = a_login;\n' at line 1")

-----------
QUERY:


insert into users values('user1');
RESULT:
	ERROR - (1146, "Table 'test.users' doesn't exist")

-----------
QUERY:


select sp_id_user('user1');
RESULT:
	ERROR - (1305, 'FUNCTION test.sp_id_user does not exist')

-----------
QUERY:

select sp_id_user('userx');
RESULT:
	ERROR - (1305, 'FUNCTION test.sp_id_user does not exist')

-----------
QUERY:


create function sp_add_user(a_login text) returns int as $$
declare my_id_user int;
begin
  my_id_user = sp_id_user( a_login );
  IF  my_id_user > 0 THEN
    RETURN -1;  -- error code for existing user
  END IF;
  INSERT INTO users ( login ) VALUES ( a_login );
  my_id_user = sp_id_user( a_login );
  IF  my_id_user = 0 THEN
    RETURN -2;  -- error code for insertion failure
  END IF;
  RETURN my_id_user;
end$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'as $$\ndeclare my_id_user int;\nbegin\n  my_id_user = sp_id_user( a_login );\n  IF  ' at line 1")

-----------
QUERY:


select sp_add_user('user1');
RESULT:
	ERROR - (1305, 'FUNCTION test.sp_add_user does not exist')

-----------
QUERY:

select sp_add_user('user2');
RESULT:
	ERROR - (1305, 'FUNCTION test.sp_add_user does not exist')

-----------
QUERY:

select sp_add_user('user2');
RESULT:
	ERROR - (1305, 'FUNCTION test.sp_add_user does not exist')

-----------
QUERY:

select sp_add_user('user3');
RESULT:
	ERROR - (1305, 'FUNCTION test.sp_add_user does not exist')

-----------
QUERY:

select sp_add_user('user3');
RESULT:
	ERROR - (1305, 'FUNCTION test.sp_add_user does not exist')

-----------
QUERY:


drop function sp_add_user(text);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(text)' at line 1")

-----------
QUERY:

drop function sp_id_user(text);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(text)' at line 1")

-----------
QUERY:


--
-- tests for refcursors
--
create table rc_test (a int, b int);
RESULT:
	[]

-----------
QUERY:

copy rc_test from stdin;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'copy rc_test from stdin' at line 1")

-----------
QUERY:

5	10
50	100
500	1000
-- \.

create function return_unnamed_refcursor() returns refcursor as $$
declare
    rc refcursor;
begin
    open rc for select a from rc_test;
    return rc;
end
$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '5\t10\n50\t100\n500\t1000\n-- \\.\n\ncreate function return_unnamed_refcursor() returns r' at line 1")

-----------
QUERY:


create function use_refcursor(rc refcursor) returns int as $$
declare
    rc refcursor;
    x record;
begin
    rc := return_unnamed_refcursor();
    fetch next from rc into x;
    return x.a;
end
$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'refcursor) returns int as $$\ndeclare\n    rc refcursor;\n    x record;\nbegin\n    r' at line 1")

-----------
QUERY:


select use_refcursor(return_unnamed_refcursor());
RESULT:
	ERROR - (1305, 'FUNCTION test.use_refcursor does not exist')

-----------
QUERY:


create function return_refcursor(rc refcursor) returns refcursor as $$
begin
    open rc for select a from rc_test;
    return rc;
end
$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'refcursor) returns refcursor as $$\nbegin\n    open rc for select a from rc_test;\n' at line 1")

-----------
QUERY:


create function refcursor_test1(refcursor) returns refcursor as $$
begin
    perform return_refcursor($1);
    return $1;
end
$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ') returns refcursor as $$\nbegin\n    perform return_refcursor($1);\n    return $1;' at line 1")

-----------
QUERY:


begin;
RESULT:
	[]

-----------
QUERY:


select refcursor_test1('test1');
RESULT:
	ERROR - (1305, 'FUNCTION test.refcursor_test1 does not exist')

-----------
QUERY:

fetch next in test1;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'fetch next in test1' at line 1")

-----------
QUERY:


select refcursor_test1('test2');
RESULT:
	ERROR - (1305, 'FUNCTION test.refcursor_test1 does not exist')

-----------
QUERY:

fetch all from test2;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'fetch all from test2' at line 1")

-----------
QUERY:


commit;
RESULT:
	[]

-----------
QUERY:


-- should fail
fetch next from test1;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'fetch next from test1' at line 2")

-----------
QUERY:


create function refcursor_test2(int, int) returns boolean as $$
declare
    c1 cursor (param1 int, param2 int) for select * from rc_test where a > param1 and b > param2;
    nonsense record;
begin
    open c1($1, $2);
    fetch c1 into nonsense;
    close c1;
    if found then
        return true;
    else
        return false;
    end if;
end
$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'int, int) returns boolean as $$\ndeclare\n    c1 cursor (param1 int, param2 int) f' at line 1")

-----------
QUERY:


select refcursor_test2(20000, 20000) as "Should be false",
       refcursor_test2(20, 20) as "Should be true";
RESULT:
	ERROR - (1305, 'FUNCTION test.refcursor_test2 does not exist')

-----------
QUERY:


-- should fail
create function constant_refcursor() returns refcursor as $$
declare
    rc constant refcursor;
begin
    open rc for select a from rc_test;
    return rc;
end
$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'refcursor as $$\ndeclare\n    rc constant refcursor;\nbegin\n    open rc for select ' at line 2")

-----------
QUERY:


select constant_refcursor();
RESULT:
	ERROR - (1305, 'FUNCTION test.constant_refcursor does not exist')

-----------
QUERY:


-- but it/* REPLACED */ ''s okay like this
create or replace function constant_refcursor() returns refcursor as $$
declare
    rc constant refcursor := 'my_cursor_name';
begin
    open rc for select a from rc_test;
    return rc;
end
$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'function constant_refcursor() returns refcursor as $$\ndeclare\n    rc constant re' at line 2")

-----------
QUERY:


select constant_refcursor();
RESULT:
	ERROR - (1305, 'FUNCTION test.constant_refcursor does not exist')

-----------
QUERY:


--
-- tests for cursors with named parameter arguments
--
create function namedparmcursor_test1(int, int) returns boolean as $$
declare
    c1 cursor (param1 int, param12 int) for select * from rc_test where a > param1 and b > param12;
    nonsense record;
begin
    open c1(param12 := $2, param1 := $1);
    fetch c1 into nonsense;
    close c1;
    if found then
        return true;
    else
        return false;
    end if;
end
$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'int, int) returns boolean as $$\ndeclare\n    c1 cursor (param1 int, param12 int) ' at line 4")

-----------
QUERY:


select namedparmcursor_test1(20000, 20000) as "Should be false",
       namedparmcursor_test1(20, 20) as "Should be true";
RESULT:
	ERROR - (1305, 'FUNCTION test.namedparmcursor_test1 does not exist')

-----------
QUERY:


-- mixing named and positional argument notations
create function namedparmcursor_test2(int, int) returns boolean as $$
declare
    c1 cursor (param1 int, param2 int) for select * from rc_test where a > param1 and b > param2;
    nonsense record;
begin
    open c1(param1 := $1, $2);
    fetch c1 into nonsense;
    close c1;
    if found then
        return true;
    else
        return false;
    end if;
end
$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'int, int) returns boolean as $$\ndeclare\n    c1 cursor (param1 int, param2 int) f' at line 2")

-----------
QUERY:

select namedparmcursor_test2(20, 20);
RESULT:
	ERROR - (1305, 'FUNCTION test.namedparmcursor_test2 does not exist')

-----------
QUERY:


-- mixing named and positional: param2 is given twice, once in named notation
-- and second time in positional notation. Should throw an error at parse time
create function namedparmcursor_test3() returns void as $$
declare
    c1 cursor (param1 int, param2 int) for select * from rc_test where a > param1 and b > param2;
begin
    open c1(param2 := 20, 21);
end
$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'void as $$\ndeclare\n    c1 cursor (param1 int, param2 int) for select * from rc_t' at line 3")

-----------
QUERY:


-- mixing named and positional: same as previous test, but param1 is duplicated
create function namedparmcursor_test4() returns void as $$
declare
    c1 cursor (param1 int, param2 int) for select * from rc_test where a > param1 and b > param2;
begin
    open c1(20, param1 := 21);
end
$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'void as $$\ndeclare\n    c1 cursor (param1 int, param2 int) for select * from rc_t' at line 2")

-----------
QUERY:


-- duplicate named parameter, should throw an error at parse time
create function namedparmcursor_test5() returns void as $$
declare
  c1 cursor (p1 int, p2 int) for
    select * from tenk1 where thousand = p1 and tenthous = p2;
begin
  open c1 (p2 := 77, p2 := 42);
end
$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'void as $$\ndeclare\n  c1 cursor (p1 int, p2 int) for\n    select * from tenk1 wher' at line 2")

-----------
QUERY:


-- not enough parameters, should throw an error at parse time
create function namedparmcursor_test6() returns void as $$
declare
  c1 cursor (p1 int, p2 int) for
    select * from tenk1 where thousand = p1 and tenthous = p2;
begin
  open c1 (p2 := 77);
end
$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'void as $$\ndeclare\n  c1 cursor (p1 int, p2 int) for\n    select * from tenk1 wher' at line 2")

-----------
QUERY:


-- division by zero runtime error, the context given in the error message
-- should be sensible
create function namedparmcursor_test7() returns void as $$
declare
  c1 cursor (p1 int, p2 int) for
    select * from tenk1 where thousand = p1 and tenthous = p2;
begin
  open c1 (p2 := 77, p1 := 42/0);
end $$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'void as $$\ndeclare\n  c1 cursor (p1 int, p2 int) for\n    select * from tenk1 wher' at line 3")

-----------
QUERY:

select namedparmcursor_test7();
RESULT:
	ERROR - (1305, 'FUNCTION test.namedparmcursor_test7 does not exist')

-----------
QUERY:


-- check that line comments work correctly within the argument list (there
-- is some special handling of this case in the code: the newline after the
-- comment must be preserved when the argument-evaluating query is
-- constructed, otherwise the comment effectively comments out the next
-- argument, too)
create function namedparmcursor_test8() returns int4 as $$
declare
  c1 cursor (p1 int, p2 int) for
    select count(*) from tenk1 where thousand = p1 and tenthous = p2;
  n int4;
begin
  open c1 (77 -- test
  , 42);
  fetch c1 into n;
  return n;
end $$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'as $$\ndeclare\n  c1 cursor (p1 int, p2 int) for\n    select count(*) from tenk1 wh' at line 6")

-----------
QUERY:

select namedparmcursor_test8();
RESULT:
	ERROR - (1305, 'FUNCTION test.namedparmcursor_test8 does not exist')

-----------
QUERY:


-- cursor parameter name can match plpgsql variable or unreserved keyword
create function namedparmcursor_test9(p1 int) returns int4 as $$
declare
  c1 cursor (p1 int, p2 int, debug int) for
    select count(*) from tenk1 where thousand = p1 and tenthous = p2
      and four = debug;
  p2 int4 := 1006;
  n int4;
begin
  open c1 (p1 := p1, p2 := p2, debug := 2);
  fetch c1 into n;
  return n;
end $$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'as $$\ndeclare\n  c1 cursor (p1 int, p2 int, debug int) for\n    select count(*) fr' at line 2")

-----------
QUERY:

select namedparmcursor_test9(6);
RESULT:
	ERROR - (1305, 'FUNCTION test.namedparmcursor_test9 does not exist')

-----------
QUERY:


--
-- tests for /* REPLACED */ ''raise/* REPLACED */ '' processing
--
create function raise_test1(int) returns int as $$
begin
    raise notice 'This message has too many parameters!', $1;
    return $1;
end;
$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'int) returns int as $$\nbegin\n    raise notice 'This message has too many paramet' at line 4")

-----------
QUERY:


create function raise_test2(int) returns int as $$
begin
    raise notice 'This message has too few parameters: %, %, %', $1, $1;
    return $1;
end;
$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'int) returns int as $$\nbegin\n    raise notice 'This message has too few paramete' at line 1")

-----------
QUERY:


create function raise_test3(int) returns int as $$
begin
    raise notice 'This message has no parameters (despite having %% signs in it)!';
    return $1;
end;
$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'int) returns int as $$\nbegin\n    raise notice 'This message has no parameters (d' at line 1")

-----------
QUERY:


select raise_test3(1);
RESULT:
	ERROR - (1305, 'FUNCTION test.raise_test3 does not exist')

-----------
QUERY:


-- Test re-RAISE inside a nested exception block.  This case is allowed
-- by Oracle/* REPLACED */ ''s PL/SQL but was handled differently by PG before 9.1.

CREATE FUNCTION reraise_test() RETURNS void AS $$
BEGIN
   BEGIN
       RAISE syntax_error;
   EXCEPTION
       WHEN syntax_error THEN
           BEGIN
               raise notice 'exception % thrown in inner block, reraising', sqlerrm;
               RAISE;
           EXCEPTION
               WHEN OTHERS THEN
                   raise notice 'RIGHT - exception % caught in inner block', sqlerrm;
           END;
   END;
EXCEPTION
   WHEN OTHERS THEN
       raise notice 'WRONG - exception % caught in outer block', sqlerrm;
END;
$$ LANGUAGE plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'void AS $$\nBEGIN\n   BEGIN\n       RAISE syntax_error;\n   EXCEPTION\n       WHEN sy' at line 4")

-----------
QUERY:


SELECT reraise_test();
RESULT:
	ERROR - (1305, 'FUNCTION test.reraise_test does not exist')

-----------
QUERY:


--
-- reject function definitions that contain malformed SQL queries at
-- compile-time, where possible
--
create function bad_sql1() returns int as $$
declare a int;
begin
    a := 5;
    Johnny Yuma;
    a := 10;
    return a;
end$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'as $$\ndeclare a int;\nbegin\n    a := 5;\n    Johnny Yuma;\n    a := 10;\n    return ' at line 5")

-----------
QUERY:


create function bad_sql2() returns int as $$
declare r record;
begin
    for r in select I fought the law, the law won LOOP
        raise notice 'in loop';
    end loop;
    return 5;
end;$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'as $$\ndeclare r record;\nbegin\n    for r in select I fought the law, the law won ' at line 1")

-----------
QUERY:


-- a RETURN expression is mandatory, except for void-returning
-- functions, where it is not allowed
create function missing_return_expr() returns int as $$
begin
    return ;
end;$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'as $$\nbegin\n    return ;\nend;$$ language plpgsql' at line 3")

-----------
QUERY:


create function void_return_expr() returns void as $$
begin
    return 5;
end;$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'void as $$\nbegin\n    return 5;\nend;$$ language plpgsql' at line 1")

-----------
QUERY:


-- VOID functions are allowed to omit RETURN
create function void_return_expr() returns void as $$
begin
    perform 2+2;
end;$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'void as $$\nbegin\n    perform 2+2;\nend;$$ language plpgsql' at line 2")

-----------
QUERY:


select void_return_expr();
RESULT:
	ERROR - (1305, 'FUNCTION test.void_return_expr does not exist')

-----------
QUERY:


-- but ordinary functions are not
create function missing_return_expr() returns int as $$
begin
    perform 2+2;
end;$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'as $$\nbegin\n    perform 2+2;\nend;$$ language plpgsql' at line 2")

-----------
QUERY:


select missing_return_expr();
RESULT:
	ERROR - (1305, 'FUNCTION test.missing_return_expr does not exist')

-----------
QUERY:


drop function void_return_expr();
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '()' at line 1")

-----------
QUERY:

drop function missing_return_expr();
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '()' at line 1")

-----------
QUERY:


--
-- EXECUTE ... INTO test
--

create table eifoo (i integer, y integer);
RESULT:
	[]

-----------
QUERY:

create type eitype as (i integer, y integer);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'type eitype as (i integer, y integer)' at line 1")

-----------
QUERY:


create or replace function execute_into_test(varchar) returns record as $$
declare
    _r record;
    _rt eifoo%rowtype;
    _v eitype;
    i int;
    j int;
    k int;
begin
    execute 'insert into '||$1||' values(10,15)';
    execute 'select (row).* from (select row(10,1)::eifoo) s' into _r;
    raise notice '% %', _r.i, _r.y;
    execute 'select * from '||$1||' limit 1' into _rt;
    raise notice '% %', _rt.i, _rt.y;
    execute 'select *, 20 from '||$1||' limit 1' into i, j, k;
    raise notice '% % %', i, j, k;
    execute 'select 1,2' into _v;
    return _v;
end; $$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'function execute_into_test(varchar) returns record as $$\ndeclare\n    _r record;\n' at line 1")

-----------
QUERY:


select execute_into_test('eifoo');
RESULT:
	ERROR - (1305, 'FUNCTION test.execute_into_test does not exist')

-----------
QUERY:


drop table eifoo cascade;
RESULT:
	[]

-----------
QUERY:

drop type eitype cascade;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'type eitype cascade' at line 1")

-----------
QUERY:


--
-- SQLSTATE and SQLERRM test
--

create function excpt_test1() returns void as $$
begin
    raise notice '% %', sqlstate, sqlerrm;
end; $$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'void as $$\nbegin\n    raise notice '% %', sqlstate, sqlerrm;\nend; $$ language plp' at line 5")

-----------
QUERY:

-- should fail: SQLSTATE and SQLERRM are only in defined EXCEPTION
-- blocks
select excpt_test1();
RESULT:
	ERROR - (1305, 'FUNCTION test.excpt_test1 does not exist')

-----------
QUERY:


create function excpt_test2() returns void as $$
begin
    begin
        begin
            raise notice '% %', sqlstate, sqlerrm;
        end;
    end;
end; $$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'void as $$\nbegin\n    begin\n        begin\n            raise notice '% %', sqlstat' at line 1")

-----------
QUERY:

-- should fail
select excpt_test2();
RESULT:
	ERROR - (1305, 'FUNCTION test.excpt_test2 does not exist')

-----------
QUERY:


create function excpt_test3() returns void as $$
begin
    begin
        raise exception 'user exception';
    exception when others then
	    raise notice 'caught exception % %', sqlstate, sqlerrm;
	    begin
	        raise notice '% %', sqlstate, sqlerrm;
	        perform 10/0;
        exception
            when substring_error then
                -- this exception handler shouldn/* REPLACED */ ''t be invoked
                raise notice 'unexpected exception: % %', sqlstate, sqlerrm;
	        when division_by_zero then
	            raise notice 'caught exception % %', sqlstate, sqlerrm;
	    end;
	    raise notice '% %', sqlstate, sqlerrm;
    end;
end; $$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'void as $$\nbegin\n    begin\n        raise exception 'user exception';\n    excepti' at line 1")

-----------
QUERY:

select excpt_test3();
RESULT:
	ERROR - (1305, 'FUNCTION test.excpt_test3 does not exist')

-----------
QUERY:


create function excpt_test4() returns text as $$
begin
	begin perform 1/0;
	exception when others then return sqlerrm; end;
end; $$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'as $$\nbegin\n\tbegin perform 1/0;\n\texception when others then return sqlerrm; end;' at line 1")

-----------
QUERY:

select excpt_test4();
RESULT:
	ERROR - (1305, 'FUNCTION test.excpt_test4 does not exist')

-----------
QUERY:


drop function excpt_test1();
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '()' at line 1")

-----------
QUERY:

drop function excpt_test2();
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '()' at line 1")

-----------
QUERY:

drop function excpt_test3();
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '()' at line 1")

-----------
QUERY:

drop function excpt_test4();
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '()' at line 1")

-----------
QUERY:


-- parameters of raise stmt can be expressions
create function raise_exprs() returns void as $$
declare
    a integer[] = '{10,20,30}';
    c varchar = 'xyz';
    i integer;
begin
    i := 2;
    raise notice '%; %; %; %; %; %', a, a[i], c, (select c || 'abc'), row(10,'aaa',NULL,30), NULL;
end;$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'void as $$\ndeclare\n    a integer[] = '{10,20,30}';\n    c varchar = 'xyz';\n    i ' at line 2")

-----------
QUERY:


select raise_exprs();
RESULT:
	ERROR - (1305, 'FUNCTION test.raise_exprs does not exist')

-----------
QUERY:

drop function raise_exprs();
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '()' at line 1")

-----------
QUERY:


-- regression test: verify that multiple uses of same plpgsql datum within
-- a SQL command all get mapped to the same $n parameter.  The return value
-- of the SELECT is not important, we only care that it doesn/* REPLACED */ ''t fail with
-- a complaint about an ungrouped column reference.
create function multi_datum_use(p1 int) returns bool as $$
declare
  x int;
  y int;
begin
  select into x,y unique1/p1, unique1/$1 from tenk1 group by unique1/p1;
  return x = y;
end$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'as $$\ndeclare\n  x int;\n  y int;\nbegin\n  select into x,y unique1/p1, unique1/$1 f' at line 5")

-----------
QUERY:


select multi_datum_use(42);
RESULT:
	ERROR - (1305, 'FUNCTION test.multi_datum_use does not exist')

-----------
QUERY:


--
-- Test STRICT limiter in both planned and EXECUTE invocations.
-- Note that a data-modifying query is quasi strict (disallow multi rows)
-- by default in the planned case, but not in EXECUTE.
--

create temp table foo (f1 int, f2 int);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'temp table foo (f1 int, f2 int)' at line 7")

-----------
QUERY:


insert into foo values (1,2), (3,4);
RESULT:
	ERROR - (1146, "Table 'test.foo' doesn't exist")

-----------
QUERY:


create or replace function stricttest() returns void as $$
declare x record;
begin
  -- should work
  insert into foo values(5,6) returning * into x;
  raise notice 'x.f1 = %, x.f2 = %', x.f1, x.f2;
end$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'function stricttest() returns void as $$\ndeclare x record;\nbegin\n  -- should wor' at line 1")

-----------
QUERY:


select stricttest();
RESULT:
	ERROR - (1305, 'FUNCTION test.stricttest does not exist')

-----------
QUERY:


create or replace function stricttest() returns void as $$
declare x record;
begin
  -- should fail due to implicit strict
  insert into foo values(7,8),(9,10) returning * into x;
  raise notice 'x.f1 = %, x.f2 = %', x.f1, x.f2;
end$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'function stricttest() returns void as $$\ndeclare x record;\nbegin\n  -- should fai' at line 1")

-----------
QUERY:


select stricttest();
RESULT:
	ERROR - (1305, 'FUNCTION test.stricttest does not exist')

-----------
QUERY:


create or replace function stricttest() returns void as $$
declare x record;
begin
  -- should work
  execute 'insert into foo values(5,6) returning *' into x;
  raise notice 'x.f1 = %, x.f2 = %', x.f1, x.f2;
end$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'function stricttest() returns void as $$\ndeclare x record;\nbegin\n  -- should wor' at line 1")

-----------
QUERY:


select stricttest();
RESULT:
	ERROR - (1305, 'FUNCTION test.stricttest does not exist')

-----------
QUERY:


create or replace function stricttest() returns void as $$
declare x record;
begin
  -- this should work since EXECUTE isn/* REPLACED */ ''t as picky
  execute 'insert into foo values(7,8),(9,10) returning *' into x;
  raise notice 'x.f1 = %, x.f2 = %', x.f1, x.f2;
end$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'function stricttest() returns void as $$\ndeclare x record;\nbegin\n  -- this shoul' at line 1")

-----------
QUERY:


select stricttest();
RESULT:
	ERROR - (1305, 'FUNCTION test.stricttest does not exist')

-----------
QUERY:


select * from foo;
RESULT:
	ERROR - (1146, "Table 'test.foo' doesn't exist")

-----------
QUERY:


create or replace function stricttest() returns void as $$
declare x record;
begin
  -- should work
  select * from foo where f1 = 3 into strict x;
  raise notice 'x.f1 = %, x.f2 = %', x.f1, x.f2;
end$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'function stricttest() returns void as $$\ndeclare x record;\nbegin\n  -- should wor' at line 1")

-----------
QUERY:


select stricttest();
RESULT:
	ERROR - (1305, 'FUNCTION test.stricttest does not exist')

-----------
QUERY:


create or replace function stricttest() returns void as $$
declare x record;
begin
  -- should fail, no rows
  select * from foo where f1 = 0 into strict x;
  raise notice 'x.f1 = %, x.f2 = %', x.f1, x.f2;
end$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'function stricttest() returns void as $$\ndeclare x record;\nbegin\n  -- should fai' at line 1")

-----------
QUERY:


select stricttest();
RESULT:
	ERROR - (1305, 'FUNCTION test.stricttest does not exist')

-----------
QUERY:


create or replace function stricttest() returns void as $$
declare x record;
begin
  -- should fail, too many rows
  select * from foo where f1 > 3 into strict x;
  raise notice 'x.f1 = %, x.f2 = %', x.f1, x.f2;
end$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'function stricttest() returns void as $$\ndeclare x record;\nbegin\n  -- should fai' at line 1")

-----------
QUERY:


select stricttest();
RESULT:
	ERROR - (1305, 'FUNCTION test.stricttest does not exist')

-----------
QUERY:


create or replace function stricttest() returns void as $$
declare x record;
begin
  -- should work
  execute 'select * from foo where f1 = 3' into strict x;
  raise notice 'x.f1 = %, x.f2 = %', x.f1, x.f2;
end$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'function stricttest() returns void as $$\ndeclare x record;\nbegin\n  -- should wor' at line 1")

-----------
QUERY:


select stricttest();
RESULT:
	ERROR - (1305, 'FUNCTION test.stricttest does not exist')

-----------
QUERY:


create or replace function stricttest() returns void as $$
declare x record;
begin
  -- should fail, no rows
  execute 'select * from foo where f1 = 0' into strict x;
  raise notice 'x.f1 = %, x.f2 = %', x.f1, x.f2;
end$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'function stricttest() returns void as $$\ndeclare x record;\nbegin\n  -- should fai' at line 1")

-----------
QUERY:


select stricttest();
RESULT:
	ERROR - (1305, 'FUNCTION test.stricttest does not exist')

-----------
QUERY:


create or replace function stricttest() returns void as $$
declare x record;
begin
  -- should fail, too many rows
  execute 'select * from foo where f1 > 3' into strict x;
  raise notice 'x.f1 = %, x.f2 = %', x.f1, x.f2;
end$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'function stricttest() returns void as $$\ndeclare x record;\nbegin\n  -- should fai' at line 1")

-----------
QUERY:


select stricttest();
RESULT:
	ERROR - (1305, 'FUNCTION test.stricttest does not exist')

-----------
QUERY:


drop function stricttest();
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '()' at line 1")

-----------
QUERY:


-- test printing parameters after failure due to STRICT

set plpgsql.print_strict_params to true;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'to true' at line 3")

-----------
QUERY:


create or replace function stricttest() returns void as $$
declare
x record;
p1 int := 2;
p3 text := 'foo';
begin
  -- no rows
  select * from foo where f1 = p1 and f1::text = p3 into strict x;
  raise notice 'x.f1 = %, x.f2 = %', x.f1, x.f2;
end$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'function stricttest() returns void as $$\ndeclare\nx record;\np1 int := 2;\np3 text ' at line 1")

-----------
QUERY:


select stricttest();
RESULT:
	ERROR - (1305, 'FUNCTION test.stricttest does not exist')

-----------
QUERY:


create or replace function stricttest() returns void as $$
declare
x record;
p1 int := 2;
p3 text := $a$'Valame Dios!' dijo Sancho; 'no le dije yo a vuestra merced que mirase bien lo que hacia?'$a$;
begin
  -- no rows
  select * from foo where f1 = p1 and f1::text = p3 into strict x;
  raise notice 'x.f1 = %, x.f2 = %', x.f1, x.f2;
end$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'function stricttest() returns void as $$\ndeclare\nx record;\np1 int := 2;\np3 text ' at line 1")

-----------
QUERY:


select stricttest();
RESULT:
	ERROR - (1305, 'FUNCTION test.stricttest does not exist')

-----------
QUERY:


create or replace function stricttest() returns void as $$
declare
x record;
p1 int := 2;
p3 text := 'foo';
begin
  -- too many rows
  select * from foo where f1 > p1 or f1::text = p3  into strict x;
  raise notice 'x.f1 = %, x.f2 = %', x.f1, x.f2;
end$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'function stricttest() returns void as $$\ndeclare\nx record;\np1 int := 2;\np3 text ' at line 1")

-----------
QUERY:


select stricttest();
RESULT:
	ERROR - (1305, 'FUNCTION test.stricttest does not exist')

-----------
QUERY:


create or replace function stricttest() returns void as $$
declare x record;
begin
  -- too many rows, no params
  select * from foo where f1 > 3 into strict x;
  raise notice 'x.f1 = %, x.f2 = %', x.f1, x.f2;
end$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'function stricttest() returns void as $$\ndeclare x record;\nbegin\n  -- too many r' at line 1")

-----------
QUERY:


select stricttest();
RESULT:
	ERROR - (1305, 'FUNCTION test.stricttest does not exist')

-----------
QUERY:


create or replace function stricttest() returns void as $$
declare x record;
begin
  -- no rows
  execute 'select * from foo where f1 = $1 or f1::text = $2' using 0, 'foo' into strict x;
  raise notice 'x.f1 = %, x.f2 = %', x.f1, x.f2;
end$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'function stricttest() returns void as $$\ndeclare x record;\nbegin\n  -- no rows\n  ' at line 1")

-----------
QUERY:


select stricttest();
RESULT:
	ERROR - (1305, 'FUNCTION test.stricttest does not exist')

-----------
QUERY:


create or replace function stricttest() returns void as $$
declare x record;
begin
  -- too many rows
  execute 'select * from foo where f1 > $1' using 1 into strict x;
  raise notice 'x.f1 = %, x.f2 = %', x.f1, x.f2;
end$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'function stricttest() returns void as $$\ndeclare x record;\nbegin\n  -- too many r' at line 1")

-----------
QUERY:


select stricttest();
RESULT:
	ERROR - (1305, 'FUNCTION test.stricttest does not exist')

-----------
QUERY:


create or replace function stricttest() returns void as $$
declare x record;
begin
  -- too many rows, no parameters
  execute 'select * from foo where f1 > 3' into strict x;
  raise notice 'x.f1 = %, x.f2 = %', x.f1, x.f2;
end$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'function stricttest() returns void as $$\ndeclare x record;\nbegin\n  -- too many r' at line 1")

-----------
QUERY:


select stricttest();
RESULT:
	ERROR - (1305, 'FUNCTION test.stricttest does not exist')

-----------
QUERY:


create or replace function stricttest() returns void as $$
-- override the global
#print_strict_params off
declare
x record;
p1 int := 2;
p3 text := 'foo';
begin
  -- too many rows
  select * from foo where f1 > p1 or f1::text = p3  into strict x;
  raise notice 'x.f1 = %, x.f2 = %', x.f1, x.f2;
end$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'function stricttest() returns void as $$\n-- override the global\n#print_strict_pa' at line 1")

-----------
QUERY:


select stricttest();
RESULT:
	ERROR - (1305, 'FUNCTION test.stricttest does not exist')

-----------
QUERY:


reset plpgsql.print_strict_params;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'plpgsql.print_strict_params' at line 1")

-----------
QUERY:


create or replace function stricttest() returns void as $$
-- override the global
#print_strict_params on
declare
x record;
p1 int := 2;
p3 text := 'foo';
begin
  -- too many rows
  select * from foo where f1 > p1 or f1::text = p3  into strict x;
  raise notice 'x.f1 = %, x.f2 = %', x.f1, x.f2;
end$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'function stricttest() returns void as $$\n-- override the global\n#print_strict_pa' at line 1")

-----------
QUERY:


select stricttest();
RESULT:
	ERROR - (1305, 'FUNCTION test.stricttest does not exist')

-----------
QUERY:


-- test warnings and errors
set plpgsql.extra_warnings to 'all';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'to 'all'' at line 2")

-----------
QUERY:

set plpgsql.extra_warnings to 'none';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'to 'none'' at line 1")

-----------
QUERY:

set plpgsql.extra_errors to 'all';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'to 'all'' at line 1")

-----------
QUERY:

set plpgsql.extra_errors to 'none';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'to 'none'' at line 1")

-----------
QUERY:


-- test warnings when shadowing a variable

set plpgsql.extra_warnings to 'shadowed_variables';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'to 'shadowed_variables'' at line 3")

-----------
QUERY:


-- simple shadowing of input and output parameters
create or replace function shadowtest(in1 int)
	returns table (out1 int) as $$
declare
in1 int;
out1 int;
begin
end
$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'function shadowtest(in1 int)\n\treturns table (out1 int) as $$\ndeclare\nin1 int;\nou' at line 2")

-----------
QUERY:

select shadowtest(1);
RESULT:
	ERROR - (1305, 'FUNCTION test.shadowtest does not exist')

-----------
QUERY:


set plpgsql.extra_warnings to 'shadowed_variables';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'to 'shadowed_variables'' at line 1")

-----------
QUERY:

select shadowtest(1);
RESULT:
	ERROR - (1305, 'FUNCTION test.shadowtest does not exist')

-----------
QUERY:

create or replace function shadowtest(in1 int)
	returns table (out1 int) as $$
declare
in1 int;
out1 int;
begin
end
$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'function shadowtest(in1 int)\n\treturns table (out1 int) as $$\ndeclare\nin1 int;\nou' at line 1")

-----------
QUERY:

select shadowtest(1);
RESULT:
	ERROR - (1305, 'FUNCTION test.shadowtest does not exist')

-----------
QUERY:

drop function shadowtest(int);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(int)' at line 1")

-----------
QUERY:


-- shadowing in a second DECLARE block
create or replace function shadowtest()
	returns void as $$
declare
f1 int;
begin
	declare
	f1 int;
	begin
	end;
end$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'function shadowtest()\n\treturns void as $$\ndeclare\nf1 int;\nbegin\n\tdeclare\n\tf1 int' at line 2")

-----------
QUERY:

drop function shadowtest();
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '()' at line 1")

-----------
QUERY:


-- several levels of shadowing
create or replace function shadowtest(in1 int)
	returns void as $$
declare
in1 int;
begin
	declare
	in1 int;
	begin
	end;
end$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'function shadowtest(in1 int)\n\treturns void as $$\ndeclare\nin1 int;\nbegin\n\tdeclare' at line 2")

-----------
QUERY:

drop function shadowtest(int);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(int)' at line 1")

-----------
QUERY:


-- shadowing in cursor definitions
create or replace function shadowtest()
	returns void as $$
declare
f1 int;
c1 cursor (f1 int) for select 1;
begin
end$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'function shadowtest()\n\treturns void as $$\ndeclare\nf1 int;\nc1 cursor (f1 int) for' at line 2")

-----------
QUERY:

drop function shadowtest();
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '()' at line 1")

-----------
QUERY:


-- test errors when shadowing a variable

set plpgsql.extra_errors to 'shadowed_variables';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'to 'shadowed_variables'' at line 3")

-----------
QUERY:


create or replace function shadowtest(f1 int)
	returns boolean as $$
declare f1 int; begin return 1; end $$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'function shadowtest(f1 int)\n\treturns boolean as $$\ndeclare f1 int; begin return ' at line 1")

-----------
QUERY:


select shadowtest(1);
RESULT:
	ERROR - (1305, 'FUNCTION test.shadowtest does not exist')

-----------
QUERY:


reset plpgsql.extra_errors;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'plpgsql.extra_errors' at line 1")

-----------
QUERY:

reset plpgsql.extra_warnings;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'plpgsql.extra_warnings' at line 1")

-----------
QUERY:


create or replace function shadowtest(f1 int)
	returns boolean as $$
declare f1 int; begin return 1; end $$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'function shadowtest(f1 int)\n\treturns boolean as $$\ndeclare f1 int; begin return ' at line 1")

-----------
QUERY:


select shadowtest(1);
RESULT:
	ERROR - (1305, 'FUNCTION test.shadowtest does not exist')

-----------
QUERY:


-- runtime extra checks
set plpgsql.extra_warnings to 'too_many_rows';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'to 'too_many_rows'' at line 2")

-----------
QUERY:


do $$
declare x int;
begin
  select v from generate_series(1,2) g(v) into x;
end;
$$;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'declare x int;\nbegin\n  select v from generate_series(1,2) g(v) into x;\nend;\n$$' at line 2")

-----------
QUERY:


set plpgsql.extra_errors to 'too_many_rows';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'to 'too_many_rows'' at line 1")

-----------
QUERY:


do $$
declare x int;
begin
  select v from generate_series(1,2) g(v) into x;
end;
$$;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'declare x int;\nbegin\n  select v from generate_series(1,2) g(v) into x;\nend;\n$$' at line 2")

-----------
QUERY:


reset plpgsql.extra_errors;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'plpgsql.extra_errors' at line 1")

-----------
QUERY:

reset plpgsql.extra_warnings;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'plpgsql.extra_warnings' at line 1")

-----------
QUERY:


set plpgsql.extra_warnings to 'strict_multi_assignment';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'to 'strict_multi_assignment'' at line 1")

-----------
QUERY:


do $$
declare
  x int;
  y int;
begin
  select 1 into x, y;
  select 1,2 into x, y;
  select 1,2,3 into x, y;
end
$$;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'declare\n  x int;\n  y int;\nbegin\n  select 1 into x, y;\n  select 1,2 into x, y;\n  ' at line 2")

-----------
QUERY:


set plpgsql.extra_errors to 'strict_multi_assignment';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'to 'strict_multi_assignment'' at line 1")

-----------
QUERY:


do $$
declare
  x int;
  y int;
begin
  select 1 into x, y;
  select 1,2 into x, y;
  select 1,2,3 into x, y;
end
$$;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'declare\n  x int;\n  y int;\nbegin\n  select 1 into x, y;\n  select 1,2 into x, y;\n  ' at line 2")

-----------
QUERY:


create table test_01(a int, b int, c int);
RESULT:
	[]

-----------
QUERY:


alter table test_01 drop column a;
RESULT:
	[]

-----------
QUERY:


-- the check is active only when source table is not empty
insert into test_01 values(10,20);
RESULT:
	[]

-----------
QUERY:


do $$
declare
  x int;
  y int;
begin
  select * from test_01 into x, y; -- should be ok
  raise notice 'ok';
  select * from test_01 into x;    -- should to fail
end;
$$;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'declare\n  x int;\n  y int;\nbegin\n  select * from test_01 into x, y; -- should be ' at line 2")

-----------
QUERY:


do $$
declare
  t test_01;
begin
  select 1, 2 into t;  -- should be ok
  raise notice 'ok';
  select 1, 2, 3 into t; -- should fail /* REPLACED */ ,
end;
$$;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'declare\n  t test_01;\nbegin\n  select 1, 2 into t;  -- should be ok\n  raise notice' at line 2")

-----------
QUERY:


do $$
declare
  t test_01;
begin
  select 1 into t; -- should fail /* REPLACED */ ,
end;
$$;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'declare\n  t test_01;\nbegin\n  select 1 into t; -- should fail /* REPLACED */ ,\nen' at line 2")

-----------
QUERY:


drop table test_01;
RESULT:
	[]

-----------
QUERY:


reset plpgsql.extra_errors;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'plpgsql.extra_errors' at line 1")

-----------
QUERY:

reset plpgsql.extra_warnings;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'plpgsql.extra_warnings' at line 1")

-----------
QUERY:


-- test scrollable cursor support

create function sc_test() returns setof integer as $$
declare
  c scroll cursor for select f1 from int4_tbl;
  x integer;
begin
  open c;
  fetch last from c into x;
  while found loop
    return next x;
    fetch prior from c into x;
  end loop;
  close c;
end;
$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'setof integer as $$\ndeclare\n  c scroll cursor for select f1 from int4_tbl;\n  x i' at line 3")

-----------
QUERY:


select * from sc_test();
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '()' at line 1")

-----------
QUERY:


create or replace function sc_test() returns setof integer as $$
declare
  c no scroll cursor for select f1 from int4_tbl;
  x integer;
begin
  open c;
  fetch last from c into x;
  while found loop
    return next x;
    fetch prior from c into x;
  end loop;
  close c;
end;
$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'function sc_test() returns setof integer as $$\ndeclare\n  c no scroll cursor for ' at line 1")

-----------
QUERY:


select * from sc_test();
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '()' at line 1")

-----------
QUERY:
  -- fails because of NO SCROLL specification

create or replace function sc_test() returns setof integer as $$
declare
  c refcursor;
  x integer;
begin
  open c scroll for select f1 from int4_tbl;
  fetch last from c into x;
  while found loop
    return next x;
    fetch prior from c into x;
  end loop;
  close c;
end;
$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'function sc_test() returns setof integer as $$\ndeclare\n  c refcursor;\n  x intege' at line 3")

-----------
QUERY:


select * from sc_test();
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '()' at line 1")

-----------
QUERY:


create or replace function sc_test() returns setof integer as $$
declare
  c refcursor;
  x integer;
begin
  open c scroll for execute 'select f1 from int4_tbl';
  fetch last from c into x;
  while found loop
    return next x;
    fetch relative -2 from c into x;
  end loop;
  close c;
end;
$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'function sc_test() returns setof integer as $$\ndeclare\n  c refcursor;\n  x intege' at line 1")

-----------
QUERY:


select * from sc_test();
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '()' at line 1")

-----------
QUERY:


create or replace function sc_test() returns setof integer as $$
declare
  c refcursor;
  x integer;
begin
  open c scroll for execute 'select f1 from int4_tbl';
  fetch last from c into x;
  while found loop
    return next x;
    move backward 2 from c;
    fetch relative -1 from c into x;
  end loop;
  close c;
end;
$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'function sc_test() returns setof integer as $$\ndeclare\n  c refcursor;\n  x intege' at line 1")

-----------
QUERY:


select * from sc_test();
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '()' at line 1")

-----------
QUERY:


create or replace function sc_test() returns setof integer as $$
declare
  c cursor for select * from generate_series(1, 10);
  x integer;
begin
  open c;
  loop
      move relative 2 in c;
      if not found then
          exit;
      end if;
      fetch next from c into x;
      if found then
          return next x;
      end if;
  end loop;
  close c;
end;
$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'function sc_test() returns setof integer as $$\ndeclare\n  c cursor for select * f' at line 1")

-----------
QUERY:


select * from sc_test();
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '()' at line 1")

-----------
QUERY:


create or replace function sc_test() returns setof integer as $$
declare
  c cursor for select * from generate_series(1, 10);
  x integer;
begin
  open c;
  move forward all in c;
  fetch backward from c into x;
  if found then
    return next x;
  end if;
  close c;
end;
$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'function sc_test() returns setof integer as $$\ndeclare\n  c cursor for select * f' at line 1")

-----------
QUERY:


select * from sc_test();
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '()' at line 1")

-----------
QUERY:


drop function sc_test();
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '()' at line 1")

-----------
QUERY:


-- test qualified variable names

create function pl_qual_names (param1 int) returns void as $$
<<outerblock>>
declare
  param1 int := 1;
begin
  <<innerblock>>
  declare
    param1 int := 2;
  begin
    raise notice 'param1 = %', param1;
    raise notice 'pl_qual_names.param1 = %', pl_qual_names.param1;
    raise notice 'outerblock.param1 = %', outerblock.param1;
    raise notice 'innerblock.param1 = %', innerblock.param1;
  end;
end;
$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'void as $$\n<<outerblock>>\ndeclare\n  param1 int := 1;\nbegin\n  <<innerblock>>\n  de' at line 3")

-----------
QUERY:


select pl_qual_names(42);
RESULT:
	ERROR - (1305, 'FUNCTION test.pl_qual_names does not exist')

-----------
QUERY:


drop function pl_qual_names(int);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(int)' at line 1")

-----------
QUERY:


-- tests for RETURN QUERY
create function ret_query1(out int, out int) returns setof record as $$
begin
    $1 := -1;
    $2 := -2;
    return next;
    return query select x + 1, x * 10 from generate_series(0, 10) s (x);
    return next;
end;
$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'out int, out int) returns setof record as $$\nbegin\n    $1 := -1;\n    $2 := -2;\n ' at line 2")

-----------
QUERY:


select * from ret_query1();
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '()' at line 1")

-----------
QUERY:


create type record_type as (x text, y int, z boolean);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'type record_type as (x text, y int, z boolean)' at line 1")

-----------
QUERY:


create or replace function ret_query2(lim int) returns setof record_type as $$
begin
    return query select fipshash(s.x::text), s.x, s.x > 0
                 from generate_series(-8, lim) s (x) where s.x % 2 = 0;
end;
$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'function ret_query2(lim int) returns setof record_type as $$\nbegin\n    return qu' at line 1")

-----------
QUERY:


select * from ret_query2(8);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(8)' at line 1")

-----------
QUERY:


-- test EXECUTE USING
create function exc_using(int, text) returns int as $$
declare i int;
begin
  for i in execute 'select * from generate_series(1,$1)' using $1+1 loop
    raise notice '%', i;
  end loop;
  execute 'select $2 + $2*3 + length($1)' into i using $2,$1;
  return i;
end
$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'int, text) returns int as $$\ndeclare i int;\nbegin\n  for i in execute 'select * f' at line 2")

-----------
QUERY:


select exc_using(5, 'foobar');
RESULT:
	ERROR - (1305, 'FUNCTION test.exc_using does not exist')

-----------
QUERY:


drop function exc_using(int, text);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(int, text)' at line 1")

-----------
QUERY:


create or replace function exc_using(int) returns void as $$
declare
  c refcursor;
  i int;
begin
  open c for execute 'select * from generate_series(1,$1)' using $1+1;
  loop
    fetch c into i;
    exit when not found;
    raise notice '%', i;
  end loop;
  close c;
  return;
end;
$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'function exc_using(int) returns void as $$\ndeclare\n  c refcursor;\n  i int;\nbegin' at line 1")

-----------
QUERY:


select exc_using(5);
RESULT:
	ERROR - (1305, 'FUNCTION test.exc_using does not exist')

-----------
QUERY:


drop function exc_using(int);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(int)' at line 1")

-----------
QUERY:


-- test FOR-over-cursor

create or replace function forc01() returns void as $$
declare
  c cursor(r1 integer, r2 integer)
       for select * from generate_series(r1,r2) i;
  c2 cursor
       for select * from generate_series(41,43) i;
begin
  -- assign portal names to cursors to get stable output
  c := 'c';
  c2 := 'c2';
  for r in c(5,7) loop
    raise notice '% from %', r.i, c;
  end loop;
  -- again, to test if cursor was closed properly
  for r in c(9,10) loop
    raise notice '% from %', r.i, c;
  end loop;
  -- and test a parameterless cursor
  for r in c2 loop
    raise notice '% from %', r.i, c2;
  end loop;
  -- and try it with a hand-assigned name
  raise notice 'after loop, c2 = %', c2;
  c2 := 'special_name';
  for r in c2 loop
    raise notice '% from %', r.i, c2;
  end loop;
  raise notice 'after loop, c2 = %', c2;
  -- and try it with a generated name
  -- (which we can/* REPLACED */ ''t show in the output because it/* REPLACED */ ''s variable)
  c2 := null;
  for r in c2 loop
    raise notice '%', r.i;
  end loop;
  raise notice 'after loop, c2 = %', c2;
  return;
end;
$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'function forc01() returns void as $$\ndeclare\n  c cursor(r1 integer, r2 integer)\n' at line 3")

-----------
QUERY:


select forc01();
RESULT:
	ERROR - (1305, 'FUNCTION test.forc01 does not exist')

-----------
QUERY:


-- try updating the cursor/* REPLACED */ ''s current row

create temp table forc_test as
  select n as i, n as j from generate_series(1,10) n;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'temp table forc_test as\n  select n as i, n as j from generate_series(1,10) n' at line 3")

-----------
QUERY:


create or replace function forc01() returns void as $$
declare
  c cursor for select * from forc_test;
begin
  for r in c loop
    raise notice '%, %', r.i, r.j;
    update forc_test set i = i * 100, j = r.j * 2 where current of c;
  end loop;
end;
$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'function forc01() returns void as $$\ndeclare\n  c cursor for select * from forc_t' at line 1")

-----------
QUERY:


select forc01();
RESULT:
	ERROR - (1305, 'FUNCTION test.forc01 does not exist')

-----------
QUERY:


select * from forc_test;
RESULT:
	ERROR - (1146, "Table 'test.forc_test' doesn't exist")

-----------
QUERY:


-- same, with a cursor whose portal name doesn/* REPLACED */ ''t match variable name
create or replace function forc01() returns void as $$
declare
  c refcursor := 'fooled_ya';
  r record;
begin
  open c for select * from forc_test;
  loop
    fetch c into r;
    exit when not found;
    raise notice '%, %', r.i, r.j;
    update forc_test set i = i * 100, j = r.j * 2 where current of c;
  end loop;
end;
$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'function forc01() returns void as $$\ndeclare\n  c refcursor := 'fooled_ya';\n  r r' at line 2")

-----------
QUERY:


select forc01();
RESULT:
	ERROR - (1305, 'FUNCTION test.forc01 does not exist')

-----------
QUERY:


select * from forc_test;
RESULT:
	ERROR - (1146, "Table 'test.forc_test' doesn't exist")

-----------
QUERY:


drop function forc01();
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '()' at line 1")

-----------
QUERY:


-- it/* REPLACED */ ''s okay to re-use a cursor variable name, even when bound

do $$
declare cnt int := 0;
  c1 cursor for select * from forc_test;
begin
  for r1 in c1 loop
    declare c1 cursor for select * from forc_test;
    begin
      for r2 in c1 loop
        cnt := cnt + 1;
      end loop;
    end;
  end loop;
  raise notice 'cnt = %', cnt;
end $$;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'declare cnt int := 0;\n  c1 cursor for select * from forc_test;\nbegin\n  for r1 in' at line 4")

-----------
QUERY:


-- fail because cursor has no query bound to it

create or replace function forc_bad() returns void as $$
declare
  c refcursor;
begin
  for r in c loop
    raise notice '%', r.i;
  end loop;
end;
$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'function forc_bad() returns void as $$\ndeclare\n  c refcursor;\nbegin\n  for r in c' at line 3")

-----------
QUERY:


-- test RETURN QUERY EXECUTE

create or replace function return_dquery()
returns setof int as $$
begin
  return query execute 'select * from (values(10),(20)) f';
  return query execute 'select * from (values($1),($2)) f' using 40,50;
end;
$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'function return_dquery()\nreturns setof int as $$\nbegin\n  return query execute 's' at line 3")

-----------
QUERY:


select * from return_dquery();
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '()' at line 1")

-----------
QUERY:


drop function return_dquery();
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '()' at line 1")

-----------
QUERY:


-- test RETURN QUERY with dropped columns

create table tabwithcols(a int, b int, c int, d int);
RESULT:
	[]

-----------
QUERY:

insert into tabwithcols values(10,20,30,40),(50,60,70,80);
RESULT:
	[]

-----------
QUERY:


create or replace function returnqueryf()
returns setof tabwithcols as $$
begin
  return query select * from tabwithcols;
  return query execute 'select * from tabwithcols';
end;
$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'function returnqueryf()\nreturns setof tabwithcols as $$\nbegin\n  return query sel' at line 1")

-----------
QUERY:


select * from returnqueryf();
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '()' at line 1")

-----------
QUERY:


alter table tabwithcols drop column b;
RESULT:
	[]

-----------
QUERY:


select * from returnqueryf();
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '()' at line 1")

-----------
QUERY:


alter table tabwithcols drop column d;
RESULT:
	[]

-----------
QUERY:


select * from returnqueryf();
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '()' at line 1")

-----------
QUERY:


alter table tabwithcols add column d int;
RESULT:
	[]

-----------
QUERY:


select * from returnqueryf();
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '()' at line 1")

-----------
QUERY:


drop function returnqueryf();
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '()' at line 1")

-----------
QUERY:

drop table tabwithcols;
RESULT:
	[]

-----------
QUERY:


--
-- Tests for composite-type results
--

create type compostype as (x int, y varchar);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'type compostype as (x int, y varchar)' at line 5")

-----------
QUERY:


-- test: use of variable of composite type in return statement
create or replace function compos() returns compostype as $$
declare
  v compostype;
begin
  v := (1, 'hello');
  return v;
end;
$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'function compos() returns compostype as $$\ndeclare\n  v compostype;\nbegin\n  v := ' at line 2")

-----------
QUERY:


select compos();
RESULT:
	ERROR - (1305, 'FUNCTION test.compos does not exist')

-----------
QUERY:


-- test: use of variable of record type in return statement
create or replace function compos() returns compostype as $$
declare
  v record;
begin
  v := (1, 'hello'::varchar);
  return v;
end;
$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'function compos() returns compostype as $$\ndeclare\n  v record;\nbegin\n  v := (1, ' at line 2")

-----------
QUERY:


select compos();
RESULT:
	ERROR - (1305, 'FUNCTION test.compos does not exist')

-----------
QUERY:


-- test: use of row expr in return statement
create or replace function compos() returns compostype as $$
begin
  return (1, 'hello'::varchar);
end;
$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'function compos() returns compostype as $$\nbegin\n  return (1, 'hello'::varchar);' at line 2")

-----------
QUERY:


select compos();
RESULT:
	ERROR - (1305, 'FUNCTION test.compos does not exist')

-----------
QUERY:


-- this does not work currently (no implicit casting)
create or replace function compos() returns compostype as $$
begin
  return (1, 'hello');
end;
$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'function compos() returns compostype as $$\nbegin\n  return (1, 'hello');\nend;\n$$ ' at line 2")

-----------
QUERY:


select compos();
RESULT:
	ERROR - (1305, 'FUNCTION test.compos does not exist')

-----------
QUERY:


-- ... but this does
create or replace function compos() returns compostype as $$
begin
  return (1, 'hello')::compostype;
end;
$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'function compos() returns compostype as $$\nbegin\n  return (1, 'hello')::composty' at line 2")

-----------
QUERY:


select compos();
RESULT:
	ERROR - (1305, 'FUNCTION test.compos does not exist')

-----------
QUERY:


drop function compos();
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '()' at line 1")

-----------
QUERY:


-- test: return a row expr as record.
create or replace function composrec() returns record as $$
declare
  v record;
begin
  v := (1, 'hello');
  return v;
end;
$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'function composrec() returns record as $$\ndeclare\n  v record;\nbegin\n  v := (1, '' at line 2")

-----------
QUERY:


select composrec();
RESULT:
	ERROR - (1305, 'FUNCTION test.composrec does not exist')

-----------
QUERY:


-- test: return row expr in return statement.
create or replace function composrec() returns record as $$
begin
  return (1, 'hello');
end;
$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'function composrec() returns record as $$\nbegin\n  return (1, 'hello');\nend;\n$$ l' at line 2")

-----------
QUERY:


select composrec();
RESULT:
	ERROR - (1305, 'FUNCTION test.composrec does not exist')

-----------
QUERY:


drop function composrec();
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '()' at line 1")

-----------
QUERY:


-- test: row expr in RETURN NEXT statement.
create or replace function compos() returns setof compostype as $$
begin
  for i in 1..3
  loop
    return next (1, 'hello'::varchar);
  end loop;
  return next null::compostype;
  return next (2, 'goodbye')::compostype;
end;
$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'function compos() returns setof compostype as $$\nbegin\n  for i in 1..3\n  loop\n  ' at line 2")

-----------
QUERY:


select * from compos();
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '()' at line 1")

-----------
QUERY:


drop function compos();
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '()' at line 1")

-----------
QUERY:


-- test: use invalid expr in return statement.
create or replace function compos() returns compostype as $$
begin
  return 1 + 1;
end;
$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'function compos() returns compostype as $$\nbegin\n  return 1 + 1;\nend;\n$$ languag' at line 2")

-----------
QUERY:


select compos();
RESULT:
	ERROR - (1305, 'FUNCTION test.compos does not exist')

-----------
QUERY:


-- RETURN variable is a different code path ...
create or replace function compos() returns compostype as $$
declare x int := 42;
begin
  return x;
end;
$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'function compos() returns compostype as $$\ndeclare x int := 42;\nbegin\n  return x' at line 2")

-----------
QUERY:


select * from compos();
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '()' at line 1")

-----------
QUERY:


drop function compos();
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '()' at line 1")

-----------
QUERY:


-- test: invalid use of composite variable in scalar-returning function
create or replace function compos() returns int as $$
declare
  v compostype;
begin
  v := (1, 'hello');
  return v;
end;
$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'function compos() returns int as $$\ndeclare\n  v compostype;\nbegin\n  v := (1, 'he' at line 2")

-----------
QUERY:


select compos();
RESULT:
	ERROR - (1305, 'FUNCTION test.compos does not exist')

-----------
QUERY:


-- test: invalid use of composite expression in scalar-returning function
create or replace function compos() returns int as $$
begin
  return (1, 'hello')::compostype;
end;
$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'function compos() returns int as $$\nbegin\n  return (1, 'hello')::compostype;\nend' at line 2")

-----------
QUERY:


select compos();
RESULT:
	ERROR - (1305, 'FUNCTION test.compos does not exist')

-----------
QUERY:


drop function compos();
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '()' at line 1")

-----------
QUERY:

drop type compostype;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'type compostype' at line 1")

-----------
QUERY:


--
-- Tests for 8.4/* REPLACED */ ''s new RAISE features
--

create or replace function raise_test() returns void as $$
begin
  raise notice '% % %', 1, 2, 3
     using errcode = '55001', detail = 'some detail info', hint = 'some hint';
  raise '% % %', 1, 2, 3
     using errcode = 'division_by_zero', detail = 'some detail info';
end;
$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'function raise_test() returns void as $$\nbegin\n  raise notice '% % %', 1, 2, 3\n ' at line 5")

-----------
QUERY:


select raise_test();
RESULT:
	ERROR - (1305, 'FUNCTION test.raise_test does not exist')

-----------
QUERY:


-- Since we can/* REPLACED */ ''t actually see the thrown SQLSTATE in default psql output,
-- test it like this /* REPLACED */ , this also tests re-RAISE

create or replace function raise_test() returns void as $$
begin
  raise 'check me'
     using errcode = 'division_by_zero', detail = 'some detail info';
  exception
    when others then
      raise notice 'SQLSTATE: % SQLERRM: %', sqlstate, sqlerrm;
      raise;
end;
$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'function raise_test() returns void as $$\nbegin\n  raise 'check me'\n     using err' at line 4")

-----------
QUERY:


select raise_test();
RESULT:
	ERROR - (1305, 'FUNCTION test.raise_test does not exist')

-----------
QUERY:


create or replace function raise_test() returns void as $$
begin
  raise 'check me'
     using errcode = '1234F', detail = 'some detail info';
  exception
    when others then
      raise notice 'SQLSTATE: % SQLERRM: %', sqlstate, sqlerrm;
      raise;
end;
$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'function raise_test() returns void as $$\nbegin\n  raise 'check me'\n     using err' at line 1")

-----------
QUERY:


select raise_test();
RESULT:
	ERROR - (1305, 'FUNCTION test.raise_test does not exist')

-----------
QUERY:


-- SQLSTATE specification in WHEN
create or replace function raise_test() returns void as $$
begin
  raise 'check me'
     using errcode = '1234F', detail = 'some detail info';
  exception
    when sqlstate '1234F' then
      raise notice 'SQLSTATE: % SQLERRM: %', sqlstate, sqlerrm;
      raise;
end;
$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'function raise_test() returns void as $$\nbegin\n  raise 'check me'\n     using err' at line 2")

-----------
QUERY:


select raise_test();
RESULT:
	ERROR - (1305, 'FUNCTION test.raise_test does not exist')

-----------
QUERY:


create or replace function raise_test() returns void as $$
begin
  raise division_by_zero using detail = 'some detail info';
  exception
    when others then
      raise notice 'SQLSTATE: % SQLERRM: %', sqlstate, sqlerrm;
      raise;
end;
$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'function raise_test() returns void as $$\nbegin\n  raise division_by_zero using de' at line 1")

-----------
QUERY:


select raise_test();
RESULT:
	ERROR - (1305, 'FUNCTION test.raise_test does not exist')

-----------
QUERY:


create or replace function raise_test() returns void as $$
begin
  raise division_by_zero;
end;
$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'function raise_test() returns void as $$\nbegin\n  raise division_by_zero;\nend;\n$$' at line 1")

-----------
QUERY:


select raise_test();
RESULT:
	ERROR - (1305, 'FUNCTION test.raise_test does not exist')

-----------
QUERY:


create or replace function raise_test() returns void as $$
begin
  raise sqlstate '1234F';
end;
$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'function raise_test() returns void as $$\nbegin\n  raise sqlstate '1234F';\nend;\n$$' at line 1")

-----------
QUERY:


select raise_test();
RESULT:
	ERROR - (1305, 'FUNCTION test.raise_test does not exist')

-----------
QUERY:


create or replace function raise_test() returns void as $$
begin
  raise division_by_zero using message = 'custom' || ' message';
end;
$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'function raise_test() returns void as $$\nbegin\n  raise division_by_zero using me' at line 1")

-----------
QUERY:


select raise_test();
RESULT:
	ERROR - (1305, 'FUNCTION test.raise_test does not exist')

-----------
QUERY:


create or replace function raise_test() returns void as $$
begin
  raise using message = 'custom' || ' message', errcode = '22012';
end;
$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'function raise_test() returns void as $$\nbegin\n  raise using message = 'custom' ' at line 1")

-----------
QUERY:


select raise_test();
RESULT:
	ERROR - (1305, 'FUNCTION test.raise_test does not exist')

-----------
QUERY:


-- conflict on message
create or replace function raise_test() returns void as $$
begin
  raise notice 'some message' using message = 'custom' || ' message', errcode = '22012';
end;
$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'function raise_test() returns void as $$\nbegin\n  raise notice 'some message' usi' at line 2")

-----------
QUERY:


select raise_test();
RESULT:
	ERROR - (1305, 'FUNCTION test.raise_test does not exist')

-----------
QUERY:


-- conflict on errcode
create or replace function raise_test() returns void as $$
begin
  raise division_by_zero using message = 'custom' || ' message', errcode = '22012';
end;
$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'function raise_test() returns void as $$\nbegin\n  raise division_by_zero using me' at line 2")

-----------
QUERY:


select raise_test();
RESULT:
	ERROR - (1305, 'FUNCTION test.raise_test does not exist')

-----------
QUERY:


-- nothing to re-RAISE
create or replace function raise_test() returns void as $$
begin
  raise;
end;
$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'function raise_test() returns void as $$\nbegin\n  raise;\nend;\n$$ language plpgsql' at line 2")

-----------
QUERY:


select raise_test();
RESULT:
	ERROR - (1305, 'FUNCTION test.raise_test does not exist')

-----------
QUERY:


-- test access to exception data
create function zero_divide() returns int as $$
declare v int := 0;
begin
  return 10 / v;
end;
$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'as $$\ndeclare v int := 0;\nbegin\n  return 10 / v;\nend;\n$$ language plpgsql' at line 2")

-----------
QUERY:


create or replace function raise_test() returns void as $$
begin
  raise exception 'custom exception'
     using detail = 'some detail of custom exception',
           hint = 'some hint related to custom exception';
end;
$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'function raise_test() returns void as $$\nbegin\n  raise exception 'custom excepti' at line 1")

-----------
QUERY:


create function stacked_diagnostics_test() returns void as $$
declare _sqlstate text;
        _message text;
        _context text;
begin
  perform zero_divide();
exception when others then
  get stacked diagnostics
        _sqlstate = returned_sqlstate,
        _message = message_text,
        _context = pg_exception_context;
  raise notice 'sqlstate: %, message: %, context: [%]',
    _sqlstate, _message, replace(_context, E'\n', ' <- ');
end;
$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'void as $$\ndeclare _sqlstate text;\n        _message text;\n        _context text;' at line 1")

-----------
QUERY:


select stacked_diagnostics_test();
RESULT:
	ERROR - (1305, 'FUNCTION test.stacked_diagnostics_test does not exist')

-----------
QUERY:


create or replace function stacked_diagnostics_test() returns void as $$
declare _detail text;
        _hint text;
        _message text;
begin
  perform raise_test();
exception when others then
  get stacked diagnostics
        _message = message_text,
        _detail = pg_exception_detail,
        _hint = pg_exception_hint;
  raise notice 'message: %, detail: %, hint: %', _message, _detail, _hint;
end;
$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'function stacked_diagnostics_test() returns void as $$\ndeclare _detail text;\n   ' at line 1")

-----------
QUERY:


select stacked_diagnostics_test();
RESULT:
	ERROR - (1305, 'FUNCTION test.stacked_diagnostics_test does not exist')

-----------
QUERY:


-- fail, cannot use stacked diagnostics statement outside handler
create or replace function stacked_diagnostics_test() returns void as $$
declare _detail text;
        _hint text;
        _message text;
begin
  get stacked diagnostics
        _message = message_text,
        _detail = pg_exception_detail,
        _hint = pg_exception_hint;
  raise notice 'message: %, detail: %, hint: %', _message, _detail, _hint;
end;
$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'function stacked_diagnostics_test() returns void as $$\ndeclare _detail text;\n   ' at line 2")

-----------
QUERY:


select stacked_diagnostics_test();
RESULT:
	ERROR - (1305, 'FUNCTION test.stacked_diagnostics_test does not exist')

-----------
QUERY:


drop function zero_divide();
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '()' at line 1")

-----------
QUERY:

drop function stacked_diagnostics_test();
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '()' at line 1")

-----------
QUERY:


-- check cases where implicit SQLSTATE variable could be confused with
-- SQLSTATE as a keyword, cf bug #5524
create or replace function raise_test() returns void as $$
begin
  perform 1/0;
exception
  when sqlstate '22012' then
    raise notice using message = sqlstate;
    raise sqlstate '22012' using message = 'substitute message';
end;
$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'function raise_test() returns void as $$\nbegin\n  perform 1/0;\nexception\n  when s' at line 3")

-----------
QUERY:


select raise_test();
RESULT:
	ERROR - (1305, 'FUNCTION test.raise_test does not exist')

-----------
QUERY:


drop function raise_test();
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '()' at line 1")

-----------
QUERY:


-- test passing column_name, constraint_name, datatype_name, table_name
-- and schema_name error fields

create or replace function stacked_diagnostics_test() returns void as $$
declare _column_name text;
        _constraint_name text;
        _datatype_name text;
        _table_name text;
        _schema_name text;
begin
  raise exception using
    column = '>>some column name<<',
    constraint = '>>some constraint name<<',
    datatype = '>>some datatype name<<',
    table = '>>some table name<<',
    schema = '>>some schema name<<';
exception when others then
  get stacked diagnostics
        _column_name = column_name,
        _constraint_name = constraint_name,
        _datatype_name = pg_datatype_name,
        _table_name = table_name,
        _schema_name = schema_name;
  raise notice 'column %, constraint %, type %, table %, schema %',
    _column_name, _constraint_name, _datatype_name, _table_name, _schema_name;
end;
$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'function stacked_diagnostics_test() returns void as $$\ndeclare _column_name text' at line 4")

-----------
QUERY:


select stacked_diagnostics_test();
RESULT:
	ERROR - (1305, 'FUNCTION test.stacked_diagnostics_test does not exist')

-----------
QUERY:


drop function stacked_diagnostics_test();
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '()' at line 1")

-----------
QUERY:


-- test variadic functions

create or replace function vari(variadic int[])
returns void as $$
begin
  for i in array_lower($1,1)..array_upper($1,1) loop
    raise notice '%', $1[i];
  end loop; end;
$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'function vari(variadic int[])\nreturns void as $$\nbegin\n  for i in array_lower($1' at line 3")

-----------
QUERY:


select vari(1,2,3,4,5);
RESULT:
	ERROR - (1305, 'FUNCTION test.vari does not exist')

-----------
QUERY:

select vari(3,4,5);
RESULT:
	ERROR - (1305, 'FUNCTION test.vari does not exist')

-----------
QUERY:

select vari(variadic array[5,6,7]);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '[5,6,7])' at line 1")

-----------
QUERY:


drop function vari(int[]);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(int[])' at line 1")

-----------
QUERY:


-- coercion test
create or replace function pleast(variadic numeric[])
returns numeric as $$
declare aux numeric = $1[array_lower($1,1)];
begin
  for i in array_lower($1,1)+1..array_upper($1,1) loop
    if $1[i] < aux then aux := $1[i]; end if;
  end loop;
  return aux;
end;
$$ language plpgsql immutable strict;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'function pleast(variadic numeric[])\nreturns numeric as $$\ndeclare aux numeric = ' at line 2")

-----------
QUERY:


select pleast(10,1,2,3,-16);
RESULT:
	ERROR - (1305, 'FUNCTION test.pleast does not exist')

-----------
QUERY:

select pleast(10.2,2.2,-1.1);
RESULT:
	ERROR - (1305, 'FUNCTION test.pleast does not exist')

-----------
QUERY:

select pleast(10.2,10, -20);
RESULT:
	ERROR - (1305, 'FUNCTION test.pleast does not exist')

-----------
QUERY:

select pleast(10,20, -1.0);
RESULT:
	ERROR - (1305, 'FUNCTION test.pleast does not exist')

-----------
QUERY:


-- in case of conflict, non-variadic version is preferred
create or replace function pleast(numeric)
returns numeric as $$
begin
  raise notice 'non-variadic function called';
  return $1;
end;
$$ language plpgsql immutable strict;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'function pleast(numeric)\nreturns numeric as $$\nbegin\n  raise notice 'non-variadi' at line 2")

-----------
QUERY:


select pleast(10);
RESULT:
	ERROR - (1305, 'FUNCTION test.pleast does not exist')

-----------
QUERY:


drop function pleast(numeric[]);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(numeric[])' at line 1")

-----------
QUERY:

drop function pleast(numeric);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(numeric)' at line 1")

-----------
QUERY:


-- test table functions

create function tftest(int) returns table(a int, b int) as $$
begin
  return query select $1, $1+i from generate_series(1,5) g(i);
end;
$$ language plpgsql immutable strict;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'int) returns table(a int, b int) as $$\nbegin\n  return query select $1, $1+i from' at line 3")

-----------
QUERY:


select * from tftest(10);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(10)' at line 1")

-----------
QUERY:


create or replace function tftest(a1 int) returns table(a int, b int) as $$
begin
  a := a1; b := a1 + 1;
  return next;
  a := a1 * 10; b := a1 * 10 + 1;
  return next;
end;
$$ language plpgsql immutable strict;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'function tftest(a1 int) returns table(a int, b int) as $$\nbegin\n  a := a1; b := ' at line 1")

-----------
QUERY:


select * from tftest(10);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(10)' at line 1")

-----------
QUERY:


drop function tftest(int);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(int)' at line 1")

-----------
QUERY:


create function rttest()
returns setof int as $$
declare rc int;
begin
  return query values(10),(20);
  get diagnostics rc = row_count;
  raise notice '% %', found, rc;
  return query select * from (values(10),(20)) f(a) where false;
  get diagnostics rc = row_count;
  raise notice '% %', found, rc;
  return query execute 'values(10),(20)';
  get diagnostics rc = row_count;
  raise notice '% %', found, rc;
  return query execute 'select * from (values(10),(20)) f(a) where false';
  get diagnostics rc = row_count;
  raise notice '% %', found, rc;
end;
$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'setof int as $$\ndeclare rc int;\nbegin\n  return query values(10),(20);\n  get diag' at line 2")

-----------
QUERY:


select * from rttest();
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '()' at line 1")

-----------
QUERY:


-- check some error cases, too

create or replace function rttest()
returns setof int as $$
begin
  return query select 10 into no_such_table;
end;
$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'function rttest()\nreturns setof int as $$\nbegin\n  return query select 10 into no' at line 3")

-----------
QUERY:


select * from rttest();
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '()' at line 1")

-----------
QUERY:


create or replace function rttest()
returns setof int as $$
begin
  return query execute 'select 10 into no_such_table';
end;
$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'function rttest()\nreturns setof int as $$\nbegin\n  return query execute 'select 1' at line 1")

-----------
QUERY:


select * from rttest();
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '()' at line 1")

-----------
QUERY:


select * from no_such_table;
RESULT:
	ERROR - (1146, "Table 'test.no_such_table' doesn't exist")

-----------
QUERY:


drop function rttest();
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '()' at line 1")

-----------
QUERY:


-- Test for proper cleanup at subtransaction exit.  This example
-- exposed a bug in PG 8.2.

CREATE FUNCTION leaker_1(fail BOOL) RETURNS INTEGER AS $$
DECLARE
  v_var INTEGER;
BEGIN
  BEGIN
    v_var := (leaker_2(fail)).error_code;
  EXCEPTION
    WHEN others THEN RETURN 0;
  END;
  RETURN 1;
END;
$$ LANGUAGE plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'AS $$\nDECLARE\n  v_var INTEGER;\nBEGIN\n  BEGIN\n    v_var := (leaker_2(fail)).error' at line 4")

-----------
QUERY:


CREATE FUNCTION leaker_2(fail BOOL, OUT error_code INTEGER, OUT new_id INTEGER)
  RETURNS RECORD AS $$
BEGIN
  IF fail THEN
    RAISE EXCEPTION 'fail ...';
  END IF;
  error_code := 1;
  new_id := 1;
  RETURN;
END;
$$ LANGUAGE plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'OUT error_code INTEGER, OUT new_id INTEGER)\n  RETURNS RECORD AS $$\nBEGIN\n  IF fa' at line 1")

-----------
QUERY:


SELECT * FROM leaker_1(false);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(false)' at line 1")

-----------
QUERY:

SELECT * FROM leaker_1(true);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(true)' at line 1")

-----------
QUERY:


DROP FUNCTION leaker_1(bool);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(bool)' at line 1")

-----------
QUERY:

DROP FUNCTION leaker_2(bool);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(bool)' at line 1")

-----------
QUERY:


-- Test for appropriate cleanup of non-simple expression evaluations
-- (bug in all versions prior to August 2010)

CREATE FUNCTION nonsimple_expr_test() RETURNS text[] AS $$
DECLARE
  arr text[];
  lr text;
  i integer;
BEGIN
  arr := array[array['foo','bar'], array['baz', 'quux']];
  lr := 'fool';
  i := 1;
  -- use sub-SELECTs to make expressions non-simple
  arr[(SELECT i)][(SELECT i+1)] := (SELECT lr);
  RETURN arr;
END;
$$ LANGUAGE plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '[] AS $$\nDECLARE\n  arr text[];\n  lr text;\n  i integer;\nBEGIN\n  arr := array[arra' at line 4")

-----------
QUERY:


SELECT nonsimple_expr_test();
RESULT:
	ERROR - (1305, 'FUNCTION test.nonsimple_expr_test does not exist')

-----------
QUERY:


DROP FUNCTION nonsimple_expr_test();
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '()' at line 1")

-----------
QUERY:


CREATE FUNCTION nonsimple_expr_test() RETURNS integer AS $$
declare
   i integer NOT NULL := 0;
begin
  begin
    i := (SELECT NULL::integer);  -- should throw error
  exception
    WHEN OTHERS THEN
      i := (SELECT 1::integer);
  end;
  return i;
end;
$$ LANGUAGE plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'AS $$\ndeclare\n   i integer NOT NULL := 0;\nbegin\n  begin\n    i := (SELECT NULL::i' at line 1")

-----------
QUERY:


SELECT nonsimple_expr_test();
RESULT:
	ERROR - (1305, 'FUNCTION test.nonsimple_expr_test does not exist')

-----------
QUERY:


DROP FUNCTION nonsimple_expr_test();
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '()' at line 1")

-----------
QUERY:


--
-- Test cases involving recursion and error recovery in simple expressions
-- (bugs in all versions before October 2010).  The problems are most
-- easily exposed by mutual recursion between plpgsql and sql functions.
--

create function recurse(float8) returns float8 as
$$
begin
  if ($1 > 0) then
    return sql_recurse($1 - 1);
  else
    return $1;
  end if;
end;
$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'float8) returns float8 as\n$$\nbegin\n  if ($1 > 0) then\n    return sql_recurse($1 ' at line 7")

-----------
QUERY:


-- /* REPLACED */ ''limit/* REPLACED */ '' is to prevent this from being inlined
create function sql_recurse(float8) returns float8 as
$$ select recurse($1) limit 1; $$ language sql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'float8) returns float8 as\n$$ select recurse($1) limit 1; $$ language sql' at line 2")

-----------
QUERY:


select recurse(10);
RESULT:
	ERROR - (1305, 'FUNCTION test.recurse does not exist')

-----------
QUERY:


create function error1(text) returns text language sql as
$$ SELECT relname::text FROM pg_class c WHERE c.oid = $1::regclass $$;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ') returns text language sql as\n$$ SELECT relname::text FROM pg_class c WHERE c.o' at line 1")

-----------
QUERY:


create function error2(p_name_table text) returns text language plpgsql as $$
begin
  return error1(p_name_table);
end$$;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'plpgsql as $$\nbegin\n  return error1(p_name_table);\nend$$' at line 1")

-----------
QUERY:


BEGIN;
RESULT:
	[]

-----------
QUERY:

create table public.stuffs (stuff text);
RESULT:
	ERROR - (1049, "Unknown database 'public'")

-----------
QUERY:

SAVEPOINT a;
RESULT:
	[]

-----------
QUERY:

select error2('nonexistent.stuffs');
RESULT:
	ERROR - (1305, 'FUNCTION test.error2 does not exist')

-----------
QUERY:

ROLLBACK TO a;
RESULT:
	[]

-----------
QUERY:

select error2('public.stuffs');
RESULT:
	ERROR - (1305, 'FUNCTION test.error2 does not exist')

-----------
QUERY:

rollback;
RESULT:
	[]

-----------
QUERY:


drop function error2(p_name_table text);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(p_name_table text)' at line 1")

-----------
QUERY:

drop function error1(text);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(text)' at line 1")

-----------
QUERY:


-- Test for proper handling of cast-expression caching

create function sql_to_date(integer) returns date as $$
select $1::text::date
$$ language sql immutable strict;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'integer) returns date as $$\nselect $1::text::date\n$$ language sql immutable stri' at line 3")

-----------
QUERY:


create cast (integer as date) with function sql_to_date(integer) as assignment;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'cast (integer as date) with function sql_to_date(integer) as assignment' at line 1")

-----------
QUERY:


create function cast_invoker(integer) returns date as $$
begin
  return $1;
end$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'integer) returns date as $$\nbegin\n  return $1;\nend$$ language plpgsql' at line 1")

-----------
QUERY:


select cast_invoker(20150717);
RESULT:
	ERROR - (1305, 'FUNCTION test.cast_invoker does not exist')

-----------
QUERY:

select cast_invoker(20150718);
RESULT:
	ERROR - (1305, 'FUNCTION test.cast_invoker does not exist')

-----------
QUERY:
  -- second call crashed in pre-release 9.5

begin;
RESULT:
	[]

-----------
QUERY:

select cast_invoker(20150717);
RESULT:
	ERROR - (1305, 'FUNCTION test.cast_invoker does not exist')

-----------
QUERY:

select cast_invoker(20150718);
RESULT:
	ERROR - (1305, 'FUNCTION test.cast_invoker does not exist')

-----------
QUERY:

savepoint s1;
RESULT:
	[]

-----------
QUERY:

select cast_invoker(20150718);
RESULT:
	ERROR - (1305, 'FUNCTION test.cast_invoker does not exist')

-----------
QUERY:

select cast_invoker(-1);
RESULT:
	ERROR - (1305, 'FUNCTION test.cast_invoker does not exist')

-----------
QUERY:
 -- fails
rollback to savepoint s1;
RESULT:
	[]

-----------
QUERY:

select cast_invoker(20150719);
RESULT:
	ERROR - (1305, 'FUNCTION test.cast_invoker does not exist')

-----------
QUERY:

select cast_invoker(20150720);
RESULT:
	ERROR - (1305, 'FUNCTION test.cast_invoker does not exist')

-----------
QUERY:

commit;
RESULT:
	[]

-----------
QUERY:


drop function cast_invoker(integer);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(integer)' at line 1")

-----------
QUERY:

drop function sql_to_date(integer) cascade;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(integer) cascade' at line 1")

-----------
QUERY:


-- Test handling of cast cache inside DO blocks
-- (to check the original crash case, this must be a cast not previously
-- used in this session)

begin;
RESULT:
	[]

-----------
QUERY:

do $$ declare x text[]; begin x := '{1.23, 4.56}'::numeric[]; end $$;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'declare x text[]; begin x := '{1.23, 4.56}'::numeric[]; end $$' at line 1")

-----------
QUERY:

do $$ declare x text[]; begin x := '{1.23, 4.56}'::numeric[]; end $$;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'declare x text[]; begin x := '{1.23, 4.56}'::numeric[]; end $$' at line 1")

-----------
QUERY:

end;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end' at line 1")

-----------
QUERY:


-- Test for consistent reporting of error context

create function fail() returns int language plpgsql as $$
begin
  return 1/0;
end
$$;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'plpgsql as $$\nbegin\n  return 1/0;\nend\n$$' at line 3")

-----------
QUERY:


select fail();
RESULT:
	ERROR - (1305, 'FUNCTION test.fail does not exist')

-----------
QUERY:

select fail();
RESULT:
	ERROR - (1305, 'FUNCTION test.fail does not exist')

-----------
QUERY:


drop function fail();
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '()' at line 1")

-----------
QUERY:


-- Test handling of string literals.

set standard_conforming_strings = off;
RESULT:
	ERROR - (1193, "Unknown system variable 'standard_conforming_strings'")

-----------
QUERY:


create or replace function strtest() returns text as $$
begin
  raise notice 'foo\\bar\041baz';
  return 'foo\\bar\041baz';
end
$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'function strtest() returns text as $$\nbegin\n  raise notice 'foo\\\\bar\\041baz';\n  ' at line 1")

-----------
QUERY:


select strtest();
RESULT:
	ERROR - (1305, 'FUNCTION test.strtest does not exist')

-----------
QUERY:


create or replace function strtest() returns text as $$
begin
  raise notice E'foo\\bar\041baz';
  return E'foo\\bar\041baz';
end
$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'function strtest() returns text as $$\nbegin\n  raise notice E'foo\\\\bar\\041baz';\n ' at line 1")

-----------
QUERY:


select strtest();
RESULT:
	ERROR - (1305, 'FUNCTION test.strtest does not exist')

-----------
QUERY:


set standard_conforming_strings = on;
RESULT:
	ERROR - (1193, "Unknown system variable 'standard_conforming_strings'")

-----------
QUERY:


create or replace function strtest() returns text as $$
begin
  raise notice 'foo\\bar\041baz\';
  return 'foo\\bar\041baz\';
end
$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'function strtest() returns text as $$\nbegin\n  raise notice 'foo\\\\bar\\041baz\\';\n ' at line 1")

-----------
QUERY:


select strtest();
RESULT:
	ERROR - (1305, 'FUNCTION test.strtest does not exist')

-----------
QUERY:


create or replace function strtest() returns text as $$
begin
  raise notice E'foo\\bar\041baz';
  return E'foo\\bar\041baz';
end
$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'function strtest() returns text as $$\nbegin\n  raise notice E'foo\\\\bar\\041baz';\n ' at line 1")

-----------
QUERY:


select strtest();
RESULT:
	ERROR - (1305, 'FUNCTION test.strtest does not exist')

-----------
QUERY:


drop function strtest();
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '()' at line 1")

-----------
QUERY:


-- Test anonymous code blocks.

DO $$
DECLARE r record;
BEGIN
    FOR r IN SELECT rtrim(roomno) AS roomno, comment FROM Room ORDER BY roomno
    LOOP
        RAISE NOTICE '%, %', r.roomno, r.comment;
    END LOOP;
END$$;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'DECLARE r record;\nBEGIN\n    FOR r IN SELECT rtrim(roomno) AS roomno, comment FRO' at line 4")

-----------
QUERY:


-- these are to check syntax error reporting
DO LANGUAGE plpgsql $$begin return 1; end$$;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '$$begin return 1; end$$' at line 2")

-----------
QUERY:


DO $$
DECLARE r record;
BEGIN
    FOR r IN SELECT rtrim(roomno) AS roomno, foo FROM Room ORDER BY roomno
    LOOP
        RAISE NOTICE '%, %', r.roomno, r.comment;
    END LOOP;
END$$;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'DECLARE r record;\nBEGIN\n    FOR r IN SELECT rtrim(roomno) AS roomno, foo FROM Ro' at line 2")

-----------
QUERY:


-- Check handling of errors thrown from/into anonymous code blocks.
do $outer$
begin
  for i in 1..10 loop
   begin
    execute $ex$
      do $$
      declare x int = 0;
      begin
        x := 1 / x;
      end;
      $$;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'for i in 1..10 loop\n   begin\n    execute $ex$\n      do $$\n      declare x int = ' at line 4")

-----------
QUERY:

    $ex$;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '$ex$' at line 1")

-----------
QUERY:

  exception when division_by_zero then
    raise notice 'caught division by zero';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'exception when division_by_zero then\n    raise notice 'caught division by zero'' at line 1")

-----------
QUERY:

  end;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end' at line 1")

-----------
QUERY:

  end loop;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end loop' at line 1")

-----------
QUERY:

end;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'end' at line 1")

-----------
QUERY:

$outer$;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '$outer$' at line 1")

-----------
QUERY:


-- Check variable scoping -- a var is not available in its own or prior
-- default expressions, but it is available in later ones.

do $$
declare x int := x + 1;  -- error
begin
  raise notice 'x = %', x;
end;
$$;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'declare x int := x + 1;  -- error\nbegin\n  raise notice 'x = %', x;\nend;\n$$' at line 5")

-----------
QUERY:


do $$
declare y int := x + 1;  -- error
        x int := 42;
begin
  raise notice 'x = %, y = %', x, y;
end;
$$;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'declare y int := x + 1;  -- error\n        x int := 42;\nbegin\n  raise notice 'x =' at line 2")

-----------
QUERY:


do $$
declare x int := 42;
        y int := x + 1;
begin
  raise notice 'x = %, y = %', x, y;
end;
$$;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'declare x int := 42;\n        y int := x + 1;\nbegin\n  raise notice 'x = %, y = %'' at line 2")

-----------
QUERY:


do $$
declare x int := 42;
begin
  declare y int := x + 1;
          x int := x + 2;
          z int := x * 10;
  begin
    raise notice 'x = %, y = %, z = %', x, y, z;
  end;
end;
$$;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'declare x int := 42;\nbegin\n  declare y int := x + 1;\n          x int := x + 2;\n ' at line 2")

-----------
QUERY:


-- Check handling of conflicts between plpgsql vars and table columns.

set plpgsql.variable_conflict = error;
RESULT:
	ERROR - (1193, "Unknown system variable 'plpgsql.variable_conflict'")

-----------
QUERY:


create function conflict_test() returns setof int8_tbl as $$
declare r record;
  q1 bigint := 42;
begin
  for r in select q1,q2 from int8_tbl loop
    return next r;
  end loop;
end;
$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'setof int8_tbl as $$\ndeclare r record;\n  q1 bigint := 42;\nbegin\n  for r in selec' at line 1")

-----------
QUERY:


select * from conflict_test();
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '()' at line 1")

-----------
QUERY:


create or replace function conflict_test() returns setof int8_tbl as $$
#variable_conflict use_variable
declare r record;
  q1 bigint := 42;
begin
  for r in select q1,q2 from int8_tbl loop
    return next r;
  end loop;
end;
$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'function conflict_test() returns setof int8_tbl as $$\n#variable_conflict use_var' at line 1")

-----------
QUERY:


select * from conflict_test();
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '()' at line 1")

-----------
QUERY:


create or replace function conflict_test() returns setof int8_tbl as $$
#variable_conflict use_column
declare r record;
  q1 bigint := 42;
begin
  for r in select q1,q2 from int8_tbl loop
    return next r;
  end loop;
end;
$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'function conflict_test() returns setof int8_tbl as $$\n#variable_conflict use_col' at line 1")

-----------
QUERY:


select * from conflict_test();
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '()' at line 1")

-----------
QUERY:


drop function conflict_test();
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '()' at line 1")

-----------
QUERY:


-- Check that an unreserved keyword can be used as a variable name

create function unreserved_test() returns int as $$
declare
  forward int := 21;
begin
  forward := forward * 2;
  return forward;
end
$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'as $$\ndeclare\n  forward int := 21;\nbegin\n  forward := forward * 2;\n  return forw' at line 3")

-----------
QUERY:


select unreserved_test();
RESULT:
	ERROR - (1305, 'FUNCTION test.unreserved_test does not exist')

-----------
QUERY:


create or replace function unreserved_test() returns int as $$
declare
  return int := 42;
begin
  return := return + 1;
  return return;
end
$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'function unreserved_test() returns int as $$\ndeclare\n  return int := 42;\nbegin\n ' at line 1")

-----------
QUERY:


select unreserved_test();
RESULT:
	ERROR - (1305, 'FUNCTION test.unreserved_test does not exist')

-----------
QUERY:


create or replace function unreserved_test() returns int as $$
declare
  comment int := 21;
begin
  comment := comment * 2;
  comment on function unreserved_test() is 'this is a test';
  return comment;
end
$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'function unreserved_test() returns int as $$\ndeclare\n  comment int := 21;\nbegin\n' at line 1")

-----------
QUERY:


select unreserved_test();
RESULT:
	ERROR - (1305, 'FUNCTION test.unreserved_test does not exist')

-----------
QUERY:


select obj_description('unreserved_test()'::regprocedure, 'pg_proc');
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::regprocedure, 'pg_proc')' at line 1")

-----------
QUERY:


drop function unreserved_test();
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '()' at line 1")

-----------
QUERY:


--
-- Test FOREACH over arrays
--

create function foreach_test(anyarray)
returns void as $$
declare x int;
begin
  foreach x in array $1
  loop
    raise notice '%', x;
  end loop;
  end;
$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')\nreturns void as $$\ndeclare x int;\nbegin\n  foreach x in array $1\n  loop\n    rai' at line 5")

-----------
QUERY:


select foreach_test(ARRAY[1,2,3,4]);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '[1,2,3,4])' at line 1")

-----------
QUERY:

select foreach_test(ARRAY[[1,2],[3,4]]);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '[[1,2],[3,4]])' at line 1")

-----------
QUERY:


create or replace function foreach_test(anyarray)
returns void as $$
declare x int;
begin
  foreach x slice 1 in array $1
  loop
    raise notice '%', x;
  end loop;
  end;
$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'function foreach_test(anyarray)\nreturns void as $$\ndeclare x int;\nbegin\n  foreac' at line 1")

-----------
QUERY:


-- should fail
select foreach_test(ARRAY[1,2,3,4]);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '[1,2,3,4])' at line 2")

-----------
QUERY:

select foreach_test(ARRAY[[1,2],[3,4]]);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '[[1,2],[3,4]])' at line 1")

-----------
QUERY:


create or replace function foreach_test(anyarray)
returns void as $$
declare x int[];
begin
  foreach x slice 1 in array $1
  loop
    raise notice '%', x;
  end loop;
  end;
$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'function foreach_test(anyarray)\nreturns void as $$\ndeclare x int[];\nbegin\n  fore' at line 1")

-----------
QUERY:


select foreach_test(ARRAY[1,2,3,4]);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '[1,2,3,4])' at line 1")

-----------
QUERY:

select foreach_test(ARRAY[[1,2],[3,4]]);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '[[1,2],[3,4]])' at line 1")

-----------
QUERY:


-- higher level of slicing
create or replace function foreach_test(anyarray)
returns void as $$
declare x int[];
begin
  foreach x slice 2 in array $1
  loop
    raise notice '%', x;
  end loop;
  end;
$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'function foreach_test(anyarray)\nreturns void as $$\ndeclare x int[];\nbegin\n  fore' at line 2")

-----------
QUERY:


-- should fail
select foreach_test(ARRAY[1,2,3,4]);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '[1,2,3,4])' at line 2")

-----------
QUERY:

-- ok
select foreach_test(ARRAY[[1,2],[3,4]]);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '[[1,2],[3,4]])' at line 2")

-----------
QUERY:

select foreach_test(ARRAY[[[1,2]],[[3,4]]]);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '[[[1,2]],[[3,4]]])' at line 1")

-----------
QUERY:


create type xy_tuple AS (x int, y int);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'type xy_tuple AS (x int, y int)' at line 1")

-----------
QUERY:


-- iteration over array of records
create or replace function foreach_test(anyarray)
returns void as $$
declare r record;
begin
  foreach r in array $1
  loop
    raise notice '%', r;
  end loop;
  end;
$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'function foreach_test(anyarray)\nreturns void as $$\ndeclare r record;\nbegin\n  for' at line 2")

-----------
QUERY:


select foreach_test(ARRAY[(10,20),(40,69),(35,78)]::xy_tuple[]);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '[(10,20),(40,69),(35,78)]::xy_tuple[])' at line 1")

-----------
QUERY:

select foreach_test(ARRAY[[(10,20),(40,69)],[(35,78),(88,76)]]::xy_tuple[]);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '[[(10,20),(40,69)],[(35,78),(88,76)]]::xy_tuple[])' at line 1")

-----------
QUERY:


create or replace function foreach_test(anyarray)
returns void as $$
declare x int; y int;
begin
  foreach x, y in array $1
  loop
    raise notice 'x = %, y = %', x, y;
  end loop;
  end;
$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'function foreach_test(anyarray)\nreturns void as $$\ndeclare x int; y int;\nbegin\n ' at line 1")

-----------
QUERY:


select foreach_test(ARRAY[(10,20),(40,69),(35,78)]::xy_tuple[]);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '[(10,20),(40,69),(35,78)]::xy_tuple[])' at line 1")

-----------
QUERY:

select foreach_test(ARRAY[[(10,20),(40,69)],[(35,78),(88,76)]]::xy_tuple[]);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '[[(10,20),(40,69)],[(35,78),(88,76)]]::xy_tuple[])' at line 1")

-----------
QUERY:


-- slicing over array of composite types
create or replace function foreach_test(anyarray)
returns void as $$
declare x xy_tuple[];
begin
  foreach x slice 1 in array $1
  loop
    raise notice '%', x;
  end loop;
  end;
$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'function foreach_test(anyarray)\nreturns void as $$\ndeclare x xy_tuple[];\nbegin\n ' at line 2")

-----------
QUERY:


select foreach_test(ARRAY[(10,20),(40,69),(35,78)]::xy_tuple[]);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '[(10,20),(40,69),(35,78)]::xy_tuple[])' at line 1")

-----------
QUERY:

select foreach_test(ARRAY[[(10,20),(40,69)],[(35,78),(88,76)]]::xy_tuple[]);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '[[(10,20),(40,69)],[(35,78),(88,76)]]::xy_tuple[])' at line 1")

-----------
QUERY:


drop function foreach_test(anyarray);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(anyarray)' at line 1")

-----------
QUERY:

drop type xy_tuple;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'type xy_tuple' at line 1")

-----------
QUERY:


--
-- Assorted tests for array subscript assignment
--

create temp table rtype (id int, ar text[]);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'temp table rtype (id int, ar text[])' at line 5")

-----------
QUERY:


create function arrayassign1() returns text[] language plpgsql as $$
declare
 r record;
begin
  r := row(12, '{foo,bar,baz}')::rtype;
  r.ar[2] := 'replace';
  return r.ar;
end$$;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '[] language plpgsql as $$\ndeclare\n r record;\nbegin\n  r := row(12, '{foo,bar,baz}' at line 1")

-----------
QUERY:


select arrayassign1();
RESULT:
	ERROR - (1305, 'FUNCTION test.arrayassign1 does not exist')

-----------
QUERY:

select arrayassign1();
RESULT:
	ERROR - (1305, 'FUNCTION test.arrayassign1 does not exist')

-----------
QUERY:
 -- try again to exercise internal caching

create domain orderedarray as int[2]
  constraint sorted check (value[1] < value[2]);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'domain orderedarray as int[2]\n  constraint sorted check (value[1] < value[2])' at line 3")

-----------
QUERY:


select '{1,2}'::orderedarray;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::orderedarray' at line 1")

-----------
QUERY:

select '{2,1}'::orderedarray;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::orderedarray' at line 1")

-----------
QUERY:
  -- fail

create function testoa(x1 int, x2 int, x3 int) returns orderedarray
language plpgsql as $$
declare res orderedarray;
begin
  res := array[x1, x2];
  res[2] := x3;
  return res;
end$$;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'orderedarray\nlanguage plpgsql as $$\ndeclare res orderedarray;\nbegin\n  res := arr' at line 3")

-----------
QUERY:


select testoa(1,2,3);
RESULT:
	ERROR - (1305, 'FUNCTION test.testoa does not exist')

-----------
QUERY:

select testoa(1,2,3);
RESULT:
	ERROR - (1305, 'FUNCTION test.testoa does not exist')

-----------
QUERY:
 -- try again to exercise internal caching
select testoa(2,1,3);
RESULT:
	ERROR - (1305, 'FUNCTION test.testoa does not exist')

-----------
QUERY:
 -- fail at initial assign
select testoa(1,2,1);
RESULT:
	ERROR - (1305, 'FUNCTION test.testoa does not exist')

-----------
QUERY:
 -- fail at update

drop function arrayassign1();
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '()' at line 3")

-----------
QUERY:

drop function testoa(x1 int, x2 int, x3 int);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(x1 int, x2 int, x3 int)' at line 1")

-----------
QUERY:



--
-- Test handling of expanded arrays
--

create function returns_rw_array(int) returns int[]
language plpgsql as $$
  declare r int[];
  begin r := array[$1, $1]; return r; end;
$$ stable;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'int) returns int[]\nlanguage plpgsql as $$\n  declare r int[];\n  begin r := array[' at line 5")

-----------
QUERY:


create function consumes_rw_array(int[]) returns int
language plpgsql as $$
  begin return $1[1]; end;
$$ stable;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'int[]) returns int\nlanguage plpgsql as $$\n  begin return $1[1]; end;\n$$ stable' at line 1")

-----------
QUERY:


select consumes_rw_array(returns_rw_array(42));
RESULT:
	ERROR - (1305, 'FUNCTION test.consumes_rw_array does not exist')

-----------
QUERY:


-- bug #14174
explain (verbose, costs off)
select i, a from
  (select returns_rw_array(1) as a offset 0) ss,
  lateral consumes_rw_array(a) i;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'verbose, costs off)\nselect i, a from\n  (select returns_rw_array(1) as a offset 0' at line 2")

-----------
QUERY:


select i, a from
  (select returns_rw_array(1) as a offset 0) ss,
  lateral consumes_rw_array(a) i;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'offset 0) ss,\n  lateral consumes_rw_array(a) i' at line 2")

-----------
QUERY:


explain (verbose, costs off)
select consumes_rw_array(a), a from returns_rw_array(1) a;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'verbose, costs off)\nselect consumes_rw_array(a), a from returns_rw_array(1) a' at line 1")

-----------
QUERY:


select consumes_rw_array(a), a from returns_rw_array(1) a;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(1) a' at line 1")

-----------
QUERY:


explain (verbose, costs off)
select consumes_rw_array(a), a from
  (values (returns_rw_array(1)), (returns_rw_array(2))) v(a);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'verbose, costs off)\nselect consumes_rw_array(a), a from\n  (values (returns_rw_ar' at line 1")

-----------
QUERY:


select consumes_rw_array(a), a from
  (values (returns_rw_array(1)), (returns_rw_array(2))) v(a);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(returns_rw_array(1)), (returns_rw_array(2))) v(a)' at line 2")

-----------
QUERY:


do $$
declare a int[] := array[1,2];
begin
  a := a || 3;
  raise notice 'a = %', a;
end$$;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'declare a int[] := array[1,2];\nbegin\n  a := a || 3;\n  raise notice 'a = %', a;\ne' at line 2")

-----------
QUERY:



--
-- Test access to call stack
--

create function inner_func(int)
returns int as $$
declare _context text;
begin
  get diagnostics _context = pg_context;
  raise notice '***%***', _context;
  -- lets do it again, just for fun..
  get diagnostics _context = pg_context;
  raise notice '***%***', _context;
  raise notice 'lets make sure we didnt break anything';
  return 2 * $1;
end;
$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'int)\nreturns int as $$\ndeclare _context text;\nbegin\n  get diagnostics _context =' at line 5")

-----------
QUERY:


create or replace function outer_func(int)
returns int as $$
declare
  myresult int;
begin
  raise notice 'calling down into inner_func()';
  myresult := inner_func($1);
  raise notice 'inner_func() done';
  return myresult;
end;
$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'function outer_func(int)\nreturns int as $$\ndeclare\n  myresult int;\nbegin\n  raise' at line 1")

-----------
QUERY:


create or replace function outer_outer_func(int)
returns int as $$
declare
  myresult int;
begin
  raise notice 'calling down into outer_func()';
  myresult := outer_func($1);
  raise notice 'outer_func() done';
  return myresult;
end;
$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'function outer_outer_func(int)\nreturns int as $$\ndeclare\n  myresult int;\nbegin\n ' at line 1")

-----------
QUERY:


select outer_outer_func(10);
RESULT:
	ERROR - (1305, 'FUNCTION test.outer_outer_func does not exist')

-----------
QUERY:

-- repeated call should work
select outer_outer_func(20);
RESULT:
	ERROR - (1305, 'FUNCTION test.outer_outer_func does not exist')

-----------
QUERY:


drop function outer_outer_func(int);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(int)' at line 1")

-----------
QUERY:

drop function outer_func(int);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(int)' at line 1")

-----------
QUERY:

drop function inner_func(int);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(int)' at line 1")

-----------
QUERY:


-- access to call stack from exception
create function inner_func(int)
returns int as $$
declare
  _context text;
  sx int := 5;
begin
  begin
    perform sx / 0;
  exception
    when division_by_zero then
      get diagnostics _context = pg_context;
      raise notice '***%***', _context;
  end;

  -- lets do it again, just for fun..
  get diagnostics _context = pg_context;
  raise notice '***%***', _context;
  raise notice 'lets make sure we didnt break anything';
  return 2 * $1;
end;
$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'int)\nreturns int as $$\ndeclare\n  _context text;\n  sx int := 5;\nbegin\n  begin\n   ' at line 2")

-----------
QUERY:


create or replace function outer_func(int)
returns int as $$
declare
  myresult int;
begin
  raise notice 'calling down into inner_func()';
  myresult := inner_func($1);
  raise notice 'inner_func() done';
  return myresult;
end;
$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'function outer_func(int)\nreturns int as $$\ndeclare\n  myresult int;\nbegin\n  raise' at line 1")

-----------
QUERY:


create or replace function outer_outer_func(int)
returns int as $$
declare
  myresult int;
begin
  raise notice 'calling down into outer_func()';
  myresult := outer_func($1);
  raise notice 'outer_func() done';
  return myresult;
end;
$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'function outer_outer_func(int)\nreturns int as $$\ndeclare\n  myresult int;\nbegin\n ' at line 1")

-----------
QUERY:


select outer_outer_func(10);
RESULT:
	ERROR - (1305, 'FUNCTION test.outer_outer_func does not exist')

-----------
QUERY:

-- repeated call should work
select outer_outer_func(20);
RESULT:
	ERROR - (1305, 'FUNCTION test.outer_outer_func does not exist')

-----------
QUERY:


drop function outer_outer_func(int);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(int)' at line 1")

-----------
QUERY:

drop function outer_func(int);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(int)' at line 1")

-----------
QUERY:

drop function inner_func(int);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(int)' at line 1")

-----------
QUERY:


-- Test pg_routine_oid
create function current_function(text)
returns regprocedure as $$
declare
  fn_oid regprocedure;
begin
  get diagnostics fn_oid = pg_routine_oid;
  return fn_oid;
end;
$$ language plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')\nreturns regprocedure as $$\ndeclare\n  fn_oid regprocedure;\nbegin\n  get diagnost' at line 2")

-----------
QUERY:


select current_function('foo');
RESULT:
	ERROR - (1305, 'FUNCTION test.current_function does not exist')

-----------
QUERY:


drop function current_function(text);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(text)' at line 1")

-----------
QUERY:


-- shouldn/* REPLACED */ ''t fail in DO, even though there/* REPLACED */ ''s no useful data
do $$
declare
  fn_oid oid;
begin
  get diagnostics fn_oid = pg_routine_oid;
  raise notice 'pg_routine_oid = %', fn_oid;
end;
$$;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'declare\n  fn_oid oid;\nbegin\n  get diagnostics fn_oid = pg_routine_oid;\n  raise n' at line 3")

-----------
QUERY:


--
-- Test ASSERT
--

do $$
begin
  assert 1=1;  -- should succeed
end;
$$;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'assert 1=1;  -- should succeed\nend;\n$$' at line 7")

-----------
QUERY:


do $$
begin
  assert 1=0;  -- should fail
end;
$$;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'assert 1=0;  -- should fail\nend;\n$$' at line 3")

-----------
QUERY:


do $$
begin
  assert NULL;  -- should fail
end;
$$;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'assert NULL;  -- should fail\nend;\n$$' at line 3")

-----------
QUERY:


-- check controlling GUC
set plpgsql.check_asserts = off;
RESULT:
	ERROR - (1193, "Unknown system variable 'plpgsql.check_asserts'")

-----------
QUERY:

do $$
begin
  assert 1=0;  -- won/* REPLACED */ ''t be tested
end;
$$;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'assert 1=0;  -- won/* REPLACED */ ''t be tested\nend;\n$$' at line 3")

-----------
QUERY:

reset plpgsql.check_asserts;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'plpgsql.check_asserts' at line 1")

-----------
QUERY:


-- test custom message
do $$
declare var text := 'some value';
begin
  assert 1=0, format('assertion failed, var = "%s"', var);
end;
$$;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'declare var text := 'some value';\nbegin\n  assert 1=0, format('assertion failed, ' at line 3")

-----------
QUERY:


-- ensure assertions are not trapped by /* REPLACED */ ''others/* REPLACED */ ''
do $$
begin
  assert 1=0, 'unhandled assertion';
exception when others then
  null; -- do nothing
end;
$$;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'assert 1=0, 'unhandled assertion';\nexception when others then\n  null; -- do noth' at line 4")

-----------
QUERY:


-- Test use of plpgsql in a domain check constraint (cf. bug #14414)

create function plpgsql_domain_check(val int) returns boolean as $$
begin return val > 0; end
$$ language plpgsql immutable;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'as $$\nbegin return val > 0; end\n$$ language plpgsql immutable' at line 3")

-----------
QUERY:


create domain plpgsql_domain as integer check(plpgsql_domain_check(value));
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'domain plpgsql_domain as integer check(plpgsql_domain_check(value))' at line 1")

-----------
QUERY:


do $$
declare v_test plpgsql_domain;
begin
  v_test := 1;
end;
$$;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'declare v_test plpgsql_domain;\nbegin\n  v_test := 1;\nend;\n$$' at line 2")

-----------
QUERY:


do $$
declare v_test plpgsql_domain := 1;
begin
  v_test := 0;  -- fail
end;
$$;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'declare v_test plpgsql_domain := 1;\nbegin\n  v_test := 0;  -- fail\nend;\n$$' at line 2")

-----------
QUERY:


-- Test handling of expanded array passed to a domain constraint (bug #14472)

create function plpgsql_arr_domain_check(val int[]) returns boolean as $$
begin return val[1] > 0; end
$$ language plpgsql immutable;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '[]) returns boolean as $$\nbegin return val[1] > 0; end\n$$ language plpgsql immut' at line 3")

-----------
QUERY:


create domain plpgsql_arr_domain as int[] check(plpgsql_arr_domain_check(value));
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'domain plpgsql_arr_domain as int[] check(plpgsql_arr_domain_check(value))' at line 1")

-----------
QUERY:


do $$
declare v_test plpgsql_arr_domain;
begin
  v_test := array[1];
  v_test := v_test || 2;
end;
$$;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'declare v_test plpgsql_arr_domain;\nbegin\n  v_test := array[1];\n  v_test := v_tes' at line 2")

-----------
QUERY:


do $$
declare v_test plpgsql_arr_domain := array[1];
begin
  v_test := 0 || v_test;  -- fail
end;
$$;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'declare v_test plpgsql_arr_domain := array[1];\nbegin\n  v_test := 0 || v_test;  -' at line 2")

-----------
QUERY:


--
-- test usage of transition tables in AFTER triggers
--

CREATE TABLE transition_table_base (id int PRIMARY KEY, val text);
RESULT:
	[]

-----------
QUERY:


CREATE FUNCTION transition_table_base_ins_func()
  RETURNS trigger
  LANGUAGE plpgsql
AS $$
DECLARE
  t text;
  l text;
BEGIN
  t = '';
  FOR l IN EXECUTE
           $q$
             EXPLAIN (TIMING off, COSTS off, VERBOSE on)
             SELECT * FROM newtable
           $q$ LOOP
    t = t || l || E'\n';
  END LOOP;

  RAISE INFO '%', t;
  RETURN new;
END;
$$;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'trigger\n  LANGUAGE plpgsql\nAS $$\nDECLARE\n  t text;\n  l text;\nBEGIN\n  t = '';\n  F' at line 2")

-----------
QUERY:


CREATE TRIGGER transition_table_base_ins_trig
  AFTER INSERT ON transition_table_base
  REFERENCING OLD TABLE AS oldtable NEW TABLE AS newtable
  FOR EACH STATEMENT
  EXECUTE PROCEDURE transition_table_base_ins_func();
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'REFERENCING OLD TABLE AS oldtable NEW TABLE AS newtable\n  FOR EACH STATEMENT\n  E' at line 3")

-----------
QUERY:


CREATE TRIGGER transition_table_base_ins_trig
  AFTER INSERT ON transition_table_base
  REFERENCING NEW TABLE AS newtable
  FOR EACH STATEMENT
  EXECUTE PROCEDURE transition_table_base_ins_func();
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'REFERENCING NEW TABLE AS newtable\n  FOR EACH STATEMENT\n  EXECUTE PROCEDURE trans' at line 3")

-----------
QUERY:


INSERT INTO transition_table_base VALUES (1, 'One'), (2, 'Two');
RESULT:
	[]

-----------
QUERY:

INSERT INTO transition_table_base VALUES (3, 'Three'), (4, 'Four');
RESULT:
	[]

-----------
QUERY:


CREATE OR REPLACE FUNCTION transition_table_base_upd_func()
  RETURNS trigger
  LANGUAGE plpgsql
AS $$
DECLARE
  t text;
  l text;
BEGIN
  t = '';
  FOR l IN EXECUTE
           $q$
             EXPLAIN (TIMING off, COSTS off, VERBOSE on)
             SELECT * FROM oldtable ot FULL JOIN newtable nt USING (id)
           $q$ LOOP
    t = t || l || E'\n';
  END LOOP;

  RAISE INFO '%', t;
  RETURN new;
END;
$$;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'FUNCTION transition_table_base_upd_func()\n  RETURNS trigger\n  LANGUAGE plpgsql\nA' at line 1")

-----------
QUERY:


CREATE TRIGGER transition_table_base_upd_trig
  AFTER UPDATE ON transition_table_base
  REFERENCING OLD TABLE AS oldtable NEW TABLE AS newtable
  FOR EACH STATEMENT
  EXECUTE PROCEDURE transition_table_base_upd_func();
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'REFERENCING OLD TABLE AS oldtable NEW TABLE AS newtable\n  FOR EACH STATEMENT\n  E' at line 3")

-----------
QUERY:


UPDATE transition_table_base
  SET val = '*' || val || '*'
  WHERE id BETWEEN 2 AND 3;
RESULT:
	ERROR - (1292, "Truncated incorrect DOUBLE value: '*'")

-----------
QUERY:


CREATE TABLE transition_table_level1
(
      level1_no serial NOT NULL ,
      level1_node_name varchar(255),
       PRIMARY KEY (level1_no)
) WITHOUT OIDS;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WITHOUT OIDS' at line 6")

-----------
QUERY:


CREATE TABLE transition_table_level2
(
      level2_no serial NOT NULL ,
      parent_no int NOT NULL,
      level1_node_name varchar(255),
       PRIMARY KEY (level2_no)
) WITHOUT OIDS;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WITHOUT OIDS' at line 7")

-----------
QUERY:


CREATE TABLE transition_table_status
(
      level int NOT NULL,
      node_no int NOT NULL,
      status int,
       PRIMARY KEY (level, node_no)
) WITHOUT OIDS;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WITHOUT OIDS' at line 7")

-----------
QUERY:


CREATE FUNCTION transition_table_level1_ri_parent_del_func()
  RETURNS TRIGGER
  LANGUAGE plpgsql
AS $$
  DECLARE n bigint;
  BEGIN
    PERFORM FROM p JOIN transition_table_level2 c ON c.parent_no = p.level1_no;
    IF FOUND THEN
      RAISE EXCEPTION 'RI error';
    END IF;
    RETURN NULL;
  END;
$$;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'TRIGGER\n  LANGUAGE plpgsql\nAS $$\n  DECLARE n bigint;\n  BEGIN\n    PERFORM FROM p ' at line 2")

-----------
QUERY:


CREATE TRIGGER transition_table_level1_ri_parent_del_trigger
  AFTER DELETE ON transition_table_level1
  REFERENCING OLD TABLE AS p
  FOR EACH STATEMENT EXECUTE PROCEDURE
    transition_table_level1_ri_parent_del_func();
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'REFERENCING OLD TABLE AS p\n  FOR EACH STATEMENT EXECUTE PROCEDURE\n    transition' at line 3")

-----------
QUERY:


CREATE FUNCTION transition_table_level1_ri_parent_upd_func()
  RETURNS TRIGGER
  LANGUAGE plpgsql
AS $$
  DECLARE
    x int;
  BEGIN
    WITH p AS (SELECT level1_no, sum(delta) cnt
                 FROM (SELECT level1_no, 1 AS delta FROM i
                       UNION ALL
                       SELECT level1_no, -1 AS delta FROM d) w
                 GROUP BY level1_no
                 HAVING sum(delta) < 0)
    SELECT level1_no
      FROM p JOIN transition_table_level2 c ON c.parent_no = p.level1_no
      INTO x;
    IF FOUND THEN
      RAISE EXCEPTION 'RI error';
    END IF;
    RETURN NULL;
  END;
$$;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'TRIGGER\n  LANGUAGE plpgsql\nAS $$\n  DECLARE\n    x int;\n  BEGIN\n    WITH p AS (SEL' at line 2")

-----------
QUERY:


CREATE TRIGGER transition_table_level1_ri_parent_upd_trigger
  AFTER UPDATE ON transition_table_level1
  REFERENCING OLD TABLE AS d NEW TABLE AS i
  FOR EACH STATEMENT EXECUTE PROCEDURE
    transition_table_level1_ri_parent_upd_func();
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'REFERENCING OLD TABLE AS d NEW TABLE AS i\n  FOR EACH STATEMENT EXECUTE PROCEDURE' at line 3")

-----------
QUERY:


CREATE FUNCTION transition_table_level2_ri_child_insupd_func()
  RETURNS TRIGGER
  LANGUAGE plpgsql
AS $$
  BEGIN
    PERFORM FROM i
      LEFT JOIN transition_table_level1 p
        ON p.level1_no IS NOT NULL AND p.level1_no = i.parent_no
      WHERE p.level1_no IS NULL;
    IF FOUND THEN
      RAISE EXCEPTION 'RI error';
    END IF;
    RETURN NULL;
  END;
$$;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'TRIGGER\n  LANGUAGE plpgsql\nAS $$\n  BEGIN\n    PERFORM FROM i\n      LEFT JOIN tran' at line 2")

-----------
QUERY:


CREATE TRIGGER transition_table_level2_ri_child_ins_trigger
  AFTER INSERT ON transition_table_level2
  REFERENCING NEW TABLE AS i
  FOR EACH STATEMENT EXECUTE PROCEDURE
    transition_table_level2_ri_child_insupd_func();
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'REFERENCING NEW TABLE AS i\n  FOR EACH STATEMENT EXECUTE PROCEDURE\n    transition' at line 3")

-----------
QUERY:


CREATE TRIGGER transition_table_level2_ri_child_upd_trigger
  AFTER UPDATE ON transition_table_level2
  REFERENCING NEW TABLE AS i
  FOR EACH STATEMENT EXECUTE PROCEDURE
    transition_table_level2_ri_child_insupd_func();
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'REFERENCING NEW TABLE AS i\n  FOR EACH STATEMENT EXECUTE PROCEDURE\n    transition' at line 3")

-----------
QUERY:


-- create initial test data
INSERT INTO transition_table_level1 (level1_no)
  SELECT generate_series(1,200);
RESULT:
	ERROR - (1146, "Table 'test.transition_table_level1' doesn't exist")

-----------
QUERY:

ANALYZE transition_table_level1;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'transition_table_level1' at line 1")

-----------
QUERY:


INSERT INTO transition_table_level2 (level2_no, parent_no)
  SELECT level2_no, level2_no / 50 + 1 AS parent_no
    FROM generate_series(1,9999) level2_no;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(1,9999) level2_no' at line 3")

-----------
QUERY:

ANALYZE transition_table_level2;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'transition_table_level2' at line 1")

-----------
QUERY:


INSERT INTO transition_table_status (level, node_no, status)
  SELECT 1, level1_no, 0 FROM transition_table_level1;
RESULT:
	ERROR - (1146, "Table 'test.transition_table_status' doesn't exist")

-----------
QUERY:


INSERT INTO transition_table_status (level, node_no, status)
  SELECT 2, level2_no, 0 FROM transition_table_level2;
RESULT:
	ERROR - (1146, "Table 'test.transition_table_status' doesn't exist")

-----------
QUERY:

ANALYZE transition_table_status;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'transition_table_status' at line 1")

-----------
QUERY:


INSERT INTO transition_table_level1(level1_no)
  SELECT generate_series(201,1000);
RESULT:
	ERROR - (1146, "Table 'test.transition_table_level1' doesn't exist")

-----------
QUERY:

ANALYZE transition_table_level1;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'transition_table_level1' at line 1")

-----------
QUERY:


-- behave reasonably if someone tries to modify a transition table
CREATE FUNCTION transition_table_level2_bad_usage_func()
  RETURNS TRIGGER
  LANGUAGE plpgsql
AS $$
  BEGIN
    INSERT INTO dx VALUES (1000000, 1000000, 'x');
    RETURN NULL;
  END;
$$;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'TRIGGER\n  LANGUAGE plpgsql\nAS $$\n  BEGIN\n    INSERT INTO dx VALUES (1000000, 100' at line 3")

-----------
QUERY:


CREATE TRIGGER transition_table_level2_bad_usage_trigger
  AFTER DELETE ON transition_table_level2
  REFERENCING OLD TABLE AS dx
  FOR EACH STATEMENT EXECUTE PROCEDURE
    transition_table_level2_bad_usage_func();
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'REFERENCING OLD TABLE AS dx\n  FOR EACH STATEMENT EXECUTE PROCEDURE\n    transitio' at line 3")

-----------
QUERY:


DELETE FROM transition_table_level2
  WHERE level2_no BETWEEN 301 AND 305;
RESULT:
	ERROR - (1146, "Table 'test.transition_table_level2' doesn't exist")

-----------
QUERY:


DROP TRIGGER transition_table_level2_bad_usage_trigger
  ON transition_table_level2;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'ON transition_table_level2' at line 2")

-----------
QUERY:


-- attempt modifications which would break RI (should all fail)
DELETE FROM transition_table_level1
  WHERE level1_no = 25;
RESULT:
	ERROR - (1146, "Table 'test.transition_table_level1' doesn't exist")

-----------
QUERY:


UPDATE transition_table_level1 SET level1_no = -1
  WHERE level1_no = 30;
RESULT:
	ERROR - (1146, "Table 'test.transition_table_level1' doesn't exist")

-----------
QUERY:


INSERT INTO transition_table_level2 (level2_no, parent_no)
  VALUES (10000, 10000);
RESULT:
	ERROR - (1146, "Table 'test.transition_table_level2' doesn't exist")

-----------
QUERY:


UPDATE transition_table_level2 SET parent_no = 2000
  WHERE level2_no = 40;
RESULT:
	ERROR - (1146, "Table 'test.transition_table_level2' doesn't exist")

-----------
QUERY:



-- attempt modifications which would not break RI (should all succeed)
DELETE FROM transition_table_level1
  WHERE level1_no BETWEEN 201 AND 1000;
RESULT:
	ERROR - (1146, "Table 'test.transition_table_level1' doesn't exist")

-----------
QUERY:


DELETE FROM transition_table_level1
  WHERE level1_no BETWEEN 100000000 AND 100000010;
RESULT:
	ERROR - (1146, "Table 'test.transition_table_level1' doesn't exist")

-----------
QUERY:


SELECT count(*) FROM transition_table_level1;
RESULT:
	ERROR - (1146, "Table 'test.transition_table_level1' doesn't exist")

-----------
QUERY:


DELETE FROM transition_table_level2
  WHERE level2_no BETWEEN 211 AND 220;
RESULT:
	ERROR - (1146, "Table 'test.transition_table_level2' doesn't exist")

-----------
QUERY:


SELECT count(*) FROM transition_table_level2;
RESULT:
	ERROR - (1146, "Table 'test.transition_table_level2' doesn't exist")

-----------
QUERY:


CREATE TABLE alter_table_under_transition_tables
(
  id int PRIMARY KEY,
  name text
);
RESULT:
	[]

-----------
QUERY:


CREATE FUNCTION alter_table_under_transition_tables_upd_func()
  RETURNS TRIGGER
  LANGUAGE plpgsql
AS $$
BEGIN
  RAISE WARNING 'old table = %, new table = %',
                  (SELECT string_agg(id || '=' || name, ',') FROM d),
                  (SELECT string_agg(id || '=' || name, ',') FROM i);
  RAISE NOTICE 'one = %', (SELECT 1 FROM alter_table_under_transition_tables LIMIT 1);
  RETURN NULL;
END;
$$;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'TRIGGER\n  LANGUAGE plpgsql\nAS $$\nBEGIN\n  RAISE WARNING 'old table = %, new table' at line 2")

-----------
QUERY:


-- should fail, TRUNCATE is not compatible with transition tables
CREATE TRIGGER alter_table_under_transition_tables_upd_trigger
  AFTER TRUNCATE OR UPDATE ON alter_table_under_transition_tables
  REFERENCING OLD TABLE AS d NEW TABLE AS i
  FOR EACH STATEMENT EXECUTE PROCEDURE
    alter_table_under_transition_tables_upd_func();
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'TRUNCATE OR UPDATE ON alter_table_under_transition_tables\n  REFERENCING OLD TABL' at line 3")

-----------
QUERY:


-- should work
CREATE TRIGGER alter_table_under_transition_tables_upd_trigger
  AFTER UPDATE ON alter_table_under_transition_tables
  REFERENCING OLD TABLE AS d NEW TABLE AS i
  FOR EACH STATEMENT EXECUTE PROCEDURE
    alter_table_under_transition_tables_upd_func();
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'REFERENCING OLD TABLE AS d NEW TABLE AS i\n  FOR EACH STATEMENT EXECUTE PROCEDURE' at line 4")

-----------
QUERY:


INSERT INTO alter_table_under_transition_tables
  VALUES (1, '1'), (2, '2'), (3, '3');
RESULT:
	[]

-----------
QUERY:

UPDATE alter_table_under_transition_tables
  SET name = name || name;
RESULT:
	[]

-----------
QUERY:


-- now change /* REPLACED */ ''name/* REPLACED */ '' to an integer to see what happens...
ALTER TABLE alter_table_under_transition_tables
  ALTER COLUMN name TYPE int USING name::integer;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'TYPE int USING name::integer' at line 3")

-----------
QUERY:

UPDATE alter_table_under_transition_tables
  SET name = (name::text || name::text)::integer;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::text || name::text)::integer' at line 2")

-----------
QUERY:


-- now drop column /* REPLACED */ ''name/* REPLACED */ ''
ALTER TABLE alter_table_under_transition_tables
  DROP column name;
RESULT:
	[]

-----------
QUERY:

UPDATE alter_table_under_transition_tables
  SET id = id;
RESULT:
	[]

-----------
QUERY:


--
-- Test multiple reference to a transition table
--

CREATE TABLE multi_test (i int);
RESULT:
	[]

-----------
QUERY:

INSERT INTO multi_test VALUES (1);
RESULT:
	[]

-----------
QUERY:


CREATE OR REPLACE FUNCTION multi_test_trig() RETURNS trigger
LANGUAGE plpgsql AS $$
BEGIN
    RAISE NOTICE 'count = %', (SELECT COUNT(*) FROM new_test);
    RAISE NOTICE 'count union = %',
      (SELECT COUNT(*)
       FROM (SELECT * FROM new_test UNION ALL SELECT * FROM new_test) ss);
    RETURN NULL;
END$$;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'FUNCTION multi_test_trig() RETURNS trigger\nLANGUAGE plpgsql AS $$\nBEGIN\n    RAIS' at line 1")

-----------
QUERY:


CREATE TRIGGER my_trigger AFTER UPDATE ON multi_test
  REFERENCING NEW TABLE AS new_test OLD TABLE as old_test
  FOR EACH STATEMENT EXECUTE PROCEDURE multi_test_trig();
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'REFERENCING NEW TABLE AS new_test OLD TABLE as old_test\n  FOR EACH STATEMENT EXE' at line 2")

-----------
QUERY:


UPDATE multi_test SET i = i;
RESULT:
	[]

-----------
QUERY:


DROP TABLE multi_test;
RESULT:
	[]

-----------
QUERY:

DROP FUNCTION multi_test_trig();
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '()' at line 1")

-----------
QUERY:


--
-- Check type parsing and record fetching from partitioned tables
--

CREATE TABLE partitioned_table (a int, b text) PARTITION BY LIST (a);
RESULT:
	ERROR - (1492, 'For LIST partitions each partition must be defined')

-----------
QUERY:

CREATE TABLE pt_part1 PARTITION OF partitioned_table FOR VALUES IN (1);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'OF partitioned_table FOR VALUES IN (1)' at line 1")

-----------
QUERY:

CREATE TABLE pt_part2 PARTITION OF partitioned_table FOR VALUES IN (2);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'OF partitioned_table FOR VALUES IN (2)' at line 1")

-----------
QUERY:


INSERT INTO partitioned_table VALUES (1, 'Row 1');
RESULT:
	ERROR - (1146, "Table 'test.partitioned_table' doesn't exist")

-----------
QUERY:

INSERT INTO partitioned_table VALUES (2, 'Row 2');
RESULT:
	ERROR - (1146, "Table 'test.partitioned_table' doesn't exist")

-----------
QUERY:


CREATE OR REPLACE FUNCTION get_from_partitioned_table(partitioned_table.a%type)
RETURNS partitioned_table AS $$
DECLARE
    a_val partitioned_table.a%TYPE;
    result partitioned_table%ROWTYPE;
BEGIN
    a_val := $1;
    SELECT * INTO result FROM partitioned_table WHERE a = a_val;
    RETURN result;
END; $$ LANGUAGE plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'FUNCTION get_from_partitioned_table(partitioned_table.a%type)\nRETURNS partitione' at line 1")

-----------
QUERY:


SELECT * FROM get_from_partitioned_table(1) AS t;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(1) AS t' at line 1")

-----------
QUERY:


CREATE OR REPLACE FUNCTION list_partitioned_table()
RETURNS SETOF public.partitioned_table.a%TYPE AS $$
DECLARE
    row public.partitioned_table%ROWTYPE;
    a_val public.partitioned_table.a%TYPE;
BEGIN
    FOR row IN SELECT * FROM public.partitioned_table ORDER BY a LOOP
        a_val := row.a;
        RETURN NEXT a_val;
    END LOOP;
    RETURN;
END; $$ LANGUAGE plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'FUNCTION list_partitioned_table()\nRETURNS SETOF public.partitioned_table.a%TYPE ' at line 1")

-----------
QUERY:


SELECT * FROM list_partitioned_table() AS t;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '() AS t' at line 1")

-----------
QUERY:


--
-- Check argument name is used instead of $n in error message
--
CREATE FUNCTION fx(x WSlot) RETURNS void AS $$
BEGIN
  GET DIAGNOSTICS x = ROW_COUNT;
  RETURN;
END; $$ LANGUAGE plpgsql;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WSlot) RETURNS void AS $$\nBEGIN\n  GET DIAGNOSTICS x = ROW_COUNT;\n  RETURN;\nEND; ' at line 4")
