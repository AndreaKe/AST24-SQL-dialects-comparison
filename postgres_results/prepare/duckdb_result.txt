
-----------
QUERY:
-- Regression tests for prepareable statements. We query the content
-- of the pg_prepared_statements view as prepared statements are
-- created and removed.

SELECT name, statement, parameter_types, result_types FROM pg_prepared_statements;
RESULT:
	ERROR - Catalog Error: Table with name pg_prepared_statements does not exist!
Did you mean "pg_am"?

-----------
QUERY:


PREPARE q1 AS SELECT 1 AS a;
RESULT:
	[]

-----------
QUERY:

EXECUTE q1;
RESULT:
	[(1,)]

-----------
QUERY:


SELECT name, statement, parameter_types, result_types FROM pg_prepared_statements;
RESULT:
	ERROR - Catalog Error: Table with name pg_prepared_statements does not exist!
Did you mean "pg_am"?

-----------
QUERY:


-- should fail
PREPARE q1 AS SELECT 2;
RESULT:
	[]

-----------
QUERY:


-- should succeed
DEALLOCATE q1;
RESULT:
	[]

-----------
QUERY:

PREPARE q1 AS SELECT 2;
RESULT:
	[]

-----------
QUERY:

EXECUTE q1;
RESULT:
	[(2,)]

-----------
QUERY:


PREPARE q2 AS SELECT 2 AS b;
RESULT:
	[]

-----------
QUERY:

SELECT name, statement, parameter_types, result_types FROM pg_prepared_statements;
RESULT:
	ERROR - Catalog Error: Table with name pg_prepared_statements does not exist!
Did you mean "pg_am"?

-----------
QUERY:


-- sql92 syntax
DEALLOCATE PREPARE q1;
RESULT:
	[]

-----------
QUERY:


SELECT name, statement, parameter_types, result_types FROM pg_prepared_statements;
RESULT:
	ERROR - Catalog Error: Table with name pg_prepared_statements does not exist!
Did you mean "pg_am"?

-----------
QUERY:


DEALLOCATE PREPARE q2;
RESULT:
	[]

-----------
QUERY:

-- the view should return the empty set again
SELECT name, statement, parameter_types, result_types FROM pg_prepared_statements;
RESULT:
	ERROR - Catalog Error: Table with name pg_prepared_statements does not exist!
Did you mean "pg_am"?

-----------
QUERY:


-- parameterized queries
PREPARE q2(text) AS
	SELECT datname, datistemplate, datallowconn
	FROM pg_database WHERE datname = $1;
RESULT:
	ERROR - Not implemented Error: Prepared statement argument types are not supported, use CAST

-----------
QUERY:


EXECUTE q2('postgres');
RESULT:
	ERROR - Binder Error: Prepared statement "q2" does not exist

-----------
QUERY:


PREPARE q3(text, int, float, boolean, smallint) AS
	SELECT * FROM tenk1 WHERE string4 = $1 AND (four = $2 OR
	ten = $3::bigint OR true = $4 OR odd = $5::int)
	ORDER BY unique1;
RESULT:
	ERROR - Not implemented Error: Prepared statement argument types are not supported, use CAST

-----------
QUERY:


EXECUTE q3('AAAAxx', 5::smallint, 10.5::float, false, 4::bigint);
RESULT:
	ERROR - Binder Error: Prepared statement "q3" does not exist

-----------
QUERY:


-- too few params
EXECUTE q3('bool');
RESULT:
	ERROR - Binder Error: Prepared statement "q3" does not exist

-----------
QUERY:


-- too many params
EXECUTE q3('bytea', 5::smallint, 10.5::float, false, 4::bigint, true);
RESULT:
	ERROR - Binder Error: Prepared statement "q3" does not exist

-----------
QUERY:


-- wrong param types
EXECUTE q3(5::smallint, 10.5::float, false, 4::bigint, 'bytea');
RESULT:
	ERROR - Binder Error: Prepared statement "q3" does not exist

-----------
QUERY:


-- invalid type
PREPARE q4(nonexistenttype) AS SELECT $1;
RESULT:
	ERROR - Not implemented Error: Prepared statement argument types are not supported, use CAST

-----------
QUERY:


-- create table as execute
PREPARE q5(int, text) AS
	SELECT * FROM tenk1 WHERE unique1 = $1 OR stringu1 = $2
	ORDER BY unique1;
RESULT:
	ERROR - Not implemented Error: Prepared statement argument types are not supported, use CAST

-----------
QUERY:

CREATE TEMPORARY TABLE q5_prep_results AS EXECUTE q5(200, 'DTAAAA');
RESULT:
	ERROR - Parser Error: CREATE TABLE AS requires a SELECT clause

-----------
QUERY:

SELECT * FROM q5_prep_results;
RESULT:
	ERROR - Catalog Error: Table with name q5_prep_results does not exist!
Did you mean "pg_enum"?

-----------
QUERY:

CREATE TEMPORARY TABLE q5_prep_nodata AS EXECUTE q5(200, 'DTAAAA')
    WITH NO DATA;
RESULT:
	ERROR - Parser Error: CREATE TABLE AS requires a SELECT clause

-----------
QUERY:

SELECT * FROM q5_prep_nodata;
RESULT:
	ERROR - Catalog Error: Table with name q5_prep_nodata does not exist!
Did you mean "pg_am"?

-----------
QUERY:


-- unknown or unspecified parameter types: should succeed
PREPARE q6 AS
    SELECT * FROM tenk1 WHERE unique1 = $1 AND stringu1 = $2;
RESULT:
	ERROR - Catalog Error: Table with name tenk1 does not exist!
Did you mean "temp.information_schema.tables"?
LINE 5:     SELECT * FROM tenk1 WHERE unique1 = $1 AND stringu1 = $2;...
                          ^

-----------
QUERY:

PREPARE q7(unknown) AS
    SELECT * FROM road WHERE thepath = $1;
RESULT:
	ERROR - Not implemented Error: Prepared statement argument types are not supported, use CAST

-----------
QUERY:


-- DML statements
PREPARE q8 AS
    UPDATE tenk1 SET stringu1 = $2 WHERE unique1 = $1;
RESULT:
	ERROR - Catalog Error: Table with name tenk1 does not exist!
Did you mean "temp.information_schema.tables"?
LINE 5:     UPDATE tenk1...
                   ^

-----------
QUERY:


SELECT name, statement, parameter_types, result_types FROM pg_prepared_statements
    ORDER BY name;
RESULT:
	ERROR - Catalog Error: Table with name pg_prepared_statements does not exist!
Did you mean "pg_am"?

-----------
QUERY:


-- test DEALLOCATE ALL /* REPLACED */ ,
DEALLOCATE ALL;
RESULT:
	ERROR - Parser Error: DEALLOCATE requires a name

-----------
QUERY:

SELECT name, statement, parameter_types FROM pg_prepared_statements
    ORDER BY name;
RESULT:
	ERROR - Catalog Error: Table with name pg_prepared_statements does not exist!
Did you mean "pg_am"?
