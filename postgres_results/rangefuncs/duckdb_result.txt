
-----------
QUERY:
CREATE TABLE rngfunc2(rngfuncid int, f2 int)
RESULT:
	duckdb: None

-----------
QUERY:
INSERT INTO rngfunc2 VALUES(1, 11)
RESULT:
	duckdb: None

-----------
QUERY:
INSERT INTO rngfunc2 VALUES(2, 22)
RESULT:
	duckdb: None

-----------
QUERY:
INSERT INTO rngfunc2 VALUES(1, 111)
RESULT:
	duckdb: None

-----------
QUERY:
CREATE FUNCTION rngfunct(int) returns setof rngfunc2 as 'SELECT * FROM rngfunc2 WHERE rngfuncid = $1 ORDER BY f2
RESULT:
	duckdb: Parser Error: syntax error at or near "returns"

-----------
QUERY:
' LANGUAGE SQL
RESULT:
	duckdb: Parser Error: unterminated quoted string at or near "' LANGUAGE SQL
"

-----------
QUERY:
-- function with ORDINALITY
select * from rngfunct(1) with ordinality as z(a,b,ord)
RESULT:
	duckdb: Not implemented Error: WITH ORDINALITY not implemented

-----------
QUERY:
select * from rngfunct(1) with ordinality as z(a,b,ord) where b > 100
RESULT:
	duckdb: Not implemented Error: WITH ORDINALITY not implemented

-----------
QUERY:
-- ordinal 2, not 1
-- ordinality vs. column names and types
select a,b,ord from rngfunct(1) with ordinality as z(a,b,ord)
RESULT:
	duckdb: Not implemented Error: WITH ORDINALITY not implemented

-----------
QUERY:
select a,ord from unnest(array['a','b']) with ordinality as z(a,ord)
RESULT:
	duckdb: Not implemented Error: WITH ORDINALITY not implemented

-----------
QUERY:
select * from unnest(array['a','b']) with ordinality as z(a,ord)
RESULT:
	duckdb: Not implemented Error: WITH ORDINALITY not implemented

-----------
QUERY:
select a,ord from unnest(array[1.0::float8]) with ordinality as z(a,ord)
RESULT:
	duckdb: Not implemented Error: WITH ORDINALITY not implemented

-----------
QUERY:
select * from unnest(array[1.0::float8]) with ordinality as z(a,ord)
RESULT:
	duckdb: Not implemented Error: WITH ORDINALITY not implemented

-----------
QUERY:
select row_to_json(s.*) from generate_series(11,14) with ordinality s
RESULT:
	duckdb: Not implemented Error: WITH ORDINALITY not implemented

-----------
QUERY:
-- ordinality vs. views
create temporary view vw_ord as select * from (values (1)) v(n) join rngfunct(1) with ordinality as z(a,b,ord) on (n=ord)
RESULT:
	duckdb: Not implemented Error: WITH ORDINALITY not implemented

-----------
QUERY:
select * from vw_ord
RESULT:
	duckdb: Catalog Error: Table with name vw_ord does not exist!
Did you mean "pg_am"?

-----------
QUERY:
select definition from pg_views where viewname='vw_ord'
RESULT:
	duckdb: []

-----------
QUERY:
drop view vw_ord
RESULT:
	duckdb: Catalog Error: View with name vw_ord does not exist!
Did you mean "pg_am"?

-----------
QUERY:
-- multiple functions
select * from rows from(rngfunct(1),rngfunct(2)) with ordinality as z(a,b,c,d,ord)
RESULT:
	duckdb: Not implemented Error: WITH ORDINALITY not implemented

-----------
QUERY:
create temporary view vw_ord as select * from (values (1)) v(n) join rows from(rngfunct(1),rngfunct(2)) with ordinality as z(a,b,c,d,ord) on (n=ord)
RESULT:
	duckdb: Not implemented Error: WITH ORDINALITY not implemented

-----------
QUERY:
select * from vw_ord
RESULT:
	duckdb: Catalog Error: Table with name vw_ord does not exist!
Did you mean "pg_am"?

-----------
QUERY:
select definition from pg_views where viewname='vw_ord'
RESULT:
	duckdb: []

-----------
QUERY:
drop view vw_ord
RESULT:
	duckdb: Catalog Error: View with name vw_ord does not exist!
Did you mean "pg_am"?

-----------
QUERY:
-- expansions of unnest()
select * from unnest(array[10,20],array['foo','bar'],array[1.0])
RESULT:
	duckdb: Binder Error: UNNEST requires a single list as input

-----------
QUERY:
select * from unnest(array[10,20],array['foo','bar'],array[1.0]) with ordinality as z(a,b,c,ord)
RESULT:
	duckdb: Not implemented Error: WITH ORDINALITY not implemented

-----------
QUERY:
select * from rows from(unnest(array[10,20],array['foo','bar'],array[1.0])) with ordinality as z(a,b,c,ord)
RESULT:
	duckdb: Not implemented Error: WITH ORDINALITY not implemented

-----------
QUERY:
select * from rows from(unnest(array[10,20],array['foo','bar']), generate_series(101,102)) with ordinality as z(a,b,c,ord)
RESULT:
	duckdb: Not implemented Error: WITH ORDINALITY not implemented

-----------
QUERY:
create temporary view vw_ord as select * from unnest(array[10,20],array['foo','bar'],array[1.0]) as z(a,b,c)
RESULT:
	duckdb: Binder Error: UNNEST requires a single list as input

-----------
QUERY:
select * from vw_ord
RESULT:
	duckdb: Catalog Error: Table with name vw_ord does not exist!
Did you mean "pg_am"?

-----------
QUERY:
select definition from pg_views where viewname='vw_ord'
RESULT:
	duckdb: []

-----------
QUERY:
drop view vw_ord
RESULT:
	duckdb: Catalog Error: View with name vw_ord does not exist!
Did you mean "pg_am"?

-----------
QUERY:
create temporary view vw_ord as select * from rows from(unnest(array[10,20],array['foo','bar'],array[1.0])) as z(a,b,c)
RESULT:
	duckdb: Not implemented Error: ROWS FROM() not implemented

-----------
QUERY:
select * from vw_ord
RESULT:
	duckdb: Catalog Error: Table with name vw_ord does not exist!
Did you mean "pg_am"?

-----------
QUERY:
select definition from pg_views where viewname='vw_ord'
RESULT:
	duckdb: []

-----------
QUERY:
drop view vw_ord
RESULT:
	duckdb: Catalog Error: View with name vw_ord does not exist!
Did you mean "pg_am"?

-----------
QUERY:
create temporary view vw_ord as select * from rows from(unnest(array[10,20],array['foo','bar']), generate_series(1,2)) as z(a,b,c)
RESULT:
	duckdb: Not implemented Error: ROWS FROM() not implemented

-----------
QUERY:
select * from vw_ord
RESULT:
	duckdb: Catalog Error: Table with name vw_ord does not exist!
Did you mean "pg_am"?

-----------
QUERY:
select definition from pg_views where viewname='vw_ord'
RESULT:
	duckdb: []

-----------
QUERY:
drop view vw_ord
RESULT:
	duckdb: Catalog Error: View with name vw_ord does not exist!
Did you mean "pg_am"?

-----------
QUERY:
-- ordinality and multiple functions vs. rewind and reverse scan
begin
RESULT:
	duckdb: None

-----------
QUERY:
declare rf_cur scroll cursor for select * from rows from(generate_series(1,5),generate_series(1,2)) with ordinality as g(i,j,o)
RESULT:
	duckdb: Parser Error: syntax error at or near "declare"

-----------
QUERY:
fetch all from rf_cur
RESULT:
	duckdb: Parser Error: syntax error at or near "fetch"

-----------
QUERY:
fetch backward all from rf_cur
RESULT:
	duckdb: Parser Error: syntax error at or near "fetch"

-----------
QUERY:
fetch all from rf_cur
RESULT:
	duckdb: Parser Error: syntax error at or near "fetch"

-----------
QUERY:
fetch next from rf_cur
RESULT:
	duckdb: Parser Error: syntax error at or near "fetch"

-----------
QUERY:
fetch next from rf_cur
RESULT:
	duckdb: Parser Error: syntax error at or near "fetch"

-----------
QUERY:
fetch prior from rf_cur
RESULT:
	duckdb: Parser Error: syntax error at or near "fetch"

-----------
QUERY:
fetch absolute 1 from rf_cur
RESULT:
	duckdb: Parser Error: syntax error at or near "fetch"

-----------
QUERY:
fetch next from rf_cur
RESULT:
	duckdb: Parser Error: syntax error at or near "fetch"

-----------
QUERY:
fetch next from rf_cur
RESULT:
	duckdb: Parser Error: syntax error at or near "fetch"

-----------
QUERY:
fetch next from rf_cur
RESULT:
	duckdb: Parser Error: syntax error at or near "fetch"

-----------
QUERY:
fetch prior from rf_cur
RESULT:
	duckdb: Parser Error: syntax error at or near "fetch"

-----------
QUERY:
fetch prior from rf_cur
RESULT:
	duckdb: Parser Error: syntax error at or near "fetch"

-----------
QUERY:
fetch prior from rf_cur
RESULT:
	duckdb: Parser Error: syntax error at or near "fetch"

-----------
QUERY:
commit
RESULT:
	duckdb: None

-----------
QUERY:
-- function with implicit LATERAL
select * from rngfunc2, rngfunct(rngfunc2.rngfuncid) z where rngfunc2.f2 = z.f2
RESULT:
	duckdb: Catalog Error: Table Function with name rngfunct does not exist!
Did you mean "range"?

-----------
QUERY:
-- function with implicit LATERAL and explicit ORDINALITY
select * from rngfunc2, rngfunct(rngfunc2.rngfuncid) with ordinality as z(rngfuncid,f2,ord) where rngfunc2.f2 = z.f2
RESULT:
	duckdb: Not implemented Error: WITH ORDINALITY not implemented

-----------
QUERY:
-- function in subselect
select * from rngfunc2 where f2 in (select f2 from rngfunct(rngfunc2.rngfuncid) z where z.rngfuncid = rngfunc2.rngfuncid) ORDER BY 1,2
RESULT:
	duckdb: Catalog Error: Table Function with name rngfunct does not exist!
Did you mean "range"?

-----------
QUERY:
-- function in subselect
select * from rngfunc2 where f2 in (select f2 from rngfunct(1) z where z.rngfuncid = rngfunc2.rngfuncid) ORDER BY 1,2
RESULT:
	duckdb: Catalog Error: Table Function with name rngfunct does not exist!
Did you mean "range"?

-----------
QUERY:
-- function in subselect
select * from rngfunc2 where f2 in (select f2 from rngfunct(rngfunc2.rngfuncid) z where z.rngfuncid = 1) ORDER BY 1,2
RESULT:
	duckdb: Catalog Error: Table Function with name rngfunct does not exist!
Did you mean "range"?

-----------
QUERY:
-- nested functions
select rngfunct.rngfuncid, rngfunct.f2 from rngfunct(sin(pi()/2)::int) ORDER BY 1,2
RESULT:
	duckdb: Catalog Error: Table Function with name rngfunct does not exist!
Did you mean "range"?

-----------
QUERY:
CREATE TABLE rngfunc (rngfuncid int, rngfuncsubid int, rngfuncname text, primary key(rngfuncid,rngfuncsubid))
RESULT:
	duckdb: None

-----------
QUERY:
INSERT INTO rngfunc VALUES(1,1,'Joe')
RESULT:
	duckdb: None

-----------
QUERY:
INSERT INTO rngfunc VALUES(1,2,'Ed')
RESULT:
	duckdb: None

-----------
QUERY:
INSERT INTO rngfunc VALUES(2,1,'Mary')
RESULT:
	duckdb: None

-----------
QUERY:
-- sql, proretset = f, prorettype = b
CREATE FUNCTION getrngfunc1(int) RETURNS int AS 'SELECT $1
RESULT:
	duckdb: Parser Error: syntax error at or near "RETURNS"

-----------
QUERY:
' LANGUAGE SQL
RESULT:
	duckdb: Parser Error: unterminated quoted string at or near "' LANGUAGE SQL
"

-----------
QUERY:
SELECT * FROM getrngfunc1(1) AS t1
RESULT:
	duckdb: Catalog Error: Table Function with name getrngfunc1 does not exist!
Did you mean "dbgen"?

-----------
QUERY:
SELECT * FROM getrngfunc1(1) WITH ORDINALITY AS t1(v,o)
RESULT:
	duckdb: Not implemented Error: WITH ORDINALITY not implemented

-----------
QUERY:
CREATE VIEW vw_getrngfunc AS SELECT * FROM getrngfunc1(1)
RESULT:
	duckdb: Catalog Error: Table Function with name getrngfunc1 does not exist!
Did you mean "dbgen"?
LINE 1: ...TE VIEW vw_getrngfunc AS SELECT * FROM getrngfunc1(1)
                                                  ^

-----------
QUERY:
SELECT * FROM vw_getrngfunc
RESULT:
	duckdb: Catalog Error: Table with name vw_getrngfunc does not exist!
Did you mean "rngfunc"?

-----------
QUERY:
DROP VIEW vw_getrngfunc
RESULT:
	duckdb: Catalog Error: View with name vw_getrngfunc does not exist!
Did you mean "rngfunc"?

-----------
QUERY:
CREATE VIEW vw_getrngfunc AS SELECT * FROM getrngfunc1(1) WITH ORDINALITY as t1(v,o)
RESULT:
	duckdb: Not implemented Error: WITH ORDINALITY not implemented

-----------
QUERY:
SELECT * FROM vw_getrngfunc
RESULT:
	duckdb: Catalog Error: Table with name vw_getrngfunc does not exist!
Did you mean "rngfunc"?

-----------
QUERY:
DROP VIEW vw_getrngfunc
RESULT:
	duckdb: Catalog Error: View with name vw_getrngfunc does not exist!
Did you mean "rngfunc"?

-----------
QUERY:
-- sql, proretset = t, prorettype = b
CREATE FUNCTION getrngfunc2(int) RETURNS setof int AS 'SELECT rngfuncid FROM rngfunc WHERE rngfuncid = $1
RESULT:
	duckdb: Parser Error: syntax error at or near "RETURNS"

-----------
QUERY:
' LANGUAGE SQL
RESULT:
	duckdb: Parser Error: unterminated quoted string at or near "' LANGUAGE SQL
"

-----------
QUERY:
SELECT * FROM getrngfunc2(1) AS t1
RESULT:
	duckdb: Catalog Error: Table Function with name getrngfunc2 does not exist!
Did you mean "dbgen"?

-----------
QUERY:
SELECT * FROM getrngfunc2(1) WITH ORDINALITY AS t1(v,o)
RESULT:
	duckdb: Not implemented Error: WITH ORDINALITY not implemented

-----------
QUERY:
CREATE VIEW vw_getrngfunc AS SELECT * FROM getrngfunc2(1)
RESULT:
	duckdb: Catalog Error: Table Function with name getrngfunc2 does not exist!
Did you mean "dbgen"?
LINE 1: ...TE VIEW vw_getrngfunc AS SELECT * FROM getrngfunc2(1)
                                                  ^

-----------
QUERY:
SELECT * FROM vw_getrngfunc
RESULT:
	duckdb: Catalog Error: Table with name vw_getrngfunc does not exist!
Did you mean "rngfunc"?

-----------
QUERY:
DROP VIEW vw_getrngfunc
RESULT:
	duckdb: Catalog Error: View with name vw_getrngfunc does not exist!
Did you mean "rngfunc"?

-----------
QUERY:
CREATE VIEW vw_getrngfunc AS SELECT * FROM getrngfunc2(1) WITH ORDINALITY AS t1(v,o)
RESULT:
	duckdb: Not implemented Error: WITH ORDINALITY not implemented

-----------
QUERY:
SELECT * FROM vw_getrngfunc
RESULT:
	duckdb: Catalog Error: Table with name vw_getrngfunc does not exist!
Did you mean "rngfunc"?

-----------
QUERY:
DROP VIEW vw_getrngfunc
RESULT:
	duckdb: Catalog Error: View with name vw_getrngfunc does not exist!
Did you mean "rngfunc"?

-----------
QUERY:
-- sql, proretset = t, prorettype = b
CREATE FUNCTION getrngfunc3(int) RETURNS setof text AS 'SELECT rngfuncname FROM rngfunc WHERE rngfuncid = $1
RESULT:
	duckdb: Parser Error: syntax error at or near "RETURNS"

-----------
QUERY:
' LANGUAGE SQL
RESULT:
	duckdb: Parser Error: unterminated quoted string at or near "' LANGUAGE SQL
"

-----------
QUERY:
SELECT * FROM getrngfunc3(1) AS t1
RESULT:
	duckdb: Catalog Error: Table Function with name getrngfunc3 does not exist!
Did you mean "dbgen"?

-----------
QUERY:
SELECT * FROM getrngfunc3(1) WITH ORDINALITY AS t1(v,o)
RESULT:
	duckdb: Not implemented Error: WITH ORDINALITY not implemented

-----------
QUERY:
CREATE VIEW vw_getrngfunc AS SELECT * FROM getrngfunc3(1)
RESULT:
	duckdb: Catalog Error: Table Function with name getrngfunc3 does not exist!
Did you mean "dbgen"?
LINE 1: ...TE VIEW vw_getrngfunc AS SELECT * FROM getrngfunc3(1)
                                                  ^

-----------
QUERY:
SELECT * FROM vw_getrngfunc
RESULT:
	duckdb: Catalog Error: Table with name vw_getrngfunc does not exist!
Did you mean "rngfunc"?

-----------
QUERY:
DROP VIEW vw_getrngfunc
RESULT:
	duckdb: Catalog Error: View with name vw_getrngfunc does not exist!
Did you mean "rngfunc"?

-----------
QUERY:
CREATE VIEW vw_getrngfunc AS SELECT * FROM getrngfunc3(1) WITH ORDINALITY AS t1(v,o)
RESULT:
	duckdb: Not implemented Error: WITH ORDINALITY not implemented

-----------
QUERY:
SELECT * FROM vw_getrngfunc
RESULT:
	duckdb: Catalog Error: Table with name vw_getrngfunc does not exist!
Did you mean "rngfunc"?

-----------
QUERY:
DROP VIEW vw_getrngfunc
RESULT:
	duckdb: Catalog Error: View with name vw_getrngfunc does not exist!
Did you mean "rngfunc"?

-----------
QUERY:
-- sql, proretset = f, prorettype = c
CREATE FUNCTION getrngfunc4(int) RETURNS rngfunc AS 'SELECT * FROM rngfunc WHERE rngfuncid = $1
RESULT:
	duckdb: Parser Error: syntax error at or near "RETURNS"

-----------
QUERY:
' LANGUAGE SQL
RESULT:
	duckdb: Parser Error: unterminated quoted string at or near "' LANGUAGE SQL
"

-----------
QUERY:
SELECT * FROM getrngfunc4(1) AS t1
RESULT:
	duckdb: Catalog Error: Table Function with name getrngfunc4 does not exist!
Did you mean "dbgen"?

-----------
QUERY:
SELECT * FROM getrngfunc4(1) WITH ORDINALITY AS t1(a,b,c,o)
RESULT:
	duckdb: Not implemented Error: WITH ORDINALITY not implemented

-----------
QUERY:
CREATE VIEW vw_getrngfunc AS SELECT * FROM getrngfunc4(1)
RESULT:
	duckdb: Catalog Error: Table Function with name getrngfunc4 does not exist!
Did you mean "dbgen"?
LINE 1: ...TE VIEW vw_getrngfunc AS SELECT * FROM getrngfunc4(1)
                                                  ^

-----------
QUERY:
SELECT * FROM vw_getrngfunc
RESULT:
	duckdb: Catalog Error: Table with name vw_getrngfunc does not exist!
Did you mean "rngfunc"?

-----------
QUERY:
DROP VIEW vw_getrngfunc
RESULT:
	duckdb: Catalog Error: View with name vw_getrngfunc does not exist!
Did you mean "rngfunc"?

-----------
QUERY:
CREATE VIEW vw_getrngfunc AS SELECT * FROM getrngfunc4(1) WITH ORDINALITY AS t1(a,b,c,o)
RESULT:
	duckdb: Not implemented Error: WITH ORDINALITY not implemented

-----------
QUERY:
SELECT * FROM vw_getrngfunc
RESULT:
	duckdb: Catalog Error: Table with name vw_getrngfunc does not exist!
Did you mean "rngfunc"?

-----------
QUERY:
DROP VIEW vw_getrngfunc
RESULT:
	duckdb: Catalog Error: View with name vw_getrngfunc does not exist!
Did you mean "rngfunc"?

-----------
QUERY:
-- sql, proretset = t, prorettype = c
CREATE FUNCTION getrngfunc5(int) RETURNS setof rngfunc AS 'SELECT * FROM rngfunc WHERE rngfuncid = $1
RESULT:
	duckdb: Parser Error: syntax error at or near "RETURNS"

-----------
QUERY:
' LANGUAGE SQL
RESULT:
	duckdb: Parser Error: unterminated quoted string at or near "' LANGUAGE SQL
"

-----------
QUERY:
SELECT * FROM getrngfunc5(1) AS t1
RESULT:
	duckdb: Catalog Error: Table Function with name getrngfunc5 does not exist!
Did you mean "dbgen"?

-----------
QUERY:
SELECT * FROM getrngfunc5(1) WITH ORDINALITY AS t1(a,b,c,o)
RESULT:
	duckdb: Not implemented Error: WITH ORDINALITY not implemented

-----------
QUERY:
CREATE VIEW vw_getrngfunc AS SELECT * FROM getrngfunc5(1)
RESULT:
	duckdb: Catalog Error: Table Function with name getrngfunc5 does not exist!
Did you mean "dbgen"?
LINE 1: ...TE VIEW vw_getrngfunc AS SELECT * FROM getrngfunc5(1)
                                                  ^

-----------
QUERY:
SELECT * FROM vw_getrngfunc
RESULT:
	duckdb: Catalog Error: Table with name vw_getrngfunc does not exist!
Did you mean "rngfunc"?

-----------
QUERY:
DROP VIEW vw_getrngfunc
RESULT:
	duckdb: Catalog Error: View with name vw_getrngfunc does not exist!
Did you mean "rngfunc"?

-----------
QUERY:
CREATE VIEW vw_getrngfunc AS SELECT * FROM getrngfunc5(1) WITH ORDINALITY AS t1(a,b,c,o)
RESULT:
	duckdb: Not implemented Error: WITH ORDINALITY not implemented

-----------
QUERY:
SELECT * FROM vw_getrngfunc
RESULT:
	duckdb: Catalog Error: Table with name vw_getrngfunc does not exist!
Did you mean "rngfunc"?

-----------
QUERY:
DROP VIEW vw_getrngfunc
RESULT:
	duckdb: Catalog Error: View with name vw_getrngfunc does not exist!
Did you mean "rngfunc"?

-----------
QUERY:
-- sql, proretset = f, prorettype = record
CREATE FUNCTION getrngfunc6(int) RETURNS RECORD AS 'SELECT * FROM rngfunc WHERE rngfuncid = $1
RESULT:
	duckdb: Parser Error: syntax error at or near "RETURNS"

-----------
QUERY:
' LANGUAGE SQL
RESULT:
	duckdb: Parser Error: unterminated quoted string at or near "' LANGUAGE SQL
"

-----------
QUERY:
SELECT * FROM getrngfunc6(1) AS t1(rngfuncid int, rngfuncsubid int, rngfuncname text)
RESULT:
	duckdb: Catalog Error: Table Function with name getrngfunc6 does not exist!
Did you mean "dbgen"?

-----------
QUERY:
SELECT * FROM ROWS FROM( getrngfunc6(1) AS (rngfuncid int, rngfuncsubid int, rngfuncname text) ) WITH ORDINALITY
RESULT:
	duckdb: Not implemented Error: WITH ORDINALITY not implemented

-----------
QUERY:
CREATE VIEW vw_getrngfunc AS SELECT * FROM getrngfunc6(1) AS
(rngfuncid int, rngfuncsubid int, rngfuncname text)
RESULT:
	duckdb: Catalog Error: Table Function with name getrngfunc6 does not exist!
Did you mean "dbgen"?
LINE 1: ...TE VIEW vw_getrngfunc AS SELECT * FROM getrngfunc6(1) AS
                                                  ^

-----------
QUERY:
SELECT * FROM vw_getrngfunc
RESULT:
	duckdb: Catalog Error: Table with name vw_getrngfunc does not exist!
Did you mean "rngfunc"?

-----------
QUERY:
DROP VIEW vw_getrngfunc
RESULT:
	duckdb: Catalog Error: View with name vw_getrngfunc does not exist!
Did you mean "rngfunc"?

-----------
QUERY:
CREATE VIEW vw_getrngfunc AS
  SELECT * FROM ROWS FROM( getrngfunc6(1) AS (rngfuncid int, rngfuncsubid int, rngfuncname text) )
                WITH ORDINALITY
RESULT:
	duckdb: Not implemented Error: WITH ORDINALITY not implemented

-----------
QUERY:
SELECT * FROM vw_getrngfunc
RESULT:
	duckdb: Catalog Error: Table with name vw_getrngfunc does not exist!
Did you mean "rngfunc"?

-----------
QUERY:
DROP VIEW vw_getrngfunc
RESULT:
	duckdb: Catalog Error: View with name vw_getrngfunc does not exist!
Did you mean "rngfunc"?

-----------
QUERY:
-- sql, proretset = t, prorettype = record
CREATE FUNCTION getrngfunc7(int) RETURNS setof record AS 'SELECT * FROM rngfunc WHERE rngfuncid = $1
RESULT:
	duckdb: Parser Error: syntax error at or near "RETURNS"

-----------
QUERY:
' LANGUAGE SQL
RESULT:
	duckdb: Parser Error: unterminated quoted string at or near "' LANGUAGE SQL
"

-----------
QUERY:
SELECT * FROM getrngfunc7(1) AS t1(rngfuncid int, rngfuncsubid int, rngfuncname text)
RESULT:
	duckdb: Catalog Error: Table Function with name getrngfunc7 does not exist!
Did you mean "dbgen"?

-----------
QUERY:
SELECT * FROM ROWS FROM( getrngfunc7(1) AS (rngfuncid int, rngfuncsubid int, rngfuncname text) ) WITH ORDINALITY
RESULT:
	duckdb: Not implemented Error: WITH ORDINALITY not implemented

-----------
QUERY:
CREATE VIEW vw_getrngfunc AS SELECT * FROM getrngfunc7(1) AS
(rngfuncid int, rngfuncsubid int, rngfuncname text)
RESULT:
	duckdb: Catalog Error: Table Function with name getrngfunc7 does not exist!
Did you mean "dbgen"?
LINE 1: ...TE VIEW vw_getrngfunc AS SELECT * FROM getrngfunc7(1) AS
                                                  ^

-----------
QUERY:
SELECT * FROM vw_getrngfunc
RESULT:
	duckdb: Catalog Error: Table with name vw_getrngfunc does not exist!
Did you mean "rngfunc"?

-----------
QUERY:
DROP VIEW vw_getrngfunc
RESULT:
	duckdb: Catalog Error: View with name vw_getrngfunc does not exist!
Did you mean "rngfunc"?

-----------
QUERY:
CREATE VIEW vw_getrngfunc AS
  SELECT * FROM ROWS FROM( getrngfunc7(1) AS (rngfuncid int, rngfuncsubid int, rngfuncname text) )
                WITH ORDINALITY
RESULT:
	duckdb: Not implemented Error: WITH ORDINALITY not implemented

-----------
QUERY:
SELECT * FROM vw_getrngfunc
RESULT:
	duckdb: Catalog Error: Table with name vw_getrngfunc does not exist!
Did you mean "rngfunc"?

-----------
QUERY:
DROP VIEW vw_getrngfunc
RESULT:
	duckdb: Catalog Error: View with name vw_getrngfunc does not exist!
Did you mean "rngfunc"?

-----------
QUERY:
-- plpgsql, proretset = f, prorettype = b
CREATE FUNCTION getrngfunc8(int) RETURNS int AS 'DECLARE rngfuncint int
RESULT:
	duckdb: Parser Error: syntax error at or near "RETURNS"

-----------
QUERY:
BEGIN SELECT rngfuncid into rngfuncint FROM rngfunc WHERE rngfuncid = $1
RESULT:
	duckdb: Parser Error: syntax error at or near "SELECT"

-----------
QUERY:
RETURN rngfuncint
RESULT:
	duckdb: Parser Error: syntax error at or near "RETURN"

-----------
QUERY:
END
RESULT:
	duckdb: TransactionContext Error: cannot commit - no transaction is active

-----------
QUERY:
' LANGUAGE plpgsql
RESULT:
	duckdb: Parser Error: unterminated quoted string at or near "' LANGUAGE plpgsql
"

-----------
QUERY:
SELECT * FROM getrngfunc8(1) AS t1
RESULT:
	duckdb: Catalog Error: Table Function with name getrngfunc8 does not exist!
Did you mean "dbgen"?

-----------
QUERY:
SELECT * FROM getrngfunc8(1) WITH ORDINALITY AS t1(v,o)
RESULT:
	duckdb: Not implemented Error: WITH ORDINALITY not implemented

-----------
QUERY:
CREATE VIEW vw_getrngfunc AS SELECT * FROM getrngfunc8(1)
RESULT:
	duckdb: Catalog Error: Table Function with name getrngfunc8 does not exist!
Did you mean "dbgen"?
LINE 1: ...TE VIEW vw_getrngfunc AS SELECT * FROM getrngfunc8(1)
                                                  ^

-----------
QUERY:
SELECT * FROM vw_getrngfunc
RESULT:
	duckdb: Catalog Error: Table with name vw_getrngfunc does not exist!
Did you mean "rngfunc"?

-----------
QUERY:
DROP VIEW vw_getrngfunc
RESULT:
	duckdb: Catalog Error: View with name vw_getrngfunc does not exist!
Did you mean "rngfunc"?

-----------
QUERY:
CREATE VIEW vw_getrngfunc AS SELECT * FROM getrngfunc8(1) WITH ORDINALITY AS t1(v,o)
RESULT:
	duckdb: Not implemented Error: WITH ORDINALITY not implemented

-----------
QUERY:
SELECT * FROM vw_getrngfunc
RESULT:
	duckdb: Catalog Error: Table with name vw_getrngfunc does not exist!
Did you mean "rngfunc"?

-----------
QUERY:
DROP VIEW vw_getrngfunc
RESULT:
	duckdb: Catalog Error: View with name vw_getrngfunc does not exist!
Did you mean "rngfunc"?

-----------
QUERY:
-- plpgsql, proretset = f, prorettype = c
CREATE FUNCTION getrngfunc9(int) RETURNS rngfunc AS 'DECLARE rngfunctup rngfunc%ROWTYPE
RESULT:
	duckdb: Parser Error: syntax error at or near "RETURNS"

-----------
QUERY:
BEGIN SELECT * into rngfunctup FROM rngfunc WHERE rngfuncid = $1
RESULT:
	duckdb: Parser Error: syntax error at or near "SELECT"

-----------
QUERY:
RETURN rngfunctup
RESULT:
	duckdb: Parser Error: syntax error at or near "RETURN"

-----------
QUERY:
END
RESULT:
	duckdb: TransactionContext Error: cannot commit - no transaction is active

-----------
QUERY:
' LANGUAGE plpgsql
RESULT:
	duckdb: Parser Error: unterminated quoted string at or near "' LANGUAGE plpgsql
"

-----------
QUERY:
SELECT * FROM getrngfunc9(1) AS t1
RESULT:
	duckdb: Catalog Error: Table Function with name getrngfunc9 does not exist!
Did you mean "dbgen"?

-----------
QUERY:
SELECT * FROM getrngfunc9(1) WITH ORDINALITY AS t1(a,b,c,o)
RESULT:
	duckdb: Not implemented Error: WITH ORDINALITY not implemented

-----------
QUERY:
CREATE VIEW vw_getrngfunc AS SELECT * FROM getrngfunc9(1)
RESULT:
	duckdb: Catalog Error: Table Function with name getrngfunc9 does not exist!
Did you mean "dbgen"?
LINE 1: ...TE VIEW vw_getrngfunc AS SELECT * FROM getrngfunc9(1)
                                                  ^

-----------
QUERY:
SELECT * FROM vw_getrngfunc
RESULT:
	duckdb: Catalog Error: Table with name vw_getrngfunc does not exist!
Did you mean "rngfunc"?

-----------
QUERY:
DROP VIEW vw_getrngfunc
RESULT:
	duckdb: Catalog Error: View with name vw_getrngfunc does not exist!
Did you mean "rngfunc"?

-----------
QUERY:
CREATE VIEW vw_getrngfunc AS SELECT * FROM getrngfunc9(1) WITH ORDINALITY AS t1(a,b,c,o)
RESULT:
	duckdb: Not implemented Error: WITH ORDINALITY not implemented

-----------
QUERY:
SELECT * FROM vw_getrngfunc
RESULT:
	duckdb: Catalog Error: Table with name vw_getrngfunc does not exist!
Did you mean "rngfunc"?

-----------
QUERY:
DROP VIEW vw_getrngfunc
RESULT:
	duckdb: Catalog Error: View with name vw_getrngfunc does not exist!
Did you mean "rngfunc"?

-----------
QUERY:
-- mix /* REPLACED */''n match kinds, to exercise expandRTE and related logic

select * from rows from(getrngfunc1(1),getrngfunc2(1),getrngfunc3(1),getrngfunc4(1),getrngfunc5(1),
                    getrngfunc6(1) AS (rngfuncid int, rngfuncsubid int, rngfuncname text),
                    getrngfunc7(1) AS (rngfuncid int, rngfuncsubid int, rngfuncname text),
                    getrngfunc8(1),getrngfunc9(1))
              with ordinality as t1(a,b,c,d,e,f,g,h,i,j,k,l,m,o,p,q,r,s,t,u)
RESULT:
	duckdb: Not implemented Error: WITH ORDINALITY not implemented

-----------
QUERY:
select * from rows from(getrngfunc9(1),getrngfunc8(1),
                    getrngfunc7(1) AS (rngfuncid int, rngfuncsubid int, rngfuncname text),
                    getrngfunc6(1) AS (rngfuncid int, rngfuncsubid int, rngfuncname text),
                    getrngfunc5(1),getrngfunc4(1),getrngfunc3(1),getrngfunc2(1),getrngfunc1(1))
              with ordinality as t1(a,b,c,d,e,f,g,h,i,j,k,l,m,o,p,q,r,s,t,u)
RESULT:
	duckdb: Not implemented Error: WITH ORDINALITY not implemented

-----------
QUERY:
create temporary view vw_rngfunc as
  select * from rows from(getrngfunc9(1),
                      getrngfunc7(1) AS (rngfuncid int, rngfuncsubid int, rngfuncname text),
                      getrngfunc1(1))
                with ordinality as t1(a,b,c,d,e,f,g,n)
RESULT:
	duckdb: Not implemented Error: WITH ORDINALITY not implemented

-----------
QUERY:
select * from vw_rngfunc
RESULT:
	duckdb: Catalog Error: Table with name vw_rngfunc does not exist!
Did you mean "rngfunc"?

-----------
QUERY:
select pg_get_viewdef('vw_rngfunc')
RESULT:
	duckdb: Conversion Error: Could not convert string 'vw_rngfunc' to INT64

-----------
QUERY:
drop view vw_rngfunc
RESULT:
	duckdb: Catalog Error: View with name vw_rngfunc does not exist!
Did you mean "rngfunc"?

-----------
QUERY:
DROP FUNCTION getrngfunc1(int)
RESULT:
	duckdb: Parser Error: syntax error at or near "("

-----------
QUERY:
DROP FUNCTION getrngfunc2(int)
RESULT:
	duckdb: Parser Error: syntax error at or near "("

-----------
QUERY:
DROP FUNCTION getrngfunc3(int)
RESULT:
	duckdb: Parser Error: syntax error at or near "("

-----------
QUERY:
DROP FUNCTION getrngfunc4(int)
RESULT:
	duckdb: Parser Error: syntax error at or near "("

-----------
QUERY:
DROP FUNCTION getrngfunc5(int)
RESULT:
	duckdb: Parser Error: syntax error at or near "("

-----------
QUERY:
DROP FUNCTION getrngfunc6(int)
RESULT:
	duckdb: Parser Error: syntax error at or near "("

-----------
QUERY:
DROP FUNCTION getrngfunc7(int)
RESULT:
	duckdb: Parser Error: syntax error at or near "("

-----------
QUERY:
DROP FUNCTION getrngfunc8(int)
RESULT:
	duckdb: Parser Error: syntax error at or near "("

-----------
QUERY:
DROP FUNCTION getrngfunc9(int)
RESULT:
	duckdb: Parser Error: syntax error at or near "("

-----------
QUERY:
DROP FUNCTION rngfunct(int)
RESULT:
	duckdb: Parser Error: syntax error at or near "("

-----------
QUERY:
DROP TABLE rngfunc2
RESULT:
	duckdb: None

-----------
QUERY:
DROP TABLE rngfunc
RESULT:
	duckdb: None

-----------
QUERY:
-- Rescan tests --
CREATE TEMPORARY SEQUENCE rngfunc_rescan_seq1
RESULT:
	duckdb: None

-----------
QUERY:
CREATE TEMPORARY SEQUENCE rngfunc_rescan_seq2
RESULT:
	duckdb: None

-----------
QUERY:
CREATE TYPE rngfunc_rescan_t AS (i integer, s bigint)
RESULT:
	duckdb: Parser Error: syntax error at or near "("

-----------
QUERY:
CREATE FUNCTION rngfunc_sql(int,int) RETURNS setof rngfunc_rescan_t AS 'SELECT i, nextval(''rngfunc_rescan_seq1'') FROM generate_series($1,$2) i
RESULT:
	duckdb: Parser Error: syntax error at or near "RETURNS"

-----------
QUERY:
' LANGUAGE SQL
RESULT:
	duckdb: Parser Error: unterminated quoted string at or near "' LANGUAGE SQL
"

-----------
QUERY:
-- plpgsql functions use materialize mode
CREATE FUNCTION rngfunc_mat(int,int) RETURNS setof rngfunc_rescan_t AS 'begin for i in $1..$2 loop return next (i, nextval(''rngfunc_rescan_seq2''))
RESULT:
	duckdb: Parser Error: syntax error at or near "RETURNS"

-----------
QUERY:
end loop
RESULT:
	duckdb: Parser Error: syntax error at or near "loop"

-----------
QUERY:
end
RESULT:
	duckdb: TransactionContext Error: cannot commit - no transaction is active

-----------
QUERY:
' LANGUAGE plpgsql
RESULT:
	duckdb: Parser Error: unterminated quoted string at or near "' LANGUAGE plpgsql
"

-----------
QUERY:
--invokes ExecReScanFunctionScan - all these cases should materialize the function only once
-- LEFT JOIN on a condition that the planner can/* REPLACED */''t prove to be true is used to ensure the function
-- is on the inner path of a nestloop join

SELECT setval('rngfunc_rescan_seq1',1,false),setval('rngfunc_rescan_seq2',1,false)
RESULT:
	duckdb: Catalog Error: Scalar Function with name setval does not exist!
Did you mean "nextval"?

-----------
QUERY:
SELECT * FROM (VALUES (1),(2),(3)) v(r) LEFT JOIN rngfunc_sql(11,13) ON (r+i)<100
RESULT:
	duckdb: Catalog Error: Table Function with name rngfunc_sql does not exist!
Did you mean "range"?

-----------
QUERY:
SELECT setval('rngfunc_rescan_seq1',1,false),setval('rngfunc_rescan_seq2',1,false)
RESULT:
	duckdb: Catalog Error: Scalar Function with name setval does not exist!
Did you mean "nextval"?

-----------
QUERY:
SELECT * FROM (VALUES (1),(2),(3)) v(r) LEFT JOIN rngfunc_sql(11,13) WITH ORDINALITY AS f(i,s,o) ON (r+i)<100
RESULT:
	duckdb: Not implemented Error: WITH ORDINALITY not implemented

-----------
QUERY:
SELECT setval('rngfunc_rescan_seq1',1,false),setval('rngfunc_rescan_seq2',1,false)
RESULT:
	duckdb: Catalog Error: Scalar Function with name setval does not exist!
Did you mean "nextval"?

-----------
QUERY:
SELECT * FROM (VALUES (1),(2),(3)) v(r) LEFT JOIN rngfunc_mat(11,13) ON (r+i)<100
RESULT:
	duckdb: Catalog Error: Table Function with name rngfunc_mat does not exist!
Did you mean "range"?

-----------
QUERY:
SELECT setval('rngfunc_rescan_seq1',1,false),setval('rngfunc_rescan_seq2',1,false)
RESULT:
	duckdb: Catalog Error: Scalar Function with name setval does not exist!
Did you mean "nextval"?

-----------
QUERY:
SELECT * FROM (VALUES (1),(2),(3)) v(r) LEFT JOIN rngfunc_mat(11,13) WITH ORDINALITY AS f(i,s,o) ON (r+i)<100
RESULT:
	duckdb: Not implemented Error: WITH ORDINALITY not implemented

-----------
QUERY:
SELECT setval('rngfunc_rescan_seq1',1,false),setval('rngfunc_rescan_seq2',1,false)
RESULT:
	duckdb: Catalog Error: Scalar Function with name setval does not exist!
Did you mean "nextval"?

-----------
QUERY:
SELECT * FROM (VALUES (1),(2),(3)) v(r) LEFT JOIN ROWS FROM( rngfunc_sql(11,13), rngfunc_mat(11,13) ) WITH ORDINALITY AS f(i1,s1,i2,s2,o) ON (r+i1+i2)<100
RESULT:
	duckdb: Not implemented Error: WITH ORDINALITY not implemented

-----------
QUERY:
SELECT * FROM (VALUES (1),(2),(3)) v(r) LEFT JOIN generate_series(11,13) f(i) ON (r+i)<100
RESULT:
	duckdb: [(1, 11), (2, 11), (3, 11), (1, 12), (2, 12), (3, 12), (1, 13), (2, 13), (3, 13)]

-----------
QUERY:
SELECT * FROM (VALUES (1),(2),(3)) v(r) LEFT JOIN generate_series(11,13) WITH ORDINALITY AS f(i,o) ON (r+i)<100
RESULT:
	duckdb: Not implemented Error: WITH ORDINALITY not implemented

-----------
QUERY:
SELECT * FROM (VALUES (1),(2),(3)) v(r) LEFT JOIN unnest(array[10,20,30]) f(i) ON (r+i)<100
RESULT:
	duckdb: [(1, 10), (2, 10), (3, 10), (1, 20), (2, 20), (3, 20), (1, 30), (2, 30), (3, 30)]

-----------
QUERY:
SELECT * FROM (VALUES (1),(2),(3)) v(r) LEFT JOIN unnest(array[10,20,30]) WITH ORDINALITY AS f(i,o) ON (r+i)<100
RESULT:
	duckdb: Not implemented Error: WITH ORDINALITY not implemented

-----------
QUERY:
--invokes ExecReScanFunctionScan with chgParam != NULL (using implied LATERAL)

SELECT setval('rngfunc_rescan_seq1',1,false),setval('rngfunc_rescan_seq2',1,false)
RESULT:
	duckdb: Catalog Error: Scalar Function with name setval does not exist!
Did you mean "nextval"?

-----------
QUERY:
SELECT * FROM (VALUES (1),(2),(3)) v(r), rngfunc_sql(10+r,13)
RESULT:
	duckdb: Catalog Error: Table Function with name rngfunc_sql does not exist!
Did you mean "range"?

-----------
QUERY:
SELECT setval('rngfunc_rescan_seq1',1,false),setval('rngfunc_rescan_seq2',1,false)
RESULT:
	duckdb: Catalog Error: Scalar Function with name setval does not exist!
Did you mean "nextval"?

-----------
QUERY:
SELECT * FROM (VALUES (1),(2),(3)) v(r), rngfunc_sql(10+r,13) WITH ORDINALITY AS f(i,s,o)
RESULT:
	duckdb: Not implemented Error: WITH ORDINALITY not implemented

-----------
QUERY:
SELECT setval('rngfunc_rescan_seq1',1,false),setval('rngfunc_rescan_seq2',1,false)
RESULT:
	duckdb: Catalog Error: Scalar Function with name setval does not exist!
Did you mean "nextval"?

-----------
QUERY:
SELECT * FROM (VALUES (1),(2),(3)) v(r), rngfunc_sql(11,10+r)
RESULT:
	duckdb: Catalog Error: Table Function with name rngfunc_sql does not exist!
Did you mean "range"?

-----------
QUERY:
SELECT setval('rngfunc_rescan_seq1',1,false),setval('rngfunc_rescan_seq2',1,false)
RESULT:
	duckdb: Catalog Error: Scalar Function with name setval does not exist!
Did you mean "nextval"?

-----------
QUERY:
SELECT * FROM (VALUES (1),(2),(3)) v(r), rngfunc_sql(11,10+r) WITH ORDINALITY AS f(i,s,o)
RESULT:
	duckdb: Not implemented Error: WITH ORDINALITY not implemented

-----------
QUERY:
SELECT setval('rngfunc_rescan_seq1',1,false),setval('rngfunc_rescan_seq2',1,false)
RESULT:
	duckdb: Catalog Error: Scalar Function with name setval does not exist!
Did you mean "nextval"?

-----------
QUERY:
SELECT * FROM (VALUES (11,12),(13,15),(16,20)) v(r1,r2), rngfunc_sql(r1,r2)
RESULT:
	duckdb: Catalog Error: Table Function with name rngfunc_sql does not exist!
Did you mean "range"?

-----------
QUERY:
SELECT setval('rngfunc_rescan_seq1',1,false),setval('rngfunc_rescan_seq2',1,false)
RESULT:
	duckdb: Catalog Error: Scalar Function with name setval does not exist!
Did you mean "nextval"?

-----------
QUERY:
SELECT * FROM (VALUES (11,12),(13,15),(16,20)) v(r1,r2), rngfunc_sql(r1,r2) WITH ORDINALITY AS f(i,s,o)
RESULT:
	duckdb: Not implemented Error: WITH ORDINALITY not implemented

-----------
QUERY:
SELECT setval('rngfunc_rescan_seq1',1,false),setval('rngfunc_rescan_seq2',1,false)
RESULT:
	duckdb: Catalog Error: Scalar Function with name setval does not exist!
Did you mean "nextval"?

-----------
QUERY:
SELECT * FROM (VALUES (1),(2),(3)) v(r), rngfunc_mat(10+r,13)
RESULT:
	duckdb: Catalog Error: Table Function with name rngfunc_mat does not exist!
Did you mean "range"?

-----------
QUERY:
SELECT setval('rngfunc_rescan_seq1',1,false),setval('rngfunc_rescan_seq2',1,false)
RESULT:
	duckdb: Catalog Error: Scalar Function with name setval does not exist!
Did you mean "nextval"?

-----------
QUERY:
SELECT * FROM (VALUES (1),(2),(3)) v(r), rngfunc_mat(10+r,13) WITH ORDINALITY AS f(i,s,o)
RESULT:
	duckdb: Not implemented Error: WITH ORDINALITY not implemented

-----------
QUERY:
SELECT setval('rngfunc_rescan_seq1',1,false),setval('rngfunc_rescan_seq2',1,false)
RESULT:
	duckdb: Catalog Error: Scalar Function with name setval does not exist!
Did you mean "nextval"?

-----------
QUERY:
SELECT * FROM (VALUES (1),(2),(3)) v(r), rngfunc_mat(11,10+r)
RESULT:
	duckdb: Catalog Error: Table Function with name rngfunc_mat does not exist!
Did you mean "range"?

-----------
QUERY:
SELECT setval('rngfunc_rescan_seq1',1,false),setval('rngfunc_rescan_seq2',1,false)
RESULT:
	duckdb: Catalog Error: Scalar Function with name setval does not exist!
Did you mean "nextval"?

-----------
QUERY:
SELECT * FROM (VALUES (1),(2),(3)) v(r), rngfunc_mat(11,10+r) WITH ORDINALITY AS f(i,s,o)
RESULT:
	duckdb: Not implemented Error: WITH ORDINALITY not implemented

-----------
QUERY:
SELECT setval('rngfunc_rescan_seq1',1,false),setval('rngfunc_rescan_seq2',1,false)
RESULT:
	duckdb: Catalog Error: Scalar Function with name setval does not exist!
Did you mean "nextval"?

-----------
QUERY:
SELECT * FROM (VALUES (11,12),(13,15),(16,20)) v(r1,r2), rngfunc_mat(r1,r2)
RESULT:
	duckdb: Catalog Error: Table Function with name rngfunc_mat does not exist!
Did you mean "range"?

-----------
QUERY:
SELECT setval('rngfunc_rescan_seq1',1,false),setval('rngfunc_rescan_seq2',1,false)
RESULT:
	duckdb: Catalog Error: Scalar Function with name setval does not exist!
Did you mean "nextval"?

-----------
QUERY:
SELECT * FROM (VALUES (11,12),(13,15),(16,20)) v(r1,r2), rngfunc_mat(r1,r2) WITH ORDINALITY AS f(i,s,o)
RESULT:
	duckdb: Not implemented Error: WITH ORDINALITY not implemented

-----------
QUERY:
-- selective rescan of multiple functions:

SELECT setval('rngfunc_rescan_seq1',1,false),setval('rngfunc_rescan_seq2',1,false)
RESULT:
	duckdb: Catalog Error: Scalar Function with name setval does not exist!
Did you mean "nextval"?

-----------
QUERY:
SELECT * FROM (VALUES (1),(2),(3)) v(r), ROWS FROM( rngfunc_sql(11,11), rngfunc_mat(10+r,13) )
RESULT:
	duckdb: Not implemented Error: ROWS FROM() not implemented

-----------
QUERY:
SELECT setval('rngfunc_rescan_seq1',1,false),setval('rngfunc_rescan_seq2',1,false)
RESULT:
	duckdb: Catalog Error: Scalar Function with name setval does not exist!
Did you mean "nextval"?

-----------
QUERY:
SELECT * FROM (VALUES (1),(2),(3)) v(r), ROWS FROM( rngfunc_sql(10+r,13), rngfunc_mat(11,11) )
RESULT:
	duckdb: Not implemented Error: ROWS FROM() not implemented

-----------
QUERY:
SELECT setval('rngfunc_rescan_seq1',1,false),setval('rngfunc_rescan_seq2',1,false)
RESULT:
	duckdb: Catalog Error: Scalar Function with name setval does not exist!
Did you mean "nextval"?

-----------
QUERY:
SELECT * FROM (VALUES (1),(2),(3)) v(r), ROWS FROM( rngfunc_sql(10+r,13), rngfunc_mat(10+r,13) )
RESULT:
	duckdb: Not implemented Error: ROWS FROM() not implemented

-----------
QUERY:
SELECT setval('rngfunc_rescan_seq1',1,false),setval('rngfunc_rescan_seq2',1,false)
RESULT:
	duckdb: Catalog Error: Scalar Function with name setval does not exist!
Did you mean "nextval"?

-----------
QUERY:
SELECT * FROM generate_series(1,2) r1, generate_series(r1,3) r2, ROWS FROM( rngfunc_sql(10+r1,13), rngfunc_mat(10+r2,13) )
RESULT:
	duckdb: Not implemented Error: ROWS FROM() not implemented

-----------
QUERY:
SELECT * FROM (VALUES (1),(2),(3)) v(r), generate_series(10+r,20-r) f(i)
RESULT:
	duckdb: Binder Error: Could not choose a best candidate function for the function call "+(INTEGER_LITERAL, STRING_LITERAL)". In order to select one, please add explicit type casts.
	Candidate functions:
	+(INTEGER, DATE) -> DATE
	+(INTEGER, INTEGER) -> INTEGER


-----------
QUERY:
SELECT * FROM (VALUES (1),(2),(3)) v(r), generate_series(10+r,20-r) WITH ORDINALITY AS f(i,o)
RESULT:
	duckdb: Not implemented Error: WITH ORDINALITY not implemented

-----------
QUERY:
SELECT * FROM (VALUES (1),(2),(3)) v(r), unnest(array[r*10,r*20,r*30]) f(i)
RESULT:
	duckdb: [(2, 20), (2, 40), (2, 60), (1, 10), (1, 20), (1, 30), (3, 30), (3, 60), (3, 90)]

-----------
QUERY:
SELECT * FROM (VALUES (1),(2),(3)) v(r), unnest(array[r*10,r*20,r*30]) WITH ORDINALITY AS f(i,o)
RESULT:
	duckdb: Not implemented Error: WITH ORDINALITY not implemented

-----------
QUERY:
-- deep nesting

SELECT * FROM (VALUES (1),(2),(3)) v1(r1),
              LATERAL (SELECT r1, * FROM (VALUES (10),(20),(30)) v2(r2)
                                         LEFT JOIN generate_series(21,23) f(i) ON ((r2+i)<100) OFFSET 0) s1
RESULT:
	duckdb: [(2, 2, 10, 21), (2, 2, 20, 21), (2, 2, 30, 21), (2, 2, 10, 22), (2, 2, 20, 22), (2, 2, 30, 22), (2, 2, 10, 23), (2, 2, 20, 23), (2, 2, 30, 23), (1, 1, 10, 21), (1, 1, 20, 21), (1, 1, 30, 21), (1, 1, 10, 22), (1, 1, 20, 22), (1, 1, 30, 22), (1, 1, 10, 23), (1, 1, 20, 23), (1, 1, 30, 23), (3, 3, 10, 21), (3, 3, 20, 21), (3, 3, 30, 21), (3, 3, 10, 22), (3, 3, 20, 22), (3, 3, 30, 22), (3, 3, 10, 23), (3, 3, 20, 23), (3, 3, 30, 23)]

-----------
QUERY:
SELECT * FROM (VALUES (1),(2),(3)) v1(r1),
              LATERAL (SELECT r1, * FROM (VALUES (10),(20),(30)) v2(r2)
                                         LEFT JOIN generate_series(20+r1,23) f(i) ON ((r2+i)<100) OFFSET 0) s1
RESULT:
	duckdb: Binder Error: Could not choose a best candidate function for the function call "+(INTEGER_LITERAL, STRING_LITERAL)". In order to select one, please add explicit type casts.
	Candidate functions:
	+(INTEGER, DATE) -> DATE
	+(INTEGER, INTEGER) -> INTEGER


-----------
QUERY:
SELECT * FROM (VALUES (1),(2),(3)) v1(r1),
              LATERAL (SELECT r1, * FROM (VALUES (10),(20),(30)) v2(r2)
                                         LEFT JOIN generate_series(r2,r2+3) f(i) ON ((r2+i)<100) OFFSET 0) s1
RESULT:
	duckdb: Binder Error: Could not choose a best candidate function for the function call "+(STRING_LITERAL, INTEGER_LITERAL)". In order to select one, please add explicit type casts.
	Candidate functions:
	+(DATE, INTEGER) -> DATE
	+(INTEGER, INTEGER) -> INTEGER


-----------
QUERY:
SELECT * FROM (VALUES (1),(2),(3)) v1(r1),
              LATERAL (SELECT r1, * FROM (VALUES (10),(20),(30)) v2(r2)
                                         LEFT JOIN generate_series(r1,2+r2/5) f(i) ON ((r2+i)<100) OFFSET 0) s1
RESULT:
	duckdb: Binder Error: No function matches the given name and argument types '+(INTEGER_LITERAL, INTERVAL)'. You might need to add explicit type casts.
	Candidate functions:
	+(TINYINT) -> TINYINT
	+(TINYINT, TINYINT) -> TINYINT
	+(SMALLINT) -> SMALLINT
	+(SMALLINT, SMALLINT) -> SMALLINT
	+(INTEGER) -> INTEGER
	+(INTEGER, INTEGER) -> INTEGER
	+(BIGINT) -> BIGINT
	+(BIGINT, BIGINT) -> BIGINT
	+(HUGEINT) -> HUGEINT
	+(HUGEINT, HUGEINT) -> HUGEINT
	+(FLOAT) -> FLOAT
	+(FLOAT, FLOAT) -> FLOAT
	+(DOUBLE) -> DOUBLE
	+(DOUBLE, DOUBLE) -> DOUBLE
	+(DECIMAL) -> DECIMAL
	+(DECIMAL, DECIMAL) -> DECIMAL
	+(UTINYINT) -> UTINYINT
	+(UTINYINT, UTINYINT) -> UTINYINT
	+(USMALLINT) -> USMALLINT
	+(USMALLINT, USMALLINT) -> USMALLINT
	+(UINTEGER) -> UINTEGER
	+(UINTEGER, UINTEGER) -> UINTEGER
	+(UBIGINT) -> UBIGINT
	+(UBIGINT, UBIGINT) -> UBIGINT
	+(UHUGEINT) -> UHUGEINT
	+(UHUGEINT, UHUGEINT) -> UHUGEINT
	+(DATE, INTEGER) -> DATE
	+(INTEGER, DATE) -> DATE
	+(INTERVAL, INTERVAL) -> INTERVAL
	+(DATE, INTERVAL) -> TIMESTAMP
	+(INTERVAL, DATE) -> TIMESTAMP
	+(TIME, INTERVAL) -> TIME
	+(INTERVAL, TIME) -> TIME
	+(TIMESTAMP, INTERVAL) -> TIMESTAMP
	+(INTERVAL, TIMESTAMP) -> TIMESTAMP
	+(TIME WITH TIME ZONE, INTERVAL) -> TIME WITH TIME ZONE
	+(INTERVAL, TIME WITH TIME ZONE) -> TIME WITH TIME ZONE
	+(TIME, DATE) -> TIMESTAMP
	+(DATE, TIME) -> TIMESTAMP
	+(TIME WITH TIME ZONE, DATE) -> TIMESTAMP WITH TIME ZONE
	+(DATE, TIME WITH TIME ZONE) -> TIMESTAMP WITH TIME ZONE
	+(ANY[], ANY[]) -> ANY[]
	+(TIMESTAMP WITH TIME ZONE, INTERVAL) -> TIMESTAMP WITH TIME ZONE
	+(INTERVAL, TIMESTAMP WITH TIME ZONE) -> TIMESTAMP WITH TIME ZONE


-----------
QUERY:
-- check handling of FULL JOIN with multiple lateral references (bug #15741)

SELECT *
FROM (VALUES (1),(2)) v1(r1)
    LEFT JOIN LATERAL (
        SELECT *
        FROM generate_series(1, v1.r1) AS gs1
        LEFT JOIN LATERAL (
            SELECT *
            FROM generate_series(1, gs1) AS gs2
            LEFT JOIN generate_series(1, gs2) AS gs3 ON TRUE
        ) AS ss1 ON TRUE
        FULL JOIN generate_series(1, v1.r1) AS gs4 ON FALSE
    ) AS ss0 ON TRUE
RESULT:
	duckdb: Binder Error: No function matches the given name and argument types 'generate_series(INTEGER, VARCHAR)'. You might need to add explicit type casts.
	Candidate functions:
	generate_series(BIGINT)
	generate_series(BIGINT, BIGINT)
	generate_series(BIGINT, BIGINT, BIGINT)
	generate_series(TIMESTAMP, TIMESTAMP, INTERVAL)
	generate_series(TIMESTAMP WITH TIME ZONE, TIMESTAMP WITH TIME ZONE, INTERVAL)


-----------
QUERY:
DROP FUNCTION rngfunc_sql(int,int)
RESULT:
	duckdb: Parser Error: syntax error at or near "("

-----------
QUERY:
DROP FUNCTION rngfunc_mat(int,int)
RESULT:
	duckdb: Parser Error: syntax error at or near "("

-----------
QUERY:
DROP SEQUENCE rngfunc_rescan_seq1
RESULT:
	duckdb: None

-----------
QUERY:
DROP SEQUENCE rngfunc_rescan_seq2
RESULT:
	duckdb: None

-----------
QUERY:
--
-- Test cases involving OUT parameters
--

CREATE FUNCTION rngfunc(in f1 int, out f2 int)
AS 'select $1+1' LANGUAGE sql
RESULT:
	duckdb: Parser Error: syntax error at or near "in"

-----------
QUERY:
SELECT rngfunc(42)
RESULT:
	duckdb: Catalog Error: Scalar Function with name rngfunc does not exist!
Did you mean "trunc"?

-----------
QUERY:
SELECT * FROM rngfunc(42)
RESULT:
	duckdb: Catalog Error: Table Function with name rngfunc does not exist!
Did you mean "range"?

-----------
QUERY:
SELECT * FROM rngfunc(42) AS p(x)
RESULT:
	duckdb: Catalog Error: Table Function with name rngfunc does not exist!
Did you mean "range"?

-----------
QUERY:
-- explicit spec of return type is OK
CREATE OR REPLACE FUNCTION rngfunc(in f1 int, out f2 int) RETURNS int
AS 'select $1+1' LANGUAGE sql
RESULT:
	duckdb: Parser Error: syntax error at or near "in"

-----------
QUERY:
-- error, wrong result type
CREATE OR REPLACE FUNCTION rngfunc(in f1 int, out f2 int) RETURNS float
AS 'select $1+1' LANGUAGE sql
RESULT:
	duckdb: Parser Error: syntax error at or near "in"

-----------
QUERY:
-- with multiple OUT params you must get a RECORD result
CREATE OR REPLACE FUNCTION rngfunc(in f1 int, out f2 int, out f3 text) RETURNS int
AS 'select $1+1' LANGUAGE sql
RESULT:
	duckdb: Parser Error: syntax error at or near "in"

-----------
QUERY:
CREATE OR REPLACE FUNCTION rngfunc(in f1 int, out f2 int, out f3 text)
RETURNS record
AS 'select $1+1' LANGUAGE sql
RESULT:
	duckdb: Parser Error: syntax error at or near "in"

-----------
QUERY:
CREATE OR REPLACE FUNCTION rngfuncr(in f1 int, out f2 int, out text)
AS $$select $1-1, $1::text || 'z'$$ LANGUAGE sql
RESULT:
	duckdb: Parser Error: syntax error at or near "in"

-----------
QUERY:
SELECT f1, rngfuncr(f1) FROM int4_tbl
RESULT:
	duckdb: Catalog Error: Scalar Function with name rngfuncr does not exist!
Did you mean "trunc"?

-----------
QUERY:
SELECT * FROM rngfuncr(42)
RESULT:
	duckdb: Catalog Error: Table Function with name rngfuncr does not exist!
Did you mean "range"?

-----------
QUERY:
SELECT * FROM rngfuncr(42) AS p(a,b)
RESULT:
	duckdb: Catalog Error: Table Function with name rngfuncr does not exist!
Did you mean "range"?

-----------
QUERY:
CREATE OR REPLACE FUNCTION rngfuncb(in f1 int, inout f2 int, out text)
AS $$select $2-1, $1::text || 'z'$$ LANGUAGE sql
RESULT:
	duckdb: Parser Error: syntax error at or near "in"

-----------
QUERY:
SELECT f1, rngfuncb(f1, f1/2) FROM int4_tbl
RESULT:
	duckdb: Catalog Error: Scalar Function with name rngfuncb does not exist!
Did you mean "trunc"?

-----------
QUERY:
SELECT * FROM rngfuncb(42, 99)
RESULT:
	duckdb: Catalog Error: Table Function with name rngfuncb does not exist!
Did you mean "range"?

-----------
QUERY:
SELECT * FROM rngfuncb(42, 99) AS p(a,b)
RESULT:
	duckdb: Catalog Error: Table Function with name rngfuncb does not exist!
Did you mean "range"?

-----------
QUERY:
-- Can reference function with or without OUT params for DROP, etc
DROP FUNCTION rngfunc(int)
RESULT:
	duckdb: Parser Error: syntax error at or near "("

-----------
QUERY:
DROP FUNCTION rngfuncr(in f2 int, out f1 int, out text)
RESULT:
	duckdb: Parser Error: syntax error at or near "("

-----------
QUERY:
DROP FUNCTION rngfuncb(in f1 int, inout f2 int)
RESULT:
	duckdb: Parser Error: syntax error at or near "("

-----------
QUERY:
--
-- For my next trick, polymorphic OUT parameters
--

CREATE FUNCTION dup (f1 anyelement, f2 out anyelement, f3 out anyarray)
AS 'select $1, array[$1,$1]' LANGUAGE sql
RESULT:
	duckdb: Parser Error: syntax error at or near "anyelement"

-----------
QUERY:
SELECT dup(22)
RESULT:
	duckdb: Catalog Error: Scalar Function with name dup does not exist!
Did you mean "pi"?

-----------
QUERY:
SELECT dup('xyz')
RESULT:
	duckdb: Catalog Error: Scalar Function with name dup does not exist!
Did you mean "pi"?

-----------
QUERY:
-- fails
SELECT dup('xyz'::text)
RESULT:
	duckdb: Catalog Error: Scalar Function with name dup does not exist!
Did you mean "pi"?

-----------
QUERY:
SELECT * FROM dup('xyz'::text)
RESULT:
	duckdb: Catalog Error: Table Function with name dup does not exist!
Did you mean "dbgen"?

-----------
QUERY:
-- fails, as we are attempting to rename first argument
CREATE OR REPLACE FUNCTION dup (inout f2 anyelement, out f3 anyarray)
AS 'select $1, array[$1,$1]' LANGUAGE sql
RESULT:
	duckdb: Parser Error: syntax error at or near "f2"

-----------
QUERY:
DROP FUNCTION dup(anyelement)
RESULT:
	duckdb: Parser Error: syntax error at or near "("

-----------
QUERY:
-- equivalent behavior, though different name exposed for input arg
CREATE OR REPLACE FUNCTION dup (inout f2 anyelement, out f3 anyarray)
AS 'select $1, array[$1,$1]' LANGUAGE sql
RESULT:
	duckdb: Parser Error: syntax error at or near "f2"

-----------
QUERY:
SELECT dup(22)
RESULT:
	duckdb: Catalog Error: Scalar Function with name dup does not exist!
Did you mean "pi"?

-----------
QUERY:
DROP FUNCTION dup(anyelement)
RESULT:
	duckdb: Parser Error: syntax error at or near "("

-----------
QUERY:
-- fails, no way to deduce outputs
CREATE FUNCTION bad (f1 int, out f2 anyelement, out f3 anyarray)
AS 'select $1, array[$1,$1]' LANGUAGE sql
RESULT:
	duckdb: Parser Error: syntax error at or near "int"

-----------
QUERY:
CREATE FUNCTION dup (f1 anycompatible, f2 anycompatiblearray, f3 out anycompatible, f4 out anycompatiblearray)
AS 'select $1, $2' LANGUAGE sql
RESULT:
	duckdb: Parser Error: syntax error at or near "anycompatible"

-----------
QUERY:
SELECT dup(22, array[44])
RESULT:
	duckdb: Catalog Error: Scalar Function with name dup does not exist!
Did you mean "pi"?

-----------
QUERY:
SELECT dup(4.5, array[44])
RESULT:
	duckdb: Catalog Error: Scalar Function with name dup does not exist!
Did you mean "pi"?

-----------
QUERY:
SELECT dup(22, array[44::bigint])
RESULT:
	duckdb: Catalog Error: Scalar Function with name dup does not exist!
Did you mean "pi"?

-----------
QUERY:
SELECT *, pg_typeof(f3), pg_typeof(f4) FROM dup(22, array[44::bigint])
RESULT:
	duckdb: Catalog Error: Table Function with name dup does not exist!
Did you mean "dbgen"?

-----------
QUERY:
DROP FUNCTION dup(f1 anycompatible, f2 anycompatiblearray)
RESULT:
	duckdb: Parser Error: syntax error at or near "("

-----------
QUERY:
CREATE FUNCTION dup (f1 anycompatiblerange, f2 out anycompatible, f3 out anycompatiblearray, f4 out anycompatiblerange)
AS 'select lower($1), array[lower($1), upper($1)], $1' LANGUAGE sql
RESULT:
	duckdb: Parser Error: syntax error at or near "anycompatiblerange"

-----------
QUERY:
SELECT dup(int4range(4,7))
RESULT:
	duckdb: Catalog Error: Scalar Function with name dup does not exist!
Did you mean "pi"?

-----------
QUERY:
SELECT dup(numrange(4,7))
RESULT:
	duckdb: Catalog Error: Scalar Function with name dup does not exist!
Did you mean "pi"?

-----------
QUERY:
SELECT dup(textrange('aaa', 'bbb'))
RESULT:
	duckdb: Catalog Error: Scalar Function with name dup does not exist!
Did you mean "pi"?

-----------
QUERY:
DROP FUNCTION dup(f1 anycompatiblerange)
RESULT:
	duckdb: Parser Error: syntax error at or near "("

-----------
QUERY:
-- fails, no way to deduce outputs
CREATE FUNCTION bad (f1 anyarray, out f2 anycompatible, out f3 anycompatiblearray)
AS 'select $1, array[$1,$1]' LANGUAGE sql
RESULT:
	duckdb: Parser Error: syntax error at or near "anyarray"

-----------
QUERY:
--
-- table functions
--

CREATE OR REPLACE FUNCTION rngfunc()
RETURNS TABLE(a int)
AS $$ SELECT a FROM generate_series(1,5) a(a) $$ LANGUAGE sql
RESULT:
	duckdb: Parser Error: syntax error at or near "RETURNS"

-----------
QUERY:
SELECT * FROM rngfunc()
RESULT:
	duckdb: Catalog Error: Table Function with name rngfunc does not exist!
Did you mean "range"?

-----------
QUERY:
DROP FUNCTION rngfunc()
RESULT:
	duckdb: Parser Error: syntax error at or near "("

-----------
QUERY:
CREATE OR REPLACE FUNCTION rngfunc(int)
RETURNS TABLE(a int, b int)
AS $$ SELECT a, b
         FROM generate_series(1,$1) a(a),
              generate_series(1,$1) b(b) $$ LANGUAGE sql
RESULT:
	duckdb: Parser Error: syntax error at or near "RETURNS"

-----------
QUERY:
SELECT * FROM rngfunc(3)
RESULT:
	duckdb: Catalog Error: Table Function with name rngfunc does not exist!
Did you mean "range"?

-----------
QUERY:
DROP FUNCTION rngfunc(int)
RESULT:
	duckdb: Parser Error: syntax error at or near "("

-----------
QUERY:
-- case that causes change of typmod knowledge during inlining
CREATE OR REPLACE FUNCTION rngfunc()
RETURNS TABLE(a varchar(5))
AS $$ SELECT 'hello'::varchar(5) $$ LANGUAGE sql STABLE
RESULT:
	duckdb: Parser Error: syntax error at or near "RETURNS"

-----------
QUERY:
SELECT * FROM rngfunc() GROUP BY 1
RESULT:
	duckdb: Catalog Error: Table Function with name rngfunc does not exist!
Did you mean "range"?

-----------
QUERY:
DROP FUNCTION rngfunc()
RESULT:
	duckdb: Parser Error: syntax error at or near "("

-----------
QUERY:
--
-- some tests on SQL functions with RETURNING
--

create temp table tt(f1 serial, data text)
RESULT:
	duckdb: Catalog Error: Type with name serial does not exist!
Did you mean "real"?

-----------
QUERY:
create function insert_tt(text) returns int as
$$ insert into tt(data) values($1) returning f1 $$
language sql
RESULT:
	duckdb: Parser Error: syntax error at or near "returns"

-----------
QUERY:
select insert_tt('foo')
RESULT:
	duckdb: Catalog Error: Scalar Function with name insert_tt does not exist!
Did you mean "instr"?

-----------
QUERY:
select insert_tt('bar')
RESULT:
	duckdb: Catalog Error: Scalar Function with name insert_tt does not exist!
Did you mean "instr"?

-----------
QUERY:
select * from tt
RESULT:
	duckdb: Catalog Error: Table with name tt does not exist!
Did you mean "INT2_TBL"?

-----------
QUERY:
-- insert will execute to completion even if function needs just 1 row
create or replace function insert_tt(text) returns int as
$$ insert into tt(data) values($1),($1||$1) returning f1 $$
language sql
RESULT:
	duckdb: Parser Error: syntax error at or near "returns"

-----------
QUERY:
select insert_tt('fool')
RESULT:
	duckdb: Catalog Error: Scalar Function with name insert_tt does not exist!
Did you mean "instr"?

-----------
QUERY:
select * from tt
RESULT:
	duckdb: Catalog Error: Table with name tt does not exist!
Did you mean "INT2_TBL"?

-----------
QUERY:
-- setof does what/* REPLACED */''s expected
create or replace function insert_tt2(text,text) returns setof int as
$$ insert into tt(data) values($1),($2) returning f1 $$
language sql
RESULT:
	duckdb: Parser Error: syntax error at or near "returns"

-----------
QUERY:
select insert_tt2('foolish','barrish')
RESULT:
	duckdb: Catalog Error: Scalar Function with name insert_tt2 does not exist!
Did you mean "instr"?

-----------
QUERY:
select * from insert_tt2('baz','quux')
RESULT:
	duckdb: Catalog Error: Table Function with name insert_tt2 does not exist!
Did you mean "unnest"?

-----------
QUERY:
select * from tt
RESULT:
	duckdb: Catalog Error: Table with name tt does not exist!
Did you mean "INT2_TBL"?

-----------
QUERY:
-- limit doesn/* REPLACED */''t prevent execution to completion
select insert_tt2('foolish','barrish') limit 1
RESULT:
	duckdb: Catalog Error: Scalar Function with name insert_tt2 does not exist!
Did you mean "instr"?

-----------
QUERY:
select * from tt
RESULT:
	duckdb: Catalog Error: Table with name tt does not exist!
Did you mean "INT2_TBL"?

-----------
QUERY:
-- triggers will fire, too
create function noticetrigger() returns trigger as $$
begin
  raise notice 'noticetrigger % %', new.f1, new.data;
  return null;
end $$ language plpgsql
RESULT:
	duckdb: Parser Error: syntax error at or near "returns"

-----------
QUERY:
create trigger tnoticetrigger after insert on tt for each row
execute procedure noticetrigger()
RESULT:
	duckdb: Parser Error: syntax error at or near "trigger"

-----------
QUERY:
select insert_tt2('foolme','barme') limit 1
RESULT:
	duckdb: Catalog Error: Scalar Function with name insert_tt2 does not exist!
Did you mean "instr"?

-----------
QUERY:
select * from tt
RESULT:
	duckdb: Catalog Error: Table with name tt does not exist!
Did you mean "INT2_TBL"?

-----------
QUERY:
-- and rules work
create temp table tt_log(f1 int, data text)
RESULT:
	duckdb: None

-----------
QUERY:
create rule insert_tt_rule as on insert to tt do also
  insert into tt_log values(new.*)
RESULT:
	duckdb: Parser Error: syntax error at or near "rule"

-----------
QUERY:
select insert_tt2('foollog','barlog') limit 1
RESULT:
	duckdb: Catalog Error: Scalar Function with name insert_tt2 does not exist!
Did you mean "instr"?

-----------
QUERY:
select * from tt
RESULT:
	duckdb: Catalog Error: Table with name tt does not exist!
Did you mean "tt_log"?

-----------
QUERY:
-- note that nextval() gets executed a second time in the rule expansion,
-- which is expected.
select * from tt_log
RESULT:
	duckdb: []

-----------
QUERY:
-- test case for a whole-row-variable bug
create function rngfunc1(n integer, out a text, out b text)
  returns setof record
  language sql
  as $$ select 'foo ' || i, 'bar ' || i from generate_series(1,$1) i $$
RESULT:
	duckdb: Parser Error: syntax error at or near "integer"

-----------
QUERY:
set work_mem='64kB'
RESULT:
	duckdb: Catalog Error: unrecognized configuration parameter "work_mem"

Did you mean: "worker_threads"

-----------
QUERY:
select t.a, t, t.a from rngfunc1(10000) t limit 1
RESULT:
	duckdb: Catalog Error: Table Function with name rngfunc1 does not exist!
Did you mean "range"?

-----------
QUERY:
reset work_mem
RESULT:
	duckdb: Catalog Error: unrecognized configuration parameter "work_mem"

Did you mean: "worker_threads"

-----------
QUERY:
select t.a, t, t.a from rngfunc1(10000) t limit 1
RESULT:
	duckdb: Catalog Error: Table Function with name rngfunc1 does not exist!
Did you mean "range"?

-----------
QUERY:
drop function rngfunc1(n integer)
RESULT:
	duckdb: Parser Error: syntax error at or near "("

-----------
QUERY:
-- test use of SQL functions returning record
-- this is supported in some cases where the query doesn/* REPLACED */''t specify
-- the actual record type ...

create function array_to_set(anyarray) returns setof record as $$
  select i AS "index", $1[i] AS "value" from generate_subscripts($1, 1) i
$$ language sql strict immutable
RESULT:
	duckdb: Parser Error: syntax error at or near "returns"

-----------
QUERY:
select array_to_set(array['one', 'two'])
RESULT:
	duckdb: Catalog Error: Scalar Function with name array_to_set does not exist!
Did you mean "array_to_json"?

-----------
QUERY:
select * from array_to_set(array['one', 'two']) as t(f1 int,f2 text)
RESULT:
	duckdb: Catalog Error: Table Function with name array_to_set does not exist!
Did you mean "read_text"?

-----------
QUERY:
select * from array_to_set(array['one', 'two'])
RESULT:
	duckdb: Catalog Error: Table Function with name array_to_set does not exist!
Did you mean "read_text"?

-----------
QUERY:
-- fail
-- after-the-fact coercion of the columns is now possible, too
select * from array_to_set(array['one', 'two']) as t(f1 numeric(4,2),f2 text)
RESULT:
	duckdb: Catalog Error: Table Function with name array_to_set does not exist!
Did you mean "read_text"?

-----------
QUERY:
-- and if it doesn/* REPLACED */''t work, you get a compile-time not run-time error
select * from array_to_set(array['one', 'two']) as t(f1 point,f2 text)
RESULT:
	duckdb: Catalog Error: Table Function with name array_to_set does not exist!
Did you mean "read_text"?

-----------
QUERY:
-- with /* REPLACED */''strict/* REPLACED */'', this function can/* REPLACED */''t be inlined in FROM
explain (verbose, costs off)
  select * from array_to_set(array['one', 'two']) as t(f1 numeric(4,2),f2 text)
RESULT:
	duckdb: Not implemented Error: Unimplemented explain type: verbose

-----------
QUERY:
-- but without, it can be:

create or replace function array_to_set(anyarray) returns setof record as $$
  select i AS "index", $1[i] AS "value" from generate_subscripts($1, 1) i
$$ language sql immutable
RESULT:
	duckdb: Parser Error: syntax error at or near "returns"

-----------
QUERY:
select array_to_set(array['one', 'two'])
RESULT:
	duckdb: Catalog Error: Scalar Function with name array_to_set does not exist!
Did you mean "array_to_json"?

-----------
QUERY:
select * from array_to_set(array['one', 'two']) as t(f1 int,f2 text)
RESULT:
	duckdb: Catalog Error: Table Function with name array_to_set does not exist!
Did you mean "read_text"?

-----------
QUERY:
select * from array_to_set(array['one', 'two']) as t(f1 numeric(4,2),f2 text)
RESULT:
	duckdb: Catalog Error: Table Function with name array_to_set does not exist!
Did you mean "read_text"?

-----------
QUERY:
select * from array_to_set(array['one', 'two']) as t(f1 point,f2 text)
RESULT:
	duckdb: Catalog Error: Table Function with name array_to_set does not exist!
Did you mean "read_text"?

-----------
QUERY:
explain (verbose, costs off)
  select * from array_to_set(array['one', 'two']) as t(f1 numeric(4,2),f2 text)
RESULT:
	duckdb: Not implemented Error: Unimplemented explain type: verbose

-----------
QUERY:
create temp table rngfunc(f1 int8, f2 int8)
RESULT:
	duckdb: None

-----------
QUERY:
create function testrngfunc() returns record as $$
  insert into rngfunc values (1,2) returning *;
$$ language sql
RESULT:
	duckdb: Parser Error: syntax error at or near "returns"

-----------
QUERY:
select testrngfunc()
RESULT:
	duckdb: Catalog Error: Scalar Function with name testrngfunc does not exist!
Did you mean "datetrunc"?

-----------
QUERY:
select * from testrngfunc() as t(f1 int8,f2 int8)
RESULT:
	duckdb: Catalog Error: Table Function with name testrngfunc does not exist!
Did you mean "range"?

-----------
QUERY:
select * from testrngfunc()
RESULT:
	duckdb: Catalog Error: Table Function with name testrngfunc does not exist!
Did you mean "range"?

-----------
QUERY:
-- fail

drop function testrngfunc()
RESULT:
	duckdb: Parser Error: syntax error at or near "("

-----------
QUERY:
create function testrngfunc() returns setof record as $$
  insert into rngfunc values (1,2), (3,4) returning *;
$$ language sql
RESULT:
	duckdb: Parser Error: syntax error at or near "returns"

-----------
QUERY:
select testrngfunc()
RESULT:
	duckdb: Catalog Error: Scalar Function with name testrngfunc does not exist!
Did you mean "datetrunc"?

-----------
QUERY:
select * from testrngfunc() as t(f1 int8,f2 int8)
RESULT:
	duckdb: Catalog Error: Table Function with name testrngfunc does not exist!
Did you mean "range"?

-----------
QUERY:
select * from testrngfunc()
RESULT:
	duckdb: Catalog Error: Table Function with name testrngfunc does not exist!
Did you mean "range"?

-----------
QUERY:
-- fail

drop function testrngfunc()
RESULT:
	duckdb: Parser Error: syntax error at or near "("

-----------
QUERY:
-- Check that typmod imposed by a composite type is honored
create type rngfunc_type as (f1 numeric(35,6), f2 numeric(35,2))
RESULT:
	duckdb: Parser Error: syntax error at or near "("

-----------
QUERY:
create function testrngfunc() returns rngfunc_type as $$
  select 7.136178319899999964, 7.136178319899999964;
$$ language sql immutable
RESULT:
	duckdb: Parser Error: syntax error at or near "returns"

-----------
QUERY:
explain (verbose, costs off)
select testrngfunc()
RESULT:
	duckdb: Not implemented Error: Unimplemented explain type: verbose

-----------
QUERY:
select testrngfunc()
RESULT:
	duckdb: Catalog Error: Scalar Function with name testrngfunc does not exist!
Did you mean "datetrunc"?

-----------
QUERY:
explain (verbose, costs off)
select * from testrngfunc()
RESULT:
	duckdb: Not implemented Error: Unimplemented explain type: verbose

-----------
QUERY:
select * from testrngfunc()
RESULT:
	duckdb: Catalog Error: Table Function with name testrngfunc does not exist!
Did you mean "range"?

-----------
QUERY:
create or replace function testrngfunc() returns rngfunc_type as $$
  select 7.136178319899999964, 7.136178319899999964;
$$ language sql volatile
RESULT:
	duckdb: Parser Error: syntax error at or near "returns"

-----------
QUERY:
explain (verbose, costs off)
select testrngfunc()
RESULT:
	duckdb: Not implemented Error: Unimplemented explain type: verbose

-----------
QUERY:
select testrngfunc()
RESULT:
	duckdb: Catalog Error: Scalar Function with name testrngfunc does not exist!
Did you mean "datetrunc"?

-----------
QUERY:
explain (verbose, costs off)
select * from testrngfunc()
RESULT:
	duckdb: Not implemented Error: Unimplemented explain type: verbose

-----------
QUERY:
select * from testrngfunc()
RESULT:
	duckdb: Catalog Error: Table Function with name testrngfunc does not exist!
Did you mean "range"?

-----------
QUERY:
drop function testrngfunc()
RESULT:
	duckdb: Parser Error: syntax error at or near "("

-----------
QUERY:
create function testrngfunc() returns setof rngfunc_type as $$
  select 7.136178319899999964, 7.136178319899999964;
$$ language sql immutable
RESULT:
	duckdb: Parser Error: syntax error at or near "returns"

-----------
QUERY:
explain (verbose, costs off)
select testrngfunc()
RESULT:
	duckdb: Not implemented Error: Unimplemented explain type: verbose

-----------
QUERY:
select testrngfunc()
RESULT:
	duckdb: Catalog Error: Scalar Function with name testrngfunc does not exist!
Did you mean "datetrunc"?

-----------
QUERY:
explain (verbose, costs off)
select * from testrngfunc()
RESULT:
	duckdb: Not implemented Error: Unimplemented explain type: verbose

-----------
QUERY:
select * from testrngfunc()
RESULT:
	duckdb: Catalog Error: Table Function with name testrngfunc does not exist!
Did you mean "range"?

-----------
QUERY:
create or replace function testrngfunc() returns setof rngfunc_type as $$
  select 7.136178319899999964, 7.136178319899999964;
$$ language sql volatile
RESULT:
	duckdb: Parser Error: syntax error at or near "returns"

-----------
QUERY:
explain (verbose, costs off)
select testrngfunc()
RESULT:
	duckdb: Not implemented Error: Unimplemented explain type: verbose

-----------
QUERY:
select testrngfunc()
RESULT:
	duckdb: Catalog Error: Scalar Function with name testrngfunc does not exist!
Did you mean "datetrunc"?

-----------
QUERY:
explain (verbose, costs off)
select * from testrngfunc()
RESULT:
	duckdb: Not implemented Error: Unimplemented explain type: verbose

-----------
QUERY:
select * from testrngfunc()
RESULT:
	duckdb: Catalog Error: Table Function with name testrngfunc does not exist!
Did you mean "range"?

-----------
QUERY:
create or replace function testrngfunc() returns setof rngfunc_type as $$
  select 1, 2 union select 3, 4 order by 1;
$$ language sql immutable
RESULT:
	duckdb: Parser Error: syntax error at or near "returns"

-----------
QUERY:
explain (verbose, costs off)
select testrngfunc()
RESULT:
	duckdb: Not implemented Error: Unimplemented explain type: verbose

-----------
QUERY:
select testrngfunc()
RESULT:
	duckdb: Catalog Error: Scalar Function with name testrngfunc does not exist!
Did you mean "datetrunc"?

-----------
QUERY:
explain (verbose, costs off)
select * from testrngfunc()
RESULT:
	duckdb: Not implemented Error: Unimplemented explain type: verbose

-----------
QUERY:
select * from testrngfunc()
RESULT:
	duckdb: Catalog Error: Table Function with name testrngfunc does not exist!
Did you mean "range"?

-----------
QUERY:
-- Check a couple of error cases while we/* REPLACED */''re here
select * from testrngfunc() as t(f1 int8,f2 int8)
RESULT:
	duckdb: Catalog Error: Table Function with name testrngfunc does not exist!
Did you mean "range"?

-----------
QUERY:
-- fail, composite result
select * from pg_get_keywords() as t(f1 int8,f2 int8)
RESULT:
	duckdb: Catalog Error: Table Function with name pg_get_keywords does not exist!
Did you mean "duckdb_keywords"?

-----------
QUERY:
-- fail, OUT params
select * from sin(3) as t(f1 int8,f2 int8)
RESULT:
	duckdb: Catalog Error: Table Function with name sin does not exist!
Did you mean "dsdgen"?

-----------
QUERY:
-- fail, scalar result type

drop type rngfunc_type cascade
RESULT:
	duckdb: Catalog Error: Type with name rngfunc_type does not exist!
Did you mean "struct"?

-----------
QUERY:
--
-- Check some cases involving added/dropped columns in a rowtype result
--

create temp table users (userid text, seq int, email text, todrop bool, moredrop int, enabled bool)
RESULT:
	duckdb: None

-----------
QUERY:
insert into users values ('id',1,'email',true,11,true)
RESULT:
	duckdb: None

-----------
QUERY:
insert into users values ('id2',2,'email2',true,12,true)
RESULT:
	duckdb: None

-----------
QUERY:
alter table users drop column todrop
RESULT:
	duckdb: None

-----------
QUERY:
create or replace function get_first_user() returns users as
$$ SELECT * FROM users ORDER BY userid LIMIT 1; $$
language sql stable
RESULT:
	duckdb: Parser Error: syntax error at or near "returns"

-----------
QUERY:
SELECT get_first_user()
RESULT:
	duckdb: Catalog Error: Scalar Function with name get_first_user does not exist!
Did you mean "first"?

-----------
QUERY:
SELECT * FROM get_first_user()
RESULT:
	duckdb: Catalog Error: Table Function with name get_first_user does not exist!
Did you mean "generate_series"?

-----------
QUERY:
create or replace function get_users() returns setof users as
$$ SELECT * FROM users ORDER BY userid; $$
language sql stable
RESULT:
	duckdb: Parser Error: syntax error at or near "returns"

-----------
QUERY:
SELECT get_users()
RESULT:
	duckdb: Catalog Error: Scalar Function with name get_users does not exist!
Did you mean "user"?

-----------
QUERY:
SELECT * FROM get_users()
RESULT:
	duckdb: Catalog Error: Table Function with name get_users does not exist!
Did you mean "generate_series"?

-----------
QUERY:
SELECT * FROM get_users() WITH ORDINALITY
RESULT:
	duckdb: Not implemented Error: WITH ORDINALITY not implemented

-----------
QUERY:
-- make sure ordinality copes

-- multiple functions vs. dropped columns
SELECT * FROM ROWS FROM(generate_series(10,11), get_users()) WITH ORDINALITY
RESULT:
	duckdb: Not implemented Error: WITH ORDINALITY not implemented

-----------
QUERY:
SELECT * FROM ROWS FROM(get_users(), generate_series(10,11)) WITH ORDINALITY
RESULT:
	duckdb: Not implemented Error: WITH ORDINALITY not implemented

-----------
QUERY:
-- check that we can cope with post-parsing changes in rowtypes
create temp view usersview as
SELECT * FROM ROWS FROM(get_users(), generate_series(10,11)) WITH ORDINALITY
RESULT:
	duckdb: Not implemented Error: WITH ORDINALITY not implemented

-----------
QUERY:
select * from usersview
RESULT:
	duckdb: Catalog Error: Table with name usersview does not exist!
Did you mean "users"?

-----------
QUERY:
alter table users add column junk text
RESULT:
	duckdb: None

-----------
QUERY:
select * from usersview
RESULT:
	duckdb: Catalog Error: Table with name usersview does not exist!
Did you mean "users"?

-----------
QUERY:
alter table users drop column moredrop
RESULT:
	duckdb: None

-----------
QUERY:
-- fail, view has reference

-- We used to have a bug that would allow the above to succeed, posing
-- hazards for later execution of the view.  Check that the internal
-- defenses for those hazards haven/* REPLACED */''t bit-rotted, in case some other
-- bug with similar symptoms emerges.
begin
RESULT:
	duckdb: None

-----------
QUERY:
-- destroy the dependency entry that prevents the DROP:
delete from pg_depend where
  objid = (select oid from pg_rewrite
           where ev_class = 'usersview'::regclass and rulename = '_RETURN')
  and refobjsubid = 5
returning pg_describe_object(classid, objid, objsubid) as obj,
          pg_describe_object(refclassid, refobjid, refobjsubid) as ref,
          deptype
RESULT:
	duckdb: Binder Error: Can only delete from base table!

-----------
QUERY:
alter table users drop column moredrop
RESULT:
	duckdb: Binder Error: Table "users" does not have a column with name "moredrop"

-----------
QUERY:
select * from usersview
RESULT:
	duckdb: Catalog Error: Table with name usersview does not exist!
Did you mean "users"?

-----------
QUERY:
-- expect clean failure
rollback
RESULT:
	duckdb: None

-----------
QUERY:
alter table users alter column seq type numeric
RESULT:
	duckdb: None

-----------
QUERY:
-- fail, view has reference

-- likewise, check we don/* REPLACED */''t crash if the dependency goes wrong
begin
RESULT:
	duckdb: None

-----------
QUERY:
-- destroy the dependency entry that prevents the ALTER:
delete from pg_depend where
  objid = (select oid from pg_rewrite
           where ev_class = 'usersview'::regclass and rulename = '_RETURN')
  and refobjsubid = 2
returning pg_describe_object(classid, objid, objsubid) as obj,
          pg_describe_object(refclassid, refobjid, refobjsubid) as ref,
          deptype
RESULT:
	duckdb: Binder Error: Can only delete from base table!

-----------
QUERY:
alter table users alter column seq type numeric
RESULT:
	duckdb: None

-----------
QUERY:
select * from usersview
RESULT:
	duckdb: Catalog Error: Table with name usersview does not exist!
Did you mean "users"?

-----------
QUERY:
-- expect clean failure
rollback
RESULT:
	duckdb: None

-----------
QUERY:
drop view usersview
RESULT:
	duckdb: Catalog Error: View with name usersview does not exist!
Did you mean "users"?

-----------
QUERY:
drop function get_first_user()
RESULT:
	duckdb: Parser Error: syntax error at or near "("

-----------
QUERY:
drop function get_users()
RESULT:
	duckdb: Parser Error: syntax error at or near "("

-----------
QUERY:
drop table users
RESULT:
	duckdb: None

-----------
QUERY:
-- check behavior with type coercion required for a set-op

create or replace function rngfuncbar() returns setof text as
$$ select 'foo'::varchar union all select 'bar'::varchar ; $$
language sql stable
RESULT:
	duckdb: Parser Error: syntax error at or near "returns"

-----------
QUERY:
select rngfuncbar()
RESULT:
	duckdb: Catalog Error: Scalar Function with name rngfuncbar does not exist!
Did you mean "bar"?

-----------
QUERY:
select * from rngfuncbar()
RESULT:
	duckdb: Catalog Error: Table Function with name rngfuncbar does not exist!
Did you mean "range"?

-----------
QUERY:
-- this function is now inlinable, too:
explain (verbose, costs off) select * from rngfuncbar()
RESULT:
	duckdb: Not implemented Error: Unimplemented explain type: verbose

-----------
QUERY:
drop function rngfuncbar()
RESULT:
	duckdb: Parser Error: syntax error at or near "("

-----------
QUERY:
-- check handling of a SQL function with multiple OUT params (bug #5777)

create or replace function rngfuncbar(out integer, out numeric) as
$$ select (1, 2.1) $$ language sql
RESULT:
	duckdb: Parser Error: syntax error at or near "integer"

-----------
QUERY:
select * from rngfuncbar()
RESULT:
	duckdb: Catalog Error: Table Function with name rngfuncbar does not exist!
Did you mean "range"?

-----------
QUERY:
create or replace function rngfuncbar(out integer, out numeric) as
$$ select (1, 2) $$ language sql
RESULT:
	duckdb: Parser Error: syntax error at or near "integer"

-----------
QUERY:
select * from rngfuncbar()
RESULT:
	duckdb: Catalog Error: Table Function with name rngfuncbar does not exist!
Did you mean "range"?

-----------
QUERY:
-- fail

create or replace function rngfuncbar(out integer, out numeric) as
$$ select (1, 2.1, 3) $$ language sql
RESULT:
	duckdb: Parser Error: syntax error at or near "integer"

-----------
QUERY:
select * from rngfuncbar()
RESULT:
	duckdb: Catalog Error: Table Function with name rngfuncbar does not exist!
Did you mean "range"?

-----------
QUERY:
-- fail

drop function rngfuncbar()
RESULT:
	duckdb: Parser Error: syntax error at or near "("

-----------
QUERY:
-- check whole-row-Var handling in nested lateral functions (bug #11703)

create function extractq2(t int8_tbl) returns int8 as $$
  select t.q2
$$ language sql immutable
RESULT:
	duckdb: Parser Error: syntax error at or near "int8_tbl"

-----------
QUERY:
explain (verbose, costs off)
select x from int8_tbl, extractq2(int8_tbl) f(x)
RESULT:
	duckdb: Not implemented Error: Unimplemented explain type: verbose

-----------
QUERY:
select x from int8_tbl, extractq2(int8_tbl) f(x)
RESULT:
	duckdb: Catalog Error: Table Function with name extractq2 does not exist!
Did you mean "repeat"?

-----------
QUERY:
create function extractq2_2(t int8_tbl) returns table(ret1 int8) as $$
  select extractq2(t) offset 0
$$ language sql immutable
RESULT:
	duckdb: Parser Error: syntax error at or near "int8_tbl"

-----------
QUERY:
explain (verbose, costs off)
select x from int8_tbl, extractq2_2(int8_tbl) f(x)
RESULT:
	duckdb: Not implemented Error: Unimplemented explain type: verbose

-----------
QUERY:
select x from int8_tbl, extractq2_2(int8_tbl) f(x)
RESULT:
	duckdb: Catalog Error: Table Function with name extractq2_2 does not exist!
Did you mean "repeat"?

-----------
QUERY:
-- without the /* REPLACED */''offset 0/* REPLACED */'', this function gets optimized quite differently

create function extractq2_2_opt(t int8_tbl) returns table(ret1 int8) as $$
  select extractq2(t)
$$ language sql immutable
RESULT:
	duckdb: Parser Error: syntax error at or near "int8_tbl"

-----------
QUERY:
explain (verbose, costs off)
select x from int8_tbl, extractq2_2_opt(int8_tbl) f(x)
RESULT:
	duckdb: Not implemented Error: Unimplemented explain type: verbose

-----------
QUERY:
select x from int8_tbl, extractq2_2_opt(int8_tbl) f(x)
RESULT:
	duckdb: Catalog Error: Table Function with name extractq2_2_opt does not exist!
Did you mean "repeat"?

-----------
QUERY:
-- check handling of nulls in SRF results (bug #7808)

create type rngfunc2 as (a integer, b text)
RESULT:
	duckdb: Parser Error: syntax error at or near "("

-----------
QUERY:
select *, row_to_json(u) from unnest(array[(1,'foo')::rngfunc2, null::rngfunc2]) u
RESULT:
	duckdb: Catalog Error: Type with name rngfunc2 does not exist!
Did you mean "enum"?

-----------
QUERY:
select *, row_to_json(u) from unnest(array[null::rngfunc2, null::rngfunc2]) u
RESULT:
	duckdb: Catalog Error: Type with name rngfunc2 does not exist!
Did you mean "enum"?

-----------
QUERY:
select *, row_to_json(u) from unnest(array[null::rngfunc2, (1,'foo')::rngfunc2, null::rngfunc2]) u
RESULT:
	duckdb: Catalog Error: Type with name rngfunc2 does not exist!
Did you mean "enum"?

-----------
QUERY:
select *, row_to_json(u) from unnest(array[]::rngfunc2[]) u
RESULT:
	duckdb: Catalog Error: Type with name rngfunc2 does not exist!
Did you mean "enum"?

-----------
QUERY:
drop type rngfunc2
RESULT:
	duckdb: Catalog Error: Type with name rngfunc2 does not exist!
Did you mean "enum"?

-----------
QUERY:
-- check handling of functions pulled up into function RTEs (bug #17227)

explain (verbose, costs off)
select * from
  (select jsonb_path_query_array(module->'lectures', '$[*]') as lecture
   from unnest(array['{"lectures": [{"id": "1"}]}'::jsonb])
        as unnested_modules(module)) as ss,
  jsonb_to_recordset(ss.lecture) as j (id text)
RESULT:
	duckdb: Not implemented Error: Unimplemented explain type: verbose

-----------
QUERY:
select * from
  (select jsonb_path_query_array(module->'lectures', '$[*]') as lecture
   from unnest(array['{"lectures": [{"id": "1"}]}'::jsonb])
        as unnested_modules(module)) as ss,
  jsonb_to_recordset(ss.lecture) as j (id text)
RESULT:
	duckdb: Catalog Error: Type with name jsonb does not exist!
Did you mean "JSON"?

-----------
QUERY:
-- check detection of mismatching record types with a const-folded expression

with a(b) as (values (row(1,2,3)))
select * from a, coalesce(b) as c(d int, e int)
RESULT:
	duckdb: Parser Error: Not a function call or value function

-----------
QUERY:
-- fail
with a(b) as (values (row(1,2,3)))
select * from a, coalesce(b) as c(d int, e int, f int, g int)
RESULT:
	duckdb: Parser Error: Not a function call or value function

-----------
QUERY:
-- fail
with a(b) as (values (row(1,2,3)))
select * from a, coalesce(b) as c(d int, e int, f float)
RESULT:
	duckdb: Parser Error: Not a function call or value function

-----------
QUERY:
-- fail
RESULT:
	duckdb: None
