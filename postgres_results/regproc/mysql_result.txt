
-----------
QUERY:
--
-- regproc
--

/* If objects exist, return oids */

CREATE ROLE regress_regrole_test;
RESULT:
	[]

-----------
QUERY:


-- without schemaname

SELECT regoper('||/');
RESULT:
	ERROR - (1305, 'FUNCTION test.regoper does not exist')

-----------
QUERY:

SELECT regoperator('+(int4,int4)');
RESULT:
	ERROR - (1305, 'FUNCTION test.regoperator does not exist')

-----------
QUERY:

SELECT regproc('now');
RESULT:
	ERROR - (1305, 'FUNCTION test.regproc does not exist')

-----------
QUERY:

SELECT regprocedure('abs(numeric)');
RESULT:
	ERROR - (1305, 'FUNCTION test.regprocedure does not exist')

-----------
QUERY:

SELECT regclass('pg_class');
RESULT:
	ERROR - (1305, 'FUNCTION test.regclass does not exist')

-----------
QUERY:

SELECT regtype('int4');
RESULT:
	ERROR - (1305, 'FUNCTION test.regtype does not exist')

-----------
QUERY:

SELECT regcollation('"POSIX"');
RESULT:
	ERROR - (1305, 'FUNCTION test.regcollation does not exist')

-----------
QUERY:


SELECT to_regoper('||/');
RESULT:
	ERROR - (1305, 'FUNCTION test.to_regoper does not exist')

-----------
QUERY:

SELECT to_regoperator('+(int4,int4)');
RESULT:
	ERROR - (1305, 'FUNCTION test.to_regoperator does not exist')

-----------
QUERY:

SELECT to_regproc('now');
RESULT:
	ERROR - (1305, 'FUNCTION test.to_regproc does not exist')

-----------
QUERY:

SELECT to_regprocedure('abs(numeric)');
RESULT:
	ERROR - (1305, 'FUNCTION test.to_regprocedure does not exist')

-----------
QUERY:

SELECT to_regclass('pg_class');
RESULT:
	ERROR - (1305, 'FUNCTION test.to_regclass does not exist')

-----------
QUERY:

SELECT to_regtype('int4');
RESULT:
	ERROR - (1305, 'FUNCTION test.to_regtype does not exist')

-----------
QUERY:

SELECT to_regcollation('"POSIX"');
RESULT:
	ERROR - (1305, 'FUNCTION test.to_regcollation does not exist')

-----------
QUERY:


-- with schemaname

SELECT regoper('pg_catalog.||/');
RESULT:
	ERROR - (1305, 'FUNCTION test.regoper does not exist')

-----------
QUERY:

SELECT regoperator('pg_catalog.+(int4,int4)');
RESULT:
	ERROR - (1305, 'FUNCTION test.regoperator does not exist')

-----------
QUERY:

SELECT regproc('pg_catalog.now');
RESULT:
	ERROR - (1305, 'FUNCTION test.regproc does not exist')

-----------
QUERY:

SELECT regprocedure('pg_catalog.abs(numeric)');
RESULT:
	ERROR - (1305, 'FUNCTION test.regprocedure does not exist')

-----------
QUERY:

SELECT regclass('pg_catalog.pg_class');
RESULT:
	ERROR - (1305, 'FUNCTION test.regclass does not exist')

-----------
QUERY:

SELECT regtype('pg_catalog.int4');
RESULT:
	ERROR - (1305, 'FUNCTION test.regtype does not exist')

-----------
QUERY:

SELECT regcollation('pg_catalog."POSIX"');
RESULT:
	ERROR - (1305, 'FUNCTION test.regcollation does not exist')

-----------
QUERY:


SELECT to_regoper('pg_catalog.||/');
RESULT:
	ERROR - (1305, 'FUNCTION test.to_regoper does not exist')

-----------
QUERY:

SELECT to_regproc('pg_catalog.now');
RESULT:
	ERROR - (1305, 'FUNCTION test.to_regproc does not exist')

-----------
QUERY:

SELECT to_regprocedure('pg_catalog.abs(numeric)');
RESULT:
	ERROR - (1305, 'FUNCTION test.to_regprocedure does not exist')

-----------
QUERY:

SELECT to_regclass('pg_catalog.pg_class');
RESULT:
	ERROR - (1305, 'FUNCTION test.to_regclass does not exist')

-----------
QUERY:

SELECT to_regtype('pg_catalog.int4');
RESULT:
	ERROR - (1305, 'FUNCTION test.to_regtype does not exist')

-----------
QUERY:

SELECT to_regcollation('pg_catalog."POSIX"');
RESULT:
	ERROR - (1305, 'FUNCTION test.to_regcollation does not exist')

-----------
QUERY:


-- schemaname not applicable

SELECT regrole('regress_regrole_test');
RESULT:
	ERROR - (1305, 'FUNCTION test.regrole does not exist')

-----------
QUERY:

SELECT regrole('"regress_regrole_test"');
RESULT:
	ERROR - (1305, 'FUNCTION test.regrole does not exist')

-----------
QUERY:

SELECT regnamespace('pg_catalog');
RESULT:
	ERROR - (1305, 'FUNCTION test.regnamespace does not exist')

-----------
QUERY:

SELECT regnamespace('"pg_catalog"');
RESULT:
	ERROR - (1305, 'FUNCTION test.regnamespace does not exist')

-----------
QUERY:


SELECT to_regrole('regress_regrole_test');
RESULT:
	ERROR - (1305, 'FUNCTION test.to_regrole does not exist')

-----------
QUERY:

SELECT to_regrole('"regress_regrole_test"');
RESULT:
	ERROR - (1305, 'FUNCTION test.to_regrole does not exist')

-----------
QUERY:

SELECT to_regnamespace('pg_catalog');
RESULT:
	ERROR - (1305, 'FUNCTION test.to_regnamespace does not exist')

-----------
QUERY:

SELECT to_regnamespace('"pg_catalog"');
RESULT:
	ERROR - (1305, 'FUNCTION test.to_regnamespace does not exist')

-----------
QUERY:


/* If objects don't exist, raise errors. */

DROP ROLE regress_regrole_test;
RESULT:
	[]

-----------
QUERY:


-- without schemaname

SELECT regoper('||//');
RESULT:
	ERROR - (1305, 'FUNCTION test.regoper does not exist')

-----------
QUERY:

SELECT regoperator('++(int4,int4)');
RESULT:
	ERROR - (1305, 'FUNCTION test.regoperator does not exist')

-----------
QUERY:

SELECT regproc('know');
RESULT:
	ERROR - (1305, 'FUNCTION test.regproc does not exist')

-----------
QUERY:

SELECT regprocedure('absinthe(numeric)');
RESULT:
	ERROR - (1305, 'FUNCTION test.regprocedure does not exist')

-----------
QUERY:

SELECT regclass('pg_classes');
RESULT:
	ERROR - (1305, 'FUNCTION test.regclass does not exist')

-----------
QUERY:

SELECT regtype('int3');
RESULT:
	ERROR - (1305, 'FUNCTION test.regtype does not exist')

-----------
QUERY:


-- with schemaname

SELECT regoper('ng_catalog.||/');
RESULT:
	ERROR - (1305, 'FUNCTION test.regoper does not exist')

-----------
QUERY:

SELECT regoperator('ng_catalog.+(int4,int4)');
RESULT:
	ERROR - (1305, 'FUNCTION test.regoperator does not exist')

-----------
QUERY:

SELECT regproc('ng_catalog.now');
RESULT:
	ERROR - (1305, 'FUNCTION test.regproc does not exist')

-----------
QUERY:

SELECT regprocedure('ng_catalog.abs(numeric)');
RESULT:
	ERROR - (1305, 'FUNCTION test.regprocedure does not exist')

-----------
QUERY:

SELECT regclass('ng_catalog.pg_class');
RESULT:
	ERROR - (1305, 'FUNCTION test.regclass does not exist')

-----------
QUERY:

SELECT regtype('ng_catalog.int4');
RESULT:
	ERROR - (1305, 'FUNCTION test.regtype does not exist')

-----------
QUERY:

-- \set VERBOSITY sqlstate \\ -- error message is encoding-dependent
SELECT regcollation('ng_catalog."POSIX"');
RESULT:
	ERROR - (1305, 'FUNCTION test.regcollation does not exist')

-----------
QUERY:

-- \set VERBOSITY default

-- schemaname not applicable

SELECT regrole('regress_regrole_test');
RESULT:
	ERROR - (1305, 'FUNCTION test.regrole does not exist')

-----------
QUERY:

SELECT regrole('"regress_regrole_test"');
RESULT:
	ERROR - (1305, 'FUNCTION test.regrole does not exist')

-----------
QUERY:

SELECT regrole('Nonexistent');
RESULT:
	ERROR - (1305, 'FUNCTION test.regrole does not exist')

-----------
QUERY:

SELECT regrole('"Nonexistent"');
RESULT:
	ERROR - (1305, 'FUNCTION test.regrole does not exist')

-----------
QUERY:

SELECT regrole('foo.bar');
RESULT:
	ERROR - (1305, 'FUNCTION test.regrole does not exist')

-----------
QUERY:

SELECT regnamespace('Nonexistent');
RESULT:
	ERROR - (1305, 'FUNCTION test.regnamespace does not exist')

-----------
QUERY:

SELECT regnamespace('"Nonexistent"');
RESULT:
	ERROR - (1305, 'FUNCTION test.regnamespace does not exist')

-----------
QUERY:

SELECT regnamespace('foo.bar');
RESULT:
	ERROR - (1305, 'FUNCTION test.regnamespace does not exist')

-----------
QUERY:


/* If objects don't exist, return NULL with no error. */

-- without schemaname

SELECT to_regoper('||//');
RESULT:
	ERROR - (1305, 'FUNCTION test.to_regoper does not exist')

-----------
QUERY:

SELECT to_regoperator('++(int4,int4)');
RESULT:
	ERROR - (1305, 'FUNCTION test.to_regoperator does not exist')

-----------
QUERY:

SELECT to_regproc('know');
RESULT:
	ERROR - (1305, 'FUNCTION test.to_regproc does not exist')

-----------
QUERY:

SELECT to_regprocedure('absinthe(numeric)');
RESULT:
	ERROR - (1305, 'FUNCTION test.to_regprocedure does not exist')

-----------
QUERY:

SELECT to_regclass('pg_classes');
RESULT:
	ERROR - (1305, 'FUNCTION test.to_regclass does not exist')

-----------
QUERY:

SELECT to_regtype('int3');
RESULT:
	ERROR - (1305, 'FUNCTION test.to_regtype does not exist')

-----------
QUERY:

SELECT to_regcollation('notacollation');
RESULT:
	ERROR - (1305, 'FUNCTION test.to_regcollation does not exist')

-----------
QUERY:


-- with schemaname

SELECT to_regoper('ng_catalog.||/');
RESULT:
	ERROR - (1305, 'FUNCTION test.to_regoper does not exist')

-----------
QUERY:

SELECT to_regoperator('ng_catalog.+(int4,int4)');
RESULT:
	ERROR - (1305, 'FUNCTION test.to_regoperator does not exist')

-----------
QUERY:

SELECT to_regproc('ng_catalog.now');
RESULT:
	ERROR - (1305, 'FUNCTION test.to_regproc does not exist')

-----------
QUERY:

SELECT to_regprocedure('ng_catalog.abs(numeric)');
RESULT:
	ERROR - (1305, 'FUNCTION test.to_regprocedure does not exist')

-----------
QUERY:

SELECT to_regclass('ng_catalog.pg_class');
RESULT:
	ERROR - (1305, 'FUNCTION test.to_regclass does not exist')

-----------
QUERY:

SELECT to_regtype('ng_catalog.int4');
RESULT:
	ERROR - (1305, 'FUNCTION test.to_regtype does not exist')

-----------
QUERY:

SELECT to_regcollation('ng_catalog."POSIX"');
RESULT:
	ERROR - (1305, 'FUNCTION test.to_regcollation does not exist')

-----------
QUERY:


-- schemaname not applicable

SELECT to_regrole('regress_regrole_test');
RESULT:
	ERROR - (1305, 'FUNCTION test.to_regrole does not exist')

-----------
QUERY:

SELECT to_regrole('"regress_regrole_test"');
RESULT:
	ERROR - (1305, 'FUNCTION test.to_regrole does not exist')

-----------
QUERY:

SELECT to_regrole('foo.bar');
RESULT:
	ERROR - (1305, 'FUNCTION test.to_regrole does not exist')

-----------
QUERY:

SELECT to_regrole('Nonexistent');
RESULT:
	ERROR - (1305, 'FUNCTION test.to_regrole does not exist')

-----------
QUERY:

SELECT to_regrole('"Nonexistent"');
RESULT:
	ERROR - (1305, 'FUNCTION test.to_regrole does not exist')

-----------
QUERY:

SELECT to_regrole('foo.bar');
RESULT:
	ERROR - (1305, 'FUNCTION test.to_regrole does not exist')

-----------
QUERY:

SELECT to_regnamespace('Nonexistent');
RESULT:
	ERROR - (1305, 'FUNCTION test.to_regnamespace does not exist')

-----------
QUERY:

SELECT to_regnamespace('"Nonexistent"');
RESULT:
	ERROR - (1305, 'FUNCTION test.to_regnamespace does not exist')

-----------
QUERY:

SELECT to_regnamespace('foo.bar');
RESULT:
	ERROR - (1305, 'FUNCTION test.to_regnamespace does not exist')

-----------
QUERY:


-- Test to_regtypemod
SELECT to_regtypemod('text');
RESULT:
	ERROR - (1305, 'FUNCTION test.to_regtypemod does not exist')

-----------
QUERY:

SELECT to_regtypemod('timestamp(4)');
RESULT:
	ERROR - (1305, 'FUNCTION test.to_regtypemod does not exist')

-----------
QUERY:

SELECT to_regtypemod('no_such_type(4)');
RESULT:
	ERROR - (1305, 'FUNCTION test.to_regtypemod does not exist')

-----------
QUERY:

SELECT format_type(to_regtype('varchar(32)'), to_regtypemod('varchar(32)'));
RESULT:
	ERROR - (1305, 'FUNCTION test.format_type does not exist')

-----------
QUERY:

SELECT format_type(to_regtype('bit'), to_regtypemod('bit'));
RESULT:
	ERROR - (1305, 'FUNCTION test.format_type does not exist')

-----------
QUERY:

SELECT format_type(to_regtype('"bit"'), to_regtypemod('"bit"'));
RESULT:
	ERROR - (1305, 'FUNCTION test.format_type does not exist')

-----------
QUERY:


-- Test soft-error API

SELECT * FROM pg_input_error_info('ng_catalog.pg_class', 'regclass');
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '('ng_catalog.pg_class', 'regclass')' at line 3")

-----------
QUERY:

SELECT pg_input_is_valid('ng_catalog."POSIX"', 'regcollation');
RESULT:
	ERROR - (1305, 'FUNCTION test.pg_input_is_valid does not exist')

-----------
QUERY:

SELECT * FROM pg_input_error_info('no_such_config', 'regconfig');
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '('no_such_config', 'regconfig')' at line 1")

-----------
QUERY:

SELECT * FROM pg_input_error_info('no_such_dictionary', 'regdictionary');
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '('no_such_dictionary', 'regdictionary')' at line 1")

-----------
QUERY:

SELECT * FROM pg_input_error_info('Nonexistent', 'regnamespace');
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '('Nonexistent', 'regnamespace')' at line 1")

-----------
QUERY:

SELECT * FROM pg_input_error_info('ng_catalog.||/', 'regoper');
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '('ng_catalog.||/', 'regoper')' at line 1")

-----------
QUERY:

SELECT * FROM pg_input_error_info('-', 'regoper');
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '('-', 'regoper')' at line 1")

-----------
QUERY:

SELECT * FROM pg_input_error_info('ng_catalog.+(int4,int4)', 'regoperator');
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '('ng_catalog.+(int4,int4)', 'regoperator')' at line 1")

-----------
QUERY:

SELECT * FROM pg_input_error_info('-', 'regoperator');
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '('-', 'regoperator')' at line 1")

-----------
QUERY:

SELECT * FROM pg_input_error_info('ng_catalog.now', 'regproc');
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '('ng_catalog.now', 'regproc')' at line 1")

-----------
QUERY:

SELECT * FROM pg_input_error_info('ng_catalog.abs(numeric)', 'regprocedure');
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '('ng_catalog.abs(numeric)', 'regprocedure')' at line 1")

-----------
QUERY:

SELECT * FROM pg_input_error_info('ng_catalog.abs(numeric', 'regprocedure');
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '('ng_catalog.abs(numeric', 'regprocedure')' at line 1")

-----------
QUERY:

SELECT * FROM pg_input_error_info('regress_regrole_test', 'regrole');
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '('regress_regrole_test', 'regrole')' at line 1")

-----------
QUERY:

SELECT * FROM pg_input_error_info('no_such_type', 'regtype');
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '('no_such_type', 'regtype')' at line 1")

-----------
QUERY:


-- Some cases that should be soft errors, but are not yet
SELECT * FROM pg_input_error_info('incorrect type name syntax', 'regtype');
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '('incorrect type name syntax', 'regtype')' at line 2")

-----------
QUERY:

SELECT * FROM pg_input_error_info('numeric(1,2,3)', 'regtype');
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '('numeric(1,2,3)', 'regtype')' at line 1")

-----------
QUERY:
  -- bogus typmod
SELECT * FROM pg_input_error_info('way.too.many.names', 'regtype');
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '('way.too.many.names', 'regtype')' at line 2")

-----------
QUERY:

SELECT * FROM pg_input_error_info('no_such_catalog.schema.name', 'regtype');
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '('no_such_catalog.schema.name', 'regtype')' at line 1")
