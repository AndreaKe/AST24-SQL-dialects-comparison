Guest DBMS identified: postgres
-----------
QUERY:

-- Simple create
CREATE TABLE reloptions_test(i INT) WITH (FiLLFaCToR=30,
	autovacuum_enabled = false, autovacuum_analyze_scale_factor = 0.2);
RESULT: [duckdb: SAME, mysql: ERROR]

-----------
QUERY:

SELECT reloptions FROM pg_class WHERE oid = 'reloptions_test'::regclass;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:


-- Fail min/max values check
CREATE TABLE reloptions_test2(i INT) WITH (fillfactor=2);
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:

CREATE TABLE reloptions_test2(i INT) WITH (fillfactor=110);
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

CREATE TABLE reloptions_test2(i INT) WITH (autovacuum_analyze_scale_factor = -10.0);
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

CREATE TABLE reloptions_test2(i INT) WITH (autovacuum_analyze_scale_factor = 110.0);
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:


-- Fail when option and namespace do not exist
CREATE TABLE reloptions_test2(i INT) WITH (not_existing_option=2);
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

CREATE TABLE reloptions_test2(i INT) WITH (not_existing_namespace.fillfactor=2);
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:


-- Fail while setting improper values
CREATE TABLE reloptions_test2(i INT) WITH (fillfactor=-30.1);
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

CREATE TABLE reloptions_test2(i INT) WITH (fillfactor='string');
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

CREATE TABLE reloptions_test2(i INT) WITH (fillfactor=true);
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

CREATE TABLE reloptions_test2(i INT) WITH (autovacuum_enabled=12);
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

CREATE TABLE reloptions_test2(i INT) WITH (autovacuum_enabled=30.5);
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

CREATE TABLE reloptions_test2(i INT) WITH (autovacuum_enabled='string');
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

CREATE TABLE reloptions_test2(i INT) WITH (autovacuum_analyze_scale_factor='string');
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

CREATE TABLE reloptions_test2(i INT) WITH (autovacuum_analyze_scale_factor=true);
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:


-- Fail if option is specified twice
CREATE TABLE reloptions_test2(i INT) WITH (fillfactor=30, fillfactor=40);
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:


-- Specifying name only for a non-Boolean option should fail
CREATE TABLE reloptions_test2(i INT) WITH (fillfactor);
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:


-- Simple ALTER TABLE
ALTER TABLE reloptions_test SET (fillfactor=31,
	autovacuum_analyze_scale_factor = 0.3);
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SELECT reloptions FROM pg_class WHERE oid = 'reloptions_test'::regclass;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:


-- Set boolean option to true without specifying value
ALTER TABLE reloptions_test SET (autovacuum_enabled, fillfactor=32);
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SELECT reloptions FROM pg_class WHERE oid = 'reloptions_test'::regclass;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:


-- Check that RESET works well
ALTER TABLE reloptions_test RESET (fillfactor);
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SELECT reloptions FROM pg_class WHERE oid = 'reloptions_test'::regclass;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:


-- Resetting all values causes the column to become null
ALTER TABLE reloptions_test RESET (autovacuum_enabled,
	autovacuum_analyze_scale_factor);
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SELECT reloptions FROM pg_class WHERE oid = 'reloptions_test'::regclass AND
       reloptions IS NULL;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:


-- RESET fails if a value is specified
ALTER TABLE reloptions_test RESET (fillfactor=12);
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:


-- We can RESET an invalid option which for some reason is already set
UPDATE pg_class
	SET reloptions = '{fillfactor=13,autovacuum_enabled=false,illegal_option=4}'
	WHERE oid = 'reloptions_test'::regclass;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

ALTER TABLE reloptions_test RESET (illegal_option);
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SELECT reloptions FROM pg_class WHERE oid = 'reloptions_test'::regclass;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:


-- Test vacuum_truncate option
DROP TABLE reloptions_test;
RESULT: [duckdb: SAME, mysql: ERROR]

-----------
QUERY:


CREATE TEMP TABLE reloptions_test(i INT NOT NULL, j text)
	WITH (vacuum_truncate=false,
	toast.vacuum_truncate=false,
	autovacuum_enabled=false);
RESULT: [duckdb: SAME, mysql: ERROR]

-----------
QUERY:

SELECT reloptions FROM pg_class WHERE oid = 'reloptions_test'::regclass;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

INSERT INTO reloptions_test VALUES (1, NULL), (NULL, NULL);
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

-- Do an aggressive vacuum to prevent page-skipping.
VACUUM (FREEZE, DISABLE_PAGE_SKIPPING) reloptions_test;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SELECT pg_relation_size('reloptions_test') > 0;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:


SELECT reloptions FROM pg_class WHERE oid =
	(SELECT reltoastrelid FROM pg_class
	WHERE oid = 'reloptions_test'::regclass);
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:


ALTER TABLE reloptions_test RESET (vacuum_truncate);
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SELECT reloptions FROM pg_class WHERE oid = 'reloptions_test'::regclass;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

INSERT INTO reloptions_test VALUES (1, NULL), (NULL, NULL);
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

-- Do an aggressive vacuum to prevent page-skipping.
VACUUM (FREEZE, DISABLE_PAGE_SKIPPING) reloptions_test;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SELECT pg_relation_size('reloptions_test') = 0;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:


-- Test toast.* options
DROP TABLE reloptions_test;
RESULT: [duckdb: SAME, mysql: ERROR]

-----------
QUERY:


CREATE TABLE reloptions_test (s VARCHAR)
	WITH (toast.autovacuum_vacuum_cost_delay = 23);
RESULT: [duckdb: SAME, mysql: ERROR]

-----------
QUERY:

SELECT reltoastrelid as toast_oid
	FROM pg_class WHERE oid = 'reloptions_test'::regclass \gset
SELECT reloptions FROM pg_class WHERE oid = :toast_oid;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:


ALTER TABLE reloptions_test SET (toast.autovacuum_vacuum_cost_delay = 24);
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SELECT reloptions FROM pg_class WHERE oid = :toast_oid;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:


ALTER TABLE reloptions_test RESET (toast.autovacuum_vacuum_cost_delay);
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SELECT reloptions FROM pg_class WHERE oid = :toast_oid;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:


-- Fail on non-existent options in toast namespace
CREATE TABLE reloptions_test2 (i int) WITH (toast.not_existing_option = 42);
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:


-- Mix TOAST & heap
DROP TABLE reloptions_test;
RESULT: [duckdb: SAME, mysql: ERROR]

-----------
QUERY:


CREATE TABLE reloptions_test (s VARCHAR) WITH
	(toast.autovacuum_vacuum_cost_delay = 23,
	autovacuum_vacuum_cost_delay = 24, fillfactor = 40);
RESULT: [duckdb: SAME, mysql: ERROR]

-----------
QUERY:


SELECT reloptions FROM pg_class WHERE oid = 'reloptions_test'::regclass;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SELECT reloptions FROM pg_class WHERE oid = (
	SELECT reltoastrelid FROM pg_class WHERE oid = 'reloptions_test'::regclass);
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:


--
-- CREATE INDEX, ALTER INDEX for btrees
--

CREATE INDEX reloptions_test_idx ON reloptions_test (s) WITH (fillfactor=30);
RESULT: [duckdb: SAME, mysql: ERROR]

-----------
QUERY:

SELECT reloptions FROM pg_class WHERE oid = 'reloptions_test_idx'::regclass;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:


-- Fail when option and namespace do not exist
CREATE INDEX reloptions_test_idx ON reloptions_test (s)
	WITH (not_existing_option=2);
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

CREATE INDEX reloptions_test_idx ON reloptions_test (s)
	WITH (not_existing_ns.fillfactor=2);
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:


-- Check allowed ranges
CREATE INDEX reloptions_test_idx2 ON reloptions_test (s) WITH (fillfactor=1);
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:

CREATE INDEX reloptions_test_idx2 ON reloptions_test (s) WITH (fillfactor=130);
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:


-- Check ALTER
ALTER INDEX reloptions_test_idx SET (fillfactor=40);
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SELECT reloptions FROM pg_class WHERE oid = 'reloptions_test_idx'::regclass;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:


-- Check ALTER on empty reloption list
CREATE INDEX reloptions_test_idx3 ON reloptions_test (s);
RESULT: [duckdb: SAME, mysql: ERROR]

-----------
QUERY:

ALTER INDEX reloptions_test_idx3 SET (fillfactor=40);
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SELECT reloptions FROM pg_class WHERE oid = 'reloptions_test_idx3'::regclass;
RESULT: [duckdb: ERROR, mysql: ERROR]


=========================================
Summary for test case reloptions/test.sql of postgres
=========================================

=================
Results for duckdb
SAME      :	34 queries	52.31%
DIFFERENT :	0 queries	0.00%
ERROR     :	31 queries	47.69%

=================
Results for mysql
SAME      :	27 queries	41.54%
DIFFERENT :	0 queries	0.00%
ERROR     :	38 queries	58.46%
Guest results are identical to expected results