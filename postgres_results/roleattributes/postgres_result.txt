
-----------
QUERY:
-- default for superuser is false
CREATE ROLE regress_test_def_superuser
RESULT:
	postgres: None

-----------
QUERY:
SELECT rolname, rolsuper, rolinherit, rolcreaterole, rolcreatedb, rolcanlogin, rolreplication, rolbypassrls, rolconnlimit, rolpassword, rolvaliduntil FROM pg_authid WHERE rolname = 'regress_test_def_superuser'
RESULT:
	postgres: [('regress_test_def_superuser', False, True, False, False, False, False, False, -1, None, None)]

-----------
QUERY:
CREATE ROLE regress_test_superuser WITH SUPERUSER
RESULT:
	postgres: None

-----------
QUERY:
SELECT rolname, rolsuper, rolinherit, rolcreaterole, rolcreatedb, rolcanlogin, rolreplication, rolbypassrls, rolconnlimit, rolpassword, rolvaliduntil FROM pg_authid WHERE rolname = 'regress_test_superuser'
RESULT:
	postgres: [('regress_test_superuser', True, True, False, False, False, False, False, -1, None, None)]

-----------
QUERY:
ALTER ROLE regress_test_superuser WITH NOSUPERUSER
RESULT:
	postgres: None

-----------
QUERY:
SELECT rolname, rolsuper, rolinherit, rolcreaterole, rolcreatedb, rolcanlogin, rolreplication, rolbypassrls, rolconnlimit, rolpassword, rolvaliduntil FROM pg_authid WHERE rolname = 'regress_test_superuser'
RESULT:
	postgres: [('regress_test_superuser', False, True, False, False, False, False, False, -1, None, None)]

-----------
QUERY:
ALTER ROLE regress_test_superuser WITH SUPERUSER
RESULT:
	postgres: None

-----------
QUERY:
SELECT rolname, rolsuper, rolinherit, rolcreaterole, rolcreatedb, rolcanlogin, rolreplication, rolbypassrls, rolconnlimit, rolpassword, rolvaliduntil FROM pg_authid WHERE rolname = 'regress_test_superuser'
RESULT:
	postgres: [('regress_test_superuser', True, True, False, False, False, False, False, -1, None, None)]

-----------
QUERY:
-- default for inherit is true
CREATE ROLE regress_test_def_inherit
RESULT:
	postgres: None

-----------
QUERY:
SELECT rolname, rolsuper, rolinherit, rolcreaterole, rolcreatedb, rolcanlogin, rolreplication, rolbypassrls, rolconnlimit, rolpassword, rolvaliduntil FROM pg_authid WHERE rolname = 'regress_test_def_inherit'
RESULT:
	postgres: [('regress_test_def_inherit', False, True, False, False, False, False, False, -1, None, None)]

-----------
QUERY:
CREATE ROLE regress_test_inherit WITH NOINHERIT
RESULT:
	postgres: None

-----------
QUERY:
SELECT rolname, rolsuper, rolinherit, rolcreaterole, rolcreatedb, rolcanlogin, rolreplication, rolbypassrls, rolconnlimit, rolpassword, rolvaliduntil FROM pg_authid WHERE rolname = 'regress_test_inherit'
RESULT:
	postgres: [('regress_test_inherit', False, False, False, False, False, False, False, -1, None, None)]

-----------
QUERY:
ALTER ROLE regress_test_inherit WITH INHERIT
RESULT:
	postgres: None

-----------
QUERY:
SELECT rolname, rolsuper, rolinherit, rolcreaterole, rolcreatedb, rolcanlogin, rolreplication, rolbypassrls, rolconnlimit, rolpassword, rolvaliduntil FROM pg_authid WHERE rolname = 'regress_test_inherit'
RESULT:
	postgres: [('regress_test_inherit', False, True, False, False, False, False, False, -1, None, None)]

-----------
QUERY:
ALTER ROLE regress_test_inherit WITH NOINHERIT
RESULT:
	postgres: None

-----------
QUERY:
SELECT rolname, rolsuper, rolinherit, rolcreaterole, rolcreatedb, rolcanlogin, rolreplication, rolbypassrls, rolconnlimit, rolpassword, rolvaliduntil FROM pg_authid WHERE rolname = 'regress_test_inherit'
RESULT:
	postgres: [('regress_test_inherit', False, False, False, False, False, False, False, -1, None, None)]

-----------
QUERY:
-- default for create role is false
CREATE ROLE regress_test_def_createrole
RESULT:
	postgres: None

-----------
QUERY:
SELECT rolname, rolsuper, rolinherit, rolcreaterole, rolcreatedb, rolcanlogin, rolreplication, rolbypassrls, rolconnlimit, rolpassword, rolvaliduntil FROM pg_authid WHERE rolname = 'regress_test_def_createrole'
RESULT:
	postgres: [('regress_test_def_createrole', False, True, False, False, False, False, False, -1, None, None)]

-----------
QUERY:
CREATE ROLE regress_test_createrole WITH CREATEROLE
RESULT:
	postgres: None

-----------
QUERY:
SELECT rolname, rolsuper, rolinherit, rolcreaterole, rolcreatedb, rolcanlogin, rolreplication, rolbypassrls, rolconnlimit, rolpassword, rolvaliduntil FROM pg_authid WHERE rolname = 'regress_test_createrole'
RESULT:
	postgres: [('regress_test_createrole', False, True, True, False, False, False, False, -1, None, None)]

-----------
QUERY:
ALTER ROLE regress_test_createrole WITH NOCREATEROLE
RESULT:
	postgres: None

-----------
QUERY:
SELECT rolname, rolsuper, rolinherit, rolcreaterole, rolcreatedb, rolcanlogin, rolreplication, rolbypassrls, rolconnlimit, rolpassword, rolvaliduntil FROM pg_authid WHERE rolname = 'regress_test_createrole'
RESULT:
	postgres: [('regress_test_createrole', False, True, False, False, False, False, False, -1, None, None)]

-----------
QUERY:
ALTER ROLE regress_test_createrole WITH CREATEROLE
RESULT:
	postgres: None

-----------
QUERY:
SELECT rolname, rolsuper, rolinherit, rolcreaterole, rolcreatedb, rolcanlogin, rolreplication, rolbypassrls, rolconnlimit, rolpassword, rolvaliduntil FROM pg_authid WHERE rolname = 'regress_test_createrole'
RESULT:
	postgres: [('regress_test_createrole', False, True, True, False, False, False, False, -1, None, None)]

-----------
QUERY:
-- default for create database is false
CREATE ROLE regress_test_def_createdb
RESULT:
	postgres: None

-----------
QUERY:
SELECT rolname, rolsuper, rolinherit, rolcreaterole, rolcreatedb, rolcanlogin, rolreplication, rolbypassrls, rolconnlimit, rolpassword, rolvaliduntil FROM pg_authid WHERE rolname = 'regress_test_def_createdb'
RESULT:
	postgres: [('regress_test_def_createdb', False, True, False, False, False, False, False, -1, None, None)]

-----------
QUERY:
CREATE ROLE regress_test_createdb WITH CREATEDB
RESULT:
	postgres: None

-----------
QUERY:
SELECT rolname, rolsuper, rolinherit, rolcreaterole, rolcreatedb, rolcanlogin, rolreplication, rolbypassrls, rolconnlimit, rolpassword, rolvaliduntil FROM pg_authid WHERE rolname = 'regress_test_createdb'
RESULT:
	postgres: [('regress_test_createdb', False, True, False, True, False, False, False, -1, None, None)]

-----------
QUERY:
ALTER ROLE regress_test_createdb WITH NOCREATEDB
RESULT:
	postgres: None

-----------
QUERY:
SELECT rolname, rolsuper, rolinherit, rolcreaterole, rolcreatedb, rolcanlogin, rolreplication, rolbypassrls, rolconnlimit, rolpassword, rolvaliduntil FROM pg_authid WHERE rolname = 'regress_test_createdb'
RESULT:
	postgres: [('regress_test_createdb', False, True, False, False, False, False, False, -1, None, None)]

-----------
QUERY:
ALTER ROLE regress_test_createdb WITH CREATEDB
RESULT:
	postgres: None

-----------
QUERY:
SELECT rolname, rolsuper, rolinherit, rolcreaterole, rolcreatedb, rolcanlogin, rolreplication, rolbypassrls, rolconnlimit, rolpassword, rolvaliduntil FROM pg_authid WHERE rolname = 'regress_test_createdb'
RESULT:
	postgres: [('regress_test_createdb', False, True, False, True, False, False, False, -1, None, None)]

-----------
QUERY:
-- default for can login is false for role
CREATE ROLE regress_test_def_role_canlogin
RESULT:
	postgres: None

-----------
QUERY:
SELECT rolname, rolsuper, rolinherit, rolcreaterole, rolcreatedb, rolcanlogin, rolreplication, rolbypassrls, rolconnlimit, rolpassword, rolvaliduntil FROM pg_authid WHERE rolname = 'regress_test_def_role_canlogin'
RESULT:
	postgres: [('regress_test_def_role_canlogin', False, True, False, False, False, False, False, -1, None, None)]

-----------
QUERY:
CREATE ROLE regress_test_role_canlogin WITH LOGIN
RESULT:
	postgres: None

-----------
QUERY:
SELECT rolname, rolsuper, rolinherit, rolcreaterole, rolcreatedb, rolcanlogin, rolreplication, rolbypassrls, rolconnlimit, rolpassword, rolvaliduntil FROM pg_authid WHERE rolname = 'regress_test_role_canlogin'
RESULT:
	postgres: [('regress_test_role_canlogin', False, True, False, False, True, False, False, -1, None, None)]

-----------
QUERY:
ALTER ROLE regress_test_role_canlogin WITH NOLOGIN
RESULT:
	postgres: None

-----------
QUERY:
SELECT rolname, rolsuper, rolinherit, rolcreaterole, rolcreatedb, rolcanlogin, rolreplication, rolbypassrls, rolconnlimit, rolpassword, rolvaliduntil FROM pg_authid WHERE rolname = 'regress_test_role_canlogin'
RESULT:
	postgres: [('regress_test_role_canlogin', False, True, False, False, False, False, False, -1, None, None)]

-----------
QUERY:
ALTER ROLE regress_test_role_canlogin WITH LOGIN
RESULT:
	postgres: None

-----------
QUERY:
SELECT rolname, rolsuper, rolinherit, rolcreaterole, rolcreatedb, rolcanlogin, rolreplication, rolbypassrls, rolconnlimit, rolpassword, rolvaliduntil FROM pg_authid WHERE rolname = 'regress_test_role_canlogin'
RESULT:
	postgres: [('regress_test_role_canlogin', False, True, False, False, True, False, False, -1, None, None)]

-----------
QUERY:
-- default for can login is true for user
CREATE USER regress_test_def_user_canlogin
RESULT:
	postgres: None

-----------
QUERY:
SELECT rolname, rolsuper, rolinherit, rolcreaterole, rolcreatedb, rolcanlogin, rolreplication, rolbypassrls, rolconnlimit, rolpassword, rolvaliduntil FROM pg_authid WHERE rolname = 'regress_test_def_user_canlogin'
RESULT:
	postgres: [('regress_test_def_user_canlogin', False, True, False, False, True, False, False, -1, None, None)]

-----------
QUERY:
CREATE USER regress_test_user_canlogin WITH NOLOGIN
RESULT:
	postgres: None

-----------
QUERY:
SELECT rolname, rolsuper, rolinherit, rolcreaterole, rolcreatedb, rolcanlogin, rolreplication, rolbypassrls, rolconnlimit, rolpassword, rolvaliduntil FROM pg_authid WHERE rolname = 'regress_test_user_canlogin'
RESULT:
	postgres: [('regress_test_user_canlogin', False, True, False, False, False, False, False, -1, None, None)]

-----------
QUERY:
ALTER USER regress_test_user_canlogin WITH LOGIN
RESULT:
	postgres: None

-----------
QUERY:
SELECT rolname, rolsuper, rolinherit, rolcreaterole, rolcreatedb, rolcanlogin, rolreplication, rolbypassrls, rolconnlimit, rolpassword, rolvaliduntil FROM pg_authid WHERE rolname = 'regress_test_user_canlogin'
RESULT:
	postgres: [('regress_test_user_canlogin', False, True, False, False, True, False, False, -1, None, None)]

-----------
QUERY:
ALTER USER regress_test_user_canlogin WITH NOLOGIN
RESULT:
	postgres: None

-----------
QUERY:
SELECT rolname, rolsuper, rolinherit, rolcreaterole, rolcreatedb, rolcanlogin, rolreplication, rolbypassrls, rolconnlimit, rolpassword, rolvaliduntil FROM pg_authid WHERE rolname = 'regress_test_user_canlogin'
RESULT:
	postgres: [('regress_test_user_canlogin', False, True, False, False, False, False, False, -1, None, None)]

-----------
QUERY:
-- default for replication is false
CREATE ROLE regress_test_def_replication
RESULT:
	postgres: None

-----------
QUERY:
SELECT rolname, rolsuper, rolinherit, rolcreaterole, rolcreatedb, rolcanlogin, rolreplication, rolbypassrls, rolconnlimit, rolpassword, rolvaliduntil FROM pg_authid WHERE rolname = 'regress_test_def_replication'
RESULT:
	postgres: [('regress_test_def_replication', False, True, False, False, False, False, False, -1, None, None)]

-----------
QUERY:
CREATE ROLE regress_test_replication WITH REPLICATION
RESULT:
	postgres: None

-----------
QUERY:
SELECT rolname, rolsuper, rolinherit, rolcreaterole, rolcreatedb, rolcanlogin, rolreplication, rolbypassrls, rolconnlimit, rolpassword, rolvaliduntil FROM pg_authid WHERE rolname = 'regress_test_replication'
RESULT:
	postgres: [('regress_test_replication', False, True, False, False, False, True, False, -1, None, None)]

-----------
QUERY:
ALTER ROLE regress_test_replication WITH NOREPLICATION
RESULT:
	postgres: None

-----------
QUERY:
SELECT rolname, rolsuper, rolinherit, rolcreaterole, rolcreatedb, rolcanlogin, rolreplication, rolbypassrls, rolconnlimit, rolpassword, rolvaliduntil FROM pg_authid WHERE rolname = 'regress_test_replication'
RESULT:
	postgres: [('regress_test_replication', False, True, False, False, False, False, False, -1, None, None)]

-----------
QUERY:
ALTER ROLE regress_test_replication WITH REPLICATION
RESULT:
	postgres: None

-----------
QUERY:
SELECT rolname, rolsuper, rolinherit, rolcreaterole, rolcreatedb, rolcanlogin, rolreplication, rolbypassrls, rolconnlimit, rolpassword, rolvaliduntil FROM pg_authid WHERE rolname = 'regress_test_replication'
RESULT:
	postgres: [('regress_test_replication', False, True, False, False, False, True, False, -1, None, None)]

-----------
QUERY:
-- default for bypassrls is false
CREATE ROLE regress_test_def_bypassrls
RESULT:
	postgres: None

-----------
QUERY:
SELECT rolname, rolsuper, rolinherit, rolcreaterole, rolcreatedb, rolcanlogin, rolreplication, rolbypassrls, rolconnlimit, rolpassword, rolvaliduntil FROM pg_authid WHERE rolname = 'regress_test_def_bypassrls'
RESULT:
	postgres: [('regress_test_def_bypassrls', False, True, False, False, False, False, False, -1, None, None)]

-----------
QUERY:
CREATE ROLE regress_test_bypassrls WITH BYPASSRLS
RESULT:
	postgres: None

-----------
QUERY:
SELECT rolname, rolsuper, rolinherit, rolcreaterole, rolcreatedb, rolcanlogin, rolreplication, rolbypassrls, rolconnlimit, rolpassword, rolvaliduntil FROM pg_authid WHERE rolname = 'regress_test_bypassrls'
RESULT:
	postgres: [('regress_test_bypassrls', False, True, False, False, False, False, True, -1, None, None)]

-----------
QUERY:
ALTER ROLE regress_test_bypassrls WITH NOBYPASSRLS
RESULT:
	postgres: None

-----------
QUERY:
SELECT rolname, rolsuper, rolinherit, rolcreaterole, rolcreatedb, rolcanlogin, rolreplication, rolbypassrls, rolconnlimit, rolpassword, rolvaliduntil FROM pg_authid WHERE rolname = 'regress_test_bypassrls'
RESULT:
	postgres: [('regress_test_bypassrls', False, True, False, False, False, False, False, -1, None, None)]

-----------
QUERY:
ALTER ROLE regress_test_bypassrls WITH BYPASSRLS
RESULT:
	postgres: None

-----------
QUERY:
SELECT rolname, rolsuper, rolinherit, rolcreaterole, rolcreatedb, rolcanlogin, rolreplication, rolbypassrls, rolconnlimit, rolpassword, rolvaliduntil FROM pg_authid WHERE rolname = 'regress_test_bypassrls'
RESULT:
	postgres: [('regress_test_bypassrls', False, True, False, False, False, False, True, -1, None, None)]

-----------
QUERY:
-- clean up roles
DROP ROLE regress_test_def_superuser
RESULT:
	postgres: None

-----------
QUERY:
DROP ROLE regress_test_superuser
RESULT:
	postgres: None

-----------
QUERY:
DROP ROLE regress_test_def_inherit
RESULT:
	postgres: None

-----------
QUERY:
DROP ROLE regress_test_inherit
RESULT:
	postgres: None

-----------
QUERY:
DROP ROLE regress_test_def_createrole
RESULT:
	postgres: None

-----------
QUERY:
DROP ROLE regress_test_createrole
RESULT:
	postgres: None

-----------
QUERY:
DROP ROLE regress_test_def_createdb
RESULT:
	postgres: None

-----------
QUERY:
DROP ROLE regress_test_createdb
RESULT:
	postgres: None

-----------
QUERY:
DROP ROLE regress_test_def_role_canlogin
RESULT:
	postgres: None

-----------
QUERY:
DROP ROLE regress_test_role_canlogin
RESULT:
	postgres: None

-----------
QUERY:
DROP USER regress_test_def_user_canlogin
RESULT:
	postgres: None

-----------
QUERY:
DROP USER regress_test_user_canlogin
RESULT:
	postgres: None

-----------
QUERY:
DROP ROLE regress_test_def_replication
RESULT:
	postgres: None

-----------
QUERY:
DROP ROLE regress_test_replication
RESULT:
	postgres: None

-----------
QUERY:
DROP ROLE regress_test_def_bypassrls
RESULT:
	postgres: None

-----------
QUERY:
DROP ROLE regress_test_bypassrls
RESULT:
	postgres: None
