--
-- Test of Row-level security feature
--

-- Clean up in case a prior regression run failed

-- Suppress NOTICE messages when users/groups don''t exist
SET client_min_messages TO 'warning'
ERROR: --
-- Test of Row-level security feature
--

-- Clean up in case a prior regression run failed

-- Suppress NOTICE messages when users/groups don''t exist
SET client_min_messages TO 'warning'

Catalog Error: unrecognized configuration parameter "client_min_messages"

Did you mean: "schema"


DROP USER IF EXISTS regress_rls_alice
ERROR: 

DROP USER IF EXISTS regress_rls_alice

Parser Error: syntax error at or near "USER"

DROP USER IF EXISTS regress_rls_bob
ERROR: 
DROP USER IF EXISTS regress_rls_bob

Parser Error: syntax error at or near "USER"

DROP USER IF EXISTS regress_rls_carol
ERROR: 
DROP USER IF EXISTS regress_rls_carol

Parser Error: syntax error at or near "USER"

DROP USER IF EXISTS regress_rls_dave
ERROR: 
DROP USER IF EXISTS regress_rls_dave

Parser Error: syntax error at or near "USER"

DROP USER IF EXISTS regress_rls_exempt_user
ERROR: 
DROP USER IF EXISTS regress_rls_exempt_user

Parser Error: syntax error at or near "USER"

DROP ROLE IF EXISTS regress_rls_group1
ERROR: 
DROP ROLE IF EXISTS regress_rls_group1

Parser Error: syntax error at or near "ROLE"

DROP ROLE IF EXISTS regress_rls_group2
ERROR: 
DROP ROLE IF EXISTS regress_rls_group2

Parser Error: syntax error at or near "ROLE"


DROP SCHEMA IF EXISTS regress_rls_schema CASCADE


RESET client_min_messages
ERROR: 

RESET client_min_messages

Catalog Error: unrecognized configuration parameter "client_min_messages"

Did you mean: "schema"


-- initial setup
CREATE USER regress_rls_alice NOLOGIN
ERROR: 

-- initial setup
CREATE USER regress_rls_alice NOLOGIN

Parser Error: syntax error at or near "USER"

CREATE USER regress_rls_bob NOLOGIN
ERROR: 
CREATE USER regress_rls_bob NOLOGIN

Parser Error: syntax error at or near "USER"

CREATE USER regress_rls_carol NOLOGIN
ERROR: 
CREATE USER regress_rls_carol NOLOGIN

Parser Error: syntax error at or near "USER"

CREATE USER regress_rls_dave NOLOGIN
ERROR: 
CREATE USER regress_rls_dave NOLOGIN

Parser Error: syntax error at or near "USER"

CREATE USER regress_rls_exempt_user BYPASSRLS NOLOGIN
ERROR: 
CREATE USER regress_rls_exempt_user BYPASSRLS NOLOGIN

Parser Error: syntax error at or near "USER"

CREATE ROLE regress_rls_group1 NOLOGIN
ERROR: 
CREATE ROLE regress_rls_group1 NOLOGIN

Parser Error: syntax error at or near "ROLE"

CREATE ROLE regress_rls_group2 NOLOGIN
ERROR: 
CREATE ROLE regress_rls_group2 NOLOGIN

Parser Error: syntax error at or near "ROLE"


GRANT regress_rls_group1 TO regress_rls_bob
ERROR: 

GRANT regress_rls_group1 TO regress_rls_bob

Parser Error: syntax error at or near "GRANT"

GRANT regress_rls_group2 TO regress_rls_carol
ERROR: 
GRANT regress_rls_group2 TO regress_rls_carol

Parser Error: syntax error at or near "GRANT"


CREATE SCHEMA regress_rls_schema

GRANT ALL ON SCHEMA regress_rls_schema to public
ERROR: 
GRANT ALL ON SCHEMA regress_rls_schema to public

Parser Error: syntax error at or near "GRANT"

SET search_path = regress_rls_schema


-- setup of malicious function
CREATE OR REPLACE FUNCTION f_leak(text) RETURNS bool
    COST 0.0000001 LANGUAGE plpgsql
    AS 'BEGIN RAISE NOTICE ''f_leak => %'', $1; RETURN true; END'
ERROR: 

-- setup of malicious function
CREATE OR REPLACE FUNCTION f_leak(text) RETURNS bool
    COST 0.0000001 LANGUAGE plpgsql
    AS 'BEGIN RAISE NOTICE ''f_leak => %'', $1; RETURN true; END'

Parser Error: syntax error at or near "RETURNS"

GRANT EXECUTE ON FUNCTION f_leak(text) TO public
ERROR: 
GRANT EXECUTE ON FUNCTION f_leak(text) TO public

Parser Error: syntax error at or near "GRANT"


-- BASIC Row-Level Security Scenario

SET SESSION AUTHORIZATION regress_rls_alice
ERROR: 

-- BASIC Row-Level Security Scenario

SET SESSION AUTHORIZATION regress_rls_alice

Parser Error: syntax error at or near "AUTHORIZATION"

CREATE TABLE uaccount (
    pguser      name primary key,
    seclv       int
)
ERROR: 
CREATE TABLE uaccount (
    pguser      name primary key,
    seclv       int
)

Catalog Error: Type with name name does not exist!
Did you mean "date"?

GRANT SELECT ON uaccount TO public
ERROR: 
GRANT SELECT ON uaccount TO public

Parser Error: syntax error at or near "GRANT"

INSERT INTO uaccount VALUES
    ('regress_rls_alice', 99),
    ('regress_rls_bob', 1),
    ('regress_rls_carol', 2),
    ('regress_rls_dave', 3)
ERROR: 
INSERT INTO uaccount VALUES
    ('regress_rls_alice', 99),
    ('regress_rls_bob', 1),
    ('regress_rls_carol', 2),
    ('regress_rls_dave', 3)

Catalog Error: Table with name uaccount does not exist!
Did you mean "temp.information_schema.columns"?


CREATE TABLE category (
    cid        int primary key,
    cname      text
)

GRANT ALL ON category TO public
ERROR: 
GRANT ALL ON category TO public

Parser Error: syntax error at or near "GRANT"

INSERT INTO category VALUES
    (11, 'novel'),
    (22, 'science fiction'),
    (33, 'technology'),
    (44, 'manga')


CREATE TABLE document (
    did         int primary key,
    cid         int references category(cid),
    dlevel      int not null,
    dauthor     name,
    dtitle      text
)
ERROR: 

CREATE TABLE document (
    did         int primary key,
    cid         int references category(cid),
    dlevel      int not null,
    dauthor     name,
    dtitle      text
)

Catalog Error: Type with name name does not exist!
Did you mean "date"?

GRANT ALL ON document TO public
ERROR: 
GRANT ALL ON document TO public

Parser Error: syntax error at or near "GRANT"

INSERT INTO document VALUES
    ( 1, 11, 1, 'regress_rls_bob', 'my first novel'),
    ( 2, 11, 2, 'regress_rls_bob', 'my second novel'),
    ( 3, 22, 2, 'regress_rls_bob', 'my science fiction'),
    ( 4, 44, 1, 'regress_rls_bob', 'my first manga'),
    ( 5, 44, 2, 'regress_rls_bob', 'my second manga'),
    ( 6, 22, 1, 'regress_rls_carol', 'great science fiction'),
    ( 7, 33, 2, 'regress_rls_carol', 'great technology book'),
    ( 8, 44, 1, 'regress_rls_carol', 'great manga'),
    ( 9, 22, 1, 'regress_rls_dave', 'awesome science fiction'),
    (10, 33, 2, 'regress_rls_dave', 'awesome technology book')
ERROR: 
INSERT INTO document VALUES
    ( 1, 11, 1, 'regress_rls_bob', 'my first novel'),
    ( 2, 11, 2, 'regress_rls_bob', 'my second novel'),
    ( 3, 22, 2, 'regress_rls_bob', 'my science fiction'),
    ( 4, 44, 1, 'regress_rls_bob', 'my first manga'),
    ( 5, 44, 2, 'regress_rls_bob', 'my second manga'),
    ( 6, 22, 1, 'regress_rls_carol', 'great science fiction'),
    ( 7, 33, 2, 'regress_rls_carol', 'great technology book'),
    ( 8, 44, 1, 'regress_rls_carol', 'great manga'),
    ( 9, 22, 1, 'regress_rls_dave', 'awesome science fiction'),
    (10, 33, 2, 'regress_rls_dave', 'awesome technology book')

Catalog Error: Table with name document does not exist!
Did you mean "temp.information_schema.columns"?


ALTER TABLE document ENABLE ROW LEVEL SECURITY
ERROR: 

ALTER TABLE document ENABLE ROW LEVEL SECURITY

Parser Error: syntax error at or near "ENABLE"


-- user''s security level must be higher than or equal to document''s
CREATE POLICY p1 ON document AS PERMISSIVE
    USING (dlevel <= (SELECT seclv FROM uaccount WHERE pguser = current_user))
ERROR: 

-- user''s security level must be higher than or equal to document''s
CREATE POLICY p1 ON document AS PERMISSIVE
    USING (dlevel <= (SELECT seclv FROM uaccount WHERE pguser = current_user))

Parser Error: syntax error at or near "POLICY"


-- try to create a policy of bogus type
CREATE POLICY p1 ON document AS UGLY
    USING (dlevel <= (SELECT seclv FROM uaccount WHERE pguser = current_user))
ERROR: 

-- try to create a policy of bogus type
CREATE POLICY p1 ON document AS UGLY
    USING (dlevel <= (SELECT seclv FROM uaccount WHERE pguser = current_user))

Parser Error: syntax error at or near "POLICY"


-- but Dave isn''t allowed to anything at cid 50 or above
-- this is to make sure that we sort the policies by name first
-- when applying WITH CHECK, a later INSERT by Dave should fail due
-- to p1r first
CREATE POLICY p2r ON document AS RESTRICTIVE TO regress_rls_dave
    USING (cid <> 44 AND cid < 50)
ERROR: 

-- but Dave isn''t allowed to anything at cid 50 or above
-- this is to make sure that we sort the policies by name first
-- when applying WITH CHECK, a later INSERT by Dave should fail due
-- to p1r first
CREATE POLICY p2r ON document AS RESTRICTIVE TO regress_rls_dave
    USING (cid <> 44 AND cid < 50)

Parser Error: syntax error at or near "POLICY"


-- and Dave isn''t allowed to see manga documents
CREATE POLICY p1r ON document AS RESTRICTIVE TO regress_rls_dave
    USING (cid <> 44)
ERROR: 

-- and Dave isn''t allowed to see manga documents
CREATE POLICY p1r ON document AS RESTRICTIVE TO regress_rls_dave
    USING (cid <> 44)

Parser Error: syntax error at or near "POLICY"


-- \dp
-- \d document
SELECT * FROM pg_policies WHERE schemaname = 'regress_rls_schema' AND tablename = 'document' ORDER BY policyname
ERROR: 

-- \dp
-- \d document
SELECT * FROM pg_policies WHERE schemaname = 'regress_rls_schema' AND tablename = 'document' ORDER BY policyname

Catalog Error: Table with name pg_policies does not exist!
Did you mean "pg_proc"?


-- viewpoint from regress_rls_bob
SET SESSION AUTHORIZATION regress_rls_bob
ERROR: 

-- viewpoint from regress_rls_bob
SET SESSION AUTHORIZATION regress_rls_bob

Parser Error: syntax error at or near "AUTHORIZATION"

SET row_security TO ON
ERROR: 
SET row_security TO ON

Parser Error: syntax error at or near "ON"

SELECT * FROM document WHERE f_leak(dtitle) ORDER BY did
ERROR: 
SELECT * FROM document WHERE f_leak(dtitle) ORDER BY did

Catalog Error: Table with name document does not exist!
Did you mean "temp.information_schema.columns"?

SELECT * FROM document NATURAL JOIN category WHERE f_leak(dtitle) ORDER BY did
ERROR: 
SELECT * FROM document NATURAL JOIN category WHERE f_leak(dtitle) ORDER BY did

Catalog Error: Table with name document does not exist!
Did you mean "temp.information_schema.columns"?


-- try a sampled version
SELECT * FROM document TABLESAMPLE BERNOULLI(50) REPEATABLE(0)
  WHERE f_leak(dtitle) ORDER BY did
ERROR: 

-- try a sampled version
SELECT * FROM document TABLESAMPLE BERNOULLI(50) REPEATABLE(0)
  WHERE f_leak(dtitle) ORDER BY did

Catalog Error: Table with name document does not exist!
Did you mean "temp.information_schema.columns"?


-- viewpoint from regress_rls_carol
SET SESSION AUTHORIZATION regress_rls_carol
ERROR: 

-- viewpoint from regress_rls_carol
SET SESSION AUTHORIZATION regress_rls_carol

Parser Error: syntax error at or near "AUTHORIZATION"

SELECT * FROM document WHERE f_leak(dtitle) ORDER BY did
ERROR: 
SELECT * FROM document WHERE f_leak(dtitle) ORDER BY did

Catalog Error: Table with name document does not exist!
Did you mean "temp.information_schema.columns"?

SELECT * FROM document NATURAL JOIN category WHERE f_leak(dtitle) ORDER BY did
ERROR: 
SELECT * FROM document NATURAL JOIN category WHERE f_leak(dtitle) ORDER BY did

Catalog Error: Table with name document does not exist!
Did you mean "temp.information_schema.columns"?


-- try a sampled version
SELECT * FROM document TABLESAMPLE BERNOULLI(50) REPEATABLE(0)
  WHERE f_leak(dtitle) ORDER BY did
ERROR: 

-- try a sampled version
SELECT * FROM document TABLESAMPLE BERNOULLI(50) REPEATABLE(0)
  WHERE f_leak(dtitle) ORDER BY did

Catalog Error: Table with name document does not exist!
Did you mean "temp.information_schema.columns"?


EXPLAIN (COSTS OFF) SELECT * FROM document WHERE f_leak(dtitle)
ERROR: 

EXPLAIN (COSTS OFF) SELECT * FROM document WHERE f_leak(dtitle)

Not implemented Error: Unimplemented explain type: COSTS

EXPLAIN (COSTS OFF) SELECT * FROM document NATURAL JOIN category WHERE f_leak(dtitle)
ERROR: 
EXPLAIN (COSTS OFF) SELECT * FROM document NATURAL JOIN category WHERE f_leak(dtitle)

Not implemented Error: Unimplemented explain type: COSTS


-- viewpoint from regress_rls_dave
SET SESSION AUTHORIZATION regress_rls_dave
ERROR: 

-- viewpoint from regress_rls_dave
SET SESSION AUTHORIZATION regress_rls_dave

Parser Error: syntax error at or near "AUTHORIZATION"

SELECT * FROM document WHERE f_leak(dtitle) ORDER BY did
ERROR: 
SELECT * FROM document WHERE f_leak(dtitle) ORDER BY did

Catalog Error: Table with name document does not exist!
Did you mean "temp.information_schema.columns"?

SELECT * FROM document NATURAL JOIN category WHERE f_leak(dtitle) ORDER BY did
ERROR: 
SELECT * FROM document NATURAL JOIN category WHERE f_leak(dtitle) ORDER BY did

Catalog Error: Table with name document does not exist!
Did you mean "temp.information_schema.columns"?


EXPLAIN (COSTS OFF) SELECT * FROM document WHERE f_leak(dtitle)
ERROR: 

EXPLAIN (COSTS OFF) SELECT * FROM document WHERE f_leak(dtitle)

Not implemented Error: Unimplemented explain type: COSTS

EXPLAIN (COSTS OFF) SELECT * FROM document NATURAL JOIN category WHERE f_leak(dtitle)
ERROR: 
EXPLAIN (COSTS OFF) SELECT * FROM document NATURAL JOIN category WHERE f_leak(dtitle)

Not implemented Error: Unimplemented explain type: COSTS


-- 44 would technically fail for both p2r and p1r, but we should get an error
-- back from p1r for this because it sorts first
INSERT INTO document VALUES (100, 44, 1, 'regress_rls_dave', 'testing sorting of policies')
ERROR: 

-- 44 would technically fail for both p2r and p1r, but we should get an error
-- back from p1r for this because it sorts first
INSERT INTO document VALUES (100, 44, 1, 'regress_rls_dave', 'testing sorting of policies')

Catalog Error: Table with name document does not exist!
Did you mean "temp.information_schema.columns"?
 -- fail
-- Just to see a p2r error
INSERT INTO document VALUES (100, 55, 1, 'regress_rls_dave', 'testing sorting of policies')
ERROR:  -- fail
-- Just to see a p2r error
INSERT INTO document VALUES (100, 55, 1, 'regress_rls_dave', 'testing sorting of policies')

Catalog Error: Table with name document does not exist!
Did you mean "temp.information_schema.columns"?
 -- fail

-- only owner can change policies
ALTER POLICY p1 ON document USING (true)
ERROR:  -- fail

-- only owner can change policies
ALTER POLICY p1 ON document USING (true)

Parser Error: syntax error at or near "POLICY"
    --fail
DROP POLICY p1 ON document
ERROR:     --fail
DROP POLICY p1 ON document

Not implemented Error: Cannot drop this type yet
                  --fail

SET SESSION AUTHORIZATION regress_rls_alice
ERROR:                   --fail

SET SESSION AUTHORIZATION regress_rls_alice

Parser Error: syntax error at or near "AUTHORIZATION"

ALTER POLICY p1 ON document USING (dauthor = current_user)
ERROR: 
ALTER POLICY p1 ON document USING (dauthor = current_user)

Parser Error: syntax error at or near "POLICY"


-- viewpoint from regress_rls_bob again
SET SESSION AUTHORIZATION regress_rls_bob
ERROR: 

-- viewpoint from regress_rls_bob again
SET SESSION AUTHORIZATION regress_rls_bob

Parser Error: syntax error at or near "AUTHORIZATION"

SELECT * FROM document WHERE f_leak(dtitle) ORDER BY did
ERROR: 
SELECT * FROM document WHERE f_leak(dtitle) ORDER BY did

Catalog Error: Table with name document does not exist!
Did you mean "temp.information_schema.columns"?

SELECT * FROM document NATURAL JOIN category WHERE f_leak(dtitle) ORDER by did
ERROR: 
SELECT * FROM document NATURAL JOIN category WHERE f_leak(dtitle) ORDER by did

Catalog Error: Table with name document does not exist!
Did you mean "temp.information_schema.columns"?


-- viewpoint from rls_regres_carol again
SET SESSION AUTHORIZATION regress_rls_carol
ERROR: 

-- viewpoint from rls_regres_carol again
SET SESSION AUTHORIZATION regress_rls_carol

Parser Error: syntax error at or near "AUTHORIZATION"

SELECT * FROM document WHERE f_leak(dtitle) ORDER BY did
ERROR: 
SELECT * FROM document WHERE f_leak(dtitle) ORDER BY did

Catalog Error: Table with name document does not exist!
Did you mean "temp.information_schema.columns"?

SELECT * FROM document NATURAL JOIN category WHERE f_leak(dtitle) ORDER by did
ERROR: 
SELECT * FROM document NATURAL JOIN category WHERE f_leak(dtitle) ORDER by did

Catalog Error: Table with name document does not exist!
Did you mean "temp.information_schema.columns"?


EXPLAIN (COSTS OFF) SELECT * FROM document WHERE f_leak(dtitle)
ERROR: 

EXPLAIN (COSTS OFF) SELECT * FROM document WHERE f_leak(dtitle)

Not implemented Error: Unimplemented explain type: COSTS

EXPLAIN (COSTS OFF) SELECT * FROM document NATURAL JOIN category WHERE f_leak(dtitle)
ERROR: 
EXPLAIN (COSTS OFF) SELECT * FROM document NATURAL JOIN category WHERE f_leak(dtitle)

Not implemented Error: Unimplemented explain type: COSTS


-- interaction of FK/PK constraints
SET SESSION AUTHORIZATION regress_rls_alice
ERROR: 

-- interaction of FK/PK constraints
SET SESSION AUTHORIZATION regress_rls_alice

Parser Error: syntax error at or near "AUTHORIZATION"

CREATE POLICY p2 ON category
    USING (CASE WHEN current_user = 'regress_rls_bob' THEN cid IN (11, 33)
           WHEN current_user = 'regress_rls_carol' THEN cid IN (22, 44)
           ELSE false END)
ERROR: 
CREATE POLICY p2 ON category
    USING (CASE WHEN current_user = 'regress_rls_bob' THEN cid IN (11, 33)
           WHEN current_user = 'regress_rls_carol' THEN cid IN (22, 44)
           ELSE false END)

Parser Error: syntax error at or near "POLICY"


ALTER TABLE category ENABLE ROW LEVEL SECURITY
ERROR: 

ALTER TABLE category ENABLE ROW LEVEL SECURITY

Parser Error: syntax error at or near "ENABLE"


-- cannot delete PK referenced by invisible FK
SET SESSION AUTHORIZATION regress_rls_bob
ERROR: 

-- cannot delete PK referenced by invisible FK
SET SESSION AUTHORIZATION regress_rls_bob

Parser Error: syntax error at or near "AUTHORIZATION"

SELECT * FROM document d FULL OUTER JOIN category c on d.cid = c.cid ORDER BY d.did, c.cid
ERROR: 
SELECT * FROM document d FULL OUTER JOIN category c on d.cid = c.cid ORDER BY d.did, c.cid

Catalog Error: Table with name document does not exist!
Did you mean "temp.information_schema.columns"?

DELETE FROM category WHERE cid = 33
    -- fails with FK violation

-- can insert FK referencing invisible PK
SET SESSION AUTHORIZATION regress_rls_carol
ERROR:     -- fails with FK violation

-- can insert FK referencing invisible PK
SET SESSION AUTHORIZATION regress_rls_carol

Parser Error: syntax error at or near "AUTHORIZATION"

SELECT * FROM document d FULL OUTER JOIN category c on d.cid = c.cid ORDER BY d.did, c.cid
ERROR: 
SELECT * FROM document d FULL OUTER JOIN category c on d.cid = c.cid ORDER BY d.did, c.cid

Catalog Error: Table with name document does not exist!
Did you mean "temp.information_schema.columns"?

INSERT INTO document VALUES (11, 33, 1, current_user, 'hoge')
ERROR: 
INSERT INTO document VALUES (11, 33, 1, current_user, 'hoge')

Catalog Error: Table with name document does not exist!
Did you mean "temp.information_schema.columns"?


-- UNIQUE or PRIMARY KEY constraint violation DOES reveal presence of row
SET SESSION AUTHORIZATION regress_rls_bob
ERROR: 

-- UNIQUE or PRIMARY KEY constraint violation DOES reveal presence of row
SET SESSION AUTHORIZATION regress_rls_bob

Parser Error: syntax error at or near "AUTHORIZATION"

INSERT INTO document VALUES (8, 44, 1, 'regress_rls_bob', 'my third manga')
ERROR: 
INSERT INTO document VALUES (8, 44, 1, 'regress_rls_bob', 'my third manga')

Catalog Error: Table with name document does not exist!
Did you mean "temp.information_schema.columns"?
 -- Must fail with unique violation, revealing presence of did we can''t see
SELECT * FROM document WHERE did = 8
ERROR:  -- Must fail with unique violation, revealing presence of did we can''t see
SELECT * FROM document WHERE did = 8

Catalog Error: Table with name document does not exist!
Did you mean "temp.information_schema.columns"?
 -- and confirm we can''t see it

-- RLS policies are checked before constraints
INSERT INTO document VALUES (8, 44, 1, 'regress_rls_carol', 'my third manga')
ERROR:  -- and confirm we can''t see it

-- RLS policies are checked before constraints
INSERT INTO document VALUES (8, 44, 1, 'regress_rls_carol', 'my third manga')

Catalog Error: Table with name document does not exist!
Did you mean "temp.information_schema.columns"?
 -- Should fail with RLS check violation, not duplicate key violation
UPDATE document SET did = 8, dauthor = 'regress_rls_carol' WHERE did = 5
ERROR:  -- Should fail with RLS check violation, not duplicate key violation
UPDATE document SET did = 8, dauthor = 'regress_rls_carol' WHERE did = 5

Catalog Error: Table with name document does not exist!
Did you mean "temp.information_schema.columns"?
LINE 2: UPDATE document SET did = 8, dauthor = 'regress_rls_carol' WHERE did = 5
...
               ^
 -- Should fail with RLS check violation, not duplicate key violation

-- database superuser does bypass RLS policy when enabled
RESET SESSION AUTHORIZATION
ERROR:  -- Should fail with RLS check violation, not duplicate key violation

-- database superuser does bypass RLS policy when enabled
RESET SESSION AUTHORIZATION

Parser Error: syntax error at or near "AUTHORIZATION"

SET row_security TO ON
ERROR: 
SET row_security TO ON

Parser Error: syntax error at or near "ON"

SELECT * FROM document
ERROR: 
SELECT * FROM document

Catalog Error: Table with name document does not exist!
Did you mean "temp.information_schema.columns"?

SELECT * FROM category
RESULT: 
	[(11, 'novel'), (22, 'science fiction'), (44, 'manga')]


-- database superuser does bypass RLS policy when disabled
RESET SESSION AUTHORIZATION
ERROR: 

-- database superuser does bypass RLS policy when disabled
RESET SESSION AUTHORIZATION

Parser Error: syntax error at or near "AUTHORIZATION"

SET row_security TO OFF
ERROR: 
SET row_security TO OFF

Catalog Error: unrecognized configuration parameter "row_security"

Did you mean: "user"

SELECT * FROM document
ERROR: 
SELECT * FROM document

Catalog Error: Table with name document does not exist!
Did you mean "temp.information_schema.columns"?

SELECT * FROM category
RESULT: 
	[(11, 'novel'), (22, 'science fiction'), (44, 'manga')]


-- database non-superuser with bypass privilege can bypass RLS policy when disabled
SET SESSION AUTHORIZATION regress_rls_exempt_user
ERROR: 

-- database non-superuser with bypass privilege can bypass RLS policy when disabled
SET SESSION AUTHORIZATION regress_rls_exempt_user

Parser Error: syntax error at or near "AUTHORIZATION"

SET row_security TO OFF
ERROR: 
SET row_security TO OFF

Catalog Error: unrecognized configuration parameter "row_security"

Did you mean: "user"

SELECT * FROM document
ERROR: 
SELECT * FROM document

Catalog Error: Table with name document does not exist!
Did you mean "temp.information_schema.columns"?

SELECT * FROM category
RESULT: 
	[(11, 'novel'), (22, 'science fiction'), (44, 'manga')]


-- RLS policy does not apply to table owner when RLS enabled.
SET SESSION AUTHORIZATION regress_rls_alice
ERROR: 

-- RLS policy does not apply to table owner when RLS enabled.
SET SESSION AUTHORIZATION regress_rls_alice

Parser Error: syntax error at or near "AUTHORIZATION"

SET row_security TO ON
ERROR: 
SET row_security TO ON

Parser Error: syntax error at or near "ON"

SELECT * FROM document
ERROR: 
SELECT * FROM document

Catalog Error: Table with name document does not exist!
Did you mean "temp.information_schema.columns"?

SELECT * FROM category
RESULT: 
	[(11, 'novel'), (22, 'science fiction'), (44, 'manga')]


-- RLS policy does not apply to table owner when RLS disabled.
SET SESSION AUTHORIZATION regress_rls_alice
ERROR: 

-- RLS policy does not apply to table owner when RLS disabled.
SET SESSION AUTHORIZATION regress_rls_alice

Parser Error: syntax error at or near "AUTHORIZATION"

SET row_security TO OFF
ERROR: 
SET row_security TO OFF

Catalog Error: unrecognized configuration parameter "row_security"

Did you mean: "user"

SELECT * FROM document
ERROR: 
SELECT * FROM document

Catalog Error: Table with name document does not exist!
Did you mean "temp.information_schema.columns"?

SELECT * FROM category
RESULT: 
	[(11, 'novel'), (22, 'science fiction'), (44, 'manga')]


--
-- Table inheritance and RLS policy
--
SET SESSION AUTHORIZATION regress_rls_alice
ERROR: 

--
-- Table inheritance and RLS policy
--
SET SESSION AUTHORIZATION regress_rls_alice

Parser Error: syntax error at or near "AUTHORIZATION"


SET row_security TO ON
ERROR: 

SET row_security TO ON

Parser Error: syntax error at or near "ON"


CREATE TABLE t1 (id int not null primary key, a int, junk1 text, b text)

ALTER TABLE t1 DROP COLUMN junk1
    -- just a disturbing factor
GRANT ALL ON t1 TO public
ERROR:     -- just a disturbing factor
GRANT ALL ON t1 TO public

Parser Error: syntax error at or near "GRANT"


COPY t1 FROM stdin WITH 
ERROR: 

COPY t1 FROM stdin WITH 

IO Error: No files found that match the pattern "/dev/stdin"

101	1	aba
102	2	bbb
103	3	ccc
104	4	dad
\.

CREATE TABLE t2 (c float) INHERITS (t1)
ERROR: 
101	1	aba
102	2	bbb
103	3	ccc
104	4	dad
\.

CREATE TABLE t2 (c float) INHERITS (t1)

Parser Error: syntax error at or near "101"

GRANT ALL ON t2 TO public
ERROR: 
GRANT ALL ON t2 TO public

Parser Error: syntax error at or near "GRANT"


COPY t2 FROM stdin
ERROR: 

COPY t2 FROM stdin

Catalog Error: Table with name t2 does not exist!
Did you mean "t1"?

201	1	abc	1.1
202	2	bcd	2.2
203	3	cde	3.3
204	4	def	4.4
\.

CREATE TABLE t3 (id int not null primary key, c text, b text, a int)
ERROR: 
201	1	abc	1.1
202	2	bcd	2.2
203	3	cde	3.3
204	4	def	4.4
\.

CREATE TABLE t3 (id int not null primary key, c text, b text, a int)

Parser Error: syntax error at or near "201"

ALTER TABLE t3 INHERIT t1
ERROR: 
ALTER TABLE t3 INHERIT t1

Parser Error: syntax error at or near "INHERIT"

GRANT ALL ON t3 TO public
ERROR: 
GRANT ALL ON t3 TO public

Parser Error: syntax error at or near "GRANT"


COPY t3(id, a,b,c) FROM stdin
ERROR: 

COPY t3(id, a,b,c) FROM stdin

Catalog Error: Table with name t3 does not exist!
Did you mean "t1"?

301	1	xxx	X
302	2	yyy	Y
303	3	zzz	Z
\.

CREATE POLICY p1 ON t1 FOR ALL TO PUBLIC USING (a % 2 = 0)
ERROR: 
301	1	xxx	X
302	2	yyy	Y
303	3	zzz	Z
\.

CREATE POLICY p1 ON t1 FOR ALL TO PUBLIC USING (a % 2 = 0)

Parser Error: syntax error at or near "301"
 -- be even number
CREATE POLICY p2 ON t2 FOR ALL TO PUBLIC USING (a % 2 = 1)
ERROR:  -- be even number
CREATE POLICY p2 ON t2 FOR ALL TO PUBLIC USING (a % 2 = 1)

Parser Error: syntax error at or near "POLICY"
 -- be odd number

ALTER TABLE t1 ENABLE ROW LEVEL SECURITY
ERROR:  -- be odd number

ALTER TABLE t1 ENABLE ROW LEVEL SECURITY

Parser Error: syntax error at or near "ENABLE"

ALTER TABLE t2 ENABLE ROW LEVEL SECURITY
ERROR: 
ALTER TABLE t2 ENABLE ROW LEVEL SECURITY

Parser Error: syntax error at or near "ENABLE"


SET SESSION AUTHORIZATION regress_rls_bob
ERROR: 

SET SESSION AUTHORIZATION regress_rls_bob

Parser Error: syntax error at or near "AUTHORIZATION"


SELECT * FROM t1
RESULT: 
	[]

EXPLAIN (COSTS OFF) SELECT * FROM t1
ERROR: 
EXPLAIN (COSTS OFF) SELECT * FROM t1

Not implemented Error: Unimplemented explain type: COSTS


SELECT * FROM t1 WHERE f_leak(b)
ERROR: 

SELECT * FROM t1 WHERE f_leak(b)

Catalog Error: Scalar Function with name f_leak does not exist!
Did you mean "era"?

EXPLAIN (COSTS OFF) SELECT * FROM t1 WHERE f_leak(b)
ERROR: 
EXPLAIN (COSTS OFF) SELECT * FROM t1 WHERE f_leak(b)

Not implemented Error: Unimplemented explain type: COSTS


-- reference to system column
SELECT tableoid::regclass, * FROM t1
ERROR: 

-- reference to system column
SELECT tableoid::regclass, * FROM t1

Binder Error: Referenced column "tableoid" not found in FROM clause!
Candidate bindings: "t1.id"

EXPLAIN (COSTS OFF) SELECT *, t1 FROM t1
ERROR: 
EXPLAIN (COSTS OFF) SELECT *, t1 FROM t1

Not implemented Error: Unimplemented explain type: COSTS


-- reference to whole-row reference
SELECT *, t1 FROM t1
RESULT: 
	[]

EXPLAIN (COSTS OFF) SELECT *, t1 FROM t1
ERROR: 
EXPLAIN (COSTS OFF) SELECT *, t1 FROM t1

Not implemented Error: Unimplemented explain type: COSTS


-- for share/update lock
SELECT * FROM t1 FOR SHARE
ERROR: 

-- for share/update lock
SELECT * FROM t1 FOR SHARE

Parser Error: SELECT locking clause is not supported!

EXPLAIN (COSTS OFF) SELECT * FROM t1 FOR SHARE
ERROR: 
EXPLAIN (COSTS OFF) SELECT * FROM t1 FOR SHARE

Not implemented Error: Unimplemented explain type: COSTS


SELECT * FROM t1 WHERE f_leak(b) FOR SHARE
ERROR: 

SELECT * FROM t1 WHERE f_leak(b) FOR SHARE

Parser Error: SELECT locking clause is not supported!

EXPLAIN (COSTS OFF) SELECT * FROM t1 WHERE f_leak(b) FOR SHARE
ERROR: 
EXPLAIN (COSTS OFF) SELECT * FROM t1 WHERE f_leak(b) FOR SHARE

Not implemented Error: Unimplemented explain type: COSTS


-- union all query
SELECT a, b, tableoid::regclass FROM t2 UNION ALL SELECT a, b, tableoid::regclass FROM t3
ERROR: 

-- union all query
SELECT a, b, tableoid::regclass FROM t2 UNION ALL SELECT a, b, tableoid::regclass FROM t3

Catalog Error: Table with name t2 does not exist!
Did you mean "t1"?

EXPLAIN (COSTS OFF) SELECT a, b, tableoid::regclass FROM t2 UNION ALL SELECT a, b, tableoid::regclass FROM t3
ERROR: 
EXPLAIN (COSTS OFF) SELECT a, b, tableoid::regclass FROM t2 UNION ALL SELECT a, b, tableoid::regclass FROM t3

Not implemented Error: Unimplemented explain type: COSTS


-- superuser is allowed to bypass RLS checks
RESET SESSION AUTHORIZATION
ERROR: 

-- superuser is allowed to bypass RLS checks
RESET SESSION AUTHORIZATION

Parser Error: syntax error at or near "AUTHORIZATION"

SET row_security TO OFF
ERROR: 
SET row_security TO OFF

Catalog Error: unrecognized configuration parameter "row_security"

Did you mean: "user"

SELECT * FROM t1 WHERE f_leak(b)
ERROR: 
SELECT * FROM t1 WHERE f_leak(b)

Catalog Error: Scalar Function with name f_leak does not exist!
Did you mean "era"?

EXPLAIN (COSTS OFF) SELECT * FROM t1 WHERE f_leak(b)
ERROR: 
EXPLAIN (COSTS OFF) SELECT * FROM t1 WHERE f_leak(b)

Not implemented Error: Unimplemented explain type: COSTS


-- non-superuser with bypass privilege can bypass RLS policy when disabled
SET SESSION AUTHORIZATION regress_rls_exempt_user
ERROR: 

-- non-superuser with bypass privilege can bypass RLS policy when disabled
SET SESSION AUTHORIZATION regress_rls_exempt_user

Parser Error: syntax error at or near "AUTHORIZATION"

SET row_security TO OFF
ERROR: 
SET row_security TO OFF

Catalog Error: unrecognized configuration parameter "row_security"

Did you mean: "user"

SELECT * FROM t1 WHERE f_leak(b)
ERROR: 
SELECT * FROM t1 WHERE f_leak(b)

Catalog Error: Scalar Function with name f_leak does not exist!
Did you mean "era"?

EXPLAIN (COSTS OFF) SELECT * FROM t1 WHERE f_leak(b)
ERROR: 
EXPLAIN (COSTS OFF) SELECT * FROM t1 WHERE f_leak(b)

Not implemented Error: Unimplemented explain type: COSTS


--
-- Partitioned Tables
--

SET SESSION AUTHORIZATION regress_rls_alice
ERROR: 

--
-- Partitioned Tables
--

SET SESSION AUTHORIZATION regress_rls_alice

Parser Error: syntax error at or near "AUTHORIZATION"


CREATE TABLE part_document (
    did         int,
    cid         int,
    dlevel      int not null,
    dauthor     name,
    dtitle      text
) PARTITION BY RANGE (cid)
ERROR: 

CREATE TABLE part_document (
    did         int,
    cid         int,
    dlevel      int not null,
    dauthor     name,
    dtitle      text
) PARTITION BY RANGE (cid)

Parser Error: syntax error at or near "PARTITION"

GRANT ALL ON part_document TO public
ERROR: 
GRANT ALL ON part_document TO public

Parser Error: syntax error at or near "GRANT"


-- Create partitions for document categories
CREATE TABLE part_document_fiction PARTITION OF part_document FOR VALUES FROM (11) to (12)
ERROR: 

-- Create partitions for document categories
CREATE TABLE part_document_fiction PARTITION OF part_document FOR VALUES FROM (11) to (12)

Parser Error: syntax error at or near "PARTITION"

CREATE TABLE part_document_satire PARTITION OF part_document FOR VALUES FROM (55) to (56)
ERROR: 
CREATE TABLE part_document_satire PARTITION OF part_document FOR VALUES FROM (55) to (56)

Parser Error: syntax error at or near "PARTITION"

CREATE TABLE part_document_nonfiction PARTITION OF part_document FOR VALUES FROM (99) to (100)
ERROR: 
CREATE TABLE part_document_nonfiction PARTITION OF part_document FOR VALUES FROM (99) to (100)

Parser Error: syntax error at or near "PARTITION"


GRANT ALL ON part_document_fiction TO public
ERROR: 

GRANT ALL ON part_document_fiction TO public

Parser Error: syntax error at or near "GRANT"

GRANT ALL ON part_document_satire TO public
ERROR: 
GRANT ALL ON part_document_satire TO public

Parser Error: syntax error at or near "GRANT"

GRANT ALL ON part_document_nonfiction TO public
ERROR: 
GRANT ALL ON part_document_nonfiction TO public

Parser Error: syntax error at or near "GRANT"


INSERT INTO part_document VALUES
    ( 1, 11, 1, 'regress_rls_bob', 'my first novel'),
    ( 2, 11, 2, 'regress_rls_bob', 'my second novel'),
    ( 3, 99, 2, 'regress_rls_bob', 'my science textbook'),
    ( 4, 55, 1, 'regress_rls_bob', 'my first satire'),
    ( 5, 99, 2, 'regress_rls_bob', 'my history book'),
    ( 6, 11, 1, 'regress_rls_carol', 'great science fiction'),
    ( 7, 99, 2, 'regress_rls_carol', 'great technology book'),
    ( 8, 55, 2, 'regress_rls_carol', 'great satire'),
    ( 9, 11, 1, 'regress_rls_dave', 'awesome science fiction'),
    (10, 99, 2, 'regress_rls_dave', 'awesome technology book')
ERROR: 

INSERT INTO part_document VALUES
    ( 1, 11, 1, 'regress_rls_bob', 'my first novel'),
    ( 2, 11, 2, 'regress_rls_bob', 'my second novel'),
    ( 3, 99, 2, 'regress_rls_bob', 'my science textbook'),
    ( 4, 55, 1, 'regress_rls_bob', 'my first satire'),
    ( 5, 99, 2, 'regress_rls_bob', 'my history book'),
    ( 6, 11, 1, 'regress_rls_carol', 'great science fiction'),
    ( 7, 99, 2, 'regress_rls_carol', 'great technology book'),
    ( 8, 55, 2, 'regress_rls_carol', 'great satire'),
    ( 9, 11, 1, 'regress_rls_dave', 'awesome science fiction'),
    (10, 99, 2, 'regress_rls_dave', 'awesome technology book')

Catalog Error: Table with name part_document does not exist!
Did you mean "pg_am"?


ALTER TABLE part_document ENABLE ROW LEVEL SECURITY
ERROR: 

ALTER TABLE part_document ENABLE ROW LEVEL SECURITY

Parser Error: syntax error at or near "ENABLE"


-- Create policy on parent
-- user''s security level must be higher than or equal to document''s
CREATE POLICY pp1 ON part_document AS PERMISSIVE
    USING (dlevel <= (SELECT seclv FROM uaccount WHERE pguser = current_user))
ERROR: 

-- Create policy on parent
-- user''s security level must be higher than or equal to document''s
CREATE POLICY pp1 ON part_document AS PERMISSIVE
    USING (dlevel <= (SELECT seclv FROM uaccount WHERE pguser = current_user))

Parser Error: syntax error at or near "POLICY"


-- Dave is only allowed to see cid < 55
CREATE POLICY pp1r ON part_document AS RESTRICTIVE TO regress_rls_dave
    USING (cid < 55)
ERROR: 

-- Dave is only allowed to see cid < 55
CREATE POLICY pp1r ON part_document AS RESTRICTIVE TO regress_rls_dave
    USING (cid < 55)

Parser Error: syntax error at or near "POLICY"


-- \d+ part_document
SELECT * FROM pg_policies WHERE schemaname = 'regress_rls_schema' AND tablename like '%part_document%' ORDER BY policyname
ERROR: 

-- \d+ part_document
SELECT * FROM pg_policies WHERE schemaname = 'regress_rls_schema' AND tablename like '%part_document%' ORDER BY policyname

Catalog Error: Table with name pg_policies does not exist!
Did you mean "pg_proc"?


-- viewpoint from regress_rls_bob
SET SESSION AUTHORIZATION regress_rls_bob
ERROR: 

-- viewpoint from regress_rls_bob
SET SESSION AUTHORIZATION regress_rls_bob

Parser Error: syntax error at or near "AUTHORIZATION"

SET row_security TO ON
ERROR: 
SET row_security TO ON

Parser Error: syntax error at or near "ON"

SELECT * FROM part_document WHERE f_leak(dtitle) ORDER BY did
ERROR: 
SELECT * FROM part_document WHERE f_leak(dtitle) ORDER BY did

Catalog Error: Table with name part_document does not exist!
Did you mean "pg_am"?

EXPLAIN (COSTS OFF) SELECT * FROM part_document WHERE f_leak(dtitle)
ERROR: 
EXPLAIN (COSTS OFF) SELECT * FROM part_document WHERE f_leak(dtitle)

Not implemented Error: Unimplemented explain type: COSTS


-- viewpoint from regress_rls_carol
SET SESSION AUTHORIZATION regress_rls_carol
ERROR: 

-- viewpoint from regress_rls_carol
SET SESSION AUTHORIZATION regress_rls_carol

Parser Error: syntax error at or near "AUTHORIZATION"

SELECT * FROM part_document WHERE f_leak(dtitle) ORDER BY did
ERROR: 
SELECT * FROM part_document WHERE f_leak(dtitle) ORDER BY did

Catalog Error: Table with name part_document does not exist!
Did you mean "pg_am"?

EXPLAIN (COSTS OFF) SELECT * FROM part_document WHERE f_leak(dtitle)
ERROR: 
EXPLAIN (COSTS OFF) SELECT * FROM part_document WHERE f_leak(dtitle)

Not implemented Error: Unimplemented explain type: COSTS


-- viewpoint from regress_rls_dave
SET SESSION AUTHORIZATION regress_rls_dave
ERROR: 

-- viewpoint from regress_rls_dave
SET SESSION AUTHORIZATION regress_rls_dave

Parser Error: syntax error at or near "AUTHORIZATION"

SELECT * FROM part_document WHERE f_leak(dtitle) ORDER BY did
ERROR: 
SELECT * FROM part_document WHERE f_leak(dtitle) ORDER BY did

Catalog Error: Table with name part_document does not exist!
Did you mean "pg_am"?

EXPLAIN (COSTS OFF) SELECT * FROM part_document WHERE f_leak(dtitle)
ERROR: 
EXPLAIN (COSTS OFF) SELECT * FROM part_document WHERE f_leak(dtitle)

Not implemented Error: Unimplemented explain type: COSTS


-- pp1 ERROR
INSERT INTO part_document VALUES (100, 11, 5, 'regress_rls_dave', 'testing pp1')
ERROR: 

-- pp1 ERROR
INSERT INTO part_document VALUES (100, 11, 5, 'regress_rls_dave', 'testing pp1')

Catalog Error: Table with name part_document does not exist!
Did you mean "pg_am"?
 -- fail
-- pp1r ERROR
INSERT INTO part_document VALUES (100, 99, 1, 'regress_rls_dave', 'testing pp1r')
ERROR:  -- fail
-- pp1r ERROR
INSERT INTO part_document VALUES (100, 99, 1, 'regress_rls_dave', 'testing pp1r')

Catalog Error: Table with name part_document does not exist!
Did you mean "pg_am"?
 -- fail

-- Show that RLS policy does not apply for direct inserts to children
-- This should fail with RLS POLICY pp1r violation.
INSERT INTO part_document VALUES (100, 55, 1, 'regress_rls_dave', 'testing RLS with partitions')
ERROR:  -- fail

-- Show that RLS policy does not apply for direct inserts to children
-- This should fail with RLS POLICY pp1r violation.
INSERT INTO part_document VALUES (100, 55, 1, 'regress_rls_dave', 'testing RLS with partitions')

Catalog Error: Table with name part_document does not exist!
Did you mean "pg_am"?
 -- fail
-- But this should succeed.
INSERT INTO part_document_satire VALUES (100, 55, 1, 'regress_rls_dave', 'testing RLS with partitions')
ERROR:  -- fail
-- But this should succeed.
INSERT INTO part_document_satire VALUES (100, 55, 1, 'regress_rls_dave', 'testing RLS with partitions')

Catalog Error: Table with name part_document_satire does not exist!
Did you mean "temp.information_schema.columns"?
 -- success
-- We still cannot see the row using the parent
SELECT * FROM part_document WHERE f_leak(dtitle) ORDER BY did
ERROR:  -- success
-- We still cannot see the row using the parent
SELECT * FROM part_document WHERE f_leak(dtitle) ORDER BY did

Catalog Error: Table with name part_document does not exist!
Did you mean "pg_am"?

-- But we can if we look directly
SELECT * FROM part_document_satire WHERE f_leak(dtitle) ORDER BY did
ERROR: 
-- But we can if we look directly
SELECT * FROM part_document_satire WHERE f_leak(dtitle) ORDER BY did

Catalog Error: Table with name part_document_satire does not exist!
Did you mean "temp.information_schema.columns"?


-- Turn on RLS and create policy on child to show RLS is checked before constraints
SET SESSION AUTHORIZATION regress_rls_alice
ERROR: 

-- Turn on RLS and create policy on child to show RLS is checked before constraints
SET SESSION AUTHORIZATION regress_rls_alice

Parser Error: syntax error at or near "AUTHORIZATION"

ALTER TABLE part_document_satire ENABLE ROW LEVEL SECURITY
ERROR: 
ALTER TABLE part_document_satire ENABLE ROW LEVEL SECURITY

Parser Error: syntax error at or near "ENABLE"

CREATE POLICY pp3 ON part_document_satire AS RESTRICTIVE
    USING (cid < 55)
ERROR: 
CREATE POLICY pp3 ON part_document_satire AS RESTRICTIVE
    USING (cid < 55)

Parser Error: syntax error at or near "POLICY"

-- This should fail with RLS violation now.
SET SESSION AUTHORIZATION regress_rls_dave
ERROR: 
-- This should fail with RLS violation now.
SET SESSION AUTHORIZATION regress_rls_dave

Parser Error: syntax error at or near "AUTHORIZATION"

INSERT INTO part_document_satire VALUES (101, 55, 1, 'regress_rls_dave', 'testing RLS with partitions')
ERROR: 
INSERT INTO part_document_satire VALUES (101, 55, 1, 'regress_rls_dave', 'testing RLS with partitions')

Catalog Error: Table with name part_document_satire does not exist!
Did you mean "temp.information_schema.columns"?
 -- fail
-- And now we cannot see directly into the partition either, due to RLS
SELECT * FROM part_document_satire WHERE f_leak(dtitle) ORDER BY did
ERROR:  -- fail
-- And now we cannot see directly into the partition either, due to RLS
SELECT * FROM part_document_satire WHERE f_leak(dtitle) ORDER BY did

Catalog Error: Table with name part_document_satire does not exist!
Did you mean "temp.information_schema.columns"?

-- The parent looks same as before
-- viewpoint from regress_rls_dave
SELECT * FROM part_document WHERE f_leak(dtitle) ORDER BY did
ERROR: 
-- The parent looks same as before
-- viewpoint from regress_rls_dave
SELECT * FROM part_document WHERE f_leak(dtitle) ORDER BY did

Catalog Error: Table with name part_document does not exist!
Did you mean "pg_am"?

EXPLAIN (COSTS OFF) SELECT * FROM part_document WHERE f_leak(dtitle)
ERROR: 
EXPLAIN (COSTS OFF) SELECT * FROM part_document WHERE f_leak(dtitle)

Not implemented Error: Unimplemented explain type: COSTS


-- viewpoint from regress_rls_carol
SET SESSION AUTHORIZATION regress_rls_carol
ERROR: 

-- viewpoint from regress_rls_carol
SET SESSION AUTHORIZATION regress_rls_carol

Parser Error: syntax error at or near "AUTHORIZATION"

SELECT * FROM part_document WHERE f_leak(dtitle) ORDER BY did
ERROR: 
SELECT * FROM part_document WHERE f_leak(dtitle) ORDER BY did

Catalog Error: Table with name part_document does not exist!
Did you mean "pg_am"?

EXPLAIN (COSTS OFF) SELECT * FROM part_document WHERE f_leak(dtitle)
ERROR: 
EXPLAIN (COSTS OFF) SELECT * FROM part_document WHERE f_leak(dtitle)

Not implemented Error: Unimplemented explain type: COSTS


-- only owner can change policies
ALTER POLICY pp1 ON part_document USING (true)
ERROR: 

-- only owner can change policies
ALTER POLICY pp1 ON part_document USING (true)

Parser Error: syntax error at or near "POLICY"
    --fail
DROP POLICY pp1 ON part_document
ERROR:     --fail
DROP POLICY pp1 ON part_document

Not implemented Error: Cannot drop this type yet
                  --fail

SET SESSION AUTHORIZATION regress_rls_alice
ERROR:                   --fail

SET SESSION AUTHORIZATION regress_rls_alice

Parser Error: syntax error at or near "AUTHORIZATION"

ALTER POLICY pp1 ON part_document USING (dauthor = current_user)
ERROR: 
ALTER POLICY pp1 ON part_document USING (dauthor = current_user)

Parser Error: syntax error at or near "POLICY"


-- viewpoint from regress_rls_bob again
SET SESSION AUTHORIZATION regress_rls_bob
ERROR: 

-- viewpoint from regress_rls_bob again
SET SESSION AUTHORIZATION regress_rls_bob

Parser Error: syntax error at or near "AUTHORIZATION"

SELECT * FROM part_document WHERE f_leak(dtitle) ORDER BY did
ERROR: 
SELECT * FROM part_document WHERE f_leak(dtitle) ORDER BY did

Catalog Error: Table with name part_document does not exist!
Did you mean "pg_am"?


-- viewpoint from rls_regres_carol again
SET SESSION AUTHORIZATION regress_rls_carol
ERROR: 

-- viewpoint from rls_regres_carol again
SET SESSION AUTHORIZATION regress_rls_carol

Parser Error: syntax error at or near "AUTHORIZATION"

SELECT * FROM part_document WHERE f_leak(dtitle) ORDER BY did
ERROR: 
SELECT * FROM part_document WHERE f_leak(dtitle) ORDER BY did

Catalog Error: Table with name part_document does not exist!
Did you mean "pg_am"?


EXPLAIN (COSTS OFF) SELECT * FROM part_document WHERE f_leak(dtitle)
ERROR: 

EXPLAIN (COSTS OFF) SELECT * FROM part_document WHERE f_leak(dtitle)

Not implemented Error: Unimplemented explain type: COSTS


-- database superuser does bypass RLS policy when enabled
RESET SESSION AUTHORIZATION
ERROR: 

-- database superuser does bypass RLS policy when enabled
RESET SESSION AUTHORIZATION

Parser Error: syntax error at or near "AUTHORIZATION"

SET row_security TO ON
ERROR: 
SET row_security TO ON

Parser Error: syntax error at or near "ON"

SELECT * FROM part_document ORDER BY did
ERROR: 
SELECT * FROM part_document ORDER BY did

Catalog Error: Table with name part_document does not exist!
Did you mean "pg_am"?

SELECT * FROM part_document_satire ORDER by did
ERROR: 
SELECT * FROM part_document_satire ORDER by did

Catalog Error: Table with name part_document_satire does not exist!
Did you mean "temp.information_schema.columns"?


-- database non-superuser with bypass privilege can bypass RLS policy when disabled
SET SESSION AUTHORIZATION regress_rls_exempt_user
ERROR: 

-- database non-superuser with bypass privilege can bypass RLS policy when disabled
SET SESSION AUTHORIZATION regress_rls_exempt_user

Parser Error: syntax error at or near "AUTHORIZATION"

SET row_security TO OFF
ERROR: 
SET row_security TO OFF

Catalog Error: unrecognized configuration parameter "row_security"

Did you mean: "user"

SELECT * FROM part_document ORDER BY did
ERROR: 
SELECT * FROM part_document ORDER BY did

Catalog Error: Table with name part_document does not exist!
Did you mean "pg_am"?

SELECT * FROM part_document_satire ORDER by did
ERROR: 
SELECT * FROM part_document_satire ORDER by did

Catalog Error: Table with name part_document_satire does not exist!
Did you mean "temp.information_schema.columns"?


-- RLS policy does not apply to table owner when RLS enabled.
SET SESSION AUTHORIZATION regress_rls_alice
ERROR: 

-- RLS policy does not apply to table owner when RLS enabled.
SET SESSION AUTHORIZATION regress_rls_alice

Parser Error: syntax error at or near "AUTHORIZATION"

SET row_security TO ON
ERROR: 
SET row_security TO ON

Parser Error: syntax error at or near "ON"

SELECT * FROM part_document ORDER by did
ERROR: 
SELECT * FROM part_document ORDER by did

Catalog Error: Table with name part_document does not exist!
Did you mean "pg_am"?

SELECT * FROM part_document_satire ORDER by did
ERROR: 
SELECT * FROM part_document_satire ORDER by did

Catalog Error: Table with name part_document_satire does not exist!
Did you mean "temp.information_schema.columns"?


-- When RLS disabled, other users get ERROR.
SET SESSION AUTHORIZATION regress_rls_dave
ERROR: 

-- When RLS disabled, other users get ERROR.
SET SESSION AUTHORIZATION regress_rls_dave

Parser Error: syntax error at or near "AUTHORIZATION"

SET row_security TO OFF
ERROR: 
SET row_security TO OFF

Catalog Error: unrecognized configuration parameter "row_security"

Did you mean: "user"

SELECT * FROM part_document ORDER by did
ERROR: 
SELECT * FROM part_document ORDER by did

Catalog Error: Table with name part_document does not exist!
Did you mean "pg_am"?

SELECT * FROM part_document_satire ORDER by did
ERROR: 
SELECT * FROM part_document_satire ORDER by did

Catalog Error: Table with name part_document_satire does not exist!
Did you mean "temp.information_schema.columns"?


-- Check behavior with a policy that uses a SubPlan not an InitPlan.
SET SESSION AUTHORIZATION regress_rls_alice
ERROR: 

-- Check behavior with a policy that uses a SubPlan not an InitPlan.
SET SESSION AUTHORIZATION regress_rls_alice

Parser Error: syntax error at or near "AUTHORIZATION"

SET row_security TO ON
ERROR: 
SET row_security TO ON

Parser Error: syntax error at or near "ON"

CREATE POLICY pp3 ON part_document AS RESTRICTIVE
    USING ((SELECT dlevel <= seclv FROM uaccount WHERE pguser = current_user))
ERROR: 
CREATE POLICY pp3 ON part_document AS RESTRICTIVE
    USING ((SELECT dlevel <= seclv FROM uaccount WHERE pguser = current_user))

Parser Error: syntax error at or near "POLICY"


SET SESSION AUTHORIZATION regress_rls_carol
ERROR: 

SET SESSION AUTHORIZATION regress_rls_carol

Parser Error: syntax error at or near "AUTHORIZATION"

INSERT INTO part_document VALUES (100, 11, 5, 'regress_rls_carol', 'testing pp3')
ERROR: 
INSERT INTO part_document VALUES (100, 11, 5, 'regress_rls_carol', 'testing pp3')

Catalog Error: Table with name part_document does not exist!
Did you mean "pg_am"?
 -- fail

----- Dependencies -----
SET SESSION AUTHORIZATION regress_rls_alice
ERROR:  -- fail

----- Dependencies -----
SET SESSION AUTHORIZATION regress_rls_alice

Parser Error: syntax error at or near "AUTHORIZATION"

SET row_security TO ON
ERROR: 
SET row_security TO ON

Parser Error: syntax error at or near "ON"


CREATE TABLE dependee (x integer, y integer)


CREATE TABLE dependent (x integer, y integer)

CREATE POLICY d1 ON dependent FOR ALL
    TO PUBLIC
    USING (x = (SELECT d.x FROM dependee d WHERE d.y = y))
ERROR: 
CREATE POLICY d1 ON dependent FOR ALL
    TO PUBLIC
    USING (x = (SELECT d.x FROM dependee d WHERE d.y = y))

Parser Error: syntax error at or near "POLICY"


DROP TABLE dependee
 -- Should fail without CASCADE due to dependency on row security qual?

DROP TABLE dependee CASCADE
ERROR:  -- Should fail without CASCADE due to dependency on row security qual?

DROP TABLE dependee CASCADE

Catalog Error: Table with name dependee does not exist!
Did you mean "dependent"?


EXPLAIN (COSTS OFF) SELECT * FROM dependent
ERROR: 

EXPLAIN (COSTS OFF) SELECT * FROM dependent

Not implemented Error: Unimplemented explain type: COSTS
 -- After drop, should be unqualified

-----   RECURSION    ----

--
-- Simple recursion
--
SET SESSION AUTHORIZATION regress_rls_alice
ERROR:  -- After drop, should be unqualified

-----   RECURSION    ----

--
-- Simple recursion
--
SET SESSION AUTHORIZATION regress_rls_alice

Parser Error: syntax error at or near "AUTHORIZATION"

CREATE TABLE rec1 (x integer, y integer)

CREATE POLICY r1 ON rec1 USING (x = (SELECT r.x FROM rec1 r WHERE y = r.y))
ERROR: 
CREATE POLICY r1 ON rec1 USING (x = (SELECT r.x FROM rec1 r WHERE y = r.y))

Parser Error: syntax error at or near "POLICY"

ALTER TABLE rec1 ENABLE ROW LEVEL SECURITY
ERROR: 
ALTER TABLE rec1 ENABLE ROW LEVEL SECURITY

Parser Error: syntax error at or near "ENABLE"

SET SESSION AUTHORIZATION regress_rls_bob
ERROR: 
SET SESSION AUTHORIZATION regress_rls_bob

Parser Error: syntax error at or near "AUTHORIZATION"

SELECT * FROM rec1
RESULT: 
	[]
 -- fail, direct recursion

--
-- Mutual recursion
--
SET SESSION AUTHORIZATION regress_rls_alice
ERROR:  -- fail, direct recursion

--
-- Mutual recursion
--
SET SESSION AUTHORIZATION regress_rls_alice

Parser Error: syntax error at or near "AUTHORIZATION"

CREATE TABLE rec2 (a integer, b integer)

ALTER POLICY r1 ON rec1 USING (x = (SELECT a FROM rec2 WHERE b = y))
ERROR: 
ALTER POLICY r1 ON rec1 USING (x = (SELECT a FROM rec2 WHERE b = y))

Parser Error: syntax error at or near "POLICY"

CREATE POLICY r2 ON rec2 USING (a = (SELECT x FROM rec1 WHERE y = b))
ERROR: 
CREATE POLICY r2 ON rec2 USING (a = (SELECT x FROM rec1 WHERE y = b))

Parser Error: syntax error at or near "POLICY"

ALTER TABLE rec2 ENABLE ROW LEVEL SECURITY
ERROR: 
ALTER TABLE rec2 ENABLE ROW LEVEL SECURITY

Parser Error: syntax error at or near "ENABLE"


SET SESSION AUTHORIZATION regress_rls_bob
ERROR: 

SET SESSION AUTHORIZATION regress_rls_bob

Parser Error: syntax error at or near "AUTHORIZATION"

SELECT * FROM rec1
RESULT: 
	[]
    -- fail, mutual recursion

--
-- Mutual recursion via views
--
SET SESSION AUTHORIZATION regress_rls_bob
ERROR:     -- fail, mutual recursion

--
-- Mutual recursion via views
--
SET SESSION AUTHORIZATION regress_rls_bob

Parser Error: syntax error at or near "AUTHORIZATION"

CREATE VIEW rec1v AS SELECT * FROM rec1

CREATE VIEW rec2v AS SELECT * FROM rec2

SET SESSION AUTHORIZATION regress_rls_alice
ERROR: 
SET SESSION AUTHORIZATION regress_rls_alice

Parser Error: syntax error at or near "AUTHORIZATION"

ALTER POLICY r1 ON rec1 USING (x = (SELECT a FROM rec2v WHERE b = y))
ERROR: 
ALTER POLICY r1 ON rec1 USING (x = (SELECT a FROM rec2v WHERE b = y))

Parser Error: syntax error at or near "POLICY"

ALTER POLICY r2 ON rec2 USING (a = (SELECT x FROM rec1v WHERE y = b))
ERROR: 
ALTER POLICY r2 ON rec2 USING (a = (SELECT x FROM rec1v WHERE y = b))

Parser Error: syntax error at or near "POLICY"


SET SESSION AUTHORIZATION regress_rls_bob
ERROR: 

SET SESSION AUTHORIZATION regress_rls_bob

Parser Error: syntax error at or near "AUTHORIZATION"

SELECT * FROM rec1
RESULT: 
	[]
    -- fail, mutual recursion via views

--
-- Mutual recursion via .s.b views
--
SET SESSION AUTHORIZATION regress_rls_bob
ERROR:     -- fail, mutual recursion via views

--
-- Mutual recursion via .s.b views
--
SET SESSION AUTHORIZATION regress_rls_bob

Parser Error: syntax error at or near "AUTHORIZATION"


DROP VIEW rec1v, rec2v CASCADE
ERROR: 

DROP VIEW rec1v, rec2v CASCADE

Not implemented Error: Can only drop one object at a time


CREATE VIEW rec1v WITH (security_barrier) AS SELECT * FROM rec1
ERROR: 

CREATE VIEW rec1v WITH (security_barrier) AS SELECT * FROM rec1

Not implemented Error: VIEW options

CREATE VIEW rec2v WITH (security_barrier) AS SELECT * FROM rec2
ERROR: 
CREATE VIEW rec2v WITH (security_barrier) AS SELECT * FROM rec2

Not implemented Error: VIEW options

SET SESSION AUTHORIZATION regress_rls_alice
ERROR: 
SET SESSION AUTHORIZATION regress_rls_alice

Parser Error: syntax error at or near "AUTHORIZATION"

CREATE POLICY r1 ON rec1 USING (x = (SELECT a FROM rec2v WHERE b = y))
ERROR: 
CREATE POLICY r1 ON rec1 USING (x = (SELECT a FROM rec2v WHERE b = y))

Parser Error: syntax error at or near "POLICY"

CREATE POLICY r2 ON rec2 USING (a = (SELECT x FROM rec1v WHERE y = b))
ERROR: 
CREATE POLICY r2 ON rec2 USING (a = (SELECT x FROM rec1v WHERE y = b))

Parser Error: syntax error at or near "POLICY"


SET SESSION AUTHORIZATION regress_rls_bob
ERROR: 

SET SESSION AUTHORIZATION regress_rls_bob

Parser Error: syntax error at or near "AUTHORIZATION"

SELECT * FROM rec1
RESULT: 
	[]
    -- fail, mutual recursion via s.b. views

--
-- recursive RLS and VIEWs in policy
--
SET SESSION AUTHORIZATION regress_rls_alice
ERROR:     -- fail, mutual recursion via s.b. views

--
-- recursive RLS and VIEWs in policy
--
SET SESSION AUTHORIZATION regress_rls_alice

Parser Error: syntax error at or near "AUTHORIZATION"

CREATE TABLE s1 (a int, b text)

INSERT INTO s1 (SELECT x, public.fipshash(x::text) FROM generate_series(-10,10) x)
ERROR: 
INSERT INTO s1 (SELECT x, public.fipshash(x::text) FROM generate_series(-10,10) x)

Catalog Error: Scalar Function with name fipshash does not exist!
Did you mean "main.hash"?
LINE 2: INSERT INTO s1 (SELECT x, public.fipshash(x::text) FROM generate...
                                  ^


CREATE TABLE s2 (x int, y text)

INSERT INTO s2 (SELECT x, public.fipshash(x::text) FROM generate_series(-6,6) x)
ERROR: 
INSERT INTO s2 (SELECT x, public.fipshash(x::text) FROM generate_series(-6,6) x)

Catalog Error: Scalar Function with name fipshash does not exist!
Did you mean "main.hash"?
LINE 2: INSERT INTO s2 (SELECT x, public.fipshash(x::text) FROM generate...
                                  ^


GRANT SELECT ON s1, s2 TO regress_rls_bob
ERROR: 

GRANT SELECT ON s1, s2 TO regress_rls_bob

Parser Error: syntax error at or near "GRANT"


CREATE POLICY p1 ON s1 USING (a in (select x from s2 where y like '%2f%'))
ERROR: 

CREATE POLICY p1 ON s1 USING (a in (select x from s2 where y like '%2f%'))

Parser Error: syntax error at or near "POLICY"

CREATE POLICY p2 ON s2 USING (x in (select a from s1 where b like '%22%'))
ERROR: 
CREATE POLICY p2 ON s2 USING (x in (select a from s1 where b like '%22%'))

Parser Error: syntax error at or near "POLICY"

CREATE POLICY p3 ON s1 FOR INSERT WITH CHECK (a = (SELECT a FROM s1))
ERROR: 
CREATE POLICY p3 ON s1 FOR INSERT WITH CHECK (a = (SELECT a FROM s1))

Parser Error: syntax error at or near "POLICY"


ALTER TABLE s1 ENABLE ROW LEVEL SECURITY
ERROR: 

ALTER TABLE s1 ENABLE ROW LEVEL SECURITY

Parser Error: syntax error at or near "ENABLE"

ALTER TABLE s2 ENABLE ROW LEVEL SECURITY
ERROR: 
ALTER TABLE s2 ENABLE ROW LEVEL SECURITY

Parser Error: syntax error at or near "ENABLE"


SET SESSION AUTHORIZATION regress_rls_bob
ERROR: 

SET SESSION AUTHORIZATION regress_rls_bob

Parser Error: syntax error at or near "AUTHORIZATION"

CREATE VIEW v2 AS SELECT * FROM s2 WHERE y like '%af%'

SELECT * FROM s1 WHERE f_leak(b)
ERROR: 
SELECT * FROM s1 WHERE f_leak(b)

Catalog Error: Scalar Function with name f_leak does not exist!
Did you mean "era"?
 -- fail (infinite recursion)

INSERT INTO s1 VALUES (1, 'foo')
 -- fail (infinite recursion)

SET SESSION AUTHORIZATION regress_rls_alice
ERROR:  -- fail (infinite recursion)

SET SESSION AUTHORIZATION regress_rls_alice

Parser Error: syntax error at or near "AUTHORIZATION"

DROP POLICY p3 on s1
ERROR: 
DROP POLICY p3 on s1

Not implemented Error: Cannot drop this type yet

ALTER POLICY p2 ON s2 USING (x % 2 = 0)
ERROR: 
ALTER POLICY p2 ON s2 USING (x % 2 = 0)

Parser Error: syntax error at or near "POLICY"


SET SESSION AUTHORIZATION regress_rls_bob
ERROR: 

SET SESSION AUTHORIZATION regress_rls_bob

Parser Error: syntax error at or near "AUTHORIZATION"

SELECT * FROM s1 WHERE f_leak(b)
ERROR: 
SELECT * FROM s1 WHERE f_leak(b)

Catalog Error: Scalar Function with name f_leak does not exist!
Did you mean "era"?
	-- OK
EXPLAIN (COSTS OFF) SELECT * FROM only s1 WHERE f_leak(b)
ERROR: 	-- OK
EXPLAIN (COSTS OFF) SELECT * FROM only s1 WHERE f_leak(b)

Not implemented Error: Unimplemented explain type: COSTS


SET SESSION AUTHORIZATION regress_rls_alice
ERROR: 

SET SESSION AUTHORIZATION regress_rls_alice

Parser Error: syntax error at or near "AUTHORIZATION"

ALTER POLICY p1 ON s1 USING (a in (select x from v2))
ERROR: 
ALTER POLICY p1 ON s1 USING (a in (select x from v2))

Parser Error: syntax error at or near "POLICY"
 -- using VIEW in RLS policy
SET SESSION AUTHORIZATION regress_rls_bob
ERROR:  -- using VIEW in RLS policy
SET SESSION AUTHORIZATION regress_rls_bob

Parser Error: syntax error at or near "AUTHORIZATION"

SELECT * FROM s1 WHERE f_leak(b)
ERROR: 
SELECT * FROM s1 WHERE f_leak(b)

Catalog Error: Scalar Function with name f_leak does not exist!
Did you mean "era"?
	-- OK
EXPLAIN (COSTS OFF) SELECT * FROM s1 WHERE f_leak(b)
ERROR: 	-- OK
EXPLAIN (COSTS OFF) SELECT * FROM s1 WHERE f_leak(b)

Not implemented Error: Unimplemented explain type: COSTS


SELECT (SELECT x FROM s1 LIMIT 1) xx, * FROM s2 WHERE y like '%28%'
RESULT: 
	[]

EXPLAIN (COSTS OFF) SELECT (SELECT x FROM s1 LIMIT 1) xx, * FROM s2 WHERE y like '%28%'
ERROR: 
EXPLAIN (COSTS OFF) SELECT (SELECT x FROM s1 LIMIT 1) xx, * FROM s2 WHERE y like '%28%'

Not implemented Error: Unimplemented explain type: COSTS


SET SESSION AUTHORIZATION regress_rls_alice
ERROR: 

SET SESSION AUTHORIZATION regress_rls_alice

Parser Error: syntax error at or near "AUTHORIZATION"

ALTER POLICY p2 ON s2 USING (x in (select a from s1 where b like '%d2%'))
ERROR: 
ALTER POLICY p2 ON s2 USING (x in (select a from s1 where b like '%d2%'))

Parser Error: syntax error at or near "POLICY"

SET SESSION AUTHORIZATION regress_rls_bob
ERROR: 
SET SESSION AUTHORIZATION regress_rls_bob

Parser Error: syntax error at or near "AUTHORIZATION"

SELECT * FROM s1 WHERE f_leak(b)
ERROR: 
SELECT * FROM s1 WHERE f_leak(b)

Catalog Error: Scalar Function with name f_leak does not exist!
Did you mean "era"?
	-- fail (infinite recursion via view)

-- prepared statement with regress_rls_alice privilege
PREPARE p1(int) AS SELECT * FROM t1 WHERE a <= $1
ERROR: 	-- fail (infinite recursion via view)

-- prepared statement with regress_rls_alice privilege
PREPARE p1(int) AS SELECT * FROM t1 WHERE a <= $1

Not implemented Error: Prepared statement argument types are not supported, use CAST

EXECUTE p1(2)
ERROR: 
EXECUTE p1(2)

Binder Error: Prepared statement "p1" does not exist

EXPLAIN (COSTS OFF) EXECUTE p1(2)
ERROR: 
EXPLAIN (COSTS OFF) EXECUTE p1(2)

Not implemented Error: Unimplemented explain type: COSTS


-- superuser is allowed to bypass RLS checks
RESET SESSION AUTHORIZATION
ERROR: 

-- superuser is allowed to bypass RLS checks
RESET SESSION AUTHORIZATION

Parser Error: syntax error at or near "AUTHORIZATION"

SET row_security TO OFF
ERROR: 
SET row_security TO OFF

Catalog Error: unrecognized configuration parameter "row_security"

Did you mean: "user"

SELECT * FROM t1 WHERE f_leak(b)
ERROR: 
SELECT * FROM t1 WHERE f_leak(b)

Catalog Error: Scalar Function with name f_leak does not exist!
Did you mean "era"?

EXPLAIN (COSTS OFF) SELECT * FROM t1 WHERE f_leak(b)
ERROR: 
EXPLAIN (COSTS OFF) SELECT * FROM t1 WHERE f_leak(b)

Not implemented Error: Unimplemented explain type: COSTS


-- plan cache should be invalidated
EXECUTE p1(2)
ERROR: 

-- plan cache should be invalidated
EXECUTE p1(2)

Binder Error: Prepared statement "p1" does not exist

EXPLAIN (COSTS OFF) EXECUTE p1(2)
ERROR: 
EXPLAIN (COSTS OFF) EXECUTE p1(2)

Not implemented Error: Unimplemented explain type: COSTS


PREPARE p2(int) AS SELECT * FROM t1 WHERE a = $1
ERROR: 

PREPARE p2(int) AS SELECT * FROM t1 WHERE a = $1

Not implemented Error: Prepared statement argument types are not supported, use CAST

EXECUTE p2(2)
ERROR: 
EXECUTE p2(2)

Binder Error: Prepared statement "p2" does not exist

EXPLAIN (COSTS OFF) EXECUTE p2(2)
ERROR: 
EXPLAIN (COSTS OFF) EXECUTE p2(2)

Not implemented Error: Unimplemented explain type: COSTS


-- also, case when privilege switch from superuser
SET SESSION AUTHORIZATION regress_rls_bob
ERROR: 

-- also, case when privilege switch from superuser
SET SESSION AUTHORIZATION regress_rls_bob

Parser Error: syntax error at or near "AUTHORIZATION"

SET row_security TO ON
ERROR: 
SET row_security TO ON

Parser Error: syntax error at or near "ON"

EXECUTE p2(2)
ERROR: 
EXECUTE p2(2)

Binder Error: Prepared statement "p2" does not exist

EXPLAIN (COSTS OFF) EXECUTE p2(2)
ERROR: 
EXPLAIN (COSTS OFF) EXECUTE p2(2)

Not implemented Error: Unimplemented explain type: COSTS


--
-- UPDATE / DELETE and Row-level security
--
SET SESSION AUTHORIZATION regress_rls_bob
ERROR: 

--
-- UPDATE / DELETE and Row-level security
--
SET SESSION AUTHORIZATION regress_rls_bob

Parser Error: syntax error at or near "AUTHORIZATION"

EXPLAIN (COSTS OFF) UPDATE t1 SET b = b || b WHERE f_leak(b)
ERROR: 
EXPLAIN (COSTS OFF) UPDATE t1 SET b = b || b WHERE f_leak(b)

Not implemented Error: Unimplemented explain type: COSTS

UPDATE t1 SET b = b || b WHERE f_leak(b)
ERROR: 
UPDATE t1 SET b = b || b WHERE f_leak(b)

Catalog Error: Scalar Function with name f_leak does not exist!
Did you mean "era"?
LINE 2: UPDATE t1 SET b = b || b WHERE f_leak(b)
                                       ^


EXPLAIN (COSTS OFF) UPDATE only t1 SET b = b || '_updt' WHERE f_leak(b)
ERROR: 

EXPLAIN (COSTS OFF) UPDATE only t1 SET b = b || '_updt' WHERE f_leak(b)

Not implemented Error: Unimplemented explain type: COSTS

UPDATE only t1 SET b = b || '_updt' WHERE f_leak(b)
ERROR: 
UPDATE only t1 SET b = b || '_updt' WHERE f_leak(b)

Catalog Error: Scalar Function with name f_leak does not exist!
Did you mean "era"?
LINE 2: ...DATE only t1 SET b = b || '_updt' WHERE f_leak(b)
                                                  ^


-- returning clause with system column
UPDATE only t1 SET b = b WHERE f_leak(b) RETURNING tableoid::regclass, *, t1
ERROR: 

-- returning clause with system column
UPDATE only t1 SET b = b WHERE f_leak(b) RETURNING tableoid::regclass, *, t1

Catalog Error: Scalar Function with name f_leak does not exist!
Did you mean "era"?
LINE 4: UPDATE only t1 SET b = b WHER...
                                       ^

UPDATE t1 SET b = b WHERE f_leak(b) RETURNING *
ERROR: 
UPDATE t1 SET b = b WHERE f_leak(b) RETURNING *

Catalog Error: Scalar Function with name f_leak does not exist!
Did you mean "era"?
LINE 2: UPDATE t1 SET b = b WHERE f_leak(b) RETURNING *
                                  ^

UPDATE t1 SET b = b WHERE f_leak(b) RETURNING tableoid::regclass, *, t1
ERROR: 
UPDATE t1 SET b = b WHERE f_leak(b) RETURNING tableoid::regclass, *, t1

Catalog Error: Scalar Function with name f_leak does not exist!
Did you mean "era"?
LINE 2: UPDATE t1 SET b = b WHERE f_leak(b) RETURNING tableoid::regclass...
                                  ^


-- updates with from clause
EXPLAIN (COSTS OFF) UPDATE t2 SET b=t2.b FROM t3
WHERE t2.a = 3 and t3.a = 2 AND f_leak(t2.b) AND f_leak(t3.b)
ERROR: 

-- updates with from clause
EXPLAIN (COSTS OFF) UPDATE t2 SET b=t2.b FROM t3
WHERE t2.a = 3 and t3.a = 2 AND f_leak(t2.b) AND f_leak(t3.b)

Not implemented Error: Unimplemented explain type: COSTS


UPDATE t2 SET b=t2.b FROM t3
WHERE t2.a = 3 and t3.a = 2 AND f_leak(t2.b) AND f_leak(t3.b)
ERROR: 

UPDATE t2 SET b=t2.b FROM t3
WHERE t2.a = 3 and t3.a = 2 AND f_leak(t2.b) AND f_leak(t3.b)

Catalog Error: Table with name t2 does not exist!
Did you mean "s2"?
LINE 3: UPDATE t2 SET b=t2.b FROM t3
               ^


EXPLAIN (COSTS OFF) UPDATE t1 SET b=t1.b FROM t2
WHERE t1.a = 3 and t2.a = 3 AND f_leak(t1.b) AND f_leak(t2.b)
ERROR: 

EXPLAIN (COSTS OFF) UPDATE t1 SET b=t1.b FROM t2
WHERE t1.a = 3 and t2.a = 3 AND f_leak(t1.b) AND f_leak(t2.b)

Not implemented Error: Unimplemented explain type: COSTS


UPDATE t1 SET b=t1.b FROM t2
WHERE t1.a = 3 and t2.a = 3 AND f_leak(t1.b) AND f_leak(t2.b)
ERROR: 

UPDATE t1 SET b=t1.b FROM t2
WHERE t1.a = 3 and t2.a = 3 AND f_leak(t1.b) AND f_leak(t2.b)

Catalog Error: Table with name t2 does not exist!
Did you mean "s2"?
LINE 3: UPDATE t1 SET b=t1.b FROM t2
                                  ^


EXPLAIN (COSTS OFF) UPDATE t2 SET b=t2.b FROM t1
WHERE t1.a = 3 and t2.a = 3 AND f_leak(t1.b) AND f_leak(t2.b)
ERROR: 

EXPLAIN (COSTS OFF) UPDATE t2 SET b=t2.b FROM t1
WHERE t1.a = 3 and t2.a = 3 AND f_leak(t1.b) AND f_leak(t2.b)

Not implemented Error: Unimplemented explain type: COSTS


UPDATE t2 SET b=t2.b FROM t1
WHERE t1.a = 3 and t2.a = 3 AND f_leak(t1.b) AND f_leak(t2.b)
ERROR: 

UPDATE t2 SET b=t2.b FROM t1
WHERE t1.a = 3 and t2.a = 3 AND f_leak(t1.b) AND f_leak(t2.b)

Catalog Error: Table with name t2 does not exist!
Did you mean "s2"?
LINE 3: UPDATE t2 SET b=t2.b FROM t1
               ^


-- updates with from clause self join
EXPLAIN (COSTS OFF) UPDATE t2 t2_1 SET b = t2_2.b FROM t2 t2_2
WHERE t2_1.a = 3 AND t2_2.a = t2_1.a AND t2_2.b = t2_1.b
AND f_leak(t2_1.b) AND f_leak(t2_2.b) RETURNING *, t2_1, t2_2
ERROR: 

-- updates with from clause self join
EXPLAIN (COSTS OFF) UPDATE t2 t2_1 SET b = t2_2.b FROM t2 t2_2
WHERE t2_1.a = 3 AND t2_2.a = t2_1.a AND t2_2.b = t2_1.b
AND f_leak(t2_1.b) AND f_leak(t2_2.b) RETURNING *, t2_1, t2_2

Not implemented Error: Unimplemented explain type: COSTS


UPDATE t2 t2_1 SET b = t2_2.b FROM t2 t2_2
WHERE t2_1.a = 3 AND t2_2.a = t2_1.a AND t2_2.b = t2_1.b
AND f_leak(t2_1.b) AND f_leak(t2_2.b) RETURNING *, t2_1, t2_2
ERROR: 

UPDATE t2 t2_1 SET b = t2_2.b FROM t2 t2_2
WHERE t2_1.a = 3 AND t2_2.a = t2_1.a AND t2_2.b = t2_1.b
AND f_leak(t2_1.b) AND f_leak(t2_2.b) RETURNING *, t2_1, t2_2

Catalog Error: Table with name t2 does not exist!
Did you mean "s2"?
LINE 3: UPDATE t2 t2_1 SET b = t2_2.b FROM t2 t2_2
               ^


EXPLAIN (COSTS OFF) UPDATE t1 t1_1 SET b = t1_2.b FROM t1 t1_2
WHERE t1_1.a = 4 AND t1_2.a = t1_1.a AND t1_2.b = t1_1.b
AND f_leak(t1_1.b) AND f_leak(t1_2.b) RETURNING *, t1_1, t1_2
ERROR: 

EXPLAIN (COSTS OFF) UPDATE t1 t1_1 SET b = t1_2.b FROM t1 t1_2
WHERE t1_1.a = 4 AND t1_2.a = t1_1.a AND t1_2.b = t1_1.b
AND f_leak(t1_1.b) AND f_leak(t1_2.b) RETURNING *, t1_1, t1_2

Not implemented Error: Unimplemented explain type: COSTS


UPDATE t1 t1_1 SET b = t1_2.b FROM t1 t1_2
WHERE t1_1.a = 4 AND t1_2.a = t1_1.a AND t1_2.b = t1_1.b
AND f_leak(t1_1.b) AND f_leak(t1_2.b) RETURNING *, t1_1, t1_2
ERROR: 

UPDATE t1 t1_1 SET b = t1_2.b FROM t1 t1_2
WHERE t1_1.a = 4 AND t1_2.a = t1_1.a AND t1_2.b = t1_1.b
AND f_leak(t1_1.b) AND f_leak(t1_2.b) RETURNING *, t1_1, t1_2

Catalog Error: Scalar Function with name f_leak does not exist!
Did you mean "era"?
LINE 5: AND f_leak(t1_1.b) AND f_leak(t1_2.b) RETURNING *, t1_1, t1_2
...
            ^


RESET SESSION AUTHORIZATION
ERROR: 

RESET SESSION AUTHORIZATION

Parser Error: syntax error at or near "AUTHORIZATION"

SET row_security TO OFF
ERROR: 
SET row_security TO OFF

Catalog Error: unrecognized configuration parameter "row_security"

Did you mean: "user"

SELECT * FROM t1 ORDER BY a,b
RESULT: 
	[]


SET SESSION AUTHORIZATION regress_rls_bob
ERROR: 

SET SESSION AUTHORIZATION regress_rls_bob

Parser Error: syntax error at or near "AUTHORIZATION"

SET row_security TO ON
ERROR: 
SET row_security TO ON

Parser Error: syntax error at or near "ON"

EXPLAIN (COSTS OFF) DELETE FROM only t1 WHERE f_leak(b)
ERROR: 
EXPLAIN (COSTS OFF) DELETE FROM only t1 WHERE f_leak(b)

Not implemented Error: Unimplemented explain type: COSTS

EXPLAIN (COSTS OFF) DELETE FROM t1 WHERE f_leak(b)
ERROR: 
EXPLAIN (COSTS OFF) DELETE FROM t1 WHERE f_leak(b)

Not implemented Error: Unimplemented explain type: COSTS


DELETE FROM only t1 WHERE f_leak(b) RETURNING tableoid::regclass, *, t1
ERROR: 

DELETE FROM only t1 WHERE f_leak(b) RETURNING tableoid::regclass, *, t1

Catalog Error: Scalar Function with name f_leak does not exist!
Did you mean "era"?
LINE 3: DELETE FROM only t1 WHERE f_leak(b) RETURNING tableoid::regclas...
                                  ^

DELETE FROM t1 WHERE f_leak(b) RETURNING tableoid::regclass, *, t1
ERROR: 
DELETE FROM t1 WHERE f_leak(b) RETURNING tableoid::regclass, *, t1

Catalog Error: Scalar Function with name f_leak does not exist!
Did you mean "era"?
LINE 2: DELETE FROM t1 WHERE f_leak(b) RETURNING tableoid::regclass...
                             ^


--
-- S.b. view on top of Row-level security
--
SET SESSION AUTHORIZATION regress_rls_alice
ERROR: 

--
-- S.b. view on top of Row-level security
--
SET SESSION AUTHORIZATION regress_rls_alice

Parser Error: syntax error at or near "AUTHORIZATION"

CREATE TABLE b1 (a int, b text)

INSERT INTO b1 (SELECT x, public.fipshash(x::text) FROM generate_series(-10,10) x)
ERROR: 
INSERT INTO b1 (SELECT x, public.fipshash(x::text) FROM generate_series(-10,10) x)

Catalog Error: Scalar Function with name fipshash does not exist!
Did you mean "main.hash"?
LINE 2: INSERT INTO b1 (SELECT x, public.fipshash(x::text) FROM generate...
                                  ^


CREATE POLICY p1 ON b1 USING (a % 2 = 0)
ERROR: 

CREATE POLICY p1 ON b1 USING (a % 2 = 0)

Parser Error: syntax error at or near "POLICY"

ALTER TABLE b1 ENABLE ROW LEVEL SECURITY
ERROR: 
ALTER TABLE b1 ENABLE ROW LEVEL SECURITY

Parser Error: syntax error at or near "ENABLE"

GRANT ALL ON b1 TO regress_rls_bob
ERROR: 
GRANT ALL ON b1 TO regress_rls_bob

Parser Error: syntax error at or near "GRANT"


SET SESSION AUTHORIZATION regress_rls_bob
ERROR: 

SET SESSION AUTHORIZATION regress_rls_bob

Parser Error: syntax error at or near "AUTHORIZATION"

CREATE VIEW bv1 WITH (security_barrier) AS SELECT * FROM b1 WHERE a > 0 WITH CHECK OPTION
ERROR: 
CREATE VIEW bv1 WITH (security_barrier) AS SELECT * FROM b1 WHERE a > 0 WITH CHECK OPTION

Not implemented Error: VIEW options

GRANT ALL ON bv1 TO regress_rls_carol
ERROR: 
GRANT ALL ON bv1 TO regress_rls_carol

Parser Error: syntax error at or near "GRANT"


SET SESSION AUTHORIZATION regress_rls_carol
ERROR: 

SET SESSION AUTHORIZATION regress_rls_carol

Parser Error: syntax error at or near "AUTHORIZATION"


EXPLAIN (COSTS OFF) SELECT * FROM bv1 WHERE f_leak(b)
ERROR: 

EXPLAIN (COSTS OFF) SELECT * FROM bv1 WHERE f_leak(b)

Not implemented Error: Unimplemented explain type: COSTS

SELECT * FROM bv1 WHERE f_leak(b)
ERROR: 
SELECT * FROM bv1 WHERE f_leak(b)

Catalog Error: Table with name bv1 does not exist!
Did you mean "b1"?


INSERT INTO bv1 VALUES (-1, 'xxx')
ERROR: 

INSERT INTO bv1 VALUES (-1, 'xxx')

Catalog Error: Table with name bv1 does not exist!
Did you mean "b1"?
 -- should fail view WCO
INSERT INTO bv1 VALUES (11, 'xxx')
ERROR:  -- should fail view WCO
INSERT INTO bv1 VALUES (11, 'xxx')

Catalog Error: Table with name bv1 does not exist!
Did you mean "b1"?
 -- should fail RLS check
INSERT INTO bv1 VALUES (12, 'xxx')
ERROR:  -- should fail RLS check
INSERT INTO bv1 VALUES (12, 'xxx')

Catalog Error: Table with name bv1 does not exist!
Did you mean "b1"?
 -- ok

EXPLAIN (COSTS OFF) UPDATE bv1 SET b = 'yyy' WHERE a = 4 AND f_leak(b)
ERROR:  -- ok

EXPLAIN (COSTS OFF) UPDATE bv1 SET b = 'yyy' WHERE a = 4 AND f_leak(b)

Not implemented Error: Unimplemented explain type: COSTS

UPDATE bv1 SET b = 'yyy' WHERE a = 4 AND f_leak(b)
ERROR: 
UPDATE bv1 SET b = 'yyy' WHERE a = 4 AND f_leak(b)

Catalog Error: Table with name bv1 does not exist!
Did you mean "b1"?
LINE 2: UPDATE bv1 SET b = 'yyy' WHERE a = 4 AND f_le...
               ^


EXPLAIN (COSTS OFF) DELETE FROM bv1 WHERE a = 6 AND f_leak(b)
ERROR: 

EXPLAIN (COSTS OFF) DELETE FROM bv1 WHERE a = 6 AND f_leak(b)

Not implemented Error: Unimplemented explain type: COSTS

DELETE FROM bv1 WHERE a = 6 AND f_leak(b)
ERROR: 
DELETE FROM bv1 WHERE a = 6 AND f_leak(b)

Catalog Error: Table with name bv1 does not exist!
Did you mean "b1"?
LINE 2: DELETE FROM bv1 WHERE a = 6 AND f_leak(b)
                    ^


SET SESSION AUTHORIZATION regress_rls_alice
ERROR: 

SET SESSION AUTHORIZATION regress_rls_alice

Parser Error: syntax error at or near "AUTHORIZATION"

SELECT * FROM b1
RESULT: 
	[]

--
-- INSERT ... ON CONFLICT DO UPDATE and Row-level security
--

SET SESSION AUTHORIZATION regress_rls_alice
ERROR: 
--
-- INSERT ... ON CONFLICT DO UPDATE and Row-level security
--

SET SESSION AUTHORIZATION regress_rls_alice

Parser Error: syntax error at or near "AUTHORIZATION"

DROP POLICY p1 ON document
ERROR: 
DROP POLICY p1 ON document

Not implemented Error: Cannot drop this type yet

DROP POLICY p1r ON document
ERROR: 
DROP POLICY p1r ON document

Not implemented Error: Cannot drop this type yet


CREATE POLICY p1 ON document FOR SELECT USING (true)
ERROR: 

CREATE POLICY p1 ON document FOR SELECT USING (true)

Parser Error: syntax error at or near "POLICY"

CREATE POLICY p2 ON document FOR INSERT WITH CHECK (dauthor = current_user)
ERROR: 
CREATE POLICY p2 ON document FOR INSERT WITH CHECK (dauthor = current_user)

Parser Error: syntax error at or near "POLICY"

CREATE POLICY p3 ON document FOR UPDATE
  USING (cid = (SELECT cid from category WHERE cname = 'novel'))
  WITH CHECK (dauthor = current_user)
ERROR: 
CREATE POLICY p3 ON document FOR UPDATE
  USING (cid = (SELECT cid from category WHERE cname = 'novel'))
  WITH CHECK (dauthor = current_user)

Parser Error: syntax error at or near "POLICY"


SET SESSION AUTHORIZATION regress_rls_bob
ERROR: 

SET SESSION AUTHORIZATION regress_rls_bob

Parser Error: syntax error at or near "AUTHORIZATION"


-- Exists...
SELECT * FROM document WHERE did = 2
ERROR: 

-- Exists...
SELECT * FROM document WHERE did = 2

Catalog Error: Table with name document does not exist!
Did you mean "temp.information_schema.columns"?


-- ...so violates actual WITH CHECK OPTION within UPDATE (not INSERT, since
-- alternative UPDATE path happens to be taken):
INSERT INTO document VALUES (2, (SELECT cid from category WHERE cname = 'novel'), 1, 'regress_rls_carol', 'my first novel')
    ON CONFLICT (did) DO UPDATE SET dtitle = EXCLUDED.dtitle, dauthor = EXCLUDED.dauthor
ERROR: 

-- ...so violates actual WITH CHECK OPTION within UPDATE (not INSERT, since
-- alternative UPDATE path happens to be taken):
INSERT INTO document VALUES (2, (SELECT cid from category WHERE cname = 'novel'), 1, 'regress_rls_carol', 'my first novel')
    ON CONFLICT (did) DO UPDATE SET dtitle = EXCLUDED.dtitle, dauthor = EXCLUDED.dauthor

Catalog Error: Table with name document does not exist!
Did you mean "temp.information_schema.columns"?


-- Violates USING qual for UPDATE policy p3.
--
-- UPDATE path is taken, but UPDATE fails purely because *existing* row to be
-- updated is not a ''novel''/cid 11 (row is not leaked, even though we have
-- SELECT privileges sufficient to see the row in this instance):
INSERT INTO document VALUES (33, 22, 1, 'regress_rls_bob', 'okay science fiction')
ERROR: 

-- Violates USING qual for UPDATE policy p3.
--
-- UPDATE path is taken, but UPDATE fails purely because *existing* row to be
-- updated is not a ''novel''/cid 11 (row is not leaked, even though we have
-- SELECT privileges sufficient to see the row in this instance):
INSERT INTO document VALUES (33, 22, 1, 'regress_rls_bob', 'okay science fiction')

Catalog Error: Table with name document does not exist!
Did you mean "temp.information_schema.columns"?
 -- preparation for next statement
INSERT INTO document VALUES (33, (SELECT cid from category WHERE cname = 'novel'), 1, 'regress_rls_bob', 'Some novel, replaces sci-fi') -- takes UPDATE path
    ON CONFLICT (did) DO UPDATE SET dtitle = EXCLUDED.dtitle
ERROR:  -- preparation for next statement
INSERT INTO document VALUES (33, (SELECT cid from category WHERE cname = 'novel'), 1, 'regress_rls_bob', 'Some novel, replaces sci-fi') -- takes UPDATE path
    ON CONFLICT (did) DO UPDATE SET dtitle = EXCLUDED.dtitle

Catalog Error: Table with name document does not exist!
Did you mean "temp.information_schema.columns"?

-- Fine (we UPDATE, since INSERT WCOs and UPDATE security barrier quals + WCOs
-- not violated):
INSERT INTO document VALUES (2, (SELECT cid from category WHERE cname = 'novel'), 1, 'regress_rls_bob', 'my first novel')
    ON CONFLICT (did) DO UPDATE SET dtitle = EXCLUDED.dtitle RETURNING *
ERROR: 
-- Fine (we UPDATE, since INSERT WCOs and UPDATE security barrier quals + WCOs
-- not violated):
INSERT INTO document VALUES (2, (SELECT cid from category WHERE cname = 'novel'), 1, 'regress_rls_bob', 'my first novel')
    ON CONFLICT (did) DO UPDATE SET dtitle = EXCLUDED.dtitle RETURNING *

Catalog Error: Table with name document does not exist!
Did you mean "temp.information_schema.columns"?

-- Fine (we INSERT, so ''cid = 33'' (''technology'') isn''t evaluated):
INSERT INTO document VALUES (78, (SELECT cid from category WHERE cname = 'novel'), 1, 'regress_rls_bob', 'some technology novel')
    ON CONFLICT (did) DO UPDATE SET dtitle = EXCLUDED.dtitle, cid = 33 RETURNING *
ERROR: 
-- Fine (we INSERT, so ''cid = 33'' (''technology'') isn''t evaluated):
INSERT INTO document VALUES (78, (SELECT cid from category WHERE cname = 'novel'), 1, 'regress_rls_bob', 'some technology novel')
    ON CONFLICT (did) DO UPDATE SET dtitle = EXCLUDED.dtitle, cid = 33 RETURNING *

Catalog Error: Table with name document does not exist!
Did you mean "temp.information_schema.columns"?

-- Fine (same query, but we UPDATE, so ''cid = 33'', (''technology'') is not the
-- case in respect of *existing* tuple):
INSERT INTO document VALUES (78, (SELECT cid from category WHERE cname = 'novel'), 1, 'regress_rls_bob', 'some technology novel')
    ON CONFLICT (did) DO UPDATE SET dtitle = EXCLUDED.dtitle, cid = 33 RETURNING *
ERROR: 
-- Fine (same query, but we UPDATE, so ''cid = 33'', (''technology'') is not the
-- case in respect of *existing* tuple):
INSERT INTO document VALUES (78, (SELECT cid from category WHERE cname = 'novel'), 1, 'regress_rls_bob', 'some technology novel')
    ON CONFLICT (did) DO UPDATE SET dtitle = EXCLUDED.dtitle, cid = 33 RETURNING *

Catalog Error: Table with name document does not exist!
Did you mean "temp.information_schema.columns"?

-- Same query a third time, but now fails due to existing tuple finally not
-- passing quals:
INSERT INTO document VALUES (78, (SELECT cid from category WHERE cname = 'novel'), 1, 'regress_rls_bob', 'some technology novel')
    ON CONFLICT (did) DO UPDATE SET dtitle = EXCLUDED.dtitle, cid = 33 RETURNING *
ERROR: 
-- Same query a third time, but now fails due to existing tuple finally not
-- passing quals:
INSERT INTO document VALUES (78, (SELECT cid from category WHERE cname = 'novel'), 1, 'regress_rls_bob', 'some technology novel')
    ON CONFLICT (did) DO UPDATE SET dtitle = EXCLUDED.dtitle, cid = 33 RETURNING *

Catalog Error: Table with name document does not exist!
Did you mean "temp.information_schema.columns"?

-- Don''t fail just because INSERT doesn''t satisfy WITH CHECK option that
-- originated as a barrier/USING() qual from the UPDATE.  Note that the UPDATE
-- path *isn''t* taken, and so UPDATE-related policy does not apply:
INSERT INTO document VALUES (79, (SELECT cid from category WHERE cname = 'technology'), 1, 'regress_rls_bob', 'technology book, can only insert')
    ON CONFLICT (did) DO UPDATE SET dtitle = EXCLUDED.dtitle RETURNING *
ERROR: 
-- Don''t fail just because INSERT doesn''t satisfy WITH CHECK option that
-- originated as a barrier/USING() qual from the UPDATE.  Note that the UPDATE
-- path *isn''t* taken, and so UPDATE-related policy does not apply:
INSERT INTO document VALUES (79, (SELECT cid from category WHERE cname = 'technology'), 1, 'regress_rls_bob', 'technology book, can only insert')
    ON CONFLICT (did) DO UPDATE SET dtitle = EXCLUDED.dtitle RETURNING *

Catalog Error: Table with name document does not exist!
Did you mean "temp.information_schema.columns"?

-- But this time, the same statement fails, because the UPDATE path is taken,
-- and updating the row just inserted falls afoul of security barrier qual
-- (enforced as WCO) -- what we might have updated target tuple to is
-- irrelevant, in fact.
INSERT INTO document VALUES (79, (SELECT cid from category WHERE cname = 'technology'), 1, 'regress_rls_bob', 'technology book, can only insert')
    ON CONFLICT (did) DO UPDATE SET dtitle = EXCLUDED.dtitle RETURNING *
ERROR: 
-- But this time, the same statement fails, because the UPDATE path is taken,
-- and updating the row just inserted falls afoul of security barrier qual
-- (enforced as WCO) -- what we might have updated target tuple to is
-- irrelevant, in fact.
INSERT INTO document VALUES (79, (SELECT cid from category WHERE cname = 'technology'), 1, 'regress_rls_bob', 'technology book, can only insert')
    ON CONFLICT (did) DO UPDATE SET dtitle = EXCLUDED.dtitle RETURNING *

Catalog Error: Table with name document does not exist!
Did you mean "temp.information_schema.columns"?


-- Test default USING qual enforced as WCO
SET SESSION AUTHORIZATION regress_rls_alice
ERROR: 

-- Test default USING qual enforced as WCO
SET SESSION AUTHORIZATION regress_rls_alice

Parser Error: syntax error at or near "AUTHORIZATION"

DROP POLICY p1 ON document
ERROR: 
DROP POLICY p1 ON document

Not implemented Error: Cannot drop this type yet

DROP POLICY p2 ON document
ERROR: 
DROP POLICY p2 ON document

Not implemented Error: Cannot drop this type yet

DROP POLICY p3 ON document
ERROR: 
DROP POLICY p3 ON document

Not implemented Error: Cannot drop this type yet


CREATE POLICY p3_with_default ON document FOR UPDATE
  USING (cid = (SELECT cid from category WHERE cname = 'novel'))
ERROR: 

CREATE POLICY p3_with_default ON document FOR UPDATE
  USING (cid = (SELECT cid from category WHERE cname = 'novel'))

Parser Error: syntax error at or near "POLICY"


SET SESSION AUTHORIZATION regress_rls_bob
ERROR: 

SET SESSION AUTHORIZATION regress_rls_bob

Parser Error: syntax error at or near "AUTHORIZATION"

-- Just because WCO-style enforcement of USING quals occurs with
-- existing/target tuple does not mean that the implementation can be allowed
-- to fail to also enforce this qual against the final tuple appended to
-- relation (since in the absence of an explicit WCO, this is also interpreted
-- as an UPDATE/ALL WCO in general).
--
-- UPDATE path is taken here (fails due to existing tuple).  Note that this is
-- not reported as a ''USING expression'', because it''s an RLS UPDATE check that originated as
-- a USING qual for the purposes of RLS in general, as opposed to an explicit
-- USING qual that is ordinarily a security barrier.  We leave it up to the
-- UPDATE to make this fail:
INSERT INTO document VALUES (79, (SELECT cid from category WHERE cname = 'technology'), 1, 'regress_rls_bob', 'technology book, can only insert')
    ON CONFLICT (did) DO UPDATE SET dtitle = EXCLUDED.dtitle RETURNING *
ERROR: 
-- Just because WCO-style enforcement of USING quals occurs with
-- existing/target tuple does not mean that the implementation can be allowed
-- to fail to also enforce this qual against the final tuple appended to
-- relation (since in the absence of an explicit WCO, this is also interpreted
-- as an UPDATE/ALL WCO in general).
--
-- UPDATE path is taken here (fails due to existing tuple).  Note that this is
-- not reported as a ''USING expression'', because it''s an RLS UPDATE check that originated as
-- a USING qual for the purposes of RLS in general, as opposed to an explicit
-- USING qual that is ordinarily a security barrier.  We leave it up to the
-- UPDATE to make this fail:
INSERT INTO document VALUES (79, (SELECT cid from category WHERE cname = 'technology'), 1, 'regress_rls_bob', 'technology book, can only insert')
    ON CONFLICT (did) DO UPDATE SET dtitle = EXCLUDED.dtitle RETURNING *

Catalog Error: Table with name document does not exist!
Did you mean "temp.information_schema.columns"?


-- UPDATE path is taken here.  Existing tuple passes, since its cid
-- corresponds to ''novel'', but default USING qual is enforced against
-- post-UPDATE tuple too (as always when updating with a policy that lacks an
-- explicit WCO), and so this fails:
INSERT INTO document VALUES (2, (SELECT cid from category WHERE cname = 'technology'), 1, 'regress_rls_bob', 'my first novel')
    ON CONFLICT (did) DO UPDATE SET cid = EXCLUDED.cid, dtitle = EXCLUDED.dtitle RETURNING *
ERROR: 

-- UPDATE path is taken here.  Existing tuple passes, since its cid
-- corresponds to ''novel'', but default USING qual is enforced against
-- post-UPDATE tuple too (as always when updating with a policy that lacks an
-- explicit WCO), and so this fails:
INSERT INTO document VALUES (2, (SELECT cid from category WHERE cname = 'technology'), 1, 'regress_rls_bob', 'my first novel')
    ON CONFLICT (did) DO UPDATE SET cid = EXCLUDED.cid, dtitle = EXCLUDED.dtitle RETURNING *

Catalog Error: Table with name document does not exist!
Did you mean "temp.information_schema.columns"?


SET SESSION AUTHORIZATION regress_rls_alice
ERROR: 

SET SESSION AUTHORIZATION regress_rls_alice

Parser Error: syntax error at or near "AUTHORIZATION"

DROP POLICY p3_with_default ON document
ERROR: 
DROP POLICY p3_with_default ON document

Not implemented Error: Cannot drop this type yet


--
-- Test ALL policies with ON CONFLICT DO UPDATE (much the same as existing UPDATE
-- tests)
--
CREATE POLICY p3_with_all ON document FOR ALL
  USING (cid = (SELECT cid from category WHERE cname = 'novel'))
  WITH CHECK (dauthor = current_user)
ERROR: 

--
-- Test ALL policies with ON CONFLICT DO UPDATE (much the same as existing UPDATE
-- tests)
--
CREATE POLICY p3_with_all ON document FOR ALL
  USING (cid = (SELECT cid from category WHERE cname = 'novel'))
  WITH CHECK (dauthor = current_user)

Parser Error: syntax error at or near "POLICY"


SET SESSION AUTHORIZATION regress_rls_bob
ERROR: 

SET SESSION AUTHORIZATION regress_rls_bob

Parser Error: syntax error at or near "AUTHORIZATION"


-- Fails, since ALL WCO is enforced in insert path:
INSERT INTO document VALUES (80, (SELECT cid from category WHERE cname = 'novel'), 1, 'regress_rls_carol', 'my first novel')
    ON CONFLICT (did) DO UPDATE SET dtitle = EXCLUDED.dtitle, cid = 33
ERROR: 

-- Fails, since ALL WCO is enforced in insert path:
INSERT INTO document VALUES (80, (SELECT cid from category WHERE cname = 'novel'), 1, 'regress_rls_carol', 'my first novel')
    ON CONFLICT (did) DO UPDATE SET dtitle = EXCLUDED.dtitle, cid = 33

Catalog Error: Table with name document does not exist!
Did you mean "temp.information_schema.columns"?

-- Fails, since ALL policy USING qual is enforced (existing, target tuple is in
-- violation, since it has the ''manga'' cid):
INSERT INTO document VALUES (4, (SELECT cid from category WHERE cname = 'novel'), 1, 'regress_rls_bob', 'my first novel')
    ON CONFLICT (did) DO UPDATE SET dtitle = EXCLUDED.dtitle
ERROR: 
-- Fails, since ALL policy USING qual is enforced (existing, target tuple is in
-- violation, since it has the ''manga'' cid):
INSERT INTO document VALUES (4, (SELECT cid from category WHERE cname = 'novel'), 1, 'regress_rls_bob', 'my first novel')
    ON CONFLICT (did) DO UPDATE SET dtitle = EXCLUDED.dtitle

Catalog Error: Table with name document does not exist!
Did you mean "temp.information_schema.columns"?

-- Fails, since ALL WCO are enforced:
INSERT INTO document VALUES (1, (SELECT cid from category WHERE cname = 'novel'), 1, 'regress_rls_bob', 'my first novel')
    ON CONFLICT (did) DO UPDATE SET dauthor = 'regress_rls_carol'
ERROR: 
-- Fails, since ALL WCO are enforced:
INSERT INTO document VALUES (1, (SELECT cid from category WHERE cname = 'novel'), 1, 'regress_rls_bob', 'my first novel')
    ON CONFLICT (did) DO UPDATE SET dauthor = 'regress_rls_carol'

Catalog Error: Table with name document does not exist!
Did you mean "temp.information_schema.columns"?


--
-- MERGE
--
RESET SESSION AUTHORIZATION
ERROR: 

--
-- MERGE
--
RESET SESSION AUTHORIZATION

Parser Error: syntax error at or near "AUTHORIZATION"

DROP POLICY p3_with_all ON document
ERROR: 
DROP POLICY p3_with_all ON document

Not implemented Error: Cannot drop this type yet


ALTER TABLE document ADD COLUMN dnotes text DEFAULT ''
ERROR: 

ALTER TABLE document ADD COLUMN dnotes text DEFAULT ''

Catalog Error: Table with name document does not exist!
Did you mean "temp.information_schema.columns"?

-- all documents are readable
CREATE POLICY p1 ON document FOR SELECT USING (true)
ERROR: 
-- all documents are readable
CREATE POLICY p1 ON document FOR SELECT USING (true)

Parser Error: syntax error at or near "POLICY"

-- one may insert documents only authored by them
CREATE POLICY p2 ON document FOR INSERT WITH CHECK (dauthor = current_user)
ERROR: 
-- one may insert documents only authored by them
CREATE POLICY p2 ON document FOR INSERT WITH CHECK (dauthor = current_user)

Parser Error: syntax error at or near "POLICY"

-- one may only update documents in ''novel'' category and new dlevel must be > 0
CREATE POLICY p3 ON document FOR UPDATE
  USING (cid = (SELECT cid from category WHERE cname = 'novel'))
  WITH CHECK (dlevel > 0)
ERROR: 
-- one may only update documents in ''novel'' category and new dlevel must be > 0
CREATE POLICY p3 ON document FOR UPDATE
  USING (cid = (SELECT cid from category WHERE cname = 'novel'))
  WITH CHECK (dlevel > 0)

Parser Error: syntax error at or near "POLICY"

-- one may only delete documents in ''manga'' category
CREATE POLICY p4 ON document FOR DELETE
  USING (cid = (SELECT cid from category WHERE cname = 'manga'))
ERROR: 
-- one may only delete documents in ''manga'' category
CREATE POLICY p4 ON document FOR DELETE
  USING (cid = (SELECT cid from category WHERE cname = 'manga'))

Parser Error: syntax error at or near "POLICY"


SELECT * FROM document
ERROR: 

SELECT * FROM document

Catalog Error: Table with name document does not exist!
Did you mean "temp.information_schema.columns"?


SET SESSION AUTHORIZATION regress_rls_bob
ERROR: 

SET SESSION AUTHORIZATION regress_rls_bob

Parser Error: syntax error at or near "AUTHORIZATION"


-- Fails, since update violates WITH CHECK qual on dlevel
MERGE INTO document d
USING (SELECT 1 as sdid) s
ON did = s.sdid
WHEN MATCHED THEN
	UPDATE SET dnotes = dnotes || ' notes added by merge1 ', dlevel = 0
ERROR: 

-- Fails, since update violates WITH CHECK qual on dlevel
MERGE INTO document d
USING (SELECT 1 as sdid) s
ON did = s.sdid
WHEN MATCHED THEN
	UPDATE SET dnotes = dnotes || ' notes added by merge1 ', dlevel = 0

Parser Error: syntax error at or near "MERGE"


-- Should be OK since USING and WITH CHECK quals pass
MERGE INTO document d
USING (SELECT 1 as sdid) s
ON did = s.sdid
WHEN MATCHED THEN
	UPDATE SET dnotes = dnotes || ' notes added by merge2 '
ERROR: 

-- Should be OK since USING and WITH CHECK quals pass
MERGE INTO document d
USING (SELECT 1 as sdid) s
ON did = s.sdid
WHEN MATCHED THEN
	UPDATE SET dnotes = dnotes || ' notes added by merge2 '

Parser Error: syntax error at or near "MERGE"


-- Even when dlevel is updated explicitly, but to the existing value
MERGE INTO document d
USING (SELECT 1 as sdid) s
ON did = s.sdid
WHEN MATCHED THEN
	UPDATE SET dnotes = dnotes || ' notes added by merge3 ', dlevel = 1
ERROR: 

-- Even when dlevel is updated explicitly, but to the existing value
MERGE INTO document d
USING (SELECT 1 as sdid) s
ON did = s.sdid
WHEN MATCHED THEN
	UPDATE SET dnotes = dnotes || ' notes added by merge3 ', dlevel = 1

Parser Error: syntax error at or near "MERGE"


-- There is a MATCH for did = 3, but UPDATE''s USING qual does not allow
-- updating an item in category ''science fiction''
MERGE INTO document d
USING (SELECT 3 as sdid) s
ON did = s.sdid
WHEN MATCHED THEN
	UPDATE SET dnotes = dnotes || ' notes added by merge '
ERROR: 

-- There is a MATCH for did = 3, but UPDATE''s USING qual does not allow
-- updating an item in category ''science fiction''
MERGE INTO document d
USING (SELECT 3 as sdid) s
ON did = s.sdid
WHEN MATCHED THEN
	UPDATE SET dnotes = dnotes || ' notes added by merge '

Parser Error: syntax error at or near "MERGE"


-- The same thing with DELETE action, but fails again because no permissions
-- to delete items in ''science fiction'' category that did 3 belongs to.
MERGE INTO document d
USING (SELECT 3 as sdid) s
ON did = s.sdid
WHEN MATCHED THEN
	DELETE
ERROR: 

-- The same thing with DELETE action, but fails again because no permissions
-- to delete items in ''science fiction'' category that did 3 belongs to.
MERGE INTO document d
USING (SELECT 3 as sdid) s
ON did = s.sdid
WHEN MATCHED THEN
	DELETE

Parser Error: syntax error at or near "MERGE"


-- Document with did 4 belongs to ''manga'' category which is allowed for
-- deletion. But this fails because the UPDATE action is matched first and
-- UPDATE policy does not allow updation in the category.
MERGE INTO document d
USING (SELECT 4 as sdid) s
ON did = s.sdid
WHEN MATCHED AND dnotes = '' THEN
	UPDATE SET dnotes = dnotes || ' notes added by merge '
WHEN MATCHED THEN
	DELETE
ERROR: 

-- Document with did 4 belongs to ''manga'' category which is allowed for
-- deletion. But this fails because the UPDATE action is matched first and
-- UPDATE policy does not allow updation in the category.
MERGE INTO document d
USING (SELECT 4 as sdid) s
ON did = s.sdid
WHEN MATCHED AND dnotes = '' THEN
	UPDATE SET dnotes = dnotes || ' notes added by merge '
WHEN MATCHED THEN
	DELETE

Parser Error: syntax error at or near "MERGE"


-- UPDATE action is not matched this time because of the WHEN qual.
-- DELETE still fails because role regress_rls_bob does not have SELECT
-- privileges on ''manga'' category row in the category table.
MERGE INTO document d
USING (SELECT 4 as sdid) s
ON did = s.sdid
WHEN MATCHED AND dnotes <> '' THEN
	UPDATE SET dnotes = dnotes || ' notes added by merge '
WHEN MATCHED THEN
	DELETE
ERROR: 

-- UPDATE action is not matched this time because of the WHEN qual.
-- DELETE still fails because role regress_rls_bob does not have SELECT
-- privileges on ''manga'' category row in the category table.
MERGE INTO document d
USING (SELECT 4 as sdid) s
ON did = s.sdid
WHEN MATCHED AND dnotes <> '' THEN
	UPDATE SET dnotes = dnotes || ' notes added by merge '
WHEN MATCHED THEN
	DELETE

Parser Error: syntax error at or near "MERGE"


-- OK if DELETE is replaced with DO NOTHING
MERGE INTO document d
USING (SELECT 4 as sdid) s
ON did = s.sdid
WHEN MATCHED AND dnotes <> '' THEN
	UPDATE SET dnotes = dnotes || ' notes added by merge '
WHEN MATCHED THEN
	DO NOTHING
ERROR: 

-- OK if DELETE is replaced with DO NOTHING
MERGE INTO document d
USING (SELECT 4 as sdid) s
ON did = s.sdid
WHEN MATCHED AND dnotes <> '' THEN
	UPDATE SET dnotes = dnotes || ' notes added by merge '
WHEN MATCHED THEN
	DO NOTHING

Parser Error: syntax error at or near "MERGE"


SELECT * FROM document WHERE did = 4
ERROR: 

SELECT * FROM document WHERE did = 4

Catalog Error: Table with name document does not exist!
Did you mean "temp.information_schema.columns"?


-- Switch to regress_rls_carol role and try the DELETE again. It should succeed
-- this time
RESET SESSION AUTHORIZATION
ERROR: 

-- Switch to regress_rls_carol role and try the DELETE again. It should succeed
-- this time
RESET SESSION AUTHORIZATION

Parser Error: syntax error at or near "AUTHORIZATION"

SET SESSION AUTHORIZATION regress_rls_carol
ERROR: 
SET SESSION AUTHORIZATION regress_rls_carol

Parser Error: syntax error at or near "AUTHORIZATION"


MERGE INTO document d
USING (SELECT 4 as sdid) s
ON did = s.sdid
WHEN MATCHED AND dnotes <> '' THEN
	UPDATE SET dnotes = dnotes || ' notes added by merge '
WHEN MATCHED THEN
	DELETE
ERROR: 

MERGE INTO document d
USING (SELECT 4 as sdid) s
ON did = s.sdid
WHEN MATCHED AND dnotes <> '' THEN
	UPDATE SET dnotes = dnotes || ' notes added by merge '
WHEN MATCHED THEN
	DELETE

Parser Error: syntax error at or near "MERGE"


-- Switch back to regress_rls_bob role
RESET SESSION AUTHORIZATION
ERROR: 

-- Switch back to regress_rls_bob role
RESET SESSION AUTHORIZATION

Parser Error: syntax error at or near "AUTHORIZATION"

SET SESSION AUTHORIZATION regress_rls_bob
ERROR: 
SET SESSION AUTHORIZATION regress_rls_bob

Parser Error: syntax error at or near "AUTHORIZATION"


-- Try INSERT action. This fails because we are trying to insert
-- dauthor = regress_rls_dave and INSERT''s WITH CHECK does not allow
-- that
MERGE INTO document d
USING (SELECT 12 as sdid) s
ON did = s.sdid
WHEN MATCHED THEN
	DELETE
WHEN NOT MATCHED THEN
	INSERT VALUES (12, 11, 1, 'regress_rls_dave', 'another novel')
ERROR: 

-- Try INSERT action. This fails because we are trying to insert
-- dauthor = regress_rls_dave and INSERT''s WITH CHECK does not allow
-- that
MERGE INTO document d
USING (SELECT 12 as sdid) s
ON did = s.sdid
WHEN MATCHED THEN
	DELETE
WHEN NOT MATCHED THEN
	INSERT VALUES (12, 11, 1, 'regress_rls_dave', 'another novel')

Parser Error: syntax error at or near "MERGE"


-- This should be fine
MERGE INTO document d
USING (SELECT 12 as sdid) s
ON did = s.sdid
WHEN MATCHED THEN
	DELETE
WHEN NOT MATCHED THEN
	INSERT VALUES (12, 11, 1, 'regress_rls_bob', 'another novel')
ERROR: 

-- This should be fine
MERGE INTO document d
USING (SELECT 12 as sdid) s
ON did = s.sdid
WHEN MATCHED THEN
	DELETE
WHEN NOT MATCHED THEN
	INSERT VALUES (12, 11, 1, 'regress_rls_bob', 'another novel')

Parser Error: syntax error at or near "MERGE"


-- ok
MERGE INTO document d
USING (SELECT 1 as sdid) s
ON did = s.sdid
WHEN MATCHED THEN
	UPDATE SET dnotes = dnotes || ' notes added by merge4 '
WHEN NOT MATCHED THEN
	INSERT VALUES (12, 11, 1, 'regress_rls_bob', 'another novel')
ERROR: 

-- ok
MERGE INTO document d
USING (SELECT 1 as sdid) s
ON did = s.sdid
WHEN MATCHED THEN
	UPDATE SET dnotes = dnotes || ' notes added by merge4 '
WHEN NOT MATCHED THEN
	INSERT VALUES (12, 11, 1, 'regress_rls_bob', 'another novel')

Parser Error: syntax error at or near "MERGE"


-- drop and create a new SELECT policy which prevents us from reading
-- any document except with category ''novel''
RESET SESSION AUTHORIZATION
ERROR: 

-- drop and create a new SELECT policy which prevents us from reading
-- any document except with category ''novel''
RESET SESSION AUTHORIZATION

Parser Error: syntax error at or near "AUTHORIZATION"

DROP POLICY p1 ON document
ERROR: 
DROP POLICY p1 ON document

Not implemented Error: Cannot drop this type yet

CREATE POLICY p1 ON document FOR SELECT
  USING (cid = (SELECT cid from category WHERE cname = 'novel'))
ERROR: 
CREATE POLICY p1 ON document FOR SELECT
  USING (cid = (SELECT cid from category WHERE cname = 'novel'))

Parser Error: syntax error at or near "POLICY"


SET SESSION AUTHORIZATION regress_rls_bob
ERROR: 

SET SESSION AUTHORIZATION regress_rls_bob

Parser Error: syntax error at or near "AUTHORIZATION"


-- MERGE can no longer see the matching row and hence attempts the
-- NOT MATCHED action, which results in unique key violation
MERGE INTO document d
USING (SELECT 7 as sdid) s
ON did = s.sdid
WHEN MATCHED THEN
	UPDATE SET dnotes = dnotes || ' notes added by merge5 '
WHEN NOT MATCHED THEN
	INSERT VALUES (12, 11, 1, 'regress_rls_bob', 'another novel')
ERROR: 

-- MERGE can no longer see the matching row and hence attempts the
-- NOT MATCHED action, which results in unique key violation
MERGE INTO document d
USING (SELECT 7 as sdid) s
ON did = s.sdid
WHEN MATCHED THEN
	UPDATE SET dnotes = dnotes || ' notes added by merge5 '
WHEN NOT MATCHED THEN
	INSERT VALUES (12, 11, 1, 'regress_rls_bob', 'another novel')

Parser Error: syntax error at or near "MERGE"


-- UPDATE action fails if new row is not visible
MERGE INTO document d
USING (SELECT 1 as sdid) s
ON did = s.sdid
WHEN MATCHED THEN
	UPDATE SET dnotes = dnotes || ' notes added by merge6 ',
			   cid = (SELECT cid from category WHERE cname = 'technology')
ERROR: 

-- UPDATE action fails if new row is not visible
MERGE INTO document d
USING (SELECT 1 as sdid) s
ON did = s.sdid
WHEN MATCHED THEN
	UPDATE SET dnotes = dnotes || ' notes added by merge6 ',
			   cid = (SELECT cid from category WHERE cname = 'technology')

Parser Error: syntax error at or near "MERGE"


-- but OK if new row is visible
MERGE INTO document d
USING (SELECT 1 as sdid) s
ON did = s.sdid
WHEN MATCHED THEN
	UPDATE SET dnotes = dnotes || ' notes added by merge7 ',
			   cid = (SELECT cid from category WHERE cname = 'novel')
ERROR: 

-- but OK if new row is visible
MERGE INTO document d
USING (SELECT 1 as sdid) s
ON did = s.sdid
WHEN MATCHED THEN
	UPDATE SET dnotes = dnotes || ' notes added by merge7 ',
			   cid = (SELECT cid from category WHERE cname = 'novel')

Parser Error: syntax error at or near "MERGE"


-- OK to insert a new row that is not visible
MERGE INTO document d
USING (SELECT 13 as sdid) s
ON did = s.sdid
WHEN MATCHED THEN
	UPDATE SET dnotes = dnotes || ' notes added by merge8 '
WHEN NOT MATCHED THEN
	INSERT VALUES (13, 44, 1, 'regress_rls_bob', 'new manga')
ERROR: 

-- OK to insert a new row that is not visible
MERGE INTO document d
USING (SELECT 13 as sdid) s
ON did = s.sdid
WHEN MATCHED THEN
	UPDATE SET dnotes = dnotes || ' notes added by merge8 '
WHEN NOT MATCHED THEN
	INSERT VALUES (13, 44, 1, 'regress_rls_bob', 'new manga')

Parser Error: syntax error at or near "MERGE"

SELECT * FROM document WHERE did = 13
ERROR: 
SELECT * FROM document WHERE did = 13

Catalog Error: Table with name document does not exist!
Did you mean "temp.information_schema.columns"?


-- but not OK if RETURNING is used
MERGE INTO document d
USING (SELECT 14 as sdid) s
ON did = s.sdid
WHEN MATCHED THEN
	UPDATE SET dnotes = dnotes || ' notes added by merge9 '
WHEN NOT MATCHED THEN
	INSERT VALUES (14, 44, 1, 'regress_rls_bob', 'new manga')
RETURNING *
ERROR: 

-- but not OK if RETURNING is used
MERGE INTO document d
USING (SELECT 14 as sdid) s
ON did = s.sdid
WHEN MATCHED THEN
	UPDATE SET dnotes = dnotes || ' notes added by merge9 '
WHEN NOT MATCHED THEN
	INSERT VALUES (14, 44, 1, 'regress_rls_bob', 'new manga')
RETURNING *

Parser Error: syntax error at or near "MERGE"


-- but OK if new row is visible
MERGE INTO document d
USING (SELECT 14 as sdid) s
ON did = s.sdid
WHEN MATCHED THEN
	UPDATE SET dnotes = dnotes || ' notes added by merge10 '
WHEN NOT MATCHED THEN
	INSERT VALUES (14, 11, 1, 'regress_rls_bob', 'new novel')
RETURNING *
ERROR: 

-- but OK if new row is visible
MERGE INTO document d
USING (SELECT 14 as sdid) s
ON did = s.sdid
WHEN MATCHED THEN
	UPDATE SET dnotes = dnotes || ' notes added by merge10 '
WHEN NOT MATCHED THEN
	INSERT VALUES (14, 11, 1, 'regress_rls_bob', 'new novel')
RETURNING *

Parser Error: syntax error at or near "MERGE"


RESET SESSION AUTHORIZATION
ERROR: 

RESET SESSION AUTHORIZATION

Parser Error: syntax error at or near "AUTHORIZATION"

-- drop the restrictive SELECT policy so that we can look at the
-- final state of the table
DROP POLICY p1 ON document
ERROR: 
-- drop the restrictive SELECT policy so that we can look at the
-- final state of the table
DROP POLICY p1 ON document

Not implemented Error: Cannot drop this type yet

-- Just check everything went per plan
SELECT * FROM document
ERROR: 
-- Just check everything went per plan
SELECT * FROM document

Catalog Error: Table with name document does not exist!
Did you mean "temp.information_schema.columns"?


--
-- ROLE/GROUP
--
SET SESSION AUTHORIZATION regress_rls_alice
ERROR: 

--
-- ROLE/GROUP
--
SET SESSION AUTHORIZATION regress_rls_alice

Parser Error: syntax error at or near "AUTHORIZATION"

CREATE TABLE z1 (a int, b text)

CREATE TABLE z2 (a int, b text)


GRANT SELECT ON z1,z2 TO regress_rls_group1, regress_rls_group2,
    regress_rls_bob, regress_rls_carol
ERROR: 

GRANT SELECT ON z1,z2 TO regress_rls_group1, regress_rls_group2,
    regress_rls_bob, regress_rls_carol

Parser Error: syntax error at or near "GRANT"


INSERT INTO z1 VALUES
    (1, 'aba'),
    (2, 'bbb'),
    (3, 'ccc'),
    (4, 'dad')


CREATE POLICY p1 ON z1 TO regress_rls_group1 USING (a % 2 = 0)
ERROR: 

CREATE POLICY p1 ON z1 TO regress_rls_group1 USING (a % 2 = 0)

Parser Error: syntax error at or near "POLICY"

CREATE POLICY p2 ON z1 TO regress_rls_group2 USING (a % 2 = 1)
ERROR: 
CREATE POLICY p2 ON z1 TO regress_rls_group2 USING (a % 2 = 1)

Parser Error: syntax error at or near "POLICY"


ALTER TABLE z1 ENABLE ROW LEVEL SECURITY
ERROR: 

ALTER TABLE z1 ENABLE ROW LEVEL SECURITY

Parser Error: syntax error at or near "ENABLE"


SET SESSION AUTHORIZATION regress_rls_bob
ERROR: 

SET SESSION AUTHORIZATION regress_rls_bob

Parser Error: syntax error at or near "AUTHORIZATION"

SELECT * FROM z1 WHERE f_leak(b)
ERROR: 
SELECT * FROM z1 WHERE f_leak(b)

Catalog Error: Scalar Function with name f_leak does not exist!
Did you mean "era"?

EXPLAIN (COSTS OFF) SELECT * FROM z1 WHERE f_leak(b)
ERROR: 
EXPLAIN (COSTS OFF) SELECT * FROM z1 WHERE f_leak(b)

Not implemented Error: Unimplemented explain type: COSTS


PREPARE plancache_test AS SELECT * FROM z1 WHERE f_leak(b)
ERROR: 

PREPARE plancache_test AS SELECT * FROM z1 WHERE f_leak(b)

Catalog Error: Scalar Function with name f_leak does not exist!
Did you mean "era"?
LINE 3: ...plancache_test AS SELECT * FROM z1 WHERE f_leak(b)
                                                  ^

EXPLAIN (COSTS OFF) EXECUTE plancache_test
ERROR: 
EXPLAIN (COSTS OFF) EXECUTE plancache_test

Not implemented Error: Unimplemented explain type: COSTS


PREPARE plancache_test2 AS WITH q AS MATERIALIZED (SELECT * FROM z1 WHERE f_leak(b)) SELECT * FROM q,z2
ERROR: 

PREPARE plancache_test2 AS WITH q AS MATERIALIZED (SELECT * FROM z1 WHERE f_leak(b)) SELECT * FROM q,z2

Catalog Error: Scalar Function with name f_leak does not exist!
Did you mean "era"?
LINE 3: ... AS MATERIALIZED (SELECT * FROM z1 WHERE f_leak(b)) SELECT * FROM q,z2
                                                  ^

EXPLAIN (COSTS OFF) EXECUTE plancache_test2
ERROR: 
EXPLAIN (COSTS OFF) EXECUTE plancache_test2

Not implemented Error: Unimplemented explain type: COSTS


PREPARE plancache_test3 AS WITH q AS MATERIALIZED (SELECT * FROM z2) SELECT * FROM q,z1 WHERE f_leak(z1.b)
ERROR: 

PREPARE plancache_test3 AS WITH q AS MATERIALIZED (SELECT * FROM z2) SELECT * FROM q,z1 WHERE f_leak(z1.b)

Catalog Error: Scalar Function with name f_leak does not exist!
Did you mean "era"?
LINE 3: ...LECT * FROM z2) SELECT * FROM q,z1 WHERE f_leak(z1.b)
                                                  ^

EXPLAIN (COSTS OFF) EXECUTE plancache_test3
ERROR: 
EXPLAIN (COSTS OFF) EXECUTE plancache_test3

Not implemented Error: Unimplemented explain type: COSTS


SET ROLE regress_rls_group1
ERROR: 

SET ROLE regress_rls_group1

Parser Error: syntax error at or near "regress_rls_group1"

SELECT * FROM z1 WHERE f_leak(b)
ERROR: 
SELECT * FROM z1 WHERE f_leak(b)

Catalog Error: Scalar Function with name f_leak does not exist!
Did you mean "era"?

EXPLAIN (COSTS OFF) SELECT * FROM z1 WHERE f_leak(b)
ERROR: 
EXPLAIN (COSTS OFF) SELECT * FROM z1 WHERE f_leak(b)

Not implemented Error: Unimplemented explain type: COSTS


EXPLAIN (COSTS OFF) EXECUTE plancache_test
ERROR: 

EXPLAIN (COSTS OFF) EXECUTE plancache_test

Not implemented Error: Unimplemented explain type: COSTS

EXPLAIN (COSTS OFF) EXECUTE plancache_test2
ERROR: 
EXPLAIN (COSTS OFF) EXECUTE plancache_test2

Not implemented Error: Unimplemented explain type: COSTS

EXPLAIN (COSTS OFF) EXECUTE plancache_test3
ERROR: 
EXPLAIN (COSTS OFF) EXECUTE plancache_test3

Not implemented Error: Unimplemented explain type: COSTS


SET SESSION AUTHORIZATION regress_rls_carol
ERROR: 

SET SESSION AUTHORIZATION regress_rls_carol

Parser Error: syntax error at or near "AUTHORIZATION"

SELECT * FROM z1 WHERE f_leak(b)
ERROR: 
SELECT * FROM z1 WHERE f_leak(b)

Catalog Error: Scalar Function with name f_leak does not exist!
Did you mean "era"?

EXPLAIN (COSTS OFF) SELECT * FROM z1 WHERE f_leak(b)
ERROR: 
EXPLAIN (COSTS OFF) SELECT * FROM z1 WHERE f_leak(b)

Not implemented Error: Unimplemented explain type: COSTS


EXPLAIN (COSTS OFF) EXECUTE plancache_test
ERROR: 

EXPLAIN (COSTS OFF) EXECUTE plancache_test

Not implemented Error: Unimplemented explain type: COSTS

EXPLAIN (COSTS OFF) EXECUTE plancache_test2
ERROR: 
EXPLAIN (COSTS OFF) EXECUTE plancache_test2

Not implemented Error: Unimplemented explain type: COSTS

EXPLAIN (COSTS OFF) EXECUTE plancache_test3
ERROR: 
EXPLAIN (COSTS OFF) EXECUTE plancache_test3

Not implemented Error: Unimplemented explain type: COSTS


SET ROLE regress_rls_group2
ERROR: 

SET ROLE regress_rls_group2

Parser Error: syntax error at or near "regress_rls_group2"

SELECT * FROM z1 WHERE f_leak(b)
ERROR: 
SELECT * FROM z1 WHERE f_leak(b)

Catalog Error: Scalar Function with name f_leak does not exist!
Did you mean "era"?

EXPLAIN (COSTS OFF) SELECT * FROM z1 WHERE f_leak(b)
ERROR: 
EXPLAIN (COSTS OFF) SELECT * FROM z1 WHERE f_leak(b)

Not implemented Error: Unimplemented explain type: COSTS


EXPLAIN (COSTS OFF) EXECUTE plancache_test
ERROR: 

EXPLAIN (COSTS OFF) EXECUTE plancache_test

Not implemented Error: Unimplemented explain type: COSTS

EXPLAIN (COSTS OFF) EXECUTE plancache_test2
ERROR: 
EXPLAIN (COSTS OFF) EXECUTE plancache_test2

Not implemented Error: Unimplemented explain type: COSTS

EXPLAIN (COSTS OFF) EXECUTE plancache_test3
ERROR: 
EXPLAIN (COSTS OFF) EXECUTE plancache_test3

Not implemented Error: Unimplemented explain type: COSTS


--
-- Views should follow policy for view owner.
--
-- View and Table owner are the same.
SET SESSION AUTHORIZATION regress_rls_alice
ERROR: 

--
-- Views should follow policy for view owner.
--
-- View and Table owner are the same.
SET SESSION AUTHORIZATION regress_rls_alice

Parser Error: syntax error at or near "AUTHORIZATION"

CREATE VIEW rls_view AS SELECT * FROM z1 WHERE f_leak(b)
ERROR: 
CREATE VIEW rls_view AS SELECT * FROM z1 WHERE f_leak(b)

Catalog Error: Scalar Function with name f_leak does not exist!
Did you mean "era"?
LINE 2: ...VIEW rls_view AS SELECT * FROM z1 WHERE f_leak(b)
                                                  ^

GRANT SELECT ON rls_view TO regress_rls_bob
ERROR: 
GRANT SELECT ON rls_view TO regress_rls_bob

Parser Error: syntax error at or near "GRANT"


-- Query as role that is not owner of view or table.  Should return all records.
SET SESSION AUTHORIZATION regress_rls_bob
ERROR: 

-- Query as role that is not owner of view or table.  Should return all records.
SET SESSION AUTHORIZATION regress_rls_bob

Parser Error: syntax error at or near "AUTHORIZATION"

SELECT * FROM rls_view
ERROR: 
SELECT * FROM rls_view

Catalog Error: Table with name rls_view does not exist!
Did you mean "pg_views"?

EXPLAIN (COSTS OFF) SELECT * FROM rls_view
ERROR: 
EXPLAIN (COSTS OFF) SELECT * FROM rls_view

Not implemented Error: Unimplemented explain type: COSTS


-- Query as view/table owner.  Should return all records.
SET SESSION AUTHORIZATION regress_rls_alice
ERROR: 

-- Query as view/table owner.  Should return all records.
SET SESSION AUTHORIZATION regress_rls_alice

Parser Error: syntax error at or near "AUTHORIZATION"

SELECT * FROM rls_view
ERROR: 
SELECT * FROM rls_view

Catalog Error: Table with name rls_view does not exist!
Did you mean "pg_views"?

EXPLAIN (COSTS OFF) SELECT * FROM rls_view
ERROR: 
EXPLAIN (COSTS OFF) SELECT * FROM rls_view

Not implemented Error: Unimplemented explain type: COSTS

DROP VIEW rls_view
ERROR: 
DROP VIEW rls_view

Catalog Error: View with name rls_view does not exist!
Did you mean "pg_views"?


-- View and Table owners are different.
SET SESSION AUTHORIZATION regress_rls_bob
ERROR: 

-- View and Table owners are different.
SET SESSION AUTHORIZATION regress_rls_bob

Parser Error: syntax error at or near "AUTHORIZATION"

CREATE VIEW rls_view AS SELECT * FROM z1 WHERE f_leak(b)
ERROR: 
CREATE VIEW rls_view AS SELECT * FROM z1 WHERE f_leak(b)

Catalog Error: Scalar Function with name f_leak does not exist!
Did you mean "era"?
LINE 2: ...VIEW rls_view AS SELECT * FROM z1 WHERE f_leak(b)
                                                  ^

GRANT SELECT ON rls_view TO regress_rls_alice
ERROR: 
GRANT SELECT ON rls_view TO regress_rls_alice

Parser Error: syntax error at or near "GRANT"


-- Query as role that is not owner of view but is owner of table.
-- Should return records based on view owner policies.
SET SESSION AUTHORIZATION regress_rls_alice
ERROR: 

-- Query as role that is not owner of view but is owner of table.
-- Should return records based on view owner policies.
SET SESSION AUTHORIZATION regress_rls_alice

Parser Error: syntax error at or near "AUTHORIZATION"

SELECT * FROM rls_view
ERROR: 
SELECT * FROM rls_view

Catalog Error: Table with name rls_view does not exist!
Did you mean "pg_views"?

EXPLAIN (COSTS OFF) SELECT * FROM rls_view
ERROR: 
EXPLAIN (COSTS OFF) SELECT * FROM rls_view

Not implemented Error: Unimplemented explain type: COSTS


-- Query as role that is not owner of table but is owner of view.
-- Should return records based on view owner policies.
SET SESSION AUTHORIZATION regress_rls_bob
ERROR: 

-- Query as role that is not owner of table but is owner of view.
-- Should return records based on view owner policies.
SET SESSION AUTHORIZATION regress_rls_bob

Parser Error: syntax error at or near "AUTHORIZATION"

SELECT * FROM rls_view
ERROR: 
SELECT * FROM rls_view

Catalog Error: Table with name rls_view does not exist!
Did you mean "pg_views"?

EXPLAIN (COSTS OFF) SELECT * FROM rls_view
ERROR: 
EXPLAIN (COSTS OFF) SELECT * FROM rls_view

Not implemented Error: Unimplemented explain type: COSTS


-- Query as role that is not the owner of the table or view without permissions.
SET SESSION AUTHORIZATION regress_rls_carol
ERROR: 

-- Query as role that is not the owner of the table or view without permissions.
SET SESSION AUTHORIZATION regress_rls_carol

Parser Error: syntax error at or near "AUTHORIZATION"

SELECT * FROM rls_view
ERROR: 
SELECT * FROM rls_view

Catalog Error: Table with name rls_view does not exist!
Did you mean "pg_views"?
 --fail - permission denied.
EXPLAIN (COSTS OFF) SELECT * FROM rls_view
ERROR:  --fail - permission denied.
EXPLAIN (COSTS OFF) SELECT * FROM rls_view

Not implemented Error: Unimplemented explain type: COSTS
 --fail - permission denied.

-- Query as role that is not the owner of the table or view with permissions.
SET SESSION AUTHORIZATION regress_rls_bob
ERROR:  --fail - permission denied.

-- Query as role that is not the owner of the table or view with permissions.
SET SESSION AUTHORIZATION regress_rls_bob

Parser Error: syntax error at or near "AUTHORIZATION"

GRANT SELECT ON rls_view TO regress_rls_carol
ERROR: 
GRANT SELECT ON rls_view TO regress_rls_carol

Parser Error: syntax error at or near "GRANT"


SET SESSION AUTHORIZATION regress_rls_carol
ERROR: 

SET SESSION AUTHORIZATION regress_rls_carol

Parser Error: syntax error at or near "AUTHORIZATION"

SELECT * FROM rls_view
ERROR: 
SELECT * FROM rls_view

Catalog Error: Table with name rls_view does not exist!
Did you mean "pg_views"?

EXPLAIN (COSTS OFF) SELECT * FROM rls_view
ERROR: 
EXPLAIN (COSTS OFF) SELECT * FROM rls_view

Not implemented Error: Unimplemented explain type: COSTS


-- Policy requiring access to another table.
SET SESSION AUTHORIZATION regress_rls_alice
ERROR: 

-- Policy requiring access to another table.
SET SESSION AUTHORIZATION regress_rls_alice

Parser Error: syntax error at or near "AUTHORIZATION"

CREATE TABLE z1_blacklist (a int)

INSERT INTO z1_blacklist VALUES (3), (4)

CREATE POLICY p3 ON z1 AS RESTRICTIVE USING (a NOT IN (SELECT a FROM z1_blacklist))
ERROR: 
CREATE POLICY p3 ON z1 AS RESTRICTIVE USING (a NOT IN (SELECT a FROM z1_blacklist))

Parser Error: syntax error at or near "POLICY"


-- Query as role that is not owner of table but is owner of view without permissions.
SET SESSION AUTHORIZATION regress_rls_bob
ERROR: 

-- Query as role that is not owner of table but is owner of view without permissions.
SET SESSION AUTHORIZATION regress_rls_bob

Parser Error: syntax error at or near "AUTHORIZATION"

SELECT * FROM rls_view
ERROR: 
SELECT * FROM rls_view

Catalog Error: Table with name rls_view does not exist!
Did you mean "pg_views"?
 --fail - permission denied.
EXPLAIN (COSTS OFF) SELECT * FROM rls_view
ERROR:  --fail - permission denied.
EXPLAIN (COSTS OFF) SELECT * FROM rls_view

Not implemented Error: Unimplemented explain type: COSTS
 --fail - permission denied.

-- Query as role that is not the owner of the table or view without permissions.
SET SESSION AUTHORIZATION regress_rls_carol
ERROR:  --fail - permission denied.

-- Query as role that is not the owner of the table or view without permissions.
SET SESSION AUTHORIZATION regress_rls_carol

Parser Error: syntax error at or near "AUTHORIZATION"

SELECT * FROM rls_view
ERROR: 
SELECT * FROM rls_view

Catalog Error: Table with name rls_view does not exist!
Did you mean "pg_views"?
 --fail - permission denied.
EXPLAIN (COSTS OFF) SELECT * FROM rls_view
ERROR:  --fail - permission denied.
EXPLAIN (COSTS OFF) SELECT * FROM rls_view

Not implemented Error: Unimplemented explain type: COSTS
 --fail - permission denied.

-- Query as role that is not owner of table but is owner of view with permissions.
SET SESSION AUTHORIZATION regress_rls_alice
ERROR:  --fail - permission denied.

-- Query as role that is not owner of table but is owner of view with permissions.
SET SESSION AUTHORIZATION regress_rls_alice

Parser Error: syntax error at or near "AUTHORIZATION"

GRANT SELECT ON z1_blacklist TO regress_rls_bob
ERROR: 
GRANT SELECT ON z1_blacklist TO regress_rls_bob

Parser Error: syntax error at or near "GRANT"


SET SESSION AUTHORIZATION regress_rls_bob
ERROR: 

SET SESSION AUTHORIZATION regress_rls_bob

Parser Error: syntax error at or near "AUTHORIZATION"

SELECT * FROM rls_view
ERROR: 
SELECT * FROM rls_view

Catalog Error: Table with name rls_view does not exist!
Did you mean "pg_views"?

EXPLAIN (COSTS OFF) SELECT * FROM rls_view
ERROR: 
EXPLAIN (COSTS OFF) SELECT * FROM rls_view

Not implemented Error: Unimplemented explain type: COSTS


-- Query as role that is not the owner of the table or view with permissions.
SET SESSION AUTHORIZATION regress_rls_carol
ERROR: 

-- Query as role that is not the owner of the table or view with permissions.
SET SESSION AUTHORIZATION regress_rls_carol

Parser Error: syntax error at or near "AUTHORIZATION"

SELECT * FROM rls_view
ERROR: 
SELECT * FROM rls_view

Catalog Error: Table with name rls_view does not exist!
Did you mean "pg_views"?

EXPLAIN (COSTS OFF) SELECT * FROM rls_view
ERROR: 
EXPLAIN (COSTS OFF) SELECT * FROM rls_view

Not implemented Error: Unimplemented explain type: COSTS


SET SESSION AUTHORIZATION regress_rls_alice
ERROR: 

SET SESSION AUTHORIZATION regress_rls_alice

Parser Error: syntax error at or near "AUTHORIZATION"

REVOKE SELECT ON z1_blacklist FROM regress_rls_bob
ERROR: 
REVOKE SELECT ON z1_blacklist FROM regress_rls_bob

Parser Error: syntax error at or near "REVOKE"

DROP POLICY p3 ON z1
ERROR: 
DROP POLICY p3 ON z1

Not implemented Error: Cannot drop this type yet


SET SESSION AUTHORIZATION regress_rls_bob
ERROR: 

SET SESSION AUTHORIZATION regress_rls_bob

Parser Error: syntax error at or near "AUTHORIZATION"

DROP VIEW rls_view
ERROR: 
DROP VIEW rls_view

Catalog Error: View with name rls_view does not exist!
Did you mean "pg_views"?


--
-- Security invoker views should follow policy for current user.
--
-- View and table owner are the same.
SET SESSION AUTHORIZATION regress_rls_alice
ERROR: 

--
-- Security invoker views should follow policy for current user.
--
-- View and table owner are the same.
SET SESSION AUTHORIZATION regress_rls_alice

Parser Error: syntax error at or near "AUTHORIZATION"

CREATE VIEW rls_view WITH (security_invoker) AS
    SELECT * FROM z1 WHERE f_leak(b)
ERROR: 
CREATE VIEW rls_view WITH (security_invoker) AS
    SELECT * FROM z1 WHERE f_leak(b)

Not implemented Error: VIEW options

GRANT SELECT ON rls_view TO regress_rls_bob
ERROR: 
GRANT SELECT ON rls_view TO regress_rls_bob

Parser Error: syntax error at or near "GRANT"

GRANT SELECT ON rls_view TO regress_rls_carol
ERROR: 
GRANT SELECT ON rls_view TO regress_rls_carol

Parser Error: syntax error at or near "GRANT"


-- Query as table owner.  Should return all records.
SELECT * FROM rls_view
ERROR: 

-- Query as table owner.  Should return all records.
SELECT * FROM rls_view

Catalog Error: Table with name rls_view does not exist!
Did you mean "pg_views"?

EXPLAIN (COSTS OFF) SELECT * FROM rls_view
ERROR: 
EXPLAIN (COSTS OFF) SELECT * FROM rls_view

Not implemented Error: Unimplemented explain type: COSTS


-- Queries as other users.
-- Should return records based on current user''s policies.
SET SESSION AUTHORIZATION regress_rls_bob
ERROR: 

-- Queries as other users.
-- Should return records based on current user''s policies.
SET SESSION AUTHORIZATION regress_rls_bob

Parser Error: syntax error at or near "AUTHORIZATION"

SELECT * FROM rls_view
ERROR: 
SELECT * FROM rls_view

Catalog Error: Table with name rls_view does not exist!
Did you mean "pg_views"?

EXPLAIN (COSTS OFF) SELECT * FROM rls_view
ERROR: 
EXPLAIN (COSTS OFF) SELECT * FROM rls_view

Not implemented Error: Unimplemented explain type: COSTS


SET SESSION AUTHORIZATION regress_rls_carol
ERROR: 

SET SESSION AUTHORIZATION regress_rls_carol

Parser Error: syntax error at or near "AUTHORIZATION"

SELECT * FROM rls_view
ERROR: 
SELECT * FROM rls_view

Catalog Error: Table with name rls_view does not exist!
Did you mean "pg_views"?

EXPLAIN (COSTS OFF) SELECT * FROM rls_view
ERROR: 
EXPLAIN (COSTS OFF) SELECT * FROM rls_view

Not implemented Error: Unimplemented explain type: COSTS


-- View and table owners are different.
SET SESSION AUTHORIZATION regress_rls_alice
ERROR: 

-- View and table owners are different.
SET SESSION AUTHORIZATION regress_rls_alice

Parser Error: syntax error at or near "AUTHORIZATION"

DROP VIEW rls_view
ERROR: 
DROP VIEW rls_view

Catalog Error: View with name rls_view does not exist!
Did you mean "pg_views"?


SET SESSION AUTHORIZATION regress_rls_bob
ERROR: 

SET SESSION AUTHORIZATION regress_rls_bob

Parser Error: syntax error at or near "AUTHORIZATION"

CREATE VIEW rls_view WITH (security_invoker) AS
    SELECT * FROM z1 WHERE f_leak(b)
ERROR: 
CREATE VIEW rls_view WITH (security_invoker) AS
    SELECT * FROM z1 WHERE f_leak(b)

Not implemented Error: VIEW options

GRANT SELECT ON rls_view TO regress_rls_alice
ERROR: 
GRANT SELECT ON rls_view TO regress_rls_alice

Parser Error: syntax error at or near "GRANT"

GRANT SELECT ON rls_view TO regress_rls_carol
ERROR: 
GRANT SELECT ON rls_view TO regress_rls_carol

Parser Error: syntax error at or near "GRANT"


-- Query as table owner.  Should return all records.
SET SESSION AUTHORIZATION regress_rls_alice
ERROR: 

-- Query as table owner.  Should return all records.
SET SESSION AUTHORIZATION regress_rls_alice

Parser Error: syntax error at or near "AUTHORIZATION"

SELECT * FROM rls_view
ERROR: 
SELECT * FROM rls_view

Catalog Error: Table with name rls_view does not exist!
Did you mean "pg_views"?

EXPLAIN (COSTS OFF) SELECT * FROM rls_view
ERROR: 
EXPLAIN (COSTS OFF) SELECT * FROM rls_view

Not implemented Error: Unimplemented explain type: COSTS


-- Queries as other users.
-- Should return records based on current user''s policies.
SET SESSION AUTHORIZATION regress_rls_bob
ERROR: 

-- Queries as other users.
-- Should return records based on current user''s policies.
SET SESSION AUTHORIZATION regress_rls_bob

Parser Error: syntax error at or near "AUTHORIZATION"

SELECT * FROM rls_view
ERROR: 
SELECT * FROM rls_view

Catalog Error: Table with name rls_view does not exist!
Did you mean "pg_views"?

EXPLAIN (COSTS OFF) SELECT * FROM rls_view
ERROR: 
EXPLAIN (COSTS OFF) SELECT * FROM rls_view

Not implemented Error: Unimplemented explain type: COSTS


SET SESSION AUTHORIZATION regress_rls_carol
ERROR: 

SET SESSION AUTHORIZATION regress_rls_carol

Parser Error: syntax error at or near "AUTHORIZATION"

SELECT * FROM rls_view
ERROR: 
SELECT * FROM rls_view

Catalog Error: Table with name rls_view does not exist!
Did you mean "pg_views"?

EXPLAIN (COSTS OFF) SELECT * FROM rls_view
ERROR: 
EXPLAIN (COSTS OFF) SELECT * FROM rls_view

Not implemented Error: Unimplemented explain type: COSTS


-- Policy requiring access to another table.
SET SESSION AUTHORIZATION regress_rls_alice
ERROR: 

-- Policy requiring access to another table.
SET SESSION AUTHORIZATION regress_rls_alice

Parser Error: syntax error at or near "AUTHORIZATION"

CREATE POLICY p3 ON z1 AS RESTRICTIVE USING (a NOT IN (SELECT a FROM z1_blacklist))
ERROR: 
CREATE POLICY p3 ON z1 AS RESTRICTIVE USING (a NOT IN (SELECT a FROM z1_blacklist))

Parser Error: syntax error at or near "POLICY"


-- Query as role that is not owner of table but is owner of view without permissions.
SET SESSION AUTHORIZATION regress_rls_bob
ERROR: 

-- Query as role that is not owner of table but is owner of view without permissions.
SET SESSION AUTHORIZATION regress_rls_bob

Parser Error: syntax error at or near "AUTHORIZATION"

SELECT * FROM rls_view
ERROR: 
SELECT * FROM rls_view

Catalog Error: Table with name rls_view does not exist!
Did you mean "pg_views"?
 --fail - permission denied.
EXPLAIN (COSTS OFF) SELECT * FROM rls_view
ERROR:  --fail - permission denied.
EXPLAIN (COSTS OFF) SELECT * FROM rls_view

Not implemented Error: Unimplemented explain type: COSTS
 --fail - permission denied.

-- Query as role that is not the owner of the table or view without permissions.
SET SESSION AUTHORIZATION regress_rls_carol
ERROR:  --fail - permission denied.

-- Query as role that is not the owner of the table or view without permissions.
SET SESSION AUTHORIZATION regress_rls_carol

Parser Error: syntax error at or near "AUTHORIZATION"

SELECT * FROM rls_view
ERROR: 
SELECT * FROM rls_view

Catalog Error: Table with name rls_view does not exist!
Did you mean "pg_views"?
 --fail - permission denied.
EXPLAIN (COSTS OFF) SELECT * FROM rls_view
ERROR:  --fail - permission denied.
EXPLAIN (COSTS OFF) SELECT * FROM rls_view

Not implemented Error: Unimplemented explain type: COSTS
 --fail - permission denied.

-- Query as role that is not owner of table but is owner of view with permissions.
SET SESSION AUTHORIZATION regress_rls_alice
ERROR:  --fail - permission denied.

-- Query as role that is not owner of table but is owner of view with permissions.
SET SESSION AUTHORIZATION regress_rls_alice

Parser Error: syntax error at or near "AUTHORIZATION"

GRANT SELECT ON z1_blacklist TO regress_rls_bob
ERROR: 
GRANT SELECT ON z1_blacklist TO regress_rls_bob

Parser Error: syntax error at or near "GRANT"


SET SESSION AUTHORIZATION regress_rls_bob
ERROR: 

SET SESSION AUTHORIZATION regress_rls_bob

Parser Error: syntax error at or near "AUTHORIZATION"

SELECT * FROM rls_view
ERROR: 
SELECT * FROM rls_view

Catalog Error: Table with name rls_view does not exist!
Did you mean "pg_views"?

EXPLAIN (COSTS OFF) SELECT * FROM rls_view
ERROR: 
EXPLAIN (COSTS OFF) SELECT * FROM rls_view

Not implemented Error: Unimplemented explain type: COSTS


-- Query as role that is not the owner of the table or view without permissions.
SET SESSION AUTHORIZATION regress_rls_carol
ERROR: 

-- Query as role that is not the owner of the table or view without permissions.
SET SESSION AUTHORIZATION regress_rls_carol

Parser Error: syntax error at or near "AUTHORIZATION"

SELECT * FROM rls_view
ERROR: 
SELECT * FROM rls_view

Catalog Error: Table with name rls_view does not exist!
Did you mean "pg_views"?
 --fail - permission denied.
EXPLAIN (COSTS OFF) SELECT * FROM rls_view
ERROR:  --fail - permission denied.
EXPLAIN (COSTS OFF) SELECT * FROM rls_view

Not implemented Error: Unimplemented explain type: COSTS
 --fail - permission denied.

-- Query as role that is not the owner of the table or view with permissions.
SET SESSION AUTHORIZATION regress_rls_alice
ERROR:  --fail - permission denied.

-- Query as role that is not the owner of the table or view with permissions.
SET SESSION AUTHORIZATION regress_rls_alice

Parser Error: syntax error at or near "AUTHORIZATION"

GRANT SELECT ON z1_blacklist TO regress_rls_carol
ERROR: 
GRANT SELECT ON z1_blacklist TO regress_rls_carol

Parser Error: syntax error at or near "GRANT"


SET SESSION AUTHORIZATION regress_rls_carol
ERROR: 

SET SESSION AUTHORIZATION regress_rls_carol

Parser Error: syntax error at or near "AUTHORIZATION"

SELECT * FROM rls_view
ERROR: 
SELECT * FROM rls_view

Catalog Error: Table with name rls_view does not exist!
Did you mean "pg_views"?

EXPLAIN (COSTS OFF) SELECT * FROM rls_view
ERROR: 
EXPLAIN (COSTS OFF) SELECT * FROM rls_view

Not implemented Error: Unimplemented explain type: COSTS


SET SESSION AUTHORIZATION regress_rls_bob
ERROR: 

SET SESSION AUTHORIZATION regress_rls_bob

Parser Error: syntax error at or near "AUTHORIZATION"

DROP VIEW rls_view
ERROR: 
DROP VIEW rls_view

Catalog Error: View with name rls_view does not exist!
Did you mean "pg_views"?


--
-- Command specific
--
SET SESSION AUTHORIZATION regress_rls_alice
ERROR: 

--
-- Command specific
--
SET SESSION AUTHORIZATION regress_rls_alice

Parser Error: syntax error at or near "AUTHORIZATION"


CREATE TABLE x1 (a int, b text, c text)

GRANT ALL ON x1 TO PUBLIC
ERROR: 
GRANT ALL ON x1 TO PUBLIC

Parser Error: syntax error at or near "GRANT"


INSERT INTO x1 VALUES
    (1, 'abc', 'regress_rls_bob'),
    (2, 'bcd', 'regress_rls_bob'),
    (3, 'cde', 'regress_rls_carol'),
    (4, 'def', 'regress_rls_carol'),
    (5, 'efg', 'regress_rls_bob'),
    (6, 'fgh', 'regress_rls_bob'),
    (7, 'fgh', 'regress_rls_carol'),
    (8, 'fgh', 'regress_rls_carol')


CREATE POLICY p0 ON x1 FOR ALL USING (c = current_user)
ERROR: 

CREATE POLICY p0 ON x1 FOR ALL USING (c = current_user)

Parser Error: syntax error at or near "POLICY"

CREATE POLICY p1 ON x1 FOR SELECT USING (a % 2 = 0)
ERROR: 
CREATE POLICY p1 ON x1 FOR SELECT USING (a % 2 = 0)

Parser Error: syntax error at or near "POLICY"

CREATE POLICY p2 ON x1 FOR INSERT WITH CHECK (a % 2 = 1)
ERROR: 
CREATE POLICY p2 ON x1 FOR INSERT WITH CHECK (a % 2 = 1)

Parser Error: syntax error at or near "POLICY"

CREATE POLICY p3 ON x1 FOR UPDATE USING (a % 2 = 0)
ERROR: 
CREATE POLICY p3 ON x1 FOR UPDATE USING (a % 2 = 0)

Parser Error: syntax error at or near "POLICY"

CREATE POLICY p4 ON x1 FOR DELETE USING (a < 8)
ERROR: 
CREATE POLICY p4 ON x1 FOR DELETE USING (a < 8)

Parser Error: syntax error at or near "POLICY"


ALTER TABLE x1 ENABLE ROW LEVEL SECURITY
ERROR: 

ALTER TABLE x1 ENABLE ROW LEVEL SECURITY

Parser Error: syntax error at or near "ENABLE"


SET SESSION AUTHORIZATION regress_rls_bob
ERROR: 

SET SESSION AUTHORIZATION regress_rls_bob

Parser Error: syntax error at or near "AUTHORIZATION"

SELECT * FROM x1 WHERE f_leak(b) ORDER BY a ASC
ERROR: 
SELECT * FROM x1 WHERE f_leak(b) ORDER BY a ASC

Catalog Error: Scalar Function with name f_leak does not exist!
Did you mean "era"?

UPDATE x1 SET b = b || '_updt' WHERE f_leak(b) RETURNING *
ERROR: 
UPDATE x1 SET b = b || '_updt' WHERE f_leak(b) RETURNING *

Catalog Error: Scalar Function with name f_leak does not exist!
Did you mean "era"?
LINE 2: UPDATE x1 SET b = b || '_updt' WHERE f_leak(b) RETURNING *
                                             ^


SET SESSION AUTHORIZATION regress_rls_carol
ERROR: 

SET SESSION AUTHORIZATION regress_rls_carol

Parser Error: syntax error at or near "AUTHORIZATION"

SELECT * FROM x1 WHERE f_leak(b) ORDER BY a ASC
ERROR: 
SELECT * FROM x1 WHERE f_leak(b) ORDER BY a ASC

Catalog Error: Scalar Function with name f_leak does not exist!
Did you mean "era"?

UPDATE x1 SET b = b || '_updt' WHERE f_leak(b) RETURNING *
ERROR: 
UPDATE x1 SET b = b || '_updt' WHERE f_leak(b) RETURNING *

Catalog Error: Scalar Function with name f_leak does not exist!
Did you mean "era"?
LINE 2: UPDATE x1 SET b = b || '_updt' WHERE f_leak(b) RETURNING *
                                             ^

DELETE FROM x1 WHERE f_leak(b) RETURNING *
ERROR: 
DELETE FROM x1 WHERE f_leak(b) RETURNING *

Catalog Error: Scalar Function with name f_leak does not exist!
Did you mean "era"?
LINE 2: DELETE FROM x1 WHERE f_leak(b) RETURNING *
                             ^


--
-- Duplicate Policy Names
--
SET SESSION AUTHORIZATION regress_rls_alice
ERROR: 

--
-- Duplicate Policy Names
--
SET SESSION AUTHORIZATION regress_rls_alice

Parser Error: syntax error at or near "AUTHORIZATION"

CREATE TABLE y1 (a int, b text)

CREATE TABLE y2 (a int, b text)


GRANT ALL ON y1, y2 TO regress_rls_bob
ERROR: 

GRANT ALL ON y1, y2 TO regress_rls_bob

Parser Error: syntax error at or near "GRANT"


CREATE POLICY p1 ON y1 FOR ALL USING (a % 2 = 0)
ERROR: 

CREATE POLICY p1 ON y1 FOR ALL USING (a % 2 = 0)

Parser Error: syntax error at or near "POLICY"

CREATE POLICY p2 ON y1 FOR SELECT USING (a > 2)
ERROR: 
CREATE POLICY p2 ON y1 FOR SELECT USING (a > 2)

Parser Error: syntax error at or near "POLICY"

CREATE POLICY p1 ON y1 FOR SELECT USING (a % 2 = 1)
ERROR: 
CREATE POLICY p1 ON y1 FOR SELECT USING (a % 2 = 1)

Parser Error: syntax error at or near "POLICY"
  --fail
CREATE POLICY p1 ON y2 FOR ALL USING (a % 2 = 0)
ERROR:   --fail
CREATE POLICY p1 ON y2 FOR ALL USING (a % 2 = 0)

Parser Error: syntax error at or near "POLICY"
  --OK

ALTER TABLE y1 ENABLE ROW LEVEL SECURITY
ERROR:   --OK

ALTER TABLE y1 ENABLE ROW LEVEL SECURITY

Parser Error: syntax error at or near "ENABLE"

ALTER TABLE y2 ENABLE ROW LEVEL SECURITY
ERROR: 
ALTER TABLE y2 ENABLE ROW LEVEL SECURITY

Parser Error: syntax error at or near "ENABLE"


--
-- Expression structure with SBV
--
-- Create view as table owner.  RLS should NOT be applied.
SET SESSION AUTHORIZATION regress_rls_alice
ERROR: 

--
-- Expression structure with SBV
--
-- Create view as table owner.  RLS should NOT be applied.
SET SESSION AUTHORIZATION regress_rls_alice

Parser Error: syntax error at or near "AUTHORIZATION"

CREATE VIEW rls_sbv WITH (security_barrier) AS
    SELECT * FROM y1 WHERE f_leak(b)
ERROR: 
CREATE VIEW rls_sbv WITH (security_barrier) AS
    SELECT * FROM y1 WHERE f_leak(b)

Not implemented Error: VIEW options

EXPLAIN (COSTS OFF) SELECT * FROM rls_sbv WHERE (a = 1)
ERROR: 
EXPLAIN (COSTS OFF) SELECT * FROM rls_sbv WHERE (a = 1)

Not implemented Error: Unimplemented explain type: COSTS

DROP VIEW rls_sbv
ERROR: 
DROP VIEW rls_sbv

Catalog Error: View with name rls_sbv does not exist!
Did you mean "b1"?


-- Create view as role that does not own table.  RLS should be applied.
SET SESSION AUTHORIZATION regress_rls_bob
ERROR: 

-- Create view as role that does not own table.  RLS should be applied.
SET SESSION AUTHORIZATION regress_rls_bob

Parser Error: syntax error at or near "AUTHORIZATION"

CREATE VIEW rls_sbv WITH (security_barrier) AS
    SELECT * FROM y1 WHERE f_leak(b)
ERROR: 
CREATE VIEW rls_sbv WITH (security_barrier) AS
    SELECT * FROM y1 WHERE f_leak(b)

Not implemented Error: VIEW options

EXPLAIN (COSTS OFF) SELECT * FROM rls_sbv WHERE (a = 1)
ERROR: 
EXPLAIN (COSTS OFF) SELECT * FROM rls_sbv WHERE (a = 1)

Not implemented Error: Unimplemented explain type: COSTS

DROP VIEW rls_sbv
ERROR: 
DROP VIEW rls_sbv

Catalog Error: View with name rls_sbv does not exist!
Did you mean "b1"?


--
-- Expression structure
--
SET SESSION AUTHORIZATION regress_rls_alice
ERROR: 

--
-- Expression structure
--
SET SESSION AUTHORIZATION regress_rls_alice

Parser Error: syntax error at or near "AUTHORIZATION"

INSERT INTO y2 (SELECT x, public.fipshash(x::text) FROM generate_series(0,20) x)
ERROR: 
INSERT INTO y2 (SELECT x, public.fipshash(x::text) FROM generate_series(0,20) x)

Catalog Error: Scalar Function with name fipshash does not exist!
Did you mean "main.hash"?
LINE 2: INSERT INTO y2 (SELECT x, public.fipshash(x::text) FROM generate...
                                  ^

CREATE POLICY p2 ON y2 USING (a % 3 = 0)
ERROR: 
CREATE POLICY p2 ON y2 USING (a % 3 = 0)

Parser Error: syntax error at or near "POLICY"

CREATE POLICY p3 ON y2 USING (a % 4 = 0)
ERROR: 
CREATE POLICY p3 ON y2 USING (a % 4 = 0)

Parser Error: syntax error at or near "POLICY"


SET SESSION AUTHORIZATION regress_rls_bob
ERROR: 

SET SESSION AUTHORIZATION regress_rls_bob

Parser Error: syntax error at or near "AUTHORIZATION"

SELECT * FROM y2 WHERE f_leak(b)
ERROR: 
SELECT * FROM y2 WHERE f_leak(b)

Catalog Error: Scalar Function with name f_leak does not exist!
Did you mean "era"?

EXPLAIN (COSTS OFF) SELECT * FROM y2 WHERE f_leak(b)
ERROR: 
EXPLAIN (COSTS OFF) SELECT * FROM y2 WHERE f_leak(b)

Not implemented Error: Unimplemented explain type: COSTS


--
-- Qual push-down of leaky functions, when not referring to table
--
SELECT * FROM y2 WHERE f_leak('abc')
ERROR: 

--
-- Qual push-down of leaky functions, when not referring to table
--
SELECT * FROM y2 WHERE f_leak('abc')

Catalog Error: Scalar Function with name f_leak does not exist!
Did you mean "era"?

EXPLAIN (COSTS OFF) SELECT * FROM y2 WHERE f_leak('abc')
ERROR: 
EXPLAIN (COSTS OFF) SELECT * FROM y2 WHERE f_leak('abc')

Not implemented Error: Unimplemented explain type: COSTS


CREATE TABLE test_qual_pushdown (
    abc text
)


INSERT INTO test_qual_pushdown VALUES ('abc'),('def')


SELECT * FROM y2 JOIN test_qual_pushdown ON (b = abc) WHERE f_leak(abc)
ERROR: 

SELECT * FROM y2 JOIN test_qual_pushdown ON (b = abc) WHERE f_leak(abc)

Catalog Error: Scalar Function with name f_leak does not exist!
Did you mean "era"?

EXPLAIN (COSTS OFF) SELECT * FROM y2 JOIN test_qual_pushdown ON (b = abc) WHERE f_leak(abc)
ERROR: 
EXPLAIN (COSTS OFF) SELECT * FROM y2 JOIN test_qual_pushdown ON (b = abc) WHERE f_leak(abc)

Not implemented Error: Unimplemented explain type: COSTS


SELECT * FROM y2 JOIN test_qual_pushdown ON (b = abc) WHERE f_leak(b)
ERROR: 

SELECT * FROM y2 JOIN test_qual_pushdown ON (b = abc) WHERE f_leak(b)

Catalog Error: Scalar Function with name f_leak does not exist!
Did you mean "era"?

EXPLAIN (COSTS OFF) SELECT * FROM y2 JOIN test_qual_pushdown ON (b = abc) WHERE f_leak(b)
ERROR: 
EXPLAIN (COSTS OFF) SELECT * FROM y2 JOIN test_qual_pushdown ON (b = abc) WHERE f_leak(b)

Not implemented Error: Unimplemented explain type: COSTS


DROP TABLE test_qual_pushdown


--
-- Plancache invalidate on user change.
--
RESET SESSION AUTHORIZATION
ERROR: 

--
-- Plancache invalidate on user change.
--
RESET SESSION AUTHORIZATION

Parser Error: syntax error at or near "AUTHORIZATION"


DROP TABLE t1 CASCADE


CREATE TABLE t1 (a integer)


GRANT SELECT ON t1 TO regress_rls_bob, regress_rls_carol
ERROR: 

GRANT SELECT ON t1 TO regress_rls_bob, regress_rls_carol

Parser Error: syntax error at or near "GRANT"


CREATE POLICY p1 ON t1 TO regress_rls_bob USING ((a % 2) = 0)
ERROR: 

CREATE POLICY p1 ON t1 TO regress_rls_bob USING ((a % 2) = 0)

Parser Error: syntax error at or near "POLICY"

CREATE POLICY p2 ON t1 TO regress_rls_carol USING ((a % 4) = 0)
ERROR: 
CREATE POLICY p2 ON t1 TO regress_rls_carol USING ((a % 4) = 0)

Parser Error: syntax error at or near "POLICY"


ALTER TABLE t1 ENABLE ROW LEVEL SECURITY
ERROR: 

ALTER TABLE t1 ENABLE ROW LEVEL SECURITY

Parser Error: syntax error at or near "ENABLE"


-- Prepare as regress_rls_bob
SET ROLE regress_rls_bob
ERROR: 

-- Prepare as regress_rls_bob
SET ROLE regress_rls_bob

Parser Error: syntax error at or near "regress_rls_bob"

PREPARE role_inval AS SELECT * FROM t1

-- Check plan
EXPLAIN (COSTS OFF) EXECUTE role_inval
ERROR: 
-- Check plan
EXPLAIN (COSTS OFF) EXECUTE role_inval

Not implemented Error: Unimplemented explain type: COSTS


-- Change to regress_rls_carol
SET ROLE regress_rls_carol
ERROR: 

-- Change to regress_rls_carol
SET ROLE regress_rls_carol

Parser Error: syntax error at or near "regress_rls_carol"

-- Check plan- should be different
EXPLAIN (COSTS OFF) EXECUTE role_inval
ERROR: 
-- Check plan- should be different
EXPLAIN (COSTS OFF) EXECUTE role_inval

Not implemented Error: Unimplemented explain type: COSTS


-- Change back to regress_rls_bob
SET ROLE regress_rls_bob
ERROR: 

-- Change back to regress_rls_bob
SET ROLE regress_rls_bob

Parser Error: syntax error at or near "regress_rls_bob"

-- Check plan- should be back to original
EXPLAIN (COSTS OFF) EXECUTE role_inval
ERROR: 
-- Check plan- should be back to original
EXPLAIN (COSTS OFF) EXECUTE role_inval

Not implemented Error: Unimplemented explain type: COSTS


--
-- CTE and RLS
--
RESET SESSION AUTHORIZATION
ERROR: 

--
-- CTE and RLS
--
RESET SESSION AUTHORIZATION

Parser Error: syntax error at or near "AUTHORIZATION"

DROP TABLE t1 CASCADE

CREATE TABLE t1 (a integer, b text)

CREATE POLICY p1 ON t1 USING (a % 2 = 0)
ERROR: 
CREATE POLICY p1 ON t1 USING (a % 2 = 0)

Parser Error: syntax error at or near "POLICY"


ALTER TABLE t1 ENABLE ROW LEVEL SECURITY
ERROR: 

ALTER TABLE t1 ENABLE ROW LEVEL SECURITY

Parser Error: syntax error at or near "ENABLE"


GRANT ALL ON t1 TO regress_rls_bob
ERROR: 

GRANT ALL ON t1 TO regress_rls_bob

Parser Error: syntax error at or near "GRANT"


INSERT INTO t1 (SELECT x, public.fipshash(x::text) FROM generate_series(0,20) x)
ERROR: 

INSERT INTO t1 (SELECT x, public.fipshash(x::text) FROM generate_series(0,20) x)

Catalog Error: Scalar Function with name fipshash does not exist!
Did you mean "main.hash"?
LINE 3: INSERT INTO t1 (SELECT x, public.fipshash(x::text) FROM generat...
                                  ^


SET SESSION AUTHORIZATION regress_rls_bob
ERROR: 

SET SESSION AUTHORIZATION regress_rls_bob

Parser Error: syntax error at or near "AUTHORIZATION"


WITH cte1 AS MATERIALIZED (SELECT * FROM t1 WHERE f_leak(b)) SELECT * FROM cte1
ERROR: 

WITH cte1 AS MATERIALIZED (SELECT * FROM t1 WHERE f_leak(b)) SELECT * FROM cte1

Catalog Error: Scalar Function with name f_leak does not exist!
Did you mean "era"?

EXPLAIN (COSTS OFF)
WITH cte1 AS MATERIALIZED (SELECT * FROM t1 WHERE f_leak(b)) SELECT * FROM cte1
ERROR: 
EXPLAIN (COSTS OFF)
WITH cte1 AS MATERIALIZED (SELECT * FROM t1 WHERE f_leak(b)) SELECT * FROM cte1

Not implemented Error: Unimplemented explain type: COSTS


WITH cte1 AS (UPDATE t1 SET a = a + 1 RETURNING *) SELECT * FROM cte1
ERROR: 

WITH cte1 AS (UPDATE t1 SET a = a + 1 RETURNING *) SELECT * FROM cte1

Not implemented Error: A CTE needs a SELECT
 --fail
WITH cte1 AS (UPDATE t1 SET a = a RETURNING *) SELECT * FROM cte1
ERROR:  --fail
WITH cte1 AS (UPDATE t1 SET a = a RETURNING *) SELECT * FROM cte1

Not implemented Error: A CTE needs a SELECT
 --ok

WITH cte1 AS (INSERT INTO t1 VALUES (21, 'Fail') RETURNING *) SELECT * FROM cte1
ERROR:  --ok

WITH cte1 AS (INSERT INTO t1 VALUES (21, 'Fail') RETURNING *) SELECT * FROM cte1

Not implemented Error: A CTE needs a SELECT
 --fail
WITH cte1 AS (INSERT INTO t1 VALUES (20, 'Success') RETURNING *) SELECT * FROM cte1
ERROR:  --fail
WITH cte1 AS (INSERT INTO t1 VALUES (20, 'Success') RETURNING *) SELECT * FROM cte1

Not implemented Error: A CTE needs a SELECT
 --ok

--
-- Rename Policy
--
RESET SESSION AUTHORIZATION
ERROR:  --ok

--
-- Rename Policy
--
RESET SESSION AUTHORIZATION

Parser Error: syntax error at or near "AUTHORIZATION"

ALTER POLICY p1 ON t1 RENAME TO p1
ERROR: 
ALTER POLICY p1 ON t1 RENAME TO p1

Parser Error: syntax error at or near "POLICY"
 --fail

SELECT polname, relname
    FROM pg_policy pol
    JOIN pg_class pc ON (pc.oid = pol.polrelid)
    WHERE relname = 't1'
ERROR:  --fail

SELECT polname, relname
    FROM pg_policy pol
    JOIN pg_class pc ON (pc.oid = pol.polrelid)
    WHERE relname = 't1'

Catalog Error: Table with name pg_policy does not exist!
Did you mean "pg_proc"?


ALTER POLICY p1 ON t1 RENAME TO p2
ERROR: 

ALTER POLICY p1 ON t1 RENAME TO p2

Parser Error: syntax error at or near "POLICY"
 --ok

SELECT polname, relname
    FROM pg_policy pol
    JOIN pg_class pc ON (pc.oid = pol.polrelid)
    WHERE relname = 't1'
ERROR:  --ok

SELECT polname, relname
    FROM pg_policy pol
    JOIN pg_class pc ON (pc.oid = pol.polrelid)
    WHERE relname = 't1'

Catalog Error: Table with name pg_policy does not exist!
Did you mean "pg_proc"?


--
-- Check INSERT SELECT
--
SET SESSION AUTHORIZATION regress_rls_bob
ERROR: 

--
-- Check INSERT SELECT
--
SET SESSION AUTHORIZATION regress_rls_bob

Parser Error: syntax error at or near "AUTHORIZATION"

CREATE TABLE t2 (a integer, b text)

INSERT INTO t2 (SELECT * FROM t1)

EXPLAIN (COSTS OFF) INSERT INTO t2 (SELECT * FROM t1)
ERROR: 
EXPLAIN (COSTS OFF) INSERT INTO t2 (SELECT * FROM t1)

Not implemented Error: Unimplemented explain type: COSTS

SELECT * FROM t2
RESULT: 
	[]

EXPLAIN (COSTS OFF) SELECT * FROM t2
ERROR: 
EXPLAIN (COSTS OFF) SELECT * FROM t2

Not implemented Error: Unimplemented explain type: COSTS

CREATE TABLE t3 AS SELECT * FROM t1

SELECT * FROM t3
RESULT: 
	[]

SELECT * INTO t4 FROM t1
ERROR: 
SELECT * INTO t4 FROM t1

Parser Error: SELECT INTO not supported!

SELECT * FROM t4
ERROR: 
SELECT * FROM t4

Catalog Error: Table with name t4 does not exist!
Did you mean "t1"?


--
-- RLS with JOIN
--
SET SESSION AUTHORIZATION regress_rls_alice
ERROR: 

--
-- RLS with JOIN
--
SET SESSION AUTHORIZATION regress_rls_alice

Parser Error: syntax error at or near "AUTHORIZATION"

CREATE TABLE blog (id integer, author text, post text)

CREATE TABLE comment (blog_id integer, message text)


GRANT ALL ON blog, comment TO regress_rls_bob
ERROR: 

GRANT ALL ON blog, comment TO regress_rls_bob

Parser Error: syntax error at or near "GRANT"


CREATE POLICY blog_1 ON blog USING (id % 2 = 0)
ERROR: 

CREATE POLICY blog_1 ON blog USING (id % 2 = 0)

Parser Error: syntax error at or near "POLICY"


ALTER TABLE blog ENABLE ROW LEVEL SECURITY
ERROR: 

ALTER TABLE blog ENABLE ROW LEVEL SECURITY

Parser Error: syntax error at or near "ENABLE"


INSERT INTO blog VALUES
    (1, 'alice', 'blog #1'),
    (2, 'bob', 'blog #1'),
    (3, 'alice', 'blog #2'),
    (4, 'alice', 'blog #3'),
    (5, 'john', 'blog #1')


INSERT INTO comment VALUES
    (1, 'cool blog'),
    (1, 'fun blog'),
    (3, 'crazy blog'),
    (5, 'what?'),
    (4, 'insane!'),
    (2, 'who did it?')


SET SESSION AUTHORIZATION regress_rls_bob
ERROR: 

SET SESSION AUTHORIZATION regress_rls_bob

Parser Error: syntax error at or near "AUTHORIZATION"

-- Check RLS JOIN with Non-RLS.
SELECT id, author, message FROM blog JOIN comment ON id = blog_id
RESULT: 
	[(1, 'alice', 'cool blog'), (1, 'alice', 'fun blog'), (3, 'alice', 'crazy blog'), (5, 'john', 'what?'), (4, 'alice', 'insane!'), (2, 'bob', 'who did it?')]

-- Check Non-RLS JOIN with RLS.
SELECT id, author, message FROM comment JOIN blog ON id = blog_id
RESULT: 
	[(1, 'alice', 'cool blog'), (1, 'alice', 'fun blog'), (3, 'alice', 'crazy blog'), (5, 'john', 'what?'), (4, 'alice', 'insane!'), (2, 'bob', 'who did it?')]


SET SESSION AUTHORIZATION regress_rls_alice
ERROR: 

SET SESSION AUTHORIZATION regress_rls_alice

Parser Error: syntax error at or near "AUTHORIZATION"

CREATE POLICY comment_1 ON comment USING (blog_id < 4)
ERROR: 
CREATE POLICY comment_1 ON comment USING (blog_id < 4)

Parser Error: syntax error at or near "POLICY"


ALTER TABLE comment ENABLE ROW LEVEL SECURITY
ERROR: 

ALTER TABLE comment ENABLE ROW LEVEL SECURITY

Parser Error: syntax error at or near "ENABLE"


SET SESSION AUTHORIZATION regress_rls_bob
ERROR: 

SET SESSION AUTHORIZATION regress_rls_bob

Parser Error: syntax error at or near "AUTHORIZATION"

-- Check RLS JOIN RLS
SELECT id, author, message FROM blog JOIN comment ON id = blog_id
RESULT: 
	[(1, 'alice', 'cool blog'), (1, 'alice', 'fun blog'), (3, 'alice', 'crazy blog'), (5, 'john', 'what?'), (4, 'alice', 'insane!'), (2, 'bob', 'who did it?')]

SELECT id, author, message FROM comment JOIN blog ON id = blog_id
RESULT: 
	[(1, 'alice', 'cool blog'), (1, 'alice', 'fun blog'), (3, 'alice', 'crazy blog'), (5, 'john', 'what?'), (4, 'alice', 'insane!'), (2, 'bob', 'who did it?')]


SET SESSION AUTHORIZATION regress_rls_alice
ERROR: 

SET SESSION AUTHORIZATION regress_rls_alice

Parser Error: syntax error at or near "AUTHORIZATION"

DROP TABLE blog, comment
ERROR: 
DROP TABLE blog, comment

Not implemented Error: Can only drop one object at a time


--
-- Default Deny Policy
--
RESET SESSION AUTHORIZATION
ERROR: 

--
-- Default Deny Policy
--
RESET SESSION AUTHORIZATION

Parser Error: syntax error at or near "AUTHORIZATION"

DROP POLICY p2 ON t1
ERROR: 
DROP POLICY p2 ON t1

Not implemented Error: Cannot drop this type yet

ALTER TABLE t1 OWNER TO regress_rls_alice
ERROR: 
ALTER TABLE t1 OWNER TO regress_rls_alice

Parser Error: syntax error at or near "OWNER"


-- Check that default deny does not apply to superuser.
RESET SESSION AUTHORIZATION
ERROR: 

-- Check that default deny does not apply to superuser.
RESET SESSION AUTHORIZATION

Parser Error: syntax error at or near "AUTHORIZATION"

SELECT * FROM t1
RESULT: 
	[]

EXPLAIN (COSTS OFF) SELECT * FROM t1
ERROR: 
EXPLAIN (COSTS OFF) SELECT * FROM t1

Not implemented Error: Unimplemented explain type: COSTS


-- Check that default deny does not apply to table owner.
SET SESSION AUTHORIZATION regress_rls_alice
ERROR: 

-- Check that default deny does not apply to table owner.
SET SESSION AUTHORIZATION regress_rls_alice

Parser Error: syntax error at or near "AUTHORIZATION"

SELECT * FROM t1
RESULT: 
	[]

EXPLAIN (COSTS OFF) SELECT * FROM t1
ERROR: 
EXPLAIN (COSTS OFF) SELECT * FROM t1

Not implemented Error: Unimplemented explain type: COSTS


-- Check that default deny applies to non-owner/non-superuser when RLS on.
SET SESSION AUTHORIZATION regress_rls_bob
ERROR: 

-- Check that default deny applies to non-owner/non-superuser when RLS on.
SET SESSION AUTHORIZATION regress_rls_bob

Parser Error: syntax error at or near "AUTHORIZATION"

SET row_security TO ON
ERROR: 
SET row_security TO ON

Parser Error: syntax error at or near "ON"

SELECT * FROM t1
RESULT: 
	[]

EXPLAIN (COSTS OFF) SELECT * FROM t1
ERROR: 
EXPLAIN (COSTS OFF) SELECT * FROM t1

Not implemented Error: Unimplemented explain type: COSTS

SET SESSION AUTHORIZATION regress_rls_bob
ERROR: 
SET SESSION AUTHORIZATION regress_rls_bob

Parser Error: syntax error at or near "AUTHORIZATION"

SELECT * FROM t1
RESULT: 
	[]

EXPLAIN (COSTS OFF) SELECT * FROM t1
ERROR: 
EXPLAIN (COSTS OFF) SELECT * FROM t1

Not implemented Error: Unimplemented explain type: COSTS


--
-- COPY TO/FROM
--

RESET SESSION AUTHORIZATION
ERROR: 

--
-- COPY TO/FROM
--

RESET SESSION AUTHORIZATION

Parser Error: syntax error at or near "AUTHORIZATION"

DROP TABLE copy_t CASCADE
ERROR: 
DROP TABLE copy_t CASCADE

Catalog Error: Table with name copy_t does not exist!
Did you mean "t1"?

CREATE TABLE copy_t (a integer, b text)

CREATE POLICY p1 ON copy_t USING (a % 2 = 0)
ERROR: 
CREATE POLICY p1 ON copy_t USING (a % 2 = 0)

Parser Error: syntax error at or near "POLICY"


ALTER TABLE copy_t ENABLE ROW LEVEL SECURITY
ERROR: 

ALTER TABLE copy_t ENABLE ROW LEVEL SECURITY

Parser Error: syntax error at or near "ENABLE"


GRANT ALL ON copy_t TO regress_rls_bob, regress_rls_exempt_user
ERROR: 

GRANT ALL ON copy_t TO regress_rls_bob, regress_rls_exempt_user

Parser Error: syntax error at or near "GRANT"


INSERT INTO copy_t (SELECT x, public.fipshash(x::text) FROM generate_series(0,10) x)
ERROR: 

INSERT INTO copy_t (SELECT x, public.fipshash(x::text) FROM generate_series(0,10) x)

Catalog Error: Scalar Function with name fipshash does not exist!
Did you mean "main.hash"?
LINE 3: INSERT INTO copy_t (SELECT x, public.fipshash(x::text) FROM generat...
                                      ^


-- Check COPY TO as Superuser/owner.
RESET SESSION AUTHORIZATION
ERROR: 

-- Check COPY TO as Superuser/owner.
RESET SESSION AUTHORIZATION

Parser Error: syntax error at or near "AUTHORIZATION"

SET row_security TO OFF
ERROR: 
SET row_security TO OFF

Catalog Error: unrecognized configuration parameter "row_security"

Did you mean: "user"

COPY (SELECT * FROM copy_t ORDER BY a ASC) TO STDOUT WITH DELIMITER ','
ERROR: 
COPY (SELECT * FROM copy_t ORDER BY a ASC) TO STDOUT WITH DELIMITER ','

IO Error: Cannot open file "/dev/stdout": Permission denied

SET row_security TO ON
ERROR: 
SET row_security TO ON

Parser Error: syntax error at or near "ON"

COPY (SELECT * FROM copy_t ORDER BY a ASC) TO STDOUT WITH DELIMITER ','
ERROR: 
COPY (SELECT * FROM copy_t ORDER BY a ASC) TO STDOUT WITH DELIMITER ','

IO Error: Cannot open file "/dev/stdout": Permission denied


-- Check COPY TO as user with permissions.
SET SESSION AUTHORIZATION regress_rls_bob
ERROR: 

-- Check COPY TO as user with permissions.
SET SESSION AUTHORIZATION regress_rls_bob

Parser Error: syntax error at or near "AUTHORIZATION"

SET row_security TO OFF
ERROR: 
SET row_security TO OFF

Catalog Error: unrecognized configuration parameter "row_security"

Did you mean: "user"

COPY (SELECT * FROM copy_t ORDER BY a ASC) TO STDOUT WITH DELIMITER ','
ERROR: 
COPY (SELECT * FROM copy_t ORDER BY a ASC) TO STDOUT WITH DELIMITER ','

IO Error: Cannot open file "/dev/stdout": Permission denied
 --fail - would be affected by RLS
SET row_security TO ON
ERROR:  --fail - would be affected by RLS
SET row_security TO ON

Parser Error: syntax error at or near "ON"

COPY (SELECT * FROM copy_t ORDER BY a ASC) TO STDOUT WITH DELIMITER ','
ERROR: 
COPY (SELECT * FROM copy_t ORDER BY a ASC) TO STDOUT WITH DELIMITER ','

IO Error: Cannot open file "/dev/stdout": Permission denied
 --ok

-- Check COPY TO as user with permissions and BYPASSRLS
SET SESSION AUTHORIZATION regress_rls_exempt_user
ERROR:  --ok

-- Check COPY TO as user with permissions and BYPASSRLS
SET SESSION AUTHORIZATION regress_rls_exempt_user

Parser Error: syntax error at or near "AUTHORIZATION"

SET row_security TO OFF
ERROR: 
SET row_security TO OFF

Catalog Error: unrecognized configuration parameter "row_security"

Did you mean: "user"

COPY (SELECT * FROM copy_t ORDER BY a ASC) TO STDOUT WITH DELIMITER ','
ERROR: 
COPY (SELECT * FROM copy_t ORDER BY a ASC) TO STDOUT WITH DELIMITER ','

IO Error: Cannot open file "/dev/stdout": Permission denied
 --ok
SET row_security TO ON
ERROR:  --ok
SET row_security TO ON

Parser Error: syntax error at or near "ON"

COPY (SELECT * FROM copy_t ORDER BY a ASC) TO STDOUT WITH DELIMITER ','
ERROR: 
COPY (SELECT * FROM copy_t ORDER BY a ASC) TO STDOUT WITH DELIMITER ','

IO Error: Cannot open file "/dev/stdout": Permission denied
 --ok

-- Check COPY TO as user without permissions. SET row_security TO OFF /* REPLACED */,
SET SESSION AUTHORIZATION regress_rls_carol
ERROR:  --ok

-- Check COPY TO as user without permissions. SET row_security TO OFF /* REPLACED */,
SET SESSION AUTHORIZATION regress_rls_carol

Parser Error: syntax error at or near "AUTHORIZATION"

SET row_security TO OFF
ERROR: 
SET row_security TO OFF

Catalog Error: unrecognized configuration parameter "row_security"

Did you mean: "user"

COPY (SELECT * FROM copy_t ORDER BY a ASC) TO STDOUT WITH DELIMITER ','
ERROR: 
COPY (SELECT * FROM copy_t ORDER BY a ASC) TO STDOUT WITH DELIMITER ','

IO Error: Cannot open file "/dev/stdout": Permission denied
 --fail - would be affected by RLS
SET row_security TO ON
ERROR:  --fail - would be affected by RLS
SET row_security TO ON

Parser Error: syntax error at or near "ON"

COPY (SELECT * FROM copy_t ORDER BY a ASC) TO STDOUT WITH DELIMITER ','
ERROR: 
COPY (SELECT * FROM copy_t ORDER BY a ASC) TO STDOUT WITH DELIMITER ','

IO Error: Cannot open file "/dev/stdout": Permission denied
 --fail - permission denied

-- Check COPY relation TO /* REPLACED */, keep it just one row to avoid reordering issues
RESET SESSION AUTHORIZATION
ERROR:  --fail - permission denied

-- Check COPY relation TO /* REPLACED */, keep it just one row to avoid reordering issues
RESET SESSION AUTHORIZATION

Parser Error: syntax error at or near "AUTHORIZATION"

SET row_security TO ON
ERROR: 
SET row_security TO ON

Parser Error: syntax error at or near "ON"

CREATE TABLE copy_rel_to (a integer, b text)

CREATE POLICY p1 ON copy_rel_to USING (a % 2 = 0)
ERROR: 
CREATE POLICY p1 ON copy_rel_to USING (a % 2 = 0)

Parser Error: syntax error at or near "POLICY"


ALTER TABLE copy_rel_to ENABLE ROW LEVEL SECURITY
ERROR: 

ALTER TABLE copy_rel_to ENABLE ROW LEVEL SECURITY

Parser Error: syntax error at or near "ENABLE"


GRANT ALL ON copy_rel_to TO regress_rls_bob, regress_rls_exempt_user
ERROR: 

GRANT ALL ON copy_rel_to TO regress_rls_bob, regress_rls_exempt_user

Parser Error: syntax error at or near "GRANT"


INSERT INTO copy_rel_to VALUES (1, public.fipshash('1'))
ERROR: 

INSERT INTO copy_rel_to VALUES (1, public.fipshash('1'))

Catalog Error: Scalar Function with name fipshash does not exist!
Did you mean "main.hash"?
LINE 3: INSERT INTO copy_rel_to VALUES (1, public.fipshash('1'))
                                           ^


-- Check COPY TO as Superuser/owner.
RESET SESSION AUTHORIZATION
ERROR: 

-- Check COPY TO as Superuser/owner.
RESET SESSION AUTHORIZATION

Parser Error: syntax error at or near "AUTHORIZATION"

SET row_security TO OFF
ERROR: 
SET row_security TO OFF

Catalog Error: unrecognized configuration parameter "row_security"

Did you mean: "user"

COPY copy_rel_to TO STDOUT WITH DELIMITER ','
ERROR: 
COPY copy_rel_to TO STDOUT WITH DELIMITER ','

IO Error: Cannot open file "/dev/stdout": Permission denied

SET row_security TO ON
ERROR: 
SET row_security TO ON

Parser Error: syntax error at or near "ON"

COPY copy_rel_to TO STDOUT WITH DELIMITER ','
ERROR: 
COPY copy_rel_to TO STDOUT WITH DELIMITER ','

IO Error: Cannot open file "/dev/stdout": Permission denied


-- Check COPY TO as user with permissions.
SET SESSION AUTHORIZATION regress_rls_bob
ERROR: 

-- Check COPY TO as user with permissions.
SET SESSION AUTHORIZATION regress_rls_bob

Parser Error: syntax error at or near "AUTHORIZATION"

SET row_security TO OFF
ERROR: 
SET row_security TO OFF

Catalog Error: unrecognized configuration parameter "row_security"

Did you mean: "user"

COPY copy_rel_to TO STDOUT WITH DELIMITER ','
ERROR: 
COPY copy_rel_to TO STDOUT WITH DELIMITER ','

IO Error: Cannot open file "/dev/stdout": Permission denied
 --fail - would be affected by RLS
SET row_security TO ON
ERROR:  --fail - would be affected by RLS
SET row_security TO ON

Parser Error: syntax error at or near "ON"

COPY copy_rel_to TO STDOUT WITH DELIMITER ','
ERROR: 
COPY copy_rel_to TO STDOUT WITH DELIMITER ','

IO Error: Cannot open file "/dev/stdout": Permission denied
 --ok

-- Check COPY TO as user with permissions and BYPASSRLS
SET SESSION AUTHORIZATION regress_rls_exempt_user
ERROR:  --ok

-- Check COPY TO as user with permissions and BYPASSRLS
SET SESSION AUTHORIZATION regress_rls_exempt_user

Parser Error: syntax error at or near "AUTHORIZATION"

SET row_security TO OFF
ERROR: 
SET row_security TO OFF

Catalog Error: unrecognized configuration parameter "row_security"

Did you mean: "user"

COPY copy_rel_to TO STDOUT WITH DELIMITER ','
ERROR: 
COPY copy_rel_to TO STDOUT WITH DELIMITER ','

IO Error: Cannot open file "/dev/stdout": Permission denied
 --ok
SET row_security TO ON
ERROR:  --ok
SET row_security TO ON

Parser Error: syntax error at or near "ON"

COPY copy_rel_to TO STDOUT WITH DELIMITER ','
ERROR: 
COPY copy_rel_to TO STDOUT WITH DELIMITER ','

IO Error: Cannot open file "/dev/stdout": Permission denied
 --ok

-- Check COPY TO as user without permissions. SET row_security TO OFF /* REPLACED */,
SET SESSION AUTHORIZATION regress_rls_carol
ERROR:  --ok

-- Check COPY TO as user without permissions. SET row_security TO OFF /* REPLACED */,
SET SESSION AUTHORIZATION regress_rls_carol

Parser Error: syntax error at or near "AUTHORIZATION"

SET row_security TO OFF
ERROR: 
SET row_security TO OFF

Catalog Error: unrecognized configuration parameter "row_security"

Did you mean: "user"

COPY copy_rel_to TO STDOUT WITH DELIMITER ','
ERROR: 
COPY copy_rel_to TO STDOUT WITH DELIMITER ','

IO Error: Cannot open file "/dev/stdout": Permission denied
 --fail - permission denied
SET row_security TO ON
ERROR:  --fail - permission denied
SET row_security TO ON

Parser Error: syntax error at or near "ON"

COPY copy_rel_to TO STDOUT WITH DELIMITER ','
ERROR: 
COPY copy_rel_to TO STDOUT WITH DELIMITER ','

IO Error: Cannot open file "/dev/stdout": Permission denied
 --fail - permission denied

-- Check behavior with a child table.
RESET SESSION AUTHORIZATION
ERROR:  --fail - permission denied

-- Check behavior with a child table.
RESET SESSION AUTHORIZATION

Parser Error: syntax error at or near "AUTHORIZATION"

SET row_security TO ON
ERROR: 
SET row_security TO ON

Parser Error: syntax error at or near "ON"

CREATE TABLE copy_rel_to_child () INHERITS (copy_rel_to)
ERROR: 
CREATE TABLE copy_rel_to_child () INHERITS (copy_rel_to)

Parser Error: syntax error at or near "INHERITS"

INSERT INTO copy_rel_to_child VALUES (1, 'one'), (2, 'two')
ERROR: 
INSERT INTO copy_rel_to_child VALUES (1, 'one'), (2, 'two')

Catalog Error: Table with name copy_rel_to_child does not exist!
Did you mean "copy_rel_to"?


-- Check COPY TO as Superuser/owner.
RESET SESSION AUTHORIZATION
ERROR: 

-- Check COPY TO as Superuser/owner.
RESET SESSION AUTHORIZATION

Parser Error: syntax error at or near "AUTHORIZATION"

SET row_security TO OFF
ERROR: 
SET row_security TO OFF

Catalog Error: unrecognized configuration parameter "row_security"

Did you mean: "user"

COPY copy_rel_to TO STDOUT WITH DELIMITER ','
ERROR: 
COPY copy_rel_to TO STDOUT WITH DELIMITER ','

IO Error: Cannot open file "/dev/stdout": Permission denied

SET row_security TO ON
ERROR: 
SET row_security TO ON

Parser Error: syntax error at or near "ON"

COPY copy_rel_to TO STDOUT WITH DELIMITER ','
ERROR: 
COPY copy_rel_to TO STDOUT WITH DELIMITER ','

IO Error: Cannot open file "/dev/stdout": Permission denied


-- Check COPY TO as user with permissions.
SET SESSION AUTHORIZATION regress_rls_bob
ERROR: 

-- Check COPY TO as user with permissions.
SET SESSION AUTHORIZATION regress_rls_bob

Parser Error: syntax error at or near "AUTHORIZATION"

SET row_security TO OFF
ERROR: 
SET row_security TO OFF

Catalog Error: unrecognized configuration parameter "row_security"

Did you mean: "user"

COPY copy_rel_to TO STDOUT WITH DELIMITER ','
ERROR: 
COPY copy_rel_to TO STDOUT WITH DELIMITER ','

IO Error: Cannot open file "/dev/stdout": Permission denied
 --fail - would be affected by RLS
SET row_security TO ON
ERROR:  --fail - would be affected by RLS
SET row_security TO ON

Parser Error: syntax error at or near "ON"

COPY copy_rel_to TO STDOUT WITH DELIMITER ','
ERROR: 
COPY copy_rel_to TO STDOUT WITH DELIMITER ','

IO Error: Cannot open file "/dev/stdout": Permission denied
 --ok

-- Check COPY TO as user with permissions and BYPASSRLS
SET SESSION AUTHORIZATION regress_rls_exempt_user
ERROR:  --ok

-- Check COPY TO as user with permissions and BYPASSRLS
SET SESSION AUTHORIZATION regress_rls_exempt_user

Parser Error: syntax error at or near "AUTHORIZATION"

SET row_security TO OFF
ERROR: 
SET row_security TO OFF

Catalog Error: unrecognized configuration parameter "row_security"

Did you mean: "user"

COPY copy_rel_to TO STDOUT WITH DELIMITER ','
ERROR: 
COPY copy_rel_to TO STDOUT WITH DELIMITER ','

IO Error: Cannot open file "/dev/stdout": Permission denied
 --ok
SET row_security TO ON
ERROR:  --ok
SET row_security TO ON

Parser Error: syntax error at or near "ON"

COPY copy_rel_to TO STDOUT WITH DELIMITER ','
ERROR: 
COPY copy_rel_to TO STDOUT WITH DELIMITER ','

IO Error: Cannot open file "/dev/stdout": Permission denied
 --ok

-- Check COPY TO as user without permissions. SET row_security TO OFF /* REPLACED */,
SET SESSION AUTHORIZATION regress_rls_carol
ERROR:  --ok

-- Check COPY TO as user without permissions. SET row_security TO OFF /* REPLACED */,
SET SESSION AUTHORIZATION regress_rls_carol

Parser Error: syntax error at or near "AUTHORIZATION"

SET row_security TO OFF
ERROR: 
SET row_security TO OFF

Catalog Error: unrecognized configuration parameter "row_security"

Did you mean: "user"

COPY copy_rel_to TO STDOUT WITH DELIMITER ','
ERROR: 
COPY copy_rel_to TO STDOUT WITH DELIMITER ','

IO Error: Cannot open file "/dev/stdout": Permission denied
 --fail - permission denied
SET row_security TO ON
ERROR:  --fail - permission denied
SET row_security TO ON

Parser Error: syntax error at or near "ON"

COPY copy_rel_to TO STDOUT WITH DELIMITER ','
ERROR: 
COPY copy_rel_to TO STDOUT WITH DELIMITER ','

IO Error: Cannot open file "/dev/stdout": Permission denied
 --fail - permission denied

-- Check COPY FROM as Superuser/owner.
RESET SESSION AUTHORIZATION
ERROR:  --fail - permission denied

-- Check COPY FROM as Superuser/owner.
RESET SESSION AUTHORIZATION

Parser Error: syntax error at or near "AUTHORIZATION"

SET row_security TO OFF
ERROR: 
SET row_security TO OFF

Catalog Error: unrecognized configuration parameter "row_security"

Did you mean: "user"

COPY copy_t FROM STDIN
ERROR: 
COPY copy_t FROM STDIN

IO Error: No files found that match the pattern "/dev/stdin"
 --ok
1	abc
2	bcd
3	cde
4	def
\.
SET row_security TO ON
ERROR:  --ok
1	abc
2	bcd
3	cde
4	def
\.
SET row_security TO ON

Parser Error: syntax error at or near "1"

COPY copy_t FROM STDIN
ERROR: 
COPY copy_t FROM STDIN

IO Error: No files found that match the pattern "/dev/stdin"
 --ok
1	abc
2	bcd
3	cde
4	def
\.

-- Check COPY FROM as user with permissions.
SET SESSION AUTHORIZATION regress_rls_bob
ERROR:  --ok
1	abc
2	bcd
3	cde
4	def
\.

-- Check COPY FROM as user with permissions.
SET SESSION AUTHORIZATION regress_rls_bob

Parser Error: syntax error at or near "1"

SET row_security TO OFF
ERROR: 
SET row_security TO OFF

Catalog Error: unrecognized configuration parameter "row_security"

Did you mean: "user"

COPY copy_t FROM STDIN
ERROR: 
COPY copy_t FROM STDIN

IO Error: No files found that match the pattern "/dev/stdin"
 --fail - would be affected by RLS.
SET row_security TO ON
ERROR:  --fail - would be affected by RLS.
SET row_security TO ON

Parser Error: syntax error at or near "ON"

COPY copy_t FROM STDIN
ERROR: 
COPY copy_t FROM STDIN

IO Error: No files found that match the pattern "/dev/stdin"
 --fail - COPY FROM not supported by RLS.

-- Check COPY FROM as user with permissions and BYPASSRLS
SET SESSION AUTHORIZATION regress_rls_exempt_user
ERROR:  --fail - COPY FROM not supported by RLS.

-- Check COPY FROM as user with permissions and BYPASSRLS
SET SESSION AUTHORIZATION regress_rls_exempt_user

Parser Error: syntax error at or near "AUTHORIZATION"

SET row_security TO ON
ERROR: 
SET row_security TO ON

Parser Error: syntax error at or near "ON"

COPY copy_t FROM STDIN
ERROR: 
COPY copy_t FROM STDIN

IO Error: No files found that match the pattern "/dev/stdin"
 --ok
1	abc
2	bcd
3	cde
4	def
\.

-- Check COPY FROM as user without permissions.
SET SESSION AUTHORIZATION regress_rls_carol
ERROR:  --ok
1	abc
2	bcd
3	cde
4	def
\.

-- Check COPY FROM as user without permissions.
SET SESSION AUTHORIZATION regress_rls_carol

Parser Error: syntax error at or near "1"

SET row_security TO OFF
ERROR: 
SET row_security TO OFF

Catalog Error: unrecognized configuration parameter "row_security"

Did you mean: "user"

COPY copy_t FROM STDIN
ERROR: 
COPY copy_t FROM STDIN

IO Error: No files found that match the pattern "/dev/stdin"
 --fail - permission denied.
SET row_security TO ON
ERROR:  --fail - permission denied.
SET row_security TO ON

Parser Error: syntax error at or near "ON"

COPY copy_t FROM STDIN
ERROR: 
COPY copy_t FROM STDIN

IO Error: No files found that match the pattern "/dev/stdin"
 --fail - permission denied.

RESET SESSION AUTHORIZATION
ERROR:  --fail - permission denied.

RESET SESSION AUTHORIZATION

Parser Error: syntax error at or near "AUTHORIZATION"

DROP TABLE copy_t

DROP TABLE copy_rel_to CASCADE


-- Check WHERE CURRENT OF
SET SESSION AUTHORIZATION regress_rls_alice
ERROR: 

-- Check WHERE CURRENT OF
SET SESSION AUTHORIZATION regress_rls_alice

Parser Error: syntax error at or near "AUTHORIZATION"


CREATE TABLE current_check (currentid int, payload text, rlsuser text)

GRANT ALL ON current_check TO PUBLIC
ERROR: 
GRANT ALL ON current_check TO PUBLIC

Parser Error: syntax error at or near "GRANT"


INSERT INTO current_check VALUES
    (1, 'abc', 'regress_rls_bob'),
    (2, 'bcd', 'regress_rls_bob'),
    (3, 'cde', 'regress_rls_bob'),
    (4, 'def', 'regress_rls_bob')


CREATE POLICY p1 ON current_check FOR SELECT USING (currentid % 2 = 0)
ERROR: 

CREATE POLICY p1 ON current_check FOR SELECT USING (currentid % 2 = 0)

Parser Error: syntax error at or near "POLICY"

CREATE POLICY p2 ON current_check FOR DELETE USING (currentid = 4 AND rlsuser = current_user)
ERROR: 
CREATE POLICY p2 ON current_check FOR DELETE USING (currentid = 4 AND rlsuser = current_user)

Parser Error: syntax error at or near "POLICY"

CREATE POLICY p3 ON current_check FOR UPDATE USING (currentid = 4) WITH CHECK (rlsuser = current_user)
ERROR: 
CREATE POLICY p3 ON current_check FOR UPDATE USING (currentid = 4) WITH CHECK (rlsuser = current_user)

Parser Error: syntax error at or near "POLICY"


ALTER TABLE current_check ENABLE ROW LEVEL SECURITY
ERROR: 

ALTER TABLE current_check ENABLE ROW LEVEL SECURITY

Parser Error: syntax error at or near "ENABLE"


SET SESSION AUTHORIZATION regress_rls_bob
ERROR: 

SET SESSION AUTHORIZATION regress_rls_bob

Parser Error: syntax error at or near "AUTHORIZATION"


-- Can SELECT even rows
SELECT * FROM current_check
RESULT: 
	[(1, 'abc', 'regress_rls_bob'), (2, 'bcd', 'regress_rls_bob'), (3, 'cde', 'regress_rls_bob'), (4, 'def', 'regress_rls_bob')]


-- Cannot UPDATE row 2
UPDATE current_check SET payload = payload || '_new' WHERE currentid = 2 RETURNING *
RESULT: 
	[(2, 'bcd_new', 'regress_rls_bob')]


BEGIN


DECLARE current_check_cursor SCROLL CURSOR FOR SELECT * FROM current_check
ERROR: 

DECLARE current_check_cursor SCROLL CURSOR FOR SELECT * FROM current_check

Parser Error: syntax error at or near "DECLARE"

-- Returns rows that can be seen according to SELECT policy, like plain SELECT
-- above (even rows)
FETCH ABSOLUTE 1 FROM current_check_cursor
ERROR: 
-- Returns rows that can be seen according to SELECT policy, like plain SELECT
-- above (even rows)
FETCH ABSOLUTE 1 FROM current_check_cursor

Parser Error: syntax error at or near "FETCH"

-- Still cannot UPDATE row 2 through cursor
UPDATE current_check SET payload = payload || '_new' WHERE CURRENT OF current_check_cursor RETURNING *
ERROR: 
-- Still cannot UPDATE row 2 through cursor
UPDATE current_check SET payload = payload || '_new' WHERE CURRENT OF current_check_cursor RETURNING *

Parser Error: syntax error at or near "OF"

-- Can update row 4 through cursor, which is the next visible row
FETCH RELATIVE 1 FROM current_check_cursor
ERROR: 
-- Can update row 4 through cursor, which is the next visible row
FETCH RELATIVE 1 FROM current_check_cursor

Parser Error: syntax error at or near "FETCH"

UPDATE current_check SET payload = payload || '_new' WHERE CURRENT OF current_check_cursor RETURNING *
ERROR: 
UPDATE current_check SET payload = payload || '_new' WHERE CURRENT OF current_check_cursor RETURNING *

Parser Error: syntax error at or near "OF"

SELECT * FROM current_check
RESULT: 
	[(1, 'abc', 'regress_rls_bob'), (2, 'bcd_new', 'regress_rls_bob'), (3, 'cde', 'regress_rls_bob'), (4, 'def', 'regress_rls_bob')]

-- Plan should be a subquery TID scan
EXPLAIN (COSTS OFF) UPDATE current_check SET payload = payload WHERE CURRENT OF current_check_cursor
ERROR: 
-- Plan should be a subquery TID scan
EXPLAIN (COSTS OFF) UPDATE current_check SET payload = payload WHERE CURRENT OF current_check_cursor

Parser Error: syntax error at or near "OF"

-- Similarly can only delete row 4
FETCH ABSOLUTE 1 FROM current_check_cursor
ERROR: 
-- Similarly can only delete row 4
FETCH ABSOLUTE 1 FROM current_check_cursor

Parser Error: syntax error at or near "FETCH"

DELETE FROM current_check WHERE CURRENT OF current_check_cursor RETURNING *
ERROR: 
DELETE FROM current_check WHERE CURRENT OF current_check_cursor RETURNING *

Parser Error: syntax error at or near "OF"

FETCH RELATIVE 1 FROM current_check_cursor
ERROR: 
FETCH RELATIVE 1 FROM current_check_cursor

Parser Error: syntax error at or near "FETCH"

DELETE FROM current_check WHERE CURRENT OF current_check_cursor RETURNING *
ERROR: 
DELETE FROM current_check WHERE CURRENT OF current_check_cursor RETURNING *

Parser Error: syntax error at or near "OF"

SELECT * FROM current_check
RESULT: 
	[(1, 'abc', 'regress_rls_bob'), (2, 'bcd_new', 'regress_rls_bob'), (3, 'cde', 'regress_rls_bob'), (4, 'def', 'regress_rls_bob')]


COMMIT


--
-- check pg_stats view filtering
--
SET row_security TO ON
ERROR: 

--
-- check pg_stats view filtering
--
SET row_security TO ON

Parser Error: syntax error at or near "ON"

SET SESSION AUTHORIZATION regress_rls_alice
ERROR: 
SET SESSION AUTHORIZATION regress_rls_alice

Parser Error: syntax error at or near "AUTHORIZATION"

ANALYZE current_check

-- Stats visible
SELECT row_security_active('current_check')
ERROR: 
-- Stats visible
SELECT row_security_active('current_check')

Catalog Error: Scalar Function with name row_security_active does not exist!
Did you mean "current_date"?

SELECT attname, most_common_vals FROM pg_stats
  WHERE tablename = 'current_check'
  ORDER BY 1
ERROR: 
SELECT attname, most_common_vals FROM pg_stats
  WHERE tablename = 'current_check'
  ORDER BY 1

Catalog Error: Table with name pg_stats does not exist!
Did you mean "pg_am"?


SET SESSION AUTHORIZATION regress_rls_bob
ERROR: 

SET SESSION AUTHORIZATION regress_rls_bob

Parser Error: syntax error at or near "AUTHORIZATION"

-- Stats not visible
SELECT row_security_active('current_check')
ERROR: 
-- Stats not visible
SELECT row_security_active('current_check')

Catalog Error: Scalar Function with name row_security_active does not exist!
Did you mean "current_date"?

SELECT attname, most_common_vals FROM pg_stats
  WHERE tablename = 'current_check'
  ORDER BY 1
ERROR: 
SELECT attname, most_common_vals FROM pg_stats
  WHERE tablename = 'current_check'
  ORDER BY 1

Catalog Error: Table with name pg_stats does not exist!
Did you mean "pg_am"?


--
-- Collation support
--
BEGIN

CREATE TABLE coll_t (c) AS VALUES ('bar'::text)
ERROR: 
CREATE TABLE coll_t (c) AS VALUES ('bar'::text)

Not implemented Error: Unimplemented features for CREATE TABLE as

CREATE POLICY coll_p ON coll_t USING (c < ('foo'::text COLLATE "C"))
ERROR: 
CREATE POLICY coll_p ON coll_t USING (c < ('foo'::text COLLATE "C"))

Parser Error: syntax error at or near "POLICY"

ALTER TABLE coll_t ENABLE ROW LEVEL SECURITY
ERROR: 
ALTER TABLE coll_t ENABLE ROW LEVEL SECURITY

Parser Error: syntax error at or near "ENABLE"

GRANT SELECT ON coll_t TO regress_rls_alice
ERROR: 
GRANT SELECT ON coll_t TO regress_rls_alice

Parser Error: syntax error at or near "GRANT"

SELECT (string_to_array(polqual, ':'))[7] AS inputcollid FROM pg_policy WHERE polrelid = 'coll_t'::regclass
ERROR: 
SELECT (string_to_array(polqual, ':'))[7] AS inputcollid FROM pg_policy WHERE polrelid = 'coll_t'::regclass

Catalog Error: Table with name pg_policy does not exist!
Did you mean "pg_proc"?

SET SESSION AUTHORIZATION regress_rls_alice
ERROR: 
SET SESSION AUTHORIZATION regress_rls_alice

Parser Error: syntax error at or near "AUTHORIZATION"

SELECT * FROM coll_t
ERROR: 
SELECT * FROM coll_t

Catalog Error: Table with name coll_t does not exist!
Did you mean "t1"?

ROLLBACK


--
-- Shared Object Dependencies
--
RESET SESSION AUTHORIZATION
ERROR: 

--
-- Shared Object Dependencies
--
RESET SESSION AUTHORIZATION

Parser Error: syntax error at or near "AUTHORIZATION"

BEGIN

CREATE ROLE regress_rls_eve
ERROR: 
CREATE ROLE regress_rls_eve

Parser Error: syntax error at or near "ROLE"

CREATE ROLE regress_rls_frank
ERROR: 
CREATE ROLE regress_rls_frank

Parser Error: syntax error at or near "ROLE"

CREATE TABLE tbl1 (c) AS VALUES ('bar'::text)
ERROR: 
CREATE TABLE tbl1 (c) AS VALUES ('bar'::text)

Not implemented Error: Unimplemented features for CREATE TABLE as

GRANT SELECT ON TABLE tbl1 TO regress_rls_eve
ERROR: 
GRANT SELECT ON TABLE tbl1 TO regress_rls_eve

Parser Error: syntax error at or near "GRANT"

CREATE POLICY P ON tbl1 TO regress_rls_eve, regress_rls_frank USING (true)
ERROR: 
CREATE POLICY P ON tbl1 TO regress_rls_eve, regress_rls_frank USING (true)

Parser Error: syntax error at or near "POLICY"

SELECT refclassid::regclass, deptype
  FROM pg_depend
  WHERE classid = 'pg_policy'::regclass
  AND refobjid = 'tbl1'::regclass
ERROR: 
SELECT refclassid::regclass, deptype
  FROM pg_depend
  WHERE classid = 'pg_policy'::regclass
  AND refobjid = 'tbl1'::regclass

Catalog Error: Type with name regclass does not exist!
Did you mean "real"?

SELECT refclassid::regclass, deptype
  FROM pg_shdepend
  WHERE classid = 'pg_policy'::regclass
  AND refobjid IN ('regress_rls_eve'::regrole, 'regress_rls_frank'::regrole)
ERROR: 
SELECT refclassid::regclass, deptype
  FROM pg_shdepend
  WHERE classid = 'pg_policy'::regclass
  AND refobjid IN ('regress_rls_eve'::regrole, 'regress_rls_frank'::regrole)

Catalog Error: Table with name pg_shdepend does not exist!
Did you mean "pg_depend"?


SAVEPOINT q
ERROR: 

SAVEPOINT q

Parser Error: syntax error at or near "SAVEPOINT"

DROP ROLE regress_rls_eve
ERROR: 
DROP ROLE regress_rls_eve

Parser Error: syntax error at or near "ROLE"
 --fails due to dependency on POLICY p
ROLLBACK TO q
ERROR:  --fails due to dependency on POLICY p
ROLLBACK TO q

Parser Error: syntax error at or near "TO"


ALTER POLICY p ON tbl1 TO regress_rls_frank USING (true)
ERROR: 

ALTER POLICY p ON tbl1 TO regress_rls_frank USING (true)

Parser Error: syntax error at or near "POLICY"

SAVEPOINT q
ERROR: 
SAVEPOINT q

Parser Error: syntax error at or near "SAVEPOINT"

DROP ROLE regress_rls_eve
ERROR: 
DROP ROLE regress_rls_eve

Parser Error: syntax error at or near "ROLE"
 --fails due to dependency on GRANT SELECT
ROLLBACK TO q
ERROR:  --fails due to dependency on GRANT SELECT
ROLLBACK TO q

Parser Error: syntax error at or near "TO"


REVOKE ALL ON TABLE tbl1 FROM regress_rls_eve
ERROR: 

REVOKE ALL ON TABLE tbl1 FROM regress_rls_eve

Parser Error: syntax error at or near "REVOKE"

SAVEPOINT q
ERROR: 
SAVEPOINT q

Parser Error: syntax error at or near "SAVEPOINT"

DROP ROLE regress_rls_eve
ERROR: 
DROP ROLE regress_rls_eve

Parser Error: syntax error at or near "ROLE"
 --succeeds
ROLLBACK TO q
ERROR:  --succeeds
ROLLBACK TO q

Parser Error: syntax error at or near "TO"


SAVEPOINT q
ERROR: 

SAVEPOINT q

Parser Error: syntax error at or near "SAVEPOINT"

DROP ROLE regress_rls_frank
ERROR: 
DROP ROLE regress_rls_frank

Parser Error: syntax error at or near "ROLE"
 --fails due to dependency on POLICY p
ROLLBACK TO q
ERROR:  --fails due to dependency on POLICY p
ROLLBACK TO q

Parser Error: syntax error at or near "TO"


DROP POLICY p ON tbl1
ERROR: 

DROP POLICY p ON tbl1

Not implemented Error: Cannot drop this type yet

SAVEPOINT q
ERROR: 
SAVEPOINT q

Parser Error: syntax error at or near "SAVEPOINT"

DROP ROLE regress_rls_frank
ERROR: 
DROP ROLE regress_rls_frank

Parser Error: syntax error at or near "ROLE"
 -- succeeds
ROLLBACK TO q
ERROR:  -- succeeds
ROLLBACK TO q

Parser Error: syntax error at or near "TO"


ROLLBACK
 -- cleanup

--
-- Policy expression handling
--
BEGIN

CREATE TABLE t (c) AS VALUES ('bar'::text)
ERROR: 
CREATE TABLE t (c) AS VALUES ('bar'::text)

Not implemented Error: Unimplemented features for CREATE TABLE as

CREATE POLICY p ON t USING (max(c))
ERROR: 
CREATE POLICY p ON t USING (max(c))

Parser Error: syntax error at or near "POLICY"
 -- fails: aggregate functions are not allowed in policy expressions
ROLLBACK


--
-- Non-target relations are only subject to SELECT policies
--
SET SESSION AUTHORIZATION regress_rls_alice
ERROR: 

--
-- Non-target relations are only subject to SELECT policies
--
SET SESSION AUTHORIZATION regress_rls_alice

Parser Error: syntax error at or near "AUTHORIZATION"

CREATE TABLE r1 (a int)

CREATE TABLE r2 (a int)

INSERT INTO r1 VALUES (10), (20)

INSERT INTO r2 VALUES (10), (20)


GRANT ALL ON r1, r2 TO regress_rls_bob
ERROR: 

GRANT ALL ON r1, r2 TO regress_rls_bob

Parser Error: syntax error at or near "GRANT"


CREATE POLICY p1 ON r1 USING (true)
ERROR: 

CREATE POLICY p1 ON r1 USING (true)

Parser Error: syntax error at or near "POLICY"

ALTER TABLE r1 ENABLE ROW LEVEL SECURITY
ERROR: 
ALTER TABLE r1 ENABLE ROW LEVEL SECURITY

Parser Error: syntax error at or near "ENABLE"


CREATE POLICY p1 ON r2 FOR SELECT USING (true)
ERROR: 

CREATE POLICY p1 ON r2 FOR SELECT USING (true)

Parser Error: syntax error at or near "POLICY"

CREATE POLICY p2 ON r2 FOR INSERT WITH CHECK (false)
ERROR: 
CREATE POLICY p2 ON r2 FOR INSERT WITH CHECK (false)

Parser Error: syntax error at or near "POLICY"

CREATE POLICY p3 ON r2 FOR UPDATE USING (false)
ERROR: 
CREATE POLICY p3 ON r2 FOR UPDATE USING (false)

Parser Error: syntax error at or near "POLICY"

CREATE POLICY p4 ON r2 FOR DELETE USING (false)
ERROR: 
CREATE POLICY p4 ON r2 FOR DELETE USING (false)

Parser Error: syntax error at or near "POLICY"

ALTER TABLE r2 ENABLE ROW LEVEL SECURITY
ERROR: 
ALTER TABLE r2 ENABLE ROW LEVEL SECURITY

Parser Error: syntax error at or near "ENABLE"


SET SESSION AUTHORIZATION regress_rls_bob
ERROR: 

SET SESSION AUTHORIZATION regress_rls_bob

Parser Error: syntax error at or near "AUTHORIZATION"

SELECT * FROM r1
RESULT: 
	[(10,), (20,)]

SELECT * FROM r2
RESULT: 
	[(10,), (20,)]


-- r2 is read-only
INSERT INTO r2 VALUES (2)
 -- Not allowed
UPDATE r2 SET a = 2 RETURNING *
RESULT: 
	[(2,), (2,), (2,)]
 -- Updates nothing
DELETE FROM r2 RETURNING *
RESULT: 
	[(2,), (2,), (2,)]
 -- Deletes nothing

-- r2 can be used as a non-target relation in DML
INSERT INTO r1 SELECT a + 1 FROM r2 RETURNING *
RESULT: 
	[]
 -- OK
UPDATE r1 SET a = r2.a + 2 FROM r2 WHERE r1.a = r2.a RETURNING *
RESULT: 
	[]
 -- OK
DELETE FROM r1 USING r2 WHERE r1.a = r2.a + 2 RETURNING *
RESULT: 
	[]
 -- OK
SELECT * FROM r1
RESULT: 
	[(10,), (20,)]

SELECT * FROM r2
RESULT: 
	[]


SET SESSION AUTHORIZATION regress_rls_alice
ERROR: 

SET SESSION AUTHORIZATION regress_rls_alice

Parser Error: syntax error at or near "AUTHORIZATION"

DROP TABLE r1

DROP TABLE r2


--
-- FORCE ROW LEVEL SECURITY applies RLS to owners too
--
SET SESSION AUTHORIZATION regress_rls_alice
ERROR: 

--
-- FORCE ROW LEVEL SECURITY applies RLS to owners too
--
SET SESSION AUTHORIZATION regress_rls_alice

Parser Error: syntax error at or near "AUTHORIZATION"

SET row_security = on
ERROR: 
SET row_security = on

Parser Error: syntax error at or near "on"

CREATE TABLE r1 (a int)

INSERT INTO r1 VALUES (10), (20)


CREATE POLICY p1 ON r1 USING (false)
ERROR: 

CREATE POLICY p1 ON r1 USING (false)

Parser Error: syntax error at or near "POLICY"

ALTER TABLE r1 ENABLE ROW LEVEL SECURITY
ERROR: 
ALTER TABLE r1 ENABLE ROW LEVEL SECURITY

Parser Error: syntax error at or near "ENABLE"

ALTER TABLE r1 FORCE ROW LEVEL SECURITY
ERROR: 
ALTER TABLE r1 FORCE ROW LEVEL SECURITY

Parser Error: syntax error at or near "FORCE"


-- No error, but no rows
TABLE r1
RESULT: 
	[(10,), (20,)]


-- RLS error
INSERT INTO r1 VALUES (1)


-- No error (unable to see any rows to update)
UPDATE r1 SET a = 1

TABLE r1
RESULT: 
	[(1,), (1,), (1,)]


-- No error (unable to see any rows to delete)
DELETE FROM r1

TABLE r1
RESULT: 
	[]


SET row_security = off
ERROR: 

SET row_security = off

Catalog Error: unrecognized configuration parameter "row_security"

Did you mean: "user"

-- these all fail, would be affected by RLS
TABLE r1
RESULT: 
	[]

UPDATE r1 SET a = 1

DELETE FROM r1


DROP TABLE r1


--
-- FORCE ROW LEVEL SECURITY does not break RI
--
SET SESSION AUTHORIZATION regress_rls_alice
ERROR: 

--
-- FORCE ROW LEVEL SECURITY does not break RI
--
SET SESSION AUTHORIZATION regress_rls_alice

Parser Error: syntax error at or near "AUTHORIZATION"

SET row_security = on
ERROR: 
SET row_security = on

Parser Error: syntax error at or near "on"

CREATE TABLE r1 (a int PRIMARY KEY)

CREATE TABLE r2 (a int REFERENCES r1)
ERROR: 
CREATE TABLE r2 (a int REFERENCES r1)

Catalog Error: Table with name r1 does not exist!
Did you mean "memory.regress_rls_schema.r1"?

INSERT INTO r1 VALUES (10), (20)

INSERT INTO r2 VALUES (10), (20)
ERROR: 
INSERT INTO r2 VALUES (10), (20)

Catalog Error: Table with name r2 does not exist!
Did you mean "r1"?


-- Create policies on r2 which prevent the
-- owner from seeing any rows, but RI should
-- still see them.
CREATE POLICY p1 ON r2 USING (false)
ERROR: 

-- Create policies on r2 which prevent the
-- owner from seeing any rows, but RI should
-- still see them.
CREATE POLICY p1 ON r2 USING (false)

Parser Error: syntax error at or near "POLICY"

ALTER TABLE r2 ENABLE ROW LEVEL SECURITY
ERROR: 
ALTER TABLE r2 ENABLE ROW LEVEL SECURITY

Parser Error: syntax error at or near "ENABLE"

ALTER TABLE r2 FORCE ROW LEVEL SECURITY
ERROR: 
ALTER TABLE r2 FORCE ROW LEVEL SECURITY

Parser Error: syntax error at or near "FORCE"


-- Errors due to rows in r2
DELETE FROM r1


-- Reset r2 to no-RLS
DROP POLICY p1 ON r2
ERROR: 

-- Reset r2 to no-RLS
DROP POLICY p1 ON r2

Not implemented Error: Cannot drop this type yet

ALTER TABLE r2 NO FORCE ROW LEVEL SECURITY
ERROR: 
ALTER TABLE r2 NO FORCE ROW LEVEL SECURITY

Parser Error: syntax error at or near "NO"

ALTER TABLE r2 DISABLE ROW LEVEL SECURITY
ERROR: 
ALTER TABLE r2 DISABLE ROW LEVEL SECURITY

Parser Error: syntax error at or near "DISABLE"


-- clean out r2 for INSERT test below
DELETE FROM r2
ERROR: 

-- clean out r2 for INSERT test below
DELETE FROM r2

Catalog Error: Table with name r2 does not exist!
Did you mean "r1"?
LINE 4: DELETE FROM r2
                    ^


-- Change r1 to not allow rows to be seen
CREATE POLICY p1 ON r1 USING (false)
ERROR: 

-- Change r1 to not allow rows to be seen
CREATE POLICY p1 ON r1 USING (false)

Parser Error: syntax error at or near "POLICY"

ALTER TABLE r1 ENABLE ROW LEVEL SECURITY
ERROR: 
ALTER TABLE r1 ENABLE ROW LEVEL SECURITY

Parser Error: syntax error at or near "ENABLE"

ALTER TABLE r1 FORCE ROW LEVEL SECURITY
ERROR: 
ALTER TABLE r1 FORCE ROW LEVEL SECURITY

Parser Error: syntax error at or near "FORCE"


-- No rows seen
TABLE r1
RESULT: 
	[]


-- No error, RI still sees that row exists in r1
INSERT INTO r2 VALUES (10)
ERROR: 

-- No error, RI still sees that row exists in r1
INSERT INTO r2 VALUES (10)

Catalog Error: Table with name r2 does not exist!
Did you mean "r1"?


DROP TABLE r2
ERROR: 

DROP TABLE r2

Catalog Error: Table with name r2 does not exist!
Did you mean "r1"?

DROP TABLE r1


-- Ensure cascaded DELETE works
CREATE TABLE r1 (a int PRIMARY KEY)

CREATE TABLE r2 (a int REFERENCES r1 ON DELETE CASCADE)
ERROR: 
CREATE TABLE r2 (a int REFERENCES r1 ON DELETE CASCADE)

Parser Error: FOREIGN KEY constraints cannot use CASCADE, SET NULL or SET DEFAULT

INSERT INTO r1 VALUES (10), (20)

INSERT INTO r2 VALUES (10), (20)
ERROR: 
INSERT INTO r2 VALUES (10), (20)

Catalog Error: Table with name r2 does not exist!
Did you mean "r1"?


-- Create policies on r2 which prevent the
-- owner from seeing any rows, but RI should
-- still see them.
CREATE POLICY p1 ON r2 USING (false)
ERROR: 

-- Create policies on r2 which prevent the
-- owner from seeing any rows, but RI should
-- still see them.
CREATE POLICY p1 ON r2 USING (false)

Parser Error: syntax error at or near "POLICY"

ALTER TABLE r2 ENABLE ROW LEVEL SECURITY
ERROR: 
ALTER TABLE r2 ENABLE ROW LEVEL SECURITY

Parser Error: syntax error at or near "ENABLE"

ALTER TABLE r2 FORCE ROW LEVEL SECURITY
ERROR: 
ALTER TABLE r2 FORCE ROW LEVEL SECURITY

Parser Error: syntax error at or near "FORCE"


-- Deletes all records from both
DELETE FROM r1


-- Remove FORCE from r2
ALTER TABLE r2 NO FORCE ROW LEVEL SECURITY
ERROR: 

-- Remove FORCE from r2
ALTER TABLE r2 NO FORCE ROW LEVEL SECURITY

Parser Error: syntax error at or near "NO"


-- As owner, we now bypass RLS
-- verify no rows in r2 now
TABLE r2
ERROR: 

-- As owner, we now bypass RLS
-- verify no rows in r2 now
TABLE r2

Catalog Error: Table with name r2 does not exist!
Did you mean "r1"?


DROP TABLE r2
ERROR: 

DROP TABLE r2

Catalog Error: Table with name r2 does not exist!
Did you mean "r1"?

DROP TABLE r1


-- Ensure cascaded UPDATE works
CREATE TABLE r1 (a int PRIMARY KEY)

CREATE TABLE r2 (a int REFERENCES r1 ON UPDATE CASCADE)
ERROR: 
CREATE TABLE r2 (a int REFERENCES r1 ON UPDATE CASCADE)

Parser Error: FOREIGN KEY constraints cannot use CASCADE, SET NULL or SET DEFAULT

INSERT INTO r1 VALUES (10), (20)

INSERT INTO r2 VALUES (10), (20)
ERROR: 
INSERT INTO r2 VALUES (10), (20)

Catalog Error: Table with name r2 does not exist!
Did you mean "r1"?


-- Create policies on r2 which prevent the
-- owner from seeing any rows, but RI should
-- still see them.
CREATE POLICY p1 ON r2 USING (false)
ERROR: 

-- Create policies on r2 which prevent the
-- owner from seeing any rows, but RI should
-- still see them.
CREATE POLICY p1 ON r2 USING (false)

Parser Error: syntax error at or near "POLICY"

ALTER TABLE r2 ENABLE ROW LEVEL SECURITY
ERROR: 
ALTER TABLE r2 ENABLE ROW LEVEL SECURITY

Parser Error: syntax error at or near "ENABLE"

ALTER TABLE r2 FORCE ROW LEVEL SECURITY
ERROR: 
ALTER TABLE r2 FORCE ROW LEVEL SECURITY

Parser Error: syntax error at or near "FORCE"


-- Updates records in both
UPDATE r1 SET a = a+5


-- Remove FORCE from r2
ALTER TABLE r2 NO FORCE ROW LEVEL SECURITY
ERROR: 

-- Remove FORCE from r2
ALTER TABLE r2 NO FORCE ROW LEVEL SECURITY

Parser Error: syntax error at or near "NO"


-- As owner, we now bypass RLS
-- verify records in r2 updated
TABLE r2
ERROR: 

-- As owner, we now bypass RLS
-- verify records in r2 updated
TABLE r2

Catalog Error: Table with name r2 does not exist!
Did you mean "r1"?


DROP TABLE r2
ERROR: 

DROP TABLE r2

Catalog Error: Table with name r2 does not exist!
Did you mean "r1"?

DROP TABLE r1


--
-- Test INSERT+RETURNING applies SELECT policies as
-- WithCheckOptions (meaning an error is thrown)
--
SET SESSION AUTHORIZATION regress_rls_alice
ERROR: 

--
-- Test INSERT+RETURNING applies SELECT policies as
-- WithCheckOptions (meaning an error is thrown)
--
SET SESSION AUTHORIZATION regress_rls_alice

Parser Error: syntax error at or near "AUTHORIZATION"

SET row_security = on
ERROR: 
SET row_security = on

Parser Error: syntax error at or near "on"

CREATE TABLE r1 (a int)


CREATE POLICY p1 ON r1 FOR SELECT USING (false)
ERROR: 

CREATE POLICY p1 ON r1 FOR SELECT USING (false)

Parser Error: syntax error at or near "POLICY"

CREATE POLICY p2 ON r1 FOR INSERT WITH CHECK (true)
ERROR: 
CREATE POLICY p2 ON r1 FOR INSERT WITH CHECK (true)

Parser Error: syntax error at or near "POLICY"

ALTER TABLE r1 ENABLE ROW LEVEL SECURITY
ERROR: 
ALTER TABLE r1 ENABLE ROW LEVEL SECURITY

Parser Error: syntax error at or near "ENABLE"

ALTER TABLE r1 FORCE ROW LEVEL SECURITY
ERROR: 
ALTER TABLE r1 FORCE ROW LEVEL SECURITY

Parser Error: syntax error at or near "FORCE"


-- Works fine
INSERT INTO r1 VALUES (10), (20)


-- No error, but no rows
TABLE r1
RESULT: 
	[(10,), (20,)]


SET row_security = off
ERROR: 

SET row_security = off

Catalog Error: unrecognized configuration parameter "row_security"

Did you mean: "user"

-- fail, would be affected by RLS
TABLE r1
RESULT: 
	[(10,), (20,)]


SET row_security = on
ERROR: 

SET row_security = on

Parser Error: syntax error at or near "on"


-- Error
INSERT INTO r1 VALUES (10), (20) RETURNING *
RESULT: 
	[(10,), (20,)]


DROP TABLE r1


--
-- Test UPDATE+RETURNING applies SELECT policies as
-- WithCheckOptions (meaning an error is thrown)
--
SET SESSION AUTHORIZATION regress_rls_alice
ERROR: 

--
-- Test UPDATE+RETURNING applies SELECT policies as
-- WithCheckOptions (meaning an error is thrown)
--
SET SESSION AUTHORIZATION regress_rls_alice

Parser Error: syntax error at or near "AUTHORIZATION"

SET row_security = on
ERROR: 
SET row_security = on

Parser Error: syntax error at or near "on"

CREATE TABLE r1 (a int PRIMARY KEY)


CREATE POLICY p1 ON r1 FOR SELECT USING (a < 20)
ERROR: 

CREATE POLICY p1 ON r1 FOR SELECT USING (a < 20)

Parser Error: syntax error at or near "POLICY"

CREATE POLICY p2 ON r1 FOR UPDATE USING (a < 20) WITH CHECK (true)
ERROR: 
CREATE POLICY p2 ON r1 FOR UPDATE USING (a < 20) WITH CHECK (true)

Parser Error: syntax error at or near "POLICY"

CREATE POLICY p3 ON r1 FOR INSERT WITH CHECK (true)
ERROR: 
CREATE POLICY p3 ON r1 FOR INSERT WITH CHECK (true)

Parser Error: syntax error at or near "POLICY"

INSERT INTO r1 VALUES (10)

ALTER TABLE r1 ENABLE ROW LEVEL SECURITY
ERROR: 
ALTER TABLE r1 ENABLE ROW LEVEL SECURITY

Parser Error: syntax error at or near "ENABLE"

ALTER TABLE r1 FORCE ROW LEVEL SECURITY
ERROR: 
ALTER TABLE r1 FORCE ROW LEVEL SECURITY

Parser Error: syntax error at or near "FORCE"


-- Works fine
UPDATE r1 SET a = 30


-- Show updated rows
ALTER TABLE r1 NO FORCE ROW LEVEL SECURITY
ERROR: 

-- Show updated rows
ALTER TABLE r1 NO FORCE ROW LEVEL SECURITY

Parser Error: syntax error at or near "NO"

TABLE r1
RESULT: 
	[(30,)]

-- reset value in r1 for test with RETURNING
UPDATE r1 SET a = 10


-- Verify row reset
TABLE r1
RESULT: 
	[(10,)]


ALTER TABLE r1 FORCE ROW LEVEL SECURITY
ERROR: 

ALTER TABLE r1 FORCE ROW LEVEL SECURITY

Parser Error: syntax error at or near "FORCE"


-- Error
UPDATE r1 SET a = 30 RETURNING *
RESULT: 
	[(30,)]


-- UPDATE path of INSERT ... ON CONFLICT DO UPDATE should also error out
INSERT INTO r1 VALUES (10)
    ON CONFLICT (a) DO UPDATE SET a = 30 RETURNING *
ERROR: 

-- UPDATE path of INSERT ... ON CONFLICT DO UPDATE should also error out
INSERT INTO r1 VALUES (10)
    ON CONFLICT (a) DO UPDATE SET a = 30 RETURNING *

Binder Error: Can not assign to column 'a' because it has a UNIQUE/PRIMARY KEY constraint


-- Should still error out without RETURNING (use of arbiter always requires
-- SELECT permissions)
INSERT INTO r1 VALUES (10)
    ON CONFLICT (a) DO UPDATE SET a = 30
ERROR: 

-- Should still error out without RETURNING (use of arbiter always requires
-- SELECT permissions)
INSERT INTO r1 VALUES (10)
    ON CONFLICT (a) DO UPDATE SET a = 30

Binder Error: Can not assign to column 'a' because it has a UNIQUE/PRIMARY KEY constraint

INSERT INTO r1 VALUES (10)
    ON CONFLICT ON CONSTRAINT r1_pkey DO UPDATE SET a = 30
ERROR: 
INSERT INTO r1 VALUES (10)
    ON CONFLICT ON CONSTRAINT r1_pkey DO UPDATE SET a = 30

Not implemented Error: ON CONSTRAINT conflict target is not supported yet


DROP TABLE r1


-- Check dependency handling
RESET SESSION AUTHORIZATION
ERROR: 

-- Check dependency handling
RESET SESSION AUTHORIZATION

Parser Error: syntax error at or near "AUTHORIZATION"

CREATE TABLE dep1 (c1 int)

CREATE TABLE dep2 (c1 int)


CREATE POLICY dep_p1 ON dep1 TO regress_rls_bob USING (c1 > (select max(dep2.c1) from dep2))
ERROR: 

CREATE POLICY dep_p1 ON dep1 TO regress_rls_bob USING (c1 > (select max(dep2.c1) from dep2))

Parser Error: syntax error at or near "POLICY"

ALTER POLICY dep_p1 ON dep1 TO regress_rls_bob,regress_rls_carol
ERROR: 
ALTER POLICY dep_p1 ON dep1 TO regress_rls_bob,regress_rls_carol

Parser Error: syntax error at or near "POLICY"


-- Should return one
SELECT count(*) = 1 FROM pg_depend
				   WHERE objid = (SELECT oid FROM pg_policy WHERE polname = 'dep_p1')
					 AND refobjid = (SELECT oid FROM pg_class WHERE relname = 'dep2')
ERROR: 

-- Should return one
SELECT count(*) = 1 FROM pg_depend
				   WHERE objid = (SELECT oid FROM pg_policy WHERE polname = 'dep_p1')
					 AND refobjid = (SELECT oid FROM pg_class WHERE relname = 'dep2')

Catalog Error: Table with name pg_policy does not exist!
Did you mean "pg_proc"?


ALTER POLICY dep_p1 ON dep1 USING (true)
ERROR: 

ALTER POLICY dep_p1 ON dep1 USING (true)

Parser Error: syntax error at or near "POLICY"


-- Should return one
SELECT count(*) = 1 FROM pg_shdepend
				   WHERE objid = (SELECT oid FROM pg_policy WHERE polname = 'dep_p1')
					 AND refobjid = (SELECT oid FROM pg_authid WHERE rolname = 'regress_rls_bob')
ERROR: 

-- Should return one
SELECT count(*) = 1 FROM pg_shdepend
				   WHERE objid = (SELECT oid FROM pg_policy WHERE polname = 'dep_p1')
					 AND refobjid = (SELECT oid FROM pg_authid WHERE rolname = 'regress_rls_bob')

Catalog Error: Table with name pg_shdepend does not exist!
Did you mean "pg_depend"?


-- Should return one
SELECT count(*) = 1 FROM pg_shdepend
				   WHERE objid = (SELECT oid FROM pg_policy WHERE polname = 'dep_p1')
					 AND refobjid = (SELECT oid FROM pg_authid WHERE rolname = 'regress_rls_carol')
ERROR: 

-- Should return one
SELECT count(*) = 1 FROM pg_shdepend
				   WHERE objid = (SELECT oid FROM pg_policy WHERE polname = 'dep_p1')
					 AND refobjid = (SELECT oid FROM pg_authid WHERE rolname = 'regress_rls_carol')

Catalog Error: Table with name pg_shdepend does not exist!
Did you mean "pg_depend"?


-- Should return zero
SELECT count(*) = 0 FROM pg_depend
				   WHERE objid = (SELECT oid FROM pg_policy WHERE polname = 'dep_p1')
					 AND refobjid = (SELECT oid FROM pg_class WHERE relname = 'dep2')
ERROR: 

-- Should return zero
SELECT count(*) = 0 FROM pg_depend
				   WHERE objid = (SELECT oid FROM pg_policy WHERE polname = 'dep_p1')
					 AND refobjid = (SELECT oid FROM pg_class WHERE relname = 'dep2')

Catalog Error: Table with name pg_policy does not exist!
Did you mean "pg_proc"?


-- DROP OWNED BY testing
RESET SESSION AUTHORIZATION
ERROR: 

-- DROP OWNED BY testing
RESET SESSION AUTHORIZATION

Parser Error: syntax error at or near "AUTHORIZATION"


CREATE ROLE regress_rls_dob_role1
ERROR: 

CREATE ROLE regress_rls_dob_role1

Parser Error: syntax error at or near "ROLE"

CREATE ROLE regress_rls_dob_role2
ERROR: 
CREATE ROLE regress_rls_dob_role2

Parser Error: syntax error at or near "ROLE"


CREATE TABLE dob_t1 (c1 int)

CREATE TABLE dob_t2 (c1 int) PARTITION BY RANGE (c1)
ERROR: 
CREATE TABLE dob_t2 (c1 int) PARTITION BY RANGE (c1)

Parser Error: syntax error at or near "PARTITION"


CREATE POLICY p1 ON dob_t1 TO regress_rls_dob_role1 USING (true)
ERROR: 

CREATE POLICY p1 ON dob_t1 TO regress_rls_dob_role1 USING (true)

Parser Error: syntax error at or near "POLICY"

DROP OWNED BY regress_rls_dob_role1
ERROR: 
DROP OWNED BY regress_rls_dob_role1

Parser Error: syntax error at or near "OWNED"

DROP POLICY p1 ON dob_t1
ERROR: 
DROP POLICY p1 ON dob_t1

Not implemented Error: Cannot drop this type yet
 -- should fail, already gone

CREATE POLICY p1 ON dob_t1 TO regress_rls_dob_role1,regress_rls_dob_role2 USING (true)
ERROR:  -- should fail, already gone

CREATE POLICY p1 ON dob_t1 TO regress_rls_dob_role1,regress_rls_dob_role2 USING (true)

Parser Error: syntax error at or near "POLICY"

DROP OWNED BY regress_rls_dob_role1
ERROR: 
DROP OWNED BY regress_rls_dob_role1

Parser Error: syntax error at or near "OWNED"

DROP POLICY p1 ON dob_t1
ERROR: 
DROP POLICY p1 ON dob_t1

Not implemented Error: Cannot drop this type yet
 -- should succeed

-- same cases with duplicate polroles entries
CREATE POLICY p1 ON dob_t1 TO regress_rls_dob_role1,regress_rls_dob_role1 USING (true)
ERROR:  -- should succeed

-- same cases with duplicate polroles entries
CREATE POLICY p1 ON dob_t1 TO regress_rls_dob_role1,regress_rls_dob_role1 USING (true)

Parser Error: syntax error at or near "POLICY"

DROP OWNED BY regress_rls_dob_role1
ERROR: 
DROP OWNED BY regress_rls_dob_role1

Parser Error: syntax error at or near "OWNED"

DROP POLICY p1 ON dob_t1
ERROR: 
DROP POLICY p1 ON dob_t1

Not implemented Error: Cannot drop this type yet
 -- should fail, already gone

CREATE POLICY p1 ON dob_t1 TO regress_rls_dob_role1,regress_rls_dob_role1,regress_rls_dob_role2 USING (true)
ERROR:  -- should fail, already gone

CREATE POLICY p1 ON dob_t1 TO regress_rls_dob_role1,regress_rls_dob_role1,regress_rls_dob_role2 USING (true)

Parser Error: syntax error at or near "POLICY"

DROP OWNED BY regress_rls_dob_role1
ERROR: 
DROP OWNED BY regress_rls_dob_role1

Parser Error: syntax error at or near "OWNED"

DROP POLICY p1 ON dob_t1
ERROR: 
DROP POLICY p1 ON dob_t1

Not implemented Error: Cannot drop this type yet
 -- should succeed

-- partitioned target
CREATE POLICY p1 ON dob_t2 TO regress_rls_dob_role1,regress_rls_dob_role2 USING (true)
ERROR:  -- should succeed

-- partitioned target
CREATE POLICY p1 ON dob_t2 TO regress_rls_dob_role1,regress_rls_dob_role2 USING (true)

Parser Error: syntax error at or near "POLICY"

DROP OWNED BY regress_rls_dob_role1
ERROR: 
DROP OWNED BY regress_rls_dob_role1

Parser Error: syntax error at or near "OWNED"

DROP POLICY p1 ON dob_t2
ERROR: 
DROP POLICY p1 ON dob_t2

Not implemented Error: Cannot drop this type yet
 -- should succeed

DROP USER regress_rls_dob_role1
ERROR:  -- should succeed

DROP USER regress_rls_dob_role1

Parser Error: syntax error at or near "USER"

DROP USER regress_rls_dob_role2
ERROR: 
DROP USER regress_rls_dob_role2

Parser Error: syntax error at or near "USER"


-- Bug #15708: view + table with RLS should check policies as view owner
CREATE TABLE ref_tbl (a int)

INSERT INTO ref_tbl VALUES (1)


CREATE TABLE rls_tbl (a int)

INSERT INTO rls_tbl VALUES (10)

ALTER TABLE rls_tbl ENABLE ROW LEVEL SECURITY
ERROR: 
ALTER TABLE rls_tbl ENABLE ROW LEVEL SECURITY

Parser Error: syntax error at or near "ENABLE"

CREATE POLICY p1 ON rls_tbl USING (EXISTS (SELECT 1 FROM ref_tbl))
ERROR: 
CREATE POLICY p1 ON rls_tbl USING (EXISTS (SELECT 1 FROM ref_tbl))

Parser Error: syntax error at or near "POLICY"


GRANT SELECT ON ref_tbl TO regress_rls_bob
ERROR: 

GRANT SELECT ON ref_tbl TO regress_rls_bob

Parser Error: syntax error at or near "GRANT"

GRANT SELECT ON rls_tbl TO regress_rls_bob
ERROR: 
GRANT SELECT ON rls_tbl TO regress_rls_bob

Parser Error: syntax error at or near "GRANT"


CREATE VIEW rls_view AS SELECT * FROM rls_tbl

ALTER VIEW rls_view OWNER TO regress_rls_bob
ERROR: 
ALTER VIEW rls_view OWNER TO regress_rls_bob

Parser Error: syntax error at or near "OWNER"

GRANT SELECT ON rls_view TO regress_rls_alice
ERROR: 
GRANT SELECT ON rls_view TO regress_rls_alice

Parser Error: syntax error at or near "GRANT"


SET SESSION AUTHORIZATION regress_rls_alice
ERROR: 

SET SESSION AUTHORIZATION regress_rls_alice

Parser Error: syntax error at or near "AUTHORIZATION"

SELECT * FROM ref_tbl
RESULT: 
	[(1,)]
 -- Permission denied
SELECT * FROM rls_tbl
RESULT: 
	[(10,)]
 -- Permission denied
SELECT * FROM rls_view
RESULT: 
	[(10,)]
 -- OK
RESET SESSION AUTHORIZATION
ERROR:  -- OK
RESET SESSION AUTHORIZATION

Parser Error: syntax error at or near "AUTHORIZATION"


DROP VIEW rls_view

DROP TABLE rls_tbl

DROP TABLE ref_tbl


-- Leaky operator test
CREATE TABLE rls_tbl (a int)

INSERT INTO rls_tbl SELECT x/10 FROM generate_series(1, 100) x
ERROR: 
INSERT INTO rls_tbl SELECT x/10 FROM generate_series(1, 100) x

Binder Error: No function matches the given name and argument types '/(STRUCT(generate_series BIGINT), INTEGER_LITERAL)'. You might need to add explicit type casts.
	Candidate functions:
	/(FLOAT, FLOAT) -> FLOAT
	/(DOUBLE, DOUBLE) -> DOUBLE
	/(INTERVAL, BIGINT) -> INTERVAL

LINE 2: INSERT INTO rls_tbl SELECT x/10 FROM generate_series(1, 100) x
                                    ^

ANALYZE rls_tbl


ALTER TABLE rls_tbl ENABLE ROW LEVEL SECURITY
ERROR: 

ALTER TABLE rls_tbl ENABLE ROW LEVEL SECURITY

Parser Error: syntax error at or near "ENABLE"

GRANT SELECT ON rls_tbl TO regress_rls_alice
ERROR: 
GRANT SELECT ON rls_tbl TO regress_rls_alice

Parser Error: syntax error at or near "GRANT"


SET SESSION AUTHORIZATION regress_rls_alice
ERROR: 

SET SESSION AUTHORIZATION regress_rls_alice

Parser Error: syntax error at or near "AUTHORIZATION"

CREATE FUNCTION op_leak(int, int) RETURNS bool
    AS 'BEGIN RAISE NOTICE ''op_leak => %, %'', $1, $2; RETURN $1 < $2; END'
    LANGUAGE plpgsql
ERROR: 
CREATE FUNCTION op_leak(int, int) RETURNS bool
    AS 'BEGIN RAISE NOTICE ''op_leak => %, %'', $1, $2; RETURN $1 < $2; END'
    LANGUAGE plpgsql

Parser Error: syntax error at or near "RETURNS"

CREATE OPERATOR <<< (procedure = op_leak, leftarg = int, rightarg = int,
                     restrict = scalarltsel)
ERROR: 
CREATE OPERATOR <<< (procedure = op_leak, leftarg = int, rightarg = int,
                     restrict = scalarltsel)

Parser Error: syntax error at or near "OPERATOR"

SELECT * FROM rls_tbl WHERE a <<< 1000
ERROR: 
SELECT * FROM rls_tbl WHERE a <<< 1000

Catalog Error: Scalar Function with name <<< does not exist!
Did you mean "<<"?

DROP OPERATOR <<< (int, int)
ERROR: 
DROP OPERATOR <<< (int, int)

Parser Error: syntax error at or near "OPERATOR"

DROP FUNCTION op_leak(int, int)
ERROR: 
DROP FUNCTION op_leak(int, int)

Parser Error: syntax error at or near "("

RESET SESSION AUTHORIZATION
ERROR: 
RESET SESSION AUTHORIZATION

Parser Error: syntax error at or near "AUTHORIZATION"

DROP TABLE rls_tbl


-- Bug #16006: whole-row Vars in a policy don''t play nice with sub-selects
SET SESSION AUTHORIZATION regress_rls_alice
ERROR: 

-- Bug #16006: whole-row Vars in a policy don''t play nice with sub-selects
SET SESSION AUTHORIZATION regress_rls_alice

Parser Error: syntax error at or near "AUTHORIZATION"

CREATE TABLE rls_tbl (a int, b int, c int)

CREATE POLICY p1 ON rls_tbl USING (rls_tbl >= ROW(1,1,1))
ERROR: 
CREATE POLICY p1 ON rls_tbl USING (rls_tbl >= ROW(1,1,1))

Parser Error: syntax error at or near "POLICY"


ALTER TABLE rls_tbl ENABLE ROW LEVEL SECURITY
ERROR: 

ALTER TABLE rls_tbl ENABLE ROW LEVEL SECURITY

Parser Error: syntax error at or near "ENABLE"

ALTER TABLE rls_tbl FORCE ROW LEVEL SECURITY
ERROR: 
ALTER TABLE rls_tbl FORCE ROW LEVEL SECURITY

Parser Error: syntax error at or near "FORCE"


INSERT INTO rls_tbl SELECT 10, 20, 30

EXPLAIN (VERBOSE, COSTS OFF)
INSERT INTO rls_tbl
  SELECT * FROM (SELECT b, c FROM rls_tbl ORDER BY a) ss
ERROR: 
EXPLAIN (VERBOSE, COSTS OFF)
INSERT INTO rls_tbl
  SELECT * FROM (SELECT b, c FROM rls_tbl ORDER BY a) ss

Not implemented Error: Unimplemented explain type: VERBOSE

INSERT INTO rls_tbl
  SELECT * FROM (SELECT b, c FROM rls_tbl ORDER BY a) ss
ERROR: 
INSERT INTO rls_tbl
  SELECT * FROM (SELECT b, c FROM rls_tbl ORDER BY a) ss

Binder Error: table rls_tbl has 3 columns but 2 values were supplied

SELECT * FROM rls_tbl
RESULT: 
	[(10, 20, 30)]


DROP TABLE rls_tbl

RESET SESSION AUTHORIZATION
ERROR: 
RESET SESSION AUTHORIZATION

Parser Error: syntax error at or near "AUTHORIZATION"


-- CVE-2023-2455: inlining an SRF may introduce an RLS dependency
create table rls_t (c text)

insert into rls_t values ('invisible to bob')

alter table rls_t enable row level security
ERROR: 
alter table rls_t enable row level security

Parser Error: syntax error at or near "enable"

grant select on rls_t to regress_rls_alice, regress_rls_bob
ERROR: 
grant select on rls_t to regress_rls_alice, regress_rls_bob

Parser Error: syntax error at or near "grant"

create policy p1 on rls_t for select to regress_rls_alice using (true)
ERROR: 
create policy p1 on rls_t for select to regress_rls_alice using (true)

Parser Error: syntax error at or near "policy"

create policy p2 on rls_t for select to regress_rls_bob using (false)
ERROR: 
create policy p2 on rls_t for select to regress_rls_bob using (false)

Parser Error: syntax error at or near "policy"

create function rls_f () returns setof rls_t
  stable language sql
  as $$ select * from rls_t $$
ERROR: 
create function rls_f () returns setof rls_t
  stable language sql
  as $$ select * from rls_t $$

Parser Error: syntax error at or near "returns"

prepare q as select current_user, * from rls_f()
ERROR: 
prepare q as select current_user, * from rls_f()

Catalog Error: Table Function with name rls_f does not exist!
Did you mean "glob"?
LINE 2: ...repare q as select current_user, * from rls_f()
                                                  ^

set role regress_rls_alice
ERROR: 
set role regress_rls_alice

Parser Error: syntax error at or near "regress_rls_alice"

execute q
ERROR: 
execute q

Binder Error: Prepared statement "q" does not exist

set role regress_rls_bob
ERROR: 
set role regress_rls_bob

Parser Error: syntax error at or near "regress_rls_bob"

execute q
ERROR: 
execute q

Binder Error: Prepared statement "q" does not exist


RESET ROLE
ERROR: 

RESET ROLE

Catalog Error: unrecognized configuration parameter "ROLE"

Did you mean: "threads", "Calendar", "profile_output", "errors_as_json", "home_directory"

DROP FUNCTION rls_f()
ERROR: 
DROP FUNCTION rls_f()

Parser Error: syntax error at or near "("

DROP TABLE rls_t


--
-- Clean up objects
--
RESET SESSION AUTHORIZATION
ERROR: 

--
-- Clean up objects
--
RESET SESSION AUTHORIZATION

Parser Error: syntax error at or near "AUTHORIZATION"


DROP SCHEMA regress_rls_schema CASCADE


DROP USER regress_rls_alice
ERROR: 

DROP USER regress_rls_alice

Parser Error: syntax error at or near "USER"

DROP USER regress_rls_bob
ERROR: 
DROP USER regress_rls_bob

Parser Error: syntax error at or near "USER"

DROP USER regress_rls_carol
ERROR: 
DROP USER regress_rls_carol

Parser Error: syntax error at or near "USER"

DROP USER regress_rls_dave
ERROR: 
DROP USER regress_rls_dave

Parser Error: syntax error at or near "USER"

DROP USER regress_rls_exempt_user
ERROR: 
DROP USER regress_rls_exempt_user

Parser Error: syntax error at or near "USER"

DROP ROLE regress_rls_group1
ERROR: 
DROP ROLE regress_rls_group1

Parser Error: syntax error at or near "ROLE"

DROP ROLE regress_rls_group2
ERROR: 
DROP ROLE regress_rls_group2

Parser Error: syntax error at or near "ROLE"


-- Arrange to have a few policies left over, for testing
-- pg_dump/pg_restore
CREATE SCHEMA regress_rls_schema

CREATE TABLE rls_tbl (c1 int)

ALTER TABLE rls_tbl ENABLE ROW LEVEL SECURITY
ERROR: 
ALTER TABLE rls_tbl ENABLE ROW LEVEL SECURITY

Parser Error: syntax error at or near "ENABLE"

CREATE POLICY p1 ON rls_tbl USING (c1 > 5)
ERROR: 
CREATE POLICY p1 ON rls_tbl USING (c1 > 5)

Parser Error: syntax error at or near "POLICY"

CREATE POLICY p2 ON rls_tbl FOR SELECT USING (c1 <= 3)
ERROR: 
CREATE POLICY p2 ON rls_tbl FOR SELECT USING (c1 <= 3)

Parser Error: syntax error at or near "POLICY"

CREATE POLICY p3 ON rls_tbl FOR UPDATE USING (c1 <= 3) WITH CHECK (c1 > 5)
ERROR: 
CREATE POLICY p3 ON rls_tbl FOR UPDATE USING (c1 <= 3) WITH CHECK (c1 > 5)

Parser Error: syntax error at or near "POLICY"

CREATE POLICY p4 ON rls_tbl FOR DELETE USING (c1 <= 3)
ERROR: 
CREATE POLICY p4 ON rls_tbl FOR DELETE USING (c1 <= 3)

Parser Error: syntax error at or near "POLICY"


CREATE TABLE rls_tbl_force (c1 int)

ALTER TABLE rls_tbl_force ENABLE ROW LEVEL SECURITY
ERROR: 
ALTER TABLE rls_tbl_force ENABLE ROW LEVEL SECURITY

Parser Error: syntax error at or near "ENABLE"

ALTER TABLE rls_tbl_force FORCE ROW LEVEL SECURITY
ERROR: 
ALTER TABLE rls_tbl_force FORCE ROW LEVEL SECURITY

Parser Error: syntax error at or near "FORCE"

CREATE POLICY p1 ON rls_tbl_force USING (c1 = 5) WITH CHECK (c1 < 5)
ERROR: 
CREATE POLICY p1 ON rls_tbl_force USING (c1 = 5) WITH CHECK (c1 < 5)

Parser Error: syntax error at or near "POLICY"

CREATE POLICY p2 ON rls_tbl_force FOR SELECT USING (c1 = 8)
ERROR: 
CREATE POLICY p2 ON rls_tbl_force FOR SELECT USING (c1 = 8)

Parser Error: syntax error at or near "POLICY"

CREATE POLICY p3 ON rls_tbl_force FOR UPDATE USING (c1 = 8) WITH CHECK (c1 >= 5)
ERROR: 
CREATE POLICY p3 ON rls_tbl_force FOR UPDATE USING (c1 = 8) WITH CHECK (c1 >= 5)

Parser Error: syntax error at or near "POLICY"

CREATE POLICY p4 ON rls_tbl_force FOR DELETE USING (c1 = 8)
ERROR: 
CREATE POLICY p4 ON rls_tbl_force FOR DELETE USING (c1 = 8)

Parser Error: syntax error at or near "POLICY"


