
-----------
QUERY:
--
-- SELECT
--

-- btree index
-- awk /* REPLACED */ ''{if($1<10){print /* REPLACED */ ,}else{next /* REPLACED */ ,}}/* REPLACED */ '' onek.data | sort +0n -1
--
SELECT * FROM onek
   WHERE onek.unique1 < 10
   ORDER BY onek.unique1;
RESULT:
	ERROR - (1146, "Table 'test.onek' doesn't exist")

-----------
QUERY:


--
-- awk /* REPLACED */ ''{if($1<20){print $1,$14 /* REPLACED */ ,}else{next /* REPLACED */ ,}}/* REPLACED */ '' onek.data | sort +0nr -1
--
SELECT onek.unique1, onek.stringu1 FROM onek
   WHERE onek.unique1 < 20
   ORDER BY unique1 using >;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'using >' at line 6")

-----------
QUERY:


--
-- awk /* REPLACED */ ''{if($1>980){print $1,$14 /* REPLACED */ ,}else{next /* REPLACED */ ,}}/* REPLACED */ '' onek.data | sort +1d -2
--
SELECT onek.unique1, onek.stringu1 FROM onek
   WHERE onek.unique1 > 980
   ORDER BY stringu1 using <;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'using <' at line 6")

-----------
QUERY:


--
-- awk /* REPLACED */ ''{if($1>980){print $1,$16 /* REPLACED */ ,}else{next /* REPLACED */ ,}}/* REPLACED */ '' onek.data |
-- sort +1d -2 +0nr -1
--
SELECT onek.unique1, onek.string4 FROM onek
   WHERE onek.unique1 > 980
   ORDER BY string4 using <, unique1 using >;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'using <, unique1 using >' at line 7")

-----------
QUERY:


--
-- awk /* REPLACED */ ''{if($1>980){print $1,$16 /* REPLACED */ ,}else{next /* REPLACED */ ,}}/* REPLACED */ '' onek.data |
-- sort +1dr -2 +0n -1
--
SELECT onek.unique1, onek.string4 FROM onek
   WHERE onek.unique1 > 980
   ORDER BY string4 using >, unique1 using <;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'using >, unique1 using <' at line 7")

-----------
QUERY:


--
-- awk /* REPLACED */ ''{if($1<20){print $1,$16 /* REPLACED */ ,}else{next /* REPLACED */ ,}}/* REPLACED */ '' onek.data |
-- sort +0nr -1 +1d -2
--
SELECT onek.unique1, onek.string4 FROM onek
   WHERE onek.unique1 < 20
   ORDER BY unique1 using >, string4 using <;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'using >, string4 using <' at line 7")

-----------
QUERY:


--
-- awk /* REPLACED */ ''{if($1<20){print $1,$16 /* REPLACED */ ,}else{next /* REPLACED */ ,}}/* REPLACED */ '' onek.data |
-- sort +0n -1 +1dr -2
--
SELECT onek.unique1, onek.string4 FROM onek
   WHERE onek.unique1 < 20
   ORDER BY unique1 using <, string4 using >;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'using <, string4 using >' at line 7")

-----------
QUERY:


--
-- test partial btree indexes
--
-- As of 7.2, planner probably won/* REPLACED */ ''t pick an indexscan without stats,
-- so ANALYZE first.  Also, we want to prevent it from picking a bitmapscan
-- followed by sort, because that could hide index ordering problems.
--
ANALYZE onek2;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'onek2' at line 8")

-----------
QUERY:


SET enable_seqscan TO off;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'TO off' at line 1")

-----------
QUERY:

SET enable_bitmapscan TO off;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'TO off' at line 1")

-----------
QUERY:

SET enable_sort TO off;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'TO off' at line 1")

-----------
QUERY:


--
-- awk /* REPLACED */ ''{if($1<10){print $0 /* REPLACED */ ,}else{next /* REPLACED */ ,}}/* REPLACED */ '' onek.data | sort +0n -1
--
SELECT onek2.* FROM onek2 WHERE onek2.unique1 < 10;
RESULT:
	ERROR - (1146, "Table 'test.onek2' doesn't exist")

-----------
QUERY:


--
-- awk /* REPLACED */ ''{if($1<20){print $1,$14 /* REPLACED */ ,}else{next /* REPLACED */ ,}}/* REPLACED */ '' onek.data | sort +0nr -1
--
SELECT onek2.unique1, onek2.stringu1 FROM onek2
    WHERE onek2.unique1 < 20
    ORDER BY unique1 using >;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'using >' at line 6")

-----------
QUERY:


--
-- awk /* REPLACED */ ''{if($1>980){print $1,$14 /* REPLACED */ ,}else{next /* REPLACED */ ,}}/* REPLACED */ '' onek.data | sort +1d -2
--
SELECT onek2.unique1, onek2.stringu1 FROM onek2
   WHERE onek2.unique1 > 980;
RESULT:
	ERROR - (1146, "Table 'test.onek2' doesn't exist")

-----------
QUERY:


RESET enable_seqscan;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'enable_seqscan' at line 1")

-----------
QUERY:

RESET enable_bitmapscan;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'enable_bitmapscan' at line 1")

-----------
QUERY:

RESET enable_sort;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'enable_sort' at line 1")

-----------
QUERY:


--
-- awk /* REPLACED */ ''{print $1,$2 /* REPLACED */ ,}/* REPLACED */ '' person.data |
-- awk /* REPLACED */ ''{if(NF!=2){print $3,$2 /* REPLACED */ ,}else{print /* REPLACED */ ,}}/* REPLACED */ '' - emp.data |
-- awk /* REPLACED */ ''{if(NF!=2){print $3,$2 /* REPLACED */ ,}else{print /* REPLACED */ ,}}/* REPLACED */ '' - student.data |
-- awk /* REPLACED */ ''BEGIN{FS=/* REPLACED */ ''      /* REPLACED */ '' /* REPLACED */ ,}{if(NF!=2){print $4,$5 /* REPLACED */ ,}else{print /* REPLACED */ ,}}/* REPLACED */ '' - stud_emp.data
--
-- SELECT name, age FROM person* /* REPLACED */ , ??? check if different
SELECT p.name, p.age FROM person* p;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '* p' at line 8")

-----------
QUERY:


--
-- awk /* REPLACED */ ''{print $1,$2 /* REPLACED */ ,}/* REPLACED */ '' person.data |
-- awk /* REPLACED */ ''{if(NF!=2){print $3,$2 /* REPLACED */ ,}else{print /* REPLACED */ ,}}/* REPLACED */ '' - emp.data |
-- awk /* REPLACED */ ''{if(NF!=2){print $3,$2 /* REPLACED */ ,}else{print /* REPLACED */ ,}}/* REPLACED */ '' - student.data |
-- awk /* REPLACED */ ''BEGIN{FS=/* REPLACED */ ''      /* REPLACED */ '' /* REPLACED */ ,}{if(NF!=1){print $4,$5 /* REPLACED */ ,}else{print /* REPLACED */ ,}}/* REPLACED */ '' - stud_emp.data |
-- sort +1nr -2
--
SELECT p.name, p.age FROM person* p ORDER BY age using >, name;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '* p ORDER BY age using >, name' at line 8")

-----------
QUERY:


--
-- Test some cases involving whole-row Var referencing a subquery
--
select foo from (select 1 offset 0) as foo;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '0) as foo' at line 4")

-----------
QUERY:

select foo from (select null offset 0) as foo;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '0) as foo' at line 1")

-----------
QUERY:

select foo from (select 'xyzzy',1,null offset 0) as foo;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '0) as foo' at line 1")

-----------
QUERY:


--
-- Test VALUES lists
--
select * from onek, (values(147, 'RFAAAA'), (931, 'VJAAAA')) as v (i, j)
    WHERE onek.unique1 = v.i and onek.stringu1 = v.j;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(147, 'RFAAAA'), (931, 'VJAAAA')) as v (i, j)\n    WHERE onek.unique1 = v.i and o' at line 4")

-----------
QUERY:


-- a more complex case
-- looks like we/* REPLACED */ ''re coding lisp :-)
select * from onek,
  (values ((select i from
    (values(10000), (2), (389), (1000), (2000), ((select 10029))) as foo(i)
    order by i asc limit 1))) bar (i)
  where onek.unique1 = bar.i;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '((select i from\n    (values(10000), (2), (389), (1000), (2000), ((select 10029))' at line 4")

-----------
QUERY:


-- try VALUES in a subquery
select * from onek
    where (unique1,ten) in (values (1,1), (20,0), (99,9), (17,99))
    order by unique1;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '1,1), (20,0), (99,9), (17,99))\n    order by unique1' at line 3")

-----------
QUERY:


-- VALUES is also legal as a standalone query or a set-operation member
VALUES (1,2), (3,4+4), (7,77.7);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(1,2), (3,4+4), (7,77.7)' at line 2")

-----------
QUERY:


VALUES (1,2), (3,4+4), (7,77.7)
UNION ALL
SELECT 2+2, 57
UNION ALL
TABLE int8_tbl;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(1,2), (3,4+4), (7,77.7)\nUNION ALL\nSELECT 2+2, 57\nUNION ALL\nTABLE int8_tbl' at line 1")

-----------
QUERY:


-- corner case: VALUES with no columns
CREATE TEMP TABLE nocols();
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'TEMP TABLE nocols()' at line 2")

-----------
QUERY:

INSERT INTO nocols DEFAULT VALUES;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'DEFAULT VALUES' at line 1")

-----------
QUERY:

SELECT * FROM nocols n, LATERAL (VALUES(n.*)) v;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(n.*)) v' at line 1")

-----------
QUERY:


--
-- Test ORDER BY options
--

CREATE TEMP TABLE foo (f1 int);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'TEMP TABLE foo (f1 int)' at line 5")

-----------
QUERY:


INSERT INTO foo VALUES (42),(3),(10),(7),(null),(null),(1);
RESULT:
	ERROR - (1146, "Table 'test.foo' doesn't exist")

-----------
QUERY:


SELECT * FROM foo ORDER BY f1;
RESULT:
	ERROR - (1146, "Table 'test.foo' doesn't exist")

-----------
QUERY:

SELECT * FROM foo ORDER BY f1 ASC;
RESULT:
	ERROR - (1146, "Table 'test.foo' doesn't exist")

-----------
QUERY:
	-- same thing
SELECT * FROM foo ORDER BY f1 NULLS FIRST;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'NULLS FIRST' at line 2")

-----------
QUERY:

SELECT * FROM foo ORDER BY f1 DESC;
RESULT:
	ERROR - (1146, "Table 'test.foo' doesn't exist")

-----------
QUERY:

SELECT * FROM foo ORDER BY f1 DESC NULLS LAST;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'NULLS LAST' at line 1")

-----------
QUERY:


-- check if indexscans do the right things
CREATE INDEX fooi ON foo (f1);
RESULT:
	ERROR - (1146, "Table 'test.foo' doesn't exist")

-----------
QUERY:

SET enable_sort = false;
RESULT:
	ERROR - (1193, "Unknown system variable 'enable_sort'")

-----------
QUERY:


SELECT * FROM foo ORDER BY f1;
RESULT:
	ERROR - (1146, "Table 'test.foo' doesn't exist")

-----------
QUERY:

SELECT * FROM foo ORDER BY f1 NULLS FIRST;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'NULLS FIRST' at line 1")

-----------
QUERY:

SELECT * FROM foo ORDER BY f1 DESC;
RESULT:
	ERROR - (1146, "Table 'test.foo' doesn't exist")

-----------
QUERY:

SELECT * FROM foo ORDER BY f1 DESC NULLS LAST;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'NULLS LAST' at line 1")

-----------
QUERY:


DROP INDEX fooi;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 1")

-----------
QUERY:

CREATE INDEX fooi ON foo (f1 DESC);
RESULT:
	ERROR - (1146, "Table 'test.foo' doesn't exist")

-----------
QUERY:


SELECT * FROM foo ORDER BY f1;
RESULT:
	ERROR - (1146, "Table 'test.foo' doesn't exist")

-----------
QUERY:

SELECT * FROM foo ORDER BY f1 NULLS FIRST;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'NULLS FIRST' at line 1")

-----------
QUERY:

SELECT * FROM foo ORDER BY f1 DESC;
RESULT:
	ERROR - (1146, "Table 'test.foo' doesn't exist")

-----------
QUERY:

SELECT * FROM foo ORDER BY f1 DESC NULLS LAST;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'NULLS LAST' at line 1")

-----------
QUERY:


DROP INDEX fooi;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 1")

-----------
QUERY:

CREATE INDEX fooi ON foo (f1 DESC NULLS LAST);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'NULLS LAST)' at line 1")

-----------
QUERY:


SELECT * FROM foo ORDER BY f1;
RESULT:
	ERROR - (1146, "Table 'test.foo' doesn't exist")

-----------
QUERY:

SELECT * FROM foo ORDER BY f1 NULLS FIRST;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'NULLS FIRST' at line 1")

-----------
QUERY:

SELECT * FROM foo ORDER BY f1 DESC;
RESULT:
	ERROR - (1146, "Table 'test.foo' doesn't exist")

-----------
QUERY:

SELECT * FROM foo ORDER BY f1 DESC NULLS LAST;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'NULLS LAST' at line 1")

-----------
QUERY:


--
-- Test planning of some cases with partial indexes
--

-- partial index is usable
explain (costs off)
select * from onek2 where unique2 = 11 and stringu1 = 'ATAAAA';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'costs off)\nselect * from onek2 where unique2 = 11 and stringu1 = 'ATAAAA'' at line 6")

-----------
QUERY:

select * from onek2 where unique2 = 11 and stringu1 = 'ATAAAA';
RESULT:
	ERROR - (1146, "Table 'test.onek2' doesn't exist")

-----------
QUERY:

-- actually run the query with an analyze to use the partial index
explain (costs off, analyze on, timing off, summary off)
select * from onek2 where unique2 = 11 and stringu1 = 'ATAAAA';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'costs off, analyze on, timing off, summary off)\nselect * from onek2 where unique' at line 2")

-----------
QUERY:

explain (costs off)
select unique2 from onek2 where unique2 = 11 and stringu1 = 'ATAAAA';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'costs off)\nselect unique2 from onek2 where unique2 = 11 and stringu1 = 'ATAAAA'' at line 1")

-----------
QUERY:

select unique2 from onek2 where unique2 = 11 and stringu1 = 'ATAAAA';
RESULT:
	ERROR - (1146, "Table 'test.onek2' doesn't exist")

-----------
QUERY:

-- partial index predicate implies clause, so no need for retest
explain (costs off)
select * from onek2 where unique2 = 11 and stringu1 < 'B';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'costs off)\nselect * from onek2 where unique2 = 11 and stringu1 < 'B'' at line 2")

-----------
QUERY:

select * from onek2 where unique2 = 11 and stringu1 < 'B';
RESULT:
	ERROR - (1146, "Table 'test.onek2' doesn't exist")

-----------
QUERY:

explain (costs off)
select unique2 from onek2 where unique2 = 11 and stringu1 < 'B';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'costs off)\nselect unique2 from onek2 where unique2 = 11 and stringu1 < 'B'' at line 1")

-----------
QUERY:

select unique2 from onek2 where unique2 = 11 and stringu1 < 'B';
RESULT:
	ERROR - (1146, "Table 'test.onek2' doesn't exist")

-----------
QUERY:

-- but if it/* REPLACED */ ''s an update target, must retest anyway
explain (costs off)
select unique2 from onek2 where unique2 = 11 and stringu1 < 'B' for update;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'costs off)\nselect unique2 from onek2 where unique2 = 11 and stringu1 < 'B' for u' at line 2")

-----------
QUERY:

select unique2 from onek2 where unique2 = 11 and stringu1 < 'B' for update;
RESULT:
	ERROR - (1146, "Table 'test.onek2' doesn't exist")

-----------
QUERY:

-- partial index is not applicable
explain (costs off)
select unique2 from onek2 where unique2 = 11 and stringu1 < 'C';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'costs off)\nselect unique2 from onek2 where unique2 = 11 and stringu1 < 'C'' at line 2")

-----------
QUERY:

select unique2 from onek2 where unique2 = 11 and stringu1 < 'C';
RESULT:
	ERROR - (1146, "Table 'test.onek2' doesn't exist")

-----------
QUERY:

-- partial index implies clause, but bitmap scan must recheck predicate anyway
SET enable_indexscan TO off;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'TO off' at line 2")

-----------
QUERY:

explain (costs off)
select unique2 from onek2 where unique2 = 11 and stringu1 < 'B';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'costs off)\nselect unique2 from onek2 where unique2 = 11 and stringu1 < 'B'' at line 1")

-----------
QUERY:

select unique2 from onek2 where unique2 = 11 and stringu1 < 'B';
RESULT:
	ERROR - (1146, "Table 'test.onek2' doesn't exist")

-----------
QUERY:

RESET enable_indexscan;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'enable_indexscan' at line 1")

-----------
QUERY:

-- check multi-index cases too
explain (costs off)
select unique1, unique2 from onek2
  where (unique2 = 11 or unique1 = 0) and stringu1 < 'B';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'costs off)\nselect unique1, unique2 from onek2\n  where (unique2 = 11 or unique1 =' at line 2")

-----------
QUERY:

select unique1, unique2 from onek2
  where (unique2 = 11 or unique1 = 0) and stringu1 < 'B';
RESULT:
	ERROR - (1146, "Table 'test.onek2' doesn't exist")

-----------
QUERY:

explain (costs off)
select unique1, unique2 from onek2
  where (unique2 = 11 and stringu1 < 'B') or unique1 = 0;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'costs off)\nselect unique1, unique2 from onek2\n  where (unique2 = 11 and stringu1' at line 1")

-----------
QUERY:

select unique1, unique2 from onek2
  where (unique2 = 11 and stringu1 < 'B') or unique1 = 0;
RESULT:
	ERROR - (1146, "Table 'test.onek2' doesn't exist")

-----------
QUERY:


--
-- Test some corner cases that have been known to confuse the planner
--

-- ORDER BY on a constant doesn/* REPLACED */ ''t really need any sorting
SELECT 1 AS x ORDER BY x;
RESULT:
	((1,),)

-----------
QUERY:


-- But ORDER BY on a set-valued expression does
create function sillysrf(int) returns setof int as
  'values (1),(10),(2),($1)' language sql immutable;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'int) returns setof int as\n  'values (1),(10),(2),($1)' language sql immutable' at line 2")

-----------
QUERY:


select sillysrf(42);
RESULT:
	ERROR - (1305, 'FUNCTION test.sillysrf does not exist')

-----------
QUERY:

select sillysrf(-1) order by 1;
RESULT:
	ERROR - (1305, 'FUNCTION test.sillysrf does not exist')

-----------
QUERY:


drop function sillysrf(int);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(int)' at line 1")

-----------
QUERY:


-- X = X isn/* REPLACED */ ''t a no-op, it/* REPLACED */ ''s effectively X IS NOT NULL assuming = is strict
-- (see bug #5084)
select * from (values (2),(null),(1)) v(k) where k = k order by k;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(2),(null),(1)) v(k) where k = k order by k' at line 3")

-----------
QUERY:

select * from (values (2),(null),(1)) v(k) where k = k;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(2),(null),(1)) v(k) where k = k' at line 1")

-----------
QUERY:


-- Test partitioned tables with no partitions, which should be handled the
-- same as the non-inheritance case when expanding its RTE.
create table list_parted_tbl (a int,b int) partition by list (a);
RESULT:
	ERROR - (1492, 'For LIST partitions each partition must be defined')

-----------
QUERY:

create table list_parted_tbl1 partition of list_parted_tbl
  for values in (1) partition by list(b);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'of list_parted_tbl\n  for values in (1) partition by list(b)' at line 1")

-----------
QUERY:

explain (costs off) select * from list_parted_tbl;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'costs off) select * from list_parted_tbl' at line 1")

-----------
QUERY:

drop table list_parted_tbl;
RESULT:
	ERROR - (1051, "Unknown table 'test.list_parted_tbl'")
