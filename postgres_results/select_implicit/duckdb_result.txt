
-----------
QUERY:
--
-- SELECT_IMPLICIT
-- Test cases for queries with ordering terms missing from the target list.
-- This used to be called /* REPLACED */''junkfilter.sql/* REPLACED */''.
-- The parser uses the term /* REPLACED */''resjunk/* REPLACED */'' to handle these cases.
-- - thomas 1998-07-09
--

-- load test data
CREATE TABLE test_missing_target (a int, b int, c char(8), d char);
RESULT:
	duckdb: []

-----------
QUERY:

INSERT INTO test_missing_target VALUES (0, 1, 'XXXX', 'A');
RESULT:
	duckdb: []

-----------
QUERY:

INSERT INTO test_missing_target VALUES (1, 2, 'ABAB', 'b');
RESULT:
	duckdb: []

-----------
QUERY:

INSERT INTO test_missing_target VALUES (2, 2, 'ABAB', 'c');
RESULT:
	duckdb: []

-----------
QUERY:

INSERT INTO test_missing_target VALUES (3, 3, 'BBBB', 'D');
RESULT:
	duckdb: []

-----------
QUERY:

INSERT INTO test_missing_target VALUES (4, 3, 'BBBB', 'e');
RESULT:
	duckdb: []

-----------
QUERY:

INSERT INTO test_missing_target VALUES (5, 3, 'bbbb', 'F');
RESULT:
	duckdb: []

-----------
QUERY:

INSERT INTO test_missing_target VALUES (6, 4, 'cccc', 'g');
RESULT:
	duckdb: []

-----------
QUERY:

INSERT INTO test_missing_target VALUES (7, 4, 'cccc', 'h');
RESULT:
	duckdb: []

-----------
QUERY:

INSERT INTO test_missing_target VALUES (8, 4, 'CCCC', 'I');
RESULT:
	duckdb: []

-----------
QUERY:

INSERT INTO test_missing_target VALUES (9, 4, 'CCCC', 'j');
RESULT:
	duckdb: []

-----------
QUERY:



--   w/ existing GROUP BY target
SELECT c, count(*) FROM test_missing_target GROUP BY test_missing_target.c ORDER BY c;
RESULT:
	duckdb: [('ABAB', 2), ('BBBB', 2), ('CCCC', 2), ('XXXX', 1), ('bbbb', 1), ('cccc', 2)]

-----------
QUERY:


--   w/o existing GROUP BY target using a relation name in GROUP BY clause
SELECT count(*) FROM test_missing_target GROUP BY test_missing_target.c ORDER BY c;
RESULT:
	duckdb: [(2,), (2,), (2,), (1,), (1,), (2,)]

-----------
QUERY:


--   w/o existing GROUP BY target and w/o existing a different ORDER BY target
--   failure expected
SELECT count(*) FROM test_missing_target GROUP BY a ORDER BY b;
RESULT:
	duckdb: ERROR - Binder Error: column "b" must appear in the GROUP BY clause or must be part of an aggregate function.
Either add it to the GROUP BY list, or use "ANY_VALUE(b)" if the exact value of "b" is not important.

-----------
QUERY:


--   w/o existing GROUP BY target and w/o existing same ORDER BY target
SELECT count(*) FROM test_missing_target GROUP BY b ORDER BY b;
RESULT:
	duckdb: [(1,), (2,), (3,), (4,)]

-----------
QUERY:


--   w/ existing GROUP BY target using a relation name in target
SELECT test_missing_target.b, count(*)
  FROM test_missing_target GROUP BY b ORDER BY b;
RESULT:
	duckdb: [(1, 1), (2, 2), (3, 3), (4, 4)]

-----------
QUERY:


--   w/o existing GROUP BY target
SELECT c FROM test_missing_target ORDER BY a;
RESULT:
	duckdb: [('XXXX',), ('ABAB',), ('ABAB',), ('BBBB',), ('BBBB',), ('bbbb',), ('cccc',), ('cccc',), ('CCCC',), ('CCCC',)]

-----------
QUERY:


--   w/o existing ORDER BY target
SELECT count(*) FROM test_missing_target GROUP BY b ORDER BY b desc;
RESULT:
	duckdb: [(4,), (3,), (2,), (1,)]

-----------
QUERY:


--   group using reference number
SELECT count(*) FROM test_missing_target ORDER BY 1 desc;
RESULT:
	duckdb: [(10,)]

-----------
QUERY:


--   order using reference number
SELECT c, count(*) FROM test_missing_target GROUP BY 1 ORDER BY 1;
RESULT:
	duckdb: [('ABAB', 2), ('BBBB', 2), ('CCCC', 2), ('XXXX', 1), ('bbbb', 1), ('cccc', 2)]

-----------
QUERY:


--   group using reference number out of range
--   failure expected
SELECT c, count(*) FROM test_missing_target GROUP BY 3;
RESULT:
	duckdb: ERROR - Binder Error: GROUP BY term out of range - should be between 1 and 2

-----------
QUERY:


--   group w/o existing GROUP BY and ORDER BY target under ambiguous condition
--   failure expected
SELECT count(*) FROM test_missing_target x, test_missing_target y
	WHERE x.a = y.a
	GROUP BY b ORDER BY b;
RESULT:
	duckdb: ERROR - Binder Error: Ambiguous reference to column name "b" (use: "y.b" or "x.b")

-----------
QUERY:


--   order w/ target under ambiguous condition
--   failure NOT expected
SELECT a, a FROM test_missing_target
	ORDER BY a;
RESULT:
	duckdb: [(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9)]

-----------
QUERY:


--   order expression w/ target under ambiguous condition
--   failure NOT expected
SELECT a/2, a/2 FROM test_missing_target
	ORDER BY a/2;
RESULT:
	duckdb: [(0.0, 0.0), (0.5, 0.5), (1.0, 1.0), (1.5, 1.5), (2.0, 2.0), (2.5, 2.5), (3.0, 3.0), (3.5, 3.5), (4.0, 4.0), (4.5, 4.5)]

-----------
QUERY:


--   group expression w/ target under ambiguous condition
--   failure NOT expected
SELECT a/2, a/2 FROM test_missing_target
	GROUP BY a/2 ORDER BY a/2;
RESULT:
	duckdb: [(0.0, 0.0), (0.5, 0.5), (1.0, 1.0), (1.5, 1.5), (2.0, 2.0), (2.5, 2.5), (3.0, 3.0), (3.5, 3.5), (4.0, 4.0), (4.5, 4.5)]

-----------
QUERY:


--   group w/ existing GROUP BY target under ambiguous condition
SELECT x.b, count(*) FROM test_missing_target x, test_missing_target y
	WHERE x.a = y.a
	GROUP BY x.b ORDER BY x.b;
RESULT:
	duckdb: [(1, 1), (2, 2), (3, 3), (4, 4)]

-----------
QUERY:


--   group w/o existing GROUP BY target under ambiguous condition
SELECT count(*) FROM test_missing_target x, test_missing_target y
	WHERE x.a = y.a
	GROUP BY x.b ORDER BY x.b;
RESULT:
	duckdb: [(1,), (2,), (3,), (4,)]

-----------
QUERY:


--   group w/o existing GROUP BY target under ambiguous condition
--   into a table
CREATE TABLE test_missing_target2 AS
SELECT count(*)
FROM test_missing_target x, test_missing_target y
	WHERE x.a = y.a
	GROUP BY x.b ORDER BY x.b;
RESULT:
	duckdb: []

-----------
QUERY:

SELECT * FROM test_missing_target2;
RESULT:
	duckdb: [(1,), (2,), (3,), (4,)]

-----------
QUERY:



--  Functions and expressions

--   w/ existing GROUP BY target
SELECT a%2, count(b) FROM test_missing_target
GROUP BY test_missing_target.a%2
ORDER BY test_missing_target.a%2;
RESULT:
	duckdb: [(0, 5), (1, 5)]

-----------
QUERY:


--   w/o existing GROUP BY target using a relation name in GROUP BY clause
SELECT count(c) FROM test_missing_target
GROUP BY lower(test_missing_target.c)
ORDER BY lower(test_missing_target.c);
RESULT:
	duckdb: [(2,), (3,), (4,), (1,)]

-----------
QUERY:


--   w/o existing GROUP BY target and w/o existing a different ORDER BY target
--   failure expected
SELECT count(a) FROM test_missing_target GROUP BY a ORDER BY b;
RESULT:
	duckdb: ERROR - Binder Error: column "b" must appear in the GROUP BY clause or must be part of an aggregate function.
Either add it to the GROUP BY list, or use "ANY_VALUE(b)" if the exact value of "b" is not important.

-----------
QUERY:


--   w/o existing GROUP BY target and w/o existing same ORDER BY target
SELECT count(b) FROM test_missing_target GROUP BY b/2 ORDER BY b/2;
RESULT:
	duckdb: [(1,), (2,), (3,), (4,)]

-----------
QUERY:


--   w/ existing GROUP BY target using a relation name in target
SELECT lower(test_missing_target.c), count(c)
  FROM test_missing_target GROUP BY lower(c) ORDER BY lower(c);
RESULT:
	duckdb: [('abab', 2), ('bbbb', 3), ('cccc', 4), ('xxxx', 1)]

-----------
QUERY:


--   w/o existing GROUP BY target
SELECT a FROM test_missing_target ORDER BY upper(d);
RESULT:
	duckdb: [(0,), (1,), (2,), (3,), (4,), (5,), (6,), (7,), (8,), (9,)]

-----------
QUERY:


--   w/o existing ORDER BY target
SELECT count(b) FROM test_missing_target
	GROUP BY (b + 1) / 2 ORDER BY (b + 1) / 2 desc;
RESULT:
	duckdb: [(4,), (3,), (2,), (1,)]

-----------
QUERY:


--   group w/o existing GROUP BY and ORDER BY target under ambiguous condition
--   failure expected
SELECT count(x.a) FROM test_missing_target x, test_missing_target y
	WHERE x.a = y.a
	GROUP BY b/2 ORDER BY b/2;
RESULT:
	duckdb: ERROR - Binder Error: Ambiguous reference to column name "b" (use: "y.b" or "x.b")

-----------
QUERY:


--   group w/ existing GROUP BY target under ambiguous condition
SELECT x.b/2, count(x.b) FROM test_missing_target x, test_missing_target y
	WHERE x.a = y.a
	GROUP BY x.b/2 ORDER BY x.b/2;
RESULT:
	duckdb: [(0.5, 1), (1.0, 2), (1.5, 3), (2.0, 4)]

-----------
QUERY:


--   group w/o existing GROUP BY target under ambiguous condition
--   failure expected due to ambiguous b in count(b)
SELECT count(b) FROM test_missing_target x, test_missing_target y
	WHERE x.a = y.a
	GROUP BY x.b/2;
RESULT:
	duckdb: ERROR - Binder Error: Ambiguous reference to column name "b" (use: "y.b" or "x.b")

-----------
QUERY:


--   group w/o existing GROUP BY target under ambiguous condition
--   into a table
CREATE TABLE test_missing_target3 AS
SELECT count(x.b)
FROM test_missing_target x, test_missing_target y
	WHERE x.a = y.a
	GROUP BY x.b/2 ORDER BY x.b/2;
RESULT:
	duckdb: []

-----------
QUERY:

SELECT * FROM test_missing_target3;
RESULT:
	duckdb: [(1,), (2,), (3,), (4,)]

-----------
QUERY:


--   Cleanup
DROP TABLE test_missing_target;
RESULT:
	duckdb: []

-----------
QUERY:

DROP TABLE test_missing_target2;
RESULT:
	duckdb: []

-----------
QUERY:

DROP TABLE test_missing_target3;
RESULT:
	duckdb: []
