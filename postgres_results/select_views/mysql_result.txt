
-----------
QUERY:
--
-- SELECT_VIEWS
-- test the views defined in CREATE_VIEWS
--

SELECT * FROM street;
RESULT:
	ERROR - (1146, "Table 'test.street' doesn't exist")

-----------
QUERY:


SELECT name, #thepath FROM iexit ORDER BY name COLLATE "C", 2;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 1")

-----------
QUERY:


SELECT * FROM toyemp WHERE name = 'sharon';
RESULT:
	ERROR - (1146, "Table 'test.toyemp' doesn't exist")

-----------
QUERY:


--
-- Test for Leaky view scenario
--
CREATE ROLE regress_alice;
RESULT:
	[]

-----------
QUERY:


CREATE FUNCTION f_leak (text)
       RETURNS bool LANGUAGE 'plpgsql' COST 0.0000001
       AS 'BEGIN RAISE NOTICE ''f_leak => %'', $1;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')\n       RETURNS bool LANGUAGE 'plpgsql' COST 0.0000001\n       AS 'BEGIN RAISE N' at line 1")

-----------
QUERY:
 RETURN true;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'RETURN true' at line 1")

-----------
QUERY:
 END';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'END'' at line 1")

-----------
QUERY:


CREATE TABLE customer (
       cid      int primary key,
       name     text not null,
       tel      text,
       passwd	text
);
RESULT:
	[]

-----------
QUERY:


CREATE TABLE credit_card (
       cid      int references customer(cid),
       cnum     text,
       climit   int
);
RESULT:
	[]

-----------
QUERY:


CREATE TABLE credit_usage (
       cid      int references customer(cid),
       ymd      date,
       usage    int
);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'usage    int\n)' at line 4")

-----------
QUERY:


INSERT INTO customer
       VALUES (101, 'regress_alice', '+81-12-3456-7890', 'passwd123'),
              (102, 'regress_bob',   '+01-234-567-8901', 'beafsteak'),
              (103, 'regress_eve',   '+49-8765-43210',   'hamburger');
RESULT:
	[]

-----------
QUERY:

INSERT INTO credit_card
       VALUES (101, '1111-2222-3333-4444', 4000),
              (102, '5555-6666-7777-8888', 3000),
              (103, '9801-2345-6789-0123', 2000);
RESULT:
	[]

-----------
QUERY:

INSERT INTO credit_usage
       VALUES (101, '2011-09-15', 120),
	      (101, '2011-10-05',  90),
	      (101, '2011-10-18', 110),
	      (101, '2011-10-21', 200),
	      (101, '2011-11-10',  80),
	      (102, '2011-09-22', 300),
	      (102, '2011-10-12', 120),
	      (102, '2011-10-28', 200),
	      (103, '2011-10-15', 480);
RESULT:
	ERROR - (1146, "Table 'test.credit_usage' doesn't exist")

-----------
QUERY:


CREATE VIEW my_property_normal AS
       SELECT * FROM customer WHERE name = current_user;
RESULT:
	[]

-----------
QUERY:

CREATE VIEW my_property_secure WITH (security_barrier) AS
       SELECT * FROM customer WHERE name = current_user;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WITH (security_barrier) AS\n       SELECT * FROM customer WHERE name = current_us' at line 1")

-----------
QUERY:


CREATE VIEW my_credit_card_normal AS
       SELECT * FROM customer l NATURAL JOIN credit_card r
       WHERE l.name = current_user;
RESULT:
	[]

-----------
QUERY:

CREATE VIEW my_credit_card_secure WITH (security_barrier) AS
       SELECT * FROM customer l NATURAL JOIN credit_card r
       WHERE l.name = current_user;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WITH (security_barrier) AS\n       SELECT * FROM customer l NATURAL JOIN credit_c' at line 1")

-----------
QUERY:


CREATE VIEW my_credit_card_usage_normal AS
       SELECT * FROM my_credit_card_secure l NATURAL JOIN credit_usage r;
RESULT:
	ERROR - (1146, "Table 'test.my_credit_card_secure' doesn't exist")

-----------
QUERY:

CREATE VIEW my_credit_card_usage_secure WITH (security_barrier) AS
       SELECT * FROM my_credit_card_secure l NATURAL JOIN credit_usage r;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WITH (security_barrier) AS\n       SELECT * FROM my_credit_card_secure l NATURAL ' at line 1")

-----------
QUERY:


GRANT SELECT ON my_property_normal TO public;
RESULT:
	ERROR - (1410, 'You are not allowed to create a user with GRANT')

-----------
QUERY:

GRANT SELECT ON my_property_secure TO public;
RESULT:
	ERROR - (1146, "Table 'test.my_property_secure' doesn't exist")

-----------
QUERY:

GRANT SELECT ON my_credit_card_normal TO public;
RESULT:
	ERROR - (1410, 'You are not allowed to create a user with GRANT')

-----------
QUERY:

GRANT SELECT ON my_credit_card_secure TO public;
RESULT:
	ERROR - (1146, "Table 'test.my_credit_card_secure' doesn't exist")

-----------
QUERY:

GRANT SELECT ON my_credit_card_usage_normal TO public;
RESULT:
	ERROR - (1146, "Table 'test.my_credit_card_usage_normal' doesn't exist")

-----------
QUERY:

GRANT SELECT ON my_credit_card_usage_secure TO public;
RESULT:
	ERROR - (1146, "Table 'test.my_credit_card_usage_secure' doesn't exist")

-----------
QUERY:


--
-- Run leaky view scenarios
--
SET SESSION AUTHORIZATION regress_alice;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'regress_alice' at line 4")

-----------
QUERY:


--
-- scenario: if a qualifier with tiny-cost is given, it shall be launched
--           prior to the security policy of the view.
--
SELECT * FROM my_property_normal WHERE f_leak(passwd);
RESULT:
	ERROR - (1305, 'FUNCTION test.f_leak does not exist')

-----------
QUERY:

EXPLAIN (COSTS OFF) SELECT * FROM my_property_normal WHERE f_leak(passwd);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'COSTS OFF) SELECT * FROM my_property_normal WHERE f_leak(passwd)' at line 1")

-----------
QUERY:


SELECT * FROM my_property_secure WHERE f_leak(passwd);
RESULT:
	ERROR - (1146, "Table 'test.my_property_secure' doesn't exist")

-----------
QUERY:

EXPLAIN (COSTS OFF) SELECT * FROM my_property_secure WHERE f_leak(passwd);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'COSTS OFF) SELECT * FROM my_property_secure WHERE f_leak(passwd)' at line 1")

-----------
QUERY:


--
-- scenario: qualifiers can be pushed down if they contain leaky functions,
--           provided they aren/* REPLACED */ ''t passed data from inside the view.
--
SELECT * FROM my_property_normal v
		WHERE f_leak('passwd') AND f_leak(passwd);
RESULT:
	ERROR - (1305, 'FUNCTION test.f_leak does not exist')

-----------
QUERY:

EXPLAIN (COSTS OFF) SELECT * FROM my_property_normal v
		WHERE f_leak('passwd') AND f_leak(passwd);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'COSTS OFF) SELECT * FROM my_property_normal v\n\t\tWHERE f_leak('passwd') AND f_lea' at line 1")

-----------
QUERY:


SELECT * FROM my_property_secure v
		WHERE f_leak('passwd') AND f_leak(passwd);
RESULT:
	ERROR - (1146, "Table 'test.my_property_secure' doesn't exist")

-----------
QUERY:

EXPLAIN (COSTS OFF) SELECT * FROM my_property_secure v
		WHERE f_leak('passwd') AND f_leak(passwd);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'COSTS OFF) SELECT * FROM my_property_secure v\n\t\tWHERE f_leak('passwd') AND f_lea' at line 1")

-----------
QUERY:


--
-- scenario: if a qualifier references only one-side of a particular join-
--           tree, it shall be distributed to the most deep scan plan as
--           possible as we can.
--
SELECT * FROM my_credit_card_normal WHERE f_leak(cnum);
RESULT:
	ERROR - (1305, 'FUNCTION test.f_leak does not exist')

-----------
QUERY:

EXPLAIN (COSTS OFF) SELECT * FROM my_credit_card_normal WHERE f_leak(cnum);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'COSTS OFF) SELECT * FROM my_credit_card_normal WHERE f_leak(cnum)' at line 1")

-----------
QUERY:


SELECT * FROM my_credit_card_secure WHERE f_leak(cnum);
RESULT:
	ERROR - (1146, "Table 'test.my_credit_card_secure' doesn't exist")

-----------
QUERY:

EXPLAIN (COSTS OFF) SELECT * FROM my_credit_card_secure WHERE f_leak(cnum);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'COSTS OFF) SELECT * FROM my_credit_card_secure WHERE f_leak(cnum)' at line 1")

-----------
QUERY:


--
-- scenario: an external qualifier can be pushed-down by in-front-of the
--           views with /* REPLACED */ ''security_barrier/* REPLACED */ '' attribute, except for operators
--           implemented with leakproof functions.
--
SELECT * FROM my_credit_card_usage_normal
       WHERE f_leak(cnum) AND ymd >= '2011-10-01' AND ymd < '2011-11-01';
RESULT:
	ERROR - (1146, "Table 'test.my_credit_card_usage_normal' doesn't exist")

-----------
QUERY:

EXPLAIN (COSTS OFF) SELECT * FROM my_credit_card_usage_normal
       WHERE f_leak(cnum) AND ymd >= '2011-10-01' AND ymd < '2011-11-01';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'COSTS OFF) SELECT * FROM my_credit_card_usage_normal\n       WHERE f_leak(cnum) A' at line 1")

-----------
QUERY:


SELECT * FROM my_credit_card_usage_secure
       WHERE f_leak(cnum) AND ymd >= '2011-10-01' AND ymd < '2011-11-01';
RESULT:
	ERROR - (1146, "Table 'test.my_credit_card_usage_secure' doesn't exist")

-----------
QUERY:

EXPLAIN (COSTS OFF) SELECT * FROM my_credit_card_usage_secure
       WHERE f_leak(cnum) AND ymd >= '2011-10-01' AND ymd < '2011-11-01';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'COSTS OFF) SELECT * FROM my_credit_card_usage_secure\n       WHERE f_leak(cnum) A' at line 1")

-----------
QUERY:


--
-- Test for the case when security_barrier gets changed between rewriter
-- and planner stage.
--
PREPARE p1 AS SELECT * FROM my_property_normal WHERE f_leak(passwd);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'AS SELECT * FROM my_property_normal WHERE f_leak(passwd)' at line 5")

-----------
QUERY:

PREPARE p2 AS SELECT * FROM my_property_secure WHERE f_leak(passwd);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'AS SELECT * FROM my_property_secure WHERE f_leak(passwd)' at line 1")

-----------
QUERY:

EXECUTE p1;
RESULT:
	ERROR - (1243, 'Unknown prepared statement handler (p1) given to EXECUTE')

-----------
QUERY:

EXECUTE p2;
RESULT:
	ERROR - (1243, 'Unknown prepared statement handler (p2) given to EXECUTE')

-----------
QUERY:

RESET SESSION AUTHORIZATION;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'SESSION AUTHORIZATION' at line 1")

-----------
QUERY:

ALTER VIEW my_property_normal SET (security_barrier=true);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'SET (security_barrier=true)' at line 1")

-----------
QUERY:

ALTER VIEW my_property_secure SET (security_barrier=false);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'SET (security_barrier=false)' at line 1")

-----------
QUERY:

SET SESSION AUTHORIZATION regress_alice;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'regress_alice' at line 1")

-----------
QUERY:

EXECUTE p1;
RESULT:
	ERROR - (1243, 'Unknown prepared statement handler (p1) given to EXECUTE')

-----------
QUERY:
		-- To be perform as a view with security-barrier
EXECUTE p2;
RESULT:
	ERROR - (1243, 'Unknown prepared statement handler (p2) given to EXECUTE')

-----------
QUERY:
		-- To be perform as a view without security-barrier

-- Cleanup.
RESET SESSION AUTHORIZATION;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'SESSION AUTHORIZATION' at line 4")

-----------
QUERY:

DROP ROLE regress_alice;
RESULT:
	[]
