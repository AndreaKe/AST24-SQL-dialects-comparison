
-----------
QUERY:
--
-- TEMP
-- Test temp relations and indexes
--

-- test temp table/index masking

CREATE TABLE temptest(col int);
RESULT:
	[]

-----------
QUERY:


CREATE INDEX i_temptest ON temptest(col);
RESULT:
	[]

-----------
QUERY:


CREATE TEMP TABLE temptest(tcol int);
RESULT:
	[]

-----------
QUERY:


CREATE INDEX i_temptest ON temptest(tcol);
RESULT:
	[]

-----------
QUERY:


SELECT * FROM temptest;
RESULT:
	[]

-----------
QUERY:


DROP INDEX i_temptest;
RESULT:
	[]

-----------
QUERY:


DROP TABLE temptest;
RESULT:
	[]

-----------
QUERY:


SELECT * FROM temptest;
RESULT:
	[]

-----------
QUERY:


DROP INDEX i_temptest;
RESULT:
	[]

-----------
QUERY:


DROP TABLE temptest;
RESULT:
	[]

-----------
QUERY:


-- test temp table selects

CREATE TABLE temptest(col int);
RESULT:
	[]

-----------
QUERY:


INSERT INTO temptest VALUES (1);
RESULT:
	[]

-----------
QUERY:


CREATE TEMP TABLE temptest(tcol float);
RESULT:
	[]

-----------
QUERY:


INSERT INTO temptest VALUES (2.1);
RESULT:
	[]

-----------
QUERY:


SELECT * FROM temptest;
RESULT:
	[(2.0999999046325684,)]

-----------
QUERY:


DROP TABLE temptest;
RESULT:
	[]

-----------
QUERY:


SELECT * FROM temptest;
RESULT:
	[(1,)]

-----------
QUERY:


DROP TABLE temptest;
RESULT:
	[]

-----------
QUERY:


-- test temp table deletion

CREATE TEMP TABLE temptest(col int);
RESULT:
	[]

-----------
QUERY:


-- \c

SELECT * FROM temptest;
RESULT:
	[]

-----------
QUERY:


-- Test ON COMMIT DELETE ROWS

CREATE TEMP TABLE temptest(col int) ON COMMIT DELETE ROWS;
RESULT:
	ERROR - Not implemented Error: Only ON COMMIT PRESERVE ROWS is supported

-----------
QUERY:


-- while we/* REPLACED */ ''re here, verify successful truncation of index with SQL function
CREATE INDEX ON temptest(bit_length(''));
RESULT:
	ERROR - Not implemented Error: Please provide an index name, e.g., CREATE INDEX my_name ...

-----------
QUERY:


BEGIN;
RESULT:
	[]

-----------
QUERY:

INSERT INTO temptest VALUES (1);
RESULT:
	[]

-----------
QUERY:

INSERT INTO temptest VALUES (2);
RESULT:
	[]

-----------
QUERY:


SELECT * FROM temptest;
RESULT:
	[(1,), (2,)]

-----------
QUERY:

COMMIT;
RESULT:
	[]

-----------
QUERY:


SELECT * FROM temptest;
RESULT:
	[(1,), (2,)]

-----------
QUERY:


DROP TABLE temptest;
RESULT:
	[]

-----------
QUERY:


BEGIN;
RESULT:
	[]

-----------
QUERY:

CREATE TEMP TABLE temptest(col) ON COMMIT DELETE ROWS AS SELECT 1;
RESULT:
	ERROR - Not implemented Error: Unimplemented features for CREATE TABLE as

-----------
QUERY:


SELECT * FROM temptest;
RESULT:
	ERROR - Catalog Error: Table with name temptest does not exist!
Did you mean "system.information_schema.tables"?

-----------
QUERY:

COMMIT;
RESULT:
	[]

-----------
QUERY:


SELECT * FROM temptest;
RESULT:
	ERROR - Catalog Error: Table with name temptest does not exist!
Did you mean "system.information_schema.tables"?

-----------
QUERY:


DROP TABLE temptest;
RESULT:
	ERROR - Catalog Error: Table with name temptest does not exist!
Did you mean "system.information_schema.tables"?

-----------
QUERY:


-- Test ON COMMIT DROP

BEGIN;
RESULT:
	[]

-----------
QUERY:


CREATE TEMP TABLE temptest(col int) ON COMMIT DROP;
RESULT:
	ERROR - Not implemented Error: Only ON COMMIT PRESERVE ROWS is supported

-----------
QUERY:


INSERT INTO temptest VALUES (1);
RESULT:
	ERROR - Catalog Error: Table with name temptest does not exist!
Did you mean "system.information_schema.tables"?

-----------
QUERY:

INSERT INTO temptest VALUES (2);
RESULT:
	ERROR - Catalog Error: Table with name temptest does not exist!
Did you mean "system.information_schema.tables"?

-----------
QUERY:


SELECT * FROM temptest;
RESULT:
	ERROR - Catalog Error: Table with name temptest does not exist!
Did you mean "system.information_schema.tables"?

-----------
QUERY:

COMMIT;
RESULT:
	[]

-----------
QUERY:


SELECT * FROM temptest;
RESULT:
	ERROR - Catalog Error: Table with name temptest does not exist!
Did you mean "system.information_schema.tables"?

-----------
QUERY:


BEGIN;
RESULT:
	[]

-----------
QUERY:

CREATE TEMP TABLE temptest(col) ON COMMIT DROP AS SELECT 1;
RESULT:
	ERROR - Not implemented Error: Unimplemented features for CREATE TABLE as

-----------
QUERY:


SELECT * FROM temptest;
RESULT:
	ERROR - Catalog Error: Table with name temptest does not exist!
Did you mean "system.information_schema.tables"?

-----------
QUERY:

COMMIT;
RESULT:
	[]

-----------
QUERY:


SELECT * FROM temptest;
RESULT:
	ERROR - Catalog Error: Table with name temptest does not exist!
Did you mean "system.information_schema.tables"?

-----------
QUERY:


-- Test it with a CHECK condition that produces a toasted pg_constraint entry
BEGIN;
RESULT:
	[]

-----------
QUERY:

do $$
begin
  execute format($cmd$
    CREATE TEMP TABLE temptest (col text CHECK (col < %L)) ON COMMIT DROP
  $cmd$,
    (SELECT string_agg(g.i::text || ':' || random()::text, '|')
     FROM generate_series(1, 100) g(i)));
end$$;
RESULT:
	ERROR - Parser Error: syntax error at or near "do"

-----------
QUERY:


SELECT * FROM temptest;
RESULT:
	ERROR - Catalog Error: Table with name temptest does not exist!
Did you mean "system.information_schema.tables"?

-----------
QUERY:

COMMIT;
RESULT:
	[]

-----------
QUERY:


SELECT * FROM temptest;
RESULT:
	ERROR - Catalog Error: Table with name temptest does not exist!
Did you mean "system.information_schema.tables"?

-----------
QUERY:


-- ON COMMIT is only allowed for TEMP

CREATE TABLE temptest(col int) ON COMMIT DELETE ROWS;
RESULT:
	[]

-----------
QUERY:

CREATE TABLE temptest(col) ON COMMIT DELETE ROWS AS SELECT 1;
RESULT:
	ERROR - Not implemented Error: Unimplemented features for CREATE TABLE as

-----------
QUERY:


-- Test foreign keys
BEGIN;
RESULT:
	[]

-----------
QUERY:

CREATE TEMP TABLE temptest1(col int PRIMARY KEY);
RESULT:
	[]

-----------
QUERY:

CREATE TEMP TABLE temptest2(col int REFERENCES temptest1)
  ON COMMIT DELETE ROWS;
RESULT:
	ERROR - Not implemented Error: Only ON COMMIT PRESERVE ROWS is supported

-----------
QUERY:

INSERT INTO temptest1 VALUES (1);
RESULT:
	[]

-----------
QUERY:

INSERT INTO temptest2 VALUES (1);
RESULT:
	ERROR - Catalog Error: Table with name temptest2 does not exist!
Did you mean "temptest"?

-----------
QUERY:

COMMIT;
RESULT:
	[]

-----------
QUERY:

SELECT * FROM temptest1;
RESULT:
	[(1,)]

-----------
QUERY:

SELECT * FROM temptest2;
RESULT:
	ERROR - Catalog Error: Table with name temptest2 does not exist!
Did you mean "temptest"?

-----------
QUERY:


BEGIN;
RESULT:
	[]

-----------
QUERY:

CREATE TEMP TABLE temptest3(col int PRIMARY KEY) ON COMMIT DELETE ROWS;
RESULT:
	ERROR - Not implemented Error: Only ON COMMIT PRESERVE ROWS is supported

-----------
QUERY:

CREATE TEMP TABLE temptest4(col int REFERENCES temptest3);
RESULT:
	ERROR - Catalog Error: Table with name temptest3 does not exist!
Did you mean "temptest"?

-----------
QUERY:

COMMIT;
RESULT:
	[]

-----------
QUERY:


-- Test manipulation of temp schema/* REPLACED */ ''s placement in search path

create table public.whereami (f1 text);
RESULT:
	ERROR - Catalog Error: Schema with name public does not exist!

-----------
QUERY:

insert into public.whereami values ('public');
RESULT:
	ERROR - Catalog Error: Table with name whereami does not exist!
Did you mean "pg_catalog.pg_am"?

-----------
QUERY:


create temp table whereami (f1 text);
RESULT:
	[]

-----------
QUERY:

insert into whereami values ('temp');
RESULT:
	[]

-----------
QUERY:


create function public.whoami() returns text
  as $$select 'public'::text$$ language sql;
RESULT:
	ERROR - Parser Error: syntax error at or near "returns"

-----------
QUERY:


create function pg_temp.whoami() returns text
  as $$select 'temp'::text$$ language sql;
RESULT:
	ERROR - Parser Error: syntax error at or near "returns"

-----------
QUERY:


-- default should have pg_temp implicitly first, but only for tables
select * from whereami;
RESULT:
	[('temp',)]

-----------
QUERY:

select whoami();
RESULT:
	ERROR - Catalog Error: Scalar Function with name whoami does not exist!
Did you mean "hamming"?

-----------
QUERY:


-- can list temp first explicitly, but it still doesn/* REPLACED */ ''t affect functions
set search_path = pg_temp, public;
RESULT:
	ERROR - Parser Error: SET needs a single scalar value parameter

-----------
QUERY:

select * from whereami;
RESULT:
	[('temp',)]

-----------
QUERY:

select whoami();
RESULT:
	ERROR - Catalog Error: Scalar Function with name whoami does not exist!
Did you mean "hamming"?

-----------
QUERY:


-- or put it last for security
set search_path = public, pg_temp;
RESULT:
	ERROR - Parser Error: SET needs a single scalar value parameter

-----------
QUERY:

select * from whereami;
RESULT:
	[('temp',)]

-----------
QUERY:

select whoami();
RESULT:
	ERROR - Catalog Error: Scalar Function with name whoami does not exist!
Did you mean "hamming"?

-----------
QUERY:


-- you can invoke a temp function explicitly, though
select pg_temp.whoami();
RESULT:
	ERROR - Catalog Error: Scalar Function with name whoami does not exist!
Did you mean "main.hamming"?

-----------
QUERY:


drop table public.whereami;
RESULT:
	ERROR - Catalog Error: Table with name whereami does not exist!
Did you mean "main.whereami"?

-----------
QUERY:


-- types in temp schema
set search_path = pg_temp, public;
RESULT:
	ERROR - Parser Error: SET needs a single scalar value parameter

-----------
QUERY:

create domain pg_temp.nonempty as text check (value <> '');
RESULT:
	ERROR - Parser Error: syntax error at or near "domain"

-----------
QUERY:

-- function-syntax invocation of types matches rules for functions
select nonempty('');
RESULT:
	ERROR - Catalog Error: Scalar Function with name nonempty does not exist!
Did you mean "cot"?

-----------
QUERY:

select pg_temp.nonempty('');
RESULT:
	ERROR - Catalog Error: Scalar Function with name nonempty does not exist!
Did you mean "main.cot"?

-----------
QUERY:

-- other syntax matches rules for tables
select ''::nonempty;
RESULT:
	ERROR - Catalog Error: Type with name nonempty does not exist!
Did you mean "int"?

-----------
QUERY:


reset search_path;
RESULT:
	[]

-----------
QUERY:


-- For partitioned temp tables, ON COMMIT actions ignore storage-less
-- partitioned tables.
begin;
RESULT:
	[]

-----------
QUERY:

create temp table temp_parted_oncommit (a int)
  partition by list (a) on commit delete rows;
RESULT:
	ERROR - Parser Error: syntax error at or near "partition"

-----------
QUERY:

create temp table temp_parted_oncommit_1
  partition of temp_parted_oncommit
  for values in (1) on commit delete rows;
RESULT:
	ERROR - Parser Error: syntax error at or near "partition"

-----------
QUERY:

insert into temp_parted_oncommit values (1);
RESULT:
	ERROR - Catalog Error: Table with name temp_parted_oncommit does not exist!
Did you mean "temptest"?

-----------
QUERY:

commit;
RESULT:
	[]

-----------
QUERY:

-- partitions are emptied by the previous commit
select * from temp_parted_oncommit;
RESULT:
	ERROR - Catalog Error: Table with name temp_parted_oncommit does not exist!
Did you mean "temptest"?

-----------
QUERY:

drop table temp_parted_oncommit;
RESULT:
	ERROR - Catalog Error: Table with name temp_parted_oncommit does not exist!
Did you mean "temptest"?

-----------
QUERY:


-- Check dependencies between ON COMMIT actions with a partitioned
-- table and its partitions.  Using ON COMMIT DROP on a parent removes
-- the whole set.
begin;
RESULT:
	[]

-----------
QUERY:

create temp table temp_parted_oncommit_test (a int)
  partition by list (a) on commit drop;
RESULT:
	ERROR - Parser Error: syntax error at or near "partition"

-----------
QUERY:

create temp table temp_parted_oncommit_test1
  partition of temp_parted_oncommit_test
  for values in (1) on commit delete rows;
RESULT:
	ERROR - Parser Error: syntax error at or near "partition"

-----------
QUERY:

create temp table temp_parted_oncommit_test2
  partition of temp_parted_oncommit_test
  for values in (2) on commit drop;
RESULT:
	ERROR - Parser Error: syntax error at or near "partition"

-----------
QUERY:

insert into temp_parted_oncommit_test values (1), (2);
RESULT:
	ERROR - Catalog Error: Table with name temp_parted_oncommit_test does not exist!
Did you mean "temptest"?

-----------
QUERY:

commit;
RESULT:
	[]

-----------
QUERY:

-- no relations remain in this case.
select relname from pg_class where relname ~ '^temp_parted_oncommit_test';
RESULT:
	[]

-----------
QUERY:

-- Using ON COMMIT DELETE on a partitioned table does not remove
-- all rows if partitions preserve their data.
begin;
RESULT:
	[]

-----------
QUERY:

create temp table temp_parted_oncommit_test (a int)
  partition by list (a) on commit delete rows;
RESULT:
	ERROR - Parser Error: syntax error at or near "partition"

-----------
QUERY:

create temp table temp_parted_oncommit_test1
  partition of temp_parted_oncommit_test
  for values in (1) on commit preserve rows;
RESULT:
	ERROR - Parser Error: syntax error at or near "partition"

-----------
QUERY:

create temp table temp_parted_oncommit_test2
  partition of temp_parted_oncommit_test
  for values in (2) on commit drop;
RESULT:
	ERROR - Parser Error: syntax error at or near "partition"

-----------
QUERY:

insert into temp_parted_oncommit_test values (1), (2);
RESULT:
	ERROR - Catalog Error: Table with name temp_parted_oncommit_test does not exist!
Did you mean "temptest"?

-----------
QUERY:

commit;
RESULT:
	[]

-----------
QUERY:

-- Data from the remaining partition is still here as its rows are
-- preserved.
select * from temp_parted_oncommit_test;
RESULT:
	ERROR - Catalog Error: Table with name temp_parted_oncommit_test does not exist!
Did you mean "temptest"?

-----------
QUERY:

-- two relations remain in this case.
select relname from pg_class where relname ~ '^temp_parted_oncommit_test'
  order by relname;
RESULT:
	[]

-----------
QUERY:

drop table temp_parted_oncommit_test;
RESULT:
	ERROR - Catalog Error: Table with name temp_parted_oncommit_test does not exist!
Did you mean "temptest"?

-----------
QUERY:


-- Check dependencies between ON COMMIT actions with inheritance trees.
-- Using ON COMMIT DROP on a parent removes the whole set.
begin;
RESULT:
	[]

-----------
QUERY:

create temp table temp_inh_oncommit_test (a int) on commit drop;
RESULT:
	ERROR - Not implemented Error: Only ON COMMIT PRESERVE ROWS is supported

-----------
QUERY:

create temp table temp_inh_oncommit_test1 ()
  inherits(temp_inh_oncommit_test) on commit delete rows;
RESULT:
	ERROR - Parser Error: syntax error at or near "inherits"

-----------
QUERY:

insert into temp_inh_oncommit_test1 values (1);
RESULT:
	ERROR - Catalog Error: Table with name temp_inh_oncommit_test1 does not exist!
Did you mean "temptest1"?

-----------
QUERY:

commit;
RESULT:
	[]

-----------
QUERY:

-- no relations remain in this case
select relname from pg_class where relname ~ '^temp_inh_oncommit_test';
RESULT:
	[]

-----------
QUERY:

-- Data on the parent is removed, and the child goes away.
begin;
RESULT:
	[]

-----------
QUERY:

create temp table temp_inh_oncommit_test (a int) on commit delete rows;
RESULT:
	ERROR - Not implemented Error: Only ON COMMIT PRESERVE ROWS is supported

-----------
QUERY:

create temp table temp_inh_oncommit_test1 ()
  inherits(temp_inh_oncommit_test) on commit drop;
RESULT:
	ERROR - Parser Error: syntax error at or near "inherits"

-----------
QUERY:

insert into temp_inh_oncommit_test1 values (1);
RESULT:
	ERROR - Catalog Error: Table with name temp_inh_oncommit_test1 does not exist!
Did you mean "temptest1"?

-----------
QUERY:

insert into temp_inh_oncommit_test values (1);
RESULT:
	ERROR - Catalog Error: Table with name temp_inh_oncommit_test does not exist!
Did you mean "temptest"?

-----------
QUERY:

commit;
RESULT:
	[]

-----------
QUERY:

select * from temp_inh_oncommit_test;
RESULT:
	ERROR - Catalog Error: Table with name temp_inh_oncommit_test does not exist!
Did you mean "temptest"?

-----------
QUERY:

-- one relation remains
select relname from pg_class where relname ~ '^temp_inh_oncommit_test';
RESULT:
	[]

-----------
QUERY:

drop table temp_inh_oncommit_test;
RESULT:
	ERROR - Catalog Error: Table with name temp_inh_oncommit_test does not exist!
Did you mean "temptest"?

-----------
QUERY:


-- Tests with two-phase commit
-- Transactions creating objects in a temporary namespace cannot be used
-- with two-phase commit.

-- These cases generate errors about temporary namespace.
-- Function creation
begin;
RESULT:
	[]

-----------
QUERY:

create function pg_temp.twophase_func() returns void as
  $$ select '2pc_func'::text $$ language sql;
RESULT:
	ERROR - Parser Error: syntax error at or near "returns"

-----------
QUERY:

prepare transaction 'twophase_func';
RESULT:
	ERROR - Parser Error: syntax error at or near "'twophase_func'"

-----------
QUERY:

-- Function drop
create function pg_temp.twophase_func() returns void as
  $$ select '2pc_func'::text $$ language sql;
RESULT:
	ERROR - Parser Error: syntax error at or near "returns"

-----------
QUERY:

begin;
RESULT:
	ERROR - TransactionContext Error: cannot start a transaction within a transaction

-----------
QUERY:

drop function pg_temp.twophase_func();
RESULT:
	ERROR - Parser Error: syntax error at or near "("

-----------
QUERY:

prepare transaction 'twophase_func';
RESULT:
	ERROR - Parser Error: syntax error at or near "'twophase_func'"

-----------
QUERY:

-- Operator creation
begin;
RESULT:
	ERROR - Invalid Input Error: Attempting to execute an unsuccessful or closed pending query result
Error: TransactionContext Error: Current transaction is aborted (please ROLLBACK)

-----------
QUERY:

create operator pg_temp.@@ (leftarg = int4, rightarg = int4, procedure = int4mi);
RESULT:
	ERROR - Parser Error: syntax error at or near "operator"

-----------
QUERY:

prepare transaction 'twophase_operator';
RESULT:
	ERROR - Parser Error: syntax error at or near "'twophase_operator'"

-----------
QUERY:


-- These generate errors about temporary tables.
begin;
RESULT:
	ERROR - Invalid Input Error: Attempting to execute an unsuccessful or closed pending query result
Error: TransactionContext Error: Current transaction is aborted (please ROLLBACK)

-----------
QUERY:

create type pg_temp.twophase_type as (a int);
RESULT:
	ERROR - Parser Error: syntax error at or near "("

-----------
QUERY:

prepare transaction 'twophase_type';
RESULT:
	ERROR - Parser Error: syntax error at or near "'twophase_type'"

-----------
QUERY:

begin;
RESULT:
	ERROR - Invalid Input Error: Attempting to execute an unsuccessful or closed pending query result
Error: TransactionContext Error: Current transaction is aborted (please ROLLBACK)

-----------
QUERY:

create view pg_temp.twophase_view as select 1;
RESULT:
	ERROR - Catalog Error: Schema with name pg_temp does not exist!

-----------
QUERY:

prepare transaction 'twophase_view';
RESULT:
	ERROR - Parser Error: syntax error at or near "'twophase_view'"

-----------
QUERY:

begin;
RESULT:
	ERROR - Invalid Input Error: Attempting to execute an unsuccessful or closed pending query result
Error: TransactionContext Error: Current transaction is aborted (please ROLLBACK)

-----------
QUERY:

create sequence pg_temp.twophase_seq;
RESULT:
	ERROR - Catalog Error: Schema with name pg_temp does not exist!

-----------
QUERY:

prepare transaction 'twophase_sequence';
RESULT:
	ERROR - Parser Error: syntax error at or near "'twophase_sequence'"

-----------
QUERY:


-- Temporary tables cannot be used with two-phase commit.
create temp table twophase_tab (a int);
RESULT:
	ERROR - Invalid Input Error: Attempting to execute an unsuccessful or closed pending query result
Error: TransactionContext Error: Current transaction is aborted (please ROLLBACK)

-----------
QUERY:

begin;
RESULT:
	ERROR - Invalid Input Error: Attempting to execute an unsuccessful or closed pending query result
Error: TransactionContext Error: Current transaction is aborted (please ROLLBACK)

-----------
QUERY:

select a from twophase_tab;
RESULT:
	ERROR - TransactionContext Error: Current transaction is aborted (please ROLLBACK)

-----------
QUERY:

prepare transaction 'twophase_tab';
RESULT:
	ERROR - Parser Error: syntax error at or near "'twophase_tab'"

-----------
QUERY:

begin;
RESULT:
	ERROR - Invalid Input Error: Attempting to execute an unsuccessful or closed pending query result
Error: TransactionContext Error: Current transaction is aborted (please ROLLBACK)

-----------
QUERY:

insert into twophase_tab values (1);
RESULT:
	ERROR - Catalog Error: Table with name twophase_tab does not exist!
Did you mean "pg_am"?

-----------
QUERY:

prepare transaction 'twophase_tab';
RESULT:
	ERROR - Parser Error: syntax error at or near "'twophase_tab'"

-----------
QUERY:

begin;
RESULT:
	ERROR - Invalid Input Error: Attempting to execute an unsuccessful or closed pending query result
Error: TransactionContext Error: Current transaction is aborted (please ROLLBACK)

-----------
QUERY:

lock twophase_tab in access exclusive mode;
RESULT:
	ERROR - Parser Error: syntax error at or near "lock"

-----------
QUERY:

prepare transaction 'twophase_tab';
RESULT:
	ERROR - Parser Error: syntax error at or near "'twophase_tab'"

-----------
QUERY:

begin;
RESULT:
	ERROR - Invalid Input Error: Attempting to execute an unsuccessful or closed pending query result
Error: TransactionContext Error: Current transaction is aborted (please ROLLBACK)

-----------
QUERY:

drop table twophase_tab;
RESULT:
	ERROR - Catalog Error: Table with name twophase_tab does not exist!
Did you mean "pg_am"?

-----------
QUERY:

prepare transaction 'twophase_tab';
RESULT:
	ERROR - Parser Error: syntax error at or near "'twophase_tab'"

-----------
QUERY:


-- Corner case: current_schema may create a temporary schema if namespace
-- creation is pending, so check after that.  First reset the connection
-- to remove the temporary namespace.
-- \c -
SET search_path TO 'pg_temp';
RESULT:
	ERROR - Invalid Input Error: Attempting to execute an unsuccessful or closed pending query result
Error: TransactionContext Error: Current transaction is aborted (please ROLLBACK)

-----------
QUERY:

BEGIN;
RESULT:
	ERROR - Invalid Input Error: Attempting to execute an unsuccessful or closed pending query result
Error: TransactionContext Error: Current transaction is aborted (please ROLLBACK)

-----------
QUERY:

SELECT current_schema() ~ 'pg_temp' AS is_temp_schema;
RESULT:
	ERROR - TransactionContext Error: Current transaction is aborted (please ROLLBACK)

-----------
QUERY:

PREPARE TRANSACTION 'twophase_search';
RESULT:
	ERROR - Parser Error: syntax error at or near "'twophase_search'"
