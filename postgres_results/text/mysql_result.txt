
-----------
QUERY:
--
-- TEXT
--

SELECT text 'this is a text string' = text 'this is a text string' AS true;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '= text 'this is a text string' AS true' at line 5")

-----------
QUERY:


SELECT text 'this is a text string' = text 'this is a text strin' AS false;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '= text 'this is a text strin' AS false' at line 1")

-----------
QUERY:


-- text_tbl was already created and filled in test_setup.sql.
SELECT * FROM TEXT_TBL;
RESULT:
	(('doh!',), ('hi de ho neighbor',))

-----------
QUERY:


-- As of 8.3 we have removed most implicit casts to text, so that for example
-- this no longer works:

select length(42);
RESULT:
	((2,),)

-----------
QUERY:


-- But as a special exception for usability/* REPLACED */ ''s sake, we still allow implicit
-- casting to text in concatenations, so long as the other input is text or
-- an unknown literal.  So these work:

select 'four: '::text || 2+2;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::text || 2+2' at line 5")

-----------
QUERY:

select 'four: ' || 2+2;
RESULT:
	((1,),)

-----------
QUERY:


-- but not this:

select 3 || 4.0;
RESULT:
	((1,),)

-----------
QUERY:


/*
 * various string functions
 */
select concat('one');
RESULT:
	(('one',),)

-----------
QUERY:

select concat(1,2,3,'hello',true, false, to_date('20100309','YYYYMMDD'));
RESULT:
	ERROR - (1305, 'FUNCTION test.to_date does not exist')

-----------
QUERY:

select concat_ws('#','one');
RESULT:
	(('one',),)

-----------
QUERY:

select concat_ws('#',1,2,3,'hello',true, false, to_date('20100309','YYYYMMDD'));
RESULT:
	ERROR - (1305, 'FUNCTION test.to_date does not exist')

-----------
QUERY:

select concat_ws(',',10,20,null,30);
RESULT:
	(('10,20,30',),)

-----------
QUERY:

select concat_ws('',10,20,null,30);
RESULT:
	(('102030',),)

-----------
QUERY:

select concat_ws(NULL,10,20,null,30) is null;
RESULT:
	((1,),)

-----------
QUERY:

select reverse('abcde');
RESULT:
	(('edcba',),)

-----------
QUERY:

select i, left('ahoj', i), right('ahoj', i) from generate_series(-5, 5) t(i) order by i;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(-5, 5) t(i) order by i' at line 1")

-----------
QUERY:

select quote_literal('');
RESULT:
	ERROR - (1305, 'FUNCTION test.quote_literal does not exist')

-----------
QUERY:

select quote_literal('abc''');
RESULT:
	ERROR - (1305, 'FUNCTION test.quote_literal does not exist')

-----------
QUERY:

select quote_literal(e'\\');
RESULT:
	ERROR - (1584, 'Incorrect parameters in the call to stored function `quote_literal`')

-----------
QUERY:

-- check variadic labeled argument
select concat(variadic array[1,2,3]);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '[1,2,3])' at line 2")

-----------
QUERY:

select concat_ws(',', variadic array[1,2,3]);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '[1,2,3])' at line 1")

-----------
QUERY:

select concat_ws(',', variadic NULL::int[]);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'NULL::int[])' at line 1")

-----------
QUERY:

select concat(variadic NULL::int[]) is NULL;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'NULL::int[]) is NULL' at line 1")

-----------
QUERY:

select concat(variadic '{}'::int[]) = '';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '::int[]) = ''' at line 1")

-----------
QUERY:

--should fail
select concat_ws(',', variadic 10);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '--should fail\nselect concat_ws(',', variadic 10)' at line 1")

-----------
QUERY:


/*
 * format
 */
select format(NULL);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')' at line 4")

-----------
QUERY:

select format('Hello');
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')' at line 1")

-----------
QUERY:

select format('Hello %s', 'World');
RESULT:
	(('0',),)

-----------
QUERY:

select format('Hello %%');
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')' at line 1")

-----------
QUERY:

select format('Hello %%%%');
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')' at line 1")

-----------
QUERY:

-- should fail
select format('Hello %s %s', 'World');
RESULT:
	(('0',),)

-----------
QUERY:

select format('Hello %s');
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')' at line 1")

-----------
QUERY:

select format('Hello %x', 20);
RESULT:
	(('0.00000000000000000000',),)

-----------
QUERY:

-- check literal and sql identifiers
select format('INSERT INTO %I VALUES(%L,%L)', 'mytab', 10, 'Hello');
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ', 'Hello')' at line 2")

-----------
QUERY:

select format('%s%s%s','Hello', NULL,'World');
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ','World')' at line 1")

-----------
QUERY:

select format('INSERT INTO %I VALUES(%L,%L)', 'mytab', 10, NULL);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ', NULL)' at line 1")

-----------
QUERY:

select format('INSERT INTO %I VALUES(%L,%L)', 'mytab', NULL, 'Hello');
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ', 'Hello')' at line 1")

-----------
QUERY:

-- should fail, sql identifier cannot be NULL
select format('INSERT INTO %I VALUES(%L,%L)', NULL, 10, 'Hello');
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ', 'Hello')' at line 2")

-----------
QUERY:

-- check positional placeholders
select format('%1$s %3$s', 1, 2, 3);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ', 3)' at line 2")

-----------
QUERY:

select format('%1$s %12$s', 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ', 3, 4, 5, 6, 7, 8, 9, 10, 11, 12)' at line 1")

-----------
QUERY:

-- should fail
select format('%1$s %4$s', 1, 2, 3);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ', 3)' at line 2")

-----------
QUERY:

select format('%1$s %13$s', 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ', 3, 4, 5, 6, 7, 8, 9, 10, 11, 12)' at line 1")

-----------
QUERY:

select format('%0$s', 'Hello');
RESULT:
	(('0',),)

-----------
QUERY:

select format('%*0$s', 'Hello');
RESULT:
	(('0',),)

-----------
QUERY:

select format('%1$', 1);
RESULT:
	(('0.0',),)

-----------
QUERY:

select format('%1$1', 1);
RESULT:
	(('0.0',),)

-----------
QUERY:

-- check mix of positional and ordered placeholders
select format('Hello %s %1$s %s', 'World', 'Hello again');
RESULT:
	(('0',),)

-----------
QUERY:

select format('Hello %s %s, %2$s %2$s', 'World', 'Hello again');
RESULT:
	(('0',),)

-----------
QUERY:

-- check variadic labeled arguments
select format('%s, %s', variadic array['Hello','World']);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'array['Hello','World'])' at line 2")

-----------
QUERY:

select format('%s, %s', variadic array[1, 2]);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'array[1, 2])' at line 1")

-----------
QUERY:

select format('%s, %s', variadic array[true, false]);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'array[true, false])' at line 1")

-----------
QUERY:

select format('%s, %s', variadic array[true, false]::text[]);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'array[true, false]::text[])' at line 1")

-----------
QUERY:

-- check variadic with positional placeholders
select format('%2$s, %1$s', variadic array['first', 'second']);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'array['first', 'second'])' at line 2")

-----------
QUERY:

select format('%2$s, %1$s', variadic array[1, 2]);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'array[1, 2])' at line 1")

-----------
QUERY:

-- variadic argument can be array type NULL, but should not be referenced
select format('Hello', variadic NULL::int[]);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'NULL::int[])' at line 2")

-----------
QUERY:

-- variadic argument allows simulating more than FUNC_MAX_ARGS parameters
select format(string_agg('%s',','), variadic array_agg(i))
from generate_series(1,200) g(i);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'array_agg(i))\nfrom generate_series(1,200) g(i)' at line 2")

-----------
QUERY:

-- check field widths and left, right alignment
select format('>>%10s<<', 'Hello');
RESULT:
	(('0',),)

-----------
QUERY:

select format('>>%10s<<', NULL);
RESULT:
	((None,),)

-----------
QUERY:

select format('>>%10s<<', '');
RESULT:
	(('0',),)

-----------
QUERY:

select format('>>%-10s<<', '');
RESULT:
	(('0',),)

-----------
QUERY:

select format('>>%-10s<<', 'Hello');
RESULT:
	(('0',),)

-----------
QUERY:

select format('>>%-10s<<', NULL);
RESULT:
	((None,),)

-----------
QUERY:

select format('>>%1$10s<<', 'Hello');
RESULT:
	(('0',),)

-----------
QUERY:

select format('>>%1$-10I<<', 'Hello');
RESULT:
	(('0',),)

-----------
QUERY:

select format('>>%2$*1$L<<', 10, 'Hello');
RESULT:
	(('0.0000000000',),)

-----------
QUERY:

select format('>>%2$*1$L<<', 10, NULL);
RESULT:
	(('0.0000000000',),)

-----------
QUERY:

select format('>>%2$*1$L<<', -10, NULL);
RESULT:
	(('0',),)

-----------
QUERY:

select format('>>%*s<<', 10, 'Hello');
RESULT:
	(('0.0000000000',),)

-----------
QUERY:

select format('>>%*1$s<<', 10, 'Hello');
RESULT:
	(('0.0000000000',),)

-----------
QUERY:

select format('>>%-s<<', 'Hello');
RESULT:
	(('0',),)

-----------
QUERY:

select format('>>%10L<<', NULL);
RESULT:
	((None,),)

-----------
QUERY:

select format('>>%2$*1$L<<', NULL, 'Hello');
RESULT:
	((None,),)

-----------
QUERY:

select format('>>%2$*1$L<<', 0, 'Hello');
RESULT:
	(('0',),)
