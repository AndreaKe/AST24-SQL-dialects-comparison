
-----------
QUERY:
-- tests for tidscans

CREATE TABLE tidscan(id integer)
RESULT:
	duckdb: None

-----------
QUERY:
-- only insert a few rows, we don/* REPLACED */''t want to spill onto a second table page
INSERT INTO tidscan VALUES (1), (2), (3)
RESULT:
	duckdb: None

-----------
QUERY:
-- show ctids
SELECT ctid, * FROM tidscan
RESULT:
	duckdb: Binder Error: Referenced column "ctid" not found in FROM clause!
Candidate bindings: "tidscan.id"

-----------
QUERY:
-- ctid equality - implemented as tidscan
EXPLAIN (COSTS OFF)
SELECT ctid, * FROM tidscan WHERE ctid = '(0,1)'
RESULT:
	duckdb: Not implemented Error: Unimplemented explain type: COSTS

-----------
QUERY:
SELECT ctid, * FROM tidscan WHERE ctid = '(0,1)'
RESULT:
	duckdb: Binder Error: Referenced column "ctid" not found in FROM clause!
Candidate bindings: "tidscan.id"

-----------
QUERY:
EXPLAIN (COSTS OFF)
SELECT ctid, * FROM tidscan WHERE '(0,1)' = ctid
RESULT:
	duckdb: Not implemented Error: Unimplemented explain type: COSTS

-----------
QUERY:
SELECT ctid, * FROM tidscan WHERE '(0,1)' = ctid
RESULT:
	duckdb: Binder Error: Referenced column "ctid" not found in FROM clause!
Candidate bindings: "tidscan.id"

-----------
QUERY:
-- OR/* REPLACED */''d clauses
EXPLAIN (COSTS OFF)
SELECT ctid, * FROM tidscan WHERE ctid = '(0,2)' OR '(0,1)' = ctid
RESULT:
	duckdb: Not implemented Error: Unimplemented explain type: COSTS

-----------
QUERY:
SELECT ctid, * FROM tidscan WHERE ctid = '(0,2)' OR '(0,1)' = ctid
RESULT:
	duckdb: Binder Error: Referenced column "ctid" not found in FROM clause!
Candidate bindings: "tidscan.id"

-----------
QUERY:
-- ctid = ScalarArrayOp - implemented as tidscan
EXPLAIN (COSTS OFF)
SELECT ctid, * FROM tidscan WHERE ctid = ANY(ARRAY['(0,1)', '(0,2)']::tid[])
RESULT:
	duckdb: Not implemented Error: Unimplemented explain type: COSTS

-----------
QUERY:
SELECT ctid, * FROM tidscan WHERE ctid = ANY(ARRAY['(0,1)', '(0,2)']::tid[])
RESULT:
	duckdb: Catalog Error: Type with name tid does not exist!
Did you mean "oid"?

-----------
QUERY:
-- ctid != ScalarArrayOp - can/* REPLACED */''t be implemented as tidscan
EXPLAIN (COSTS OFF)
SELECT ctid, * FROM tidscan WHERE ctid != ANY(ARRAY['(0,1)', '(0,2)']::tid[])
RESULT:
	duckdb: Not implemented Error: Unimplemented explain type: COSTS

-----------
QUERY:
SELECT ctid, * FROM tidscan WHERE ctid != ANY(ARRAY['(0,1)', '(0,2)']::tid[])
RESULT:
	duckdb: Catalog Error: Type with name tid does not exist!
Did you mean "oid"?

-----------
QUERY:
-- tid equality extracted from sub-AND clauses
EXPLAIN (COSTS OFF)
SELECT ctid, * FROM tidscan
WHERE (id = 3 AND ctid IN ('(0,2)', '(0,3)')) OR (ctid = '(0,1)' AND id = 1)
RESULT:
	duckdb: Not implemented Error: Unimplemented explain type: COSTS

-----------
QUERY:
SELECT ctid, * FROM tidscan
WHERE (id = 3 AND ctid IN ('(0,2)', '(0,3)')) OR (ctid = '(0,1)' AND id = 1)
RESULT:
	duckdb: Binder Error: Referenced column "ctid" not found in FROM clause!
Candidate bindings: "tidscan.id"

-----------
QUERY:
-- nestloop-with-inner-tidscan joins on tid
SET enable_hashjoin TO off
RESULT:
	duckdb: Catalog Error: unrecognized configuration parameter "enable_hashjoin"

Did you mean: "enable_profiling"

-----------
QUERY:
-- otherwise hash join might win
EXPLAIN (COSTS OFF)
SELECT t1.ctid, t1.*, t2.ctid, t2.*
FROM tidscan t1 JOIN tidscan t2 ON t1.ctid = t2.ctid WHERE t1.id = 1
RESULT:
	duckdb: Not implemented Error: Unimplemented explain type: COSTS

-----------
QUERY:
SELECT t1.ctid, t1.*, t2.ctid, t2.*
FROM tidscan t1 JOIN tidscan t2 ON t1.ctid = t2.ctid WHERE t1.id = 1
RESULT:
	duckdb: Binder Error: Table "t1" does not have a column named "ctid"

-----------
QUERY:
EXPLAIN (COSTS OFF)
SELECT t1.ctid, t1.*, t2.ctid, t2.*
FROM tidscan t1 LEFT JOIN tidscan t2 ON t1.ctid = t2.ctid WHERE t1.id = 1
RESULT:
	duckdb: Not implemented Error: Unimplemented explain type: COSTS

-----------
QUERY:
SELECT t1.ctid, t1.*, t2.ctid, t2.*
FROM tidscan t1 LEFT JOIN tidscan t2 ON t1.ctid = t2.ctid WHERE t1.id = 1
RESULT:
	duckdb: Binder Error: Table "t1" does not have a column named "ctid"

-----------
QUERY:
RESET enable_hashjoin
RESULT:
	duckdb: Catalog Error: unrecognized configuration parameter "enable_hashjoin"

Did you mean: "enable_profiling"

-----------
QUERY:
-- exercise backward scan and rewind
BEGIN
RESULT:
	duckdb: None

-----------
QUERY:
DECLARE c CURSOR FOR
SELECT ctid, * FROM tidscan WHERE ctid = ANY(ARRAY['(0,1)', '(0,2)']::tid[])
RESULT:
	duckdb: Parser Error: syntax error at or near "DECLARE"

-----------
QUERY:
FETCH ALL FROM c
RESULT:
	duckdb: Parser Error: syntax error at or near "FETCH"

-----------
QUERY:
FETCH BACKWARD 1 FROM c
RESULT:
	duckdb: Parser Error: syntax error at or near "FETCH"

-----------
QUERY:
FETCH FIRST FROM c
RESULT:
	duckdb: Parser Error: syntax error at or near "FETCH"

-----------
QUERY:
ROLLBACK
RESULT:
	duckdb: None

-----------
QUERY:
-- tidscan via CURRENT OF
BEGIN
RESULT:
	duckdb: None

-----------
QUERY:
DECLARE c CURSOR FOR SELECT ctid, * FROM tidscan
RESULT:
	duckdb: Parser Error: syntax error at or near "DECLARE"

-----------
QUERY:
FETCH NEXT FROM c
RESULT:
	duckdb: Parser Error: syntax error at or near "FETCH"

-----------
QUERY:
-- skip one row
FETCH NEXT FROM c
RESULT:
	duckdb: Parser Error: syntax error at or near "FETCH"

-----------
QUERY:
-- perform update
EXPLAIN (ANALYZE, COSTS OFF, SUMMARY OFF, TIMING OFF)
UPDATE tidscan SET id = -id WHERE CURRENT OF c RETURNING *
RESULT:
	duckdb: Parser Error: syntax error at or near "OF"

-----------
QUERY:
FETCH NEXT FROM c
RESULT:
	duckdb: Parser Error: syntax error at or near "FETCH"

-----------
QUERY:
-- perform update
EXPLAIN (ANALYZE, COSTS OFF, SUMMARY OFF, TIMING OFF)
UPDATE tidscan SET id = -id WHERE CURRENT OF c RETURNING *
RESULT:
	duckdb: Parser Error: syntax error at or near "OF"

-----------
QUERY:
SELECT * FROM tidscan
RESULT:
	duckdb: [(1,), (2,), (3,)]

-----------
QUERY:
-- position cursor past any rows
FETCH NEXT FROM c
RESULT:
	duckdb: Parser Error: syntax error at or near "FETCH"

-----------
QUERY:
-- should error out
EXPLAIN (ANALYZE, COSTS OFF, SUMMARY OFF, TIMING OFF)
UPDATE tidscan SET id = -id WHERE CURRENT OF c RETURNING *
RESULT:
	duckdb: Parser Error: syntax error at or near "OF"

-----------
QUERY:
ROLLBACK
RESULT:
	duckdb: None

-----------
QUERY:
-- bulk joins on CTID
-- (these plans don/* REPLACED */''t use TID scans, but this still seems like an
-- appropriate place for these tests)
EXPLAIN (COSTS OFF)
SELECT count(*) FROM tenk1 t1 JOIN tenk1 t2 ON t1.ctid = t2.ctid
RESULT:
	duckdb: Not implemented Error: Unimplemented explain type: COSTS

-----------
QUERY:
SELECT count(*) FROM tenk1 t1 JOIN tenk1 t2 ON t1.ctid = t2.ctid
RESULT:
	duckdb: Catalog Error: Table with name tenk1 does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:
SET enable_hashjoin TO off
RESULT:
	duckdb: Catalog Error: unrecognized configuration parameter "enable_hashjoin"

Did you mean: "enable_profiling"

-----------
QUERY:
EXPLAIN (COSTS OFF)
SELECT count(*) FROM tenk1 t1 JOIN tenk1 t2 ON t1.ctid = t2.ctid
RESULT:
	duckdb: Not implemented Error: Unimplemented explain type: COSTS

-----------
QUERY:
SELECT count(*) FROM tenk1 t1 JOIN tenk1 t2 ON t1.ctid = t2.ctid
RESULT:
	duckdb: Catalog Error: Table with name tenk1 does not exist!
Did you mean "temp.information_schema.tables"?

-----------
QUERY:
RESET enable_hashjoin
RESULT:
	duckdb: Catalog Error: unrecognized configuration parameter "enable_hashjoin"

Did you mean: "enable_profiling"

-----------
QUERY:
-- check predicate lock on CTID
BEGIN ISOLATION LEVEL SERIALIZABLE
RESULT:
	duckdb: Parser Error: syntax error at or near "ISOLATION"

-----------
QUERY:
SELECT * FROM tidscan WHERE ctid = '(0,1)'
RESULT:
	duckdb: Binder Error: Referenced column "ctid" not found in FROM clause!
Candidate bindings: "tidscan.id"

-----------
QUERY:
-- locktype should be /* REPLACED */''tuple/* REPLACED */''
SELECT locktype, mode FROM pg_locks WHERE pid = pg_backend_pid() AND mode = 'SIReadLock'
RESULT:
	duckdb: Catalog Error: Table with name pg_locks does not exist!
Did you mean "pg_proc"?

-----------
QUERY:
ROLLBACK
RESULT:
	duckdb: TransactionContext Error: cannot rollback - no transaction is active

-----------
QUERY:
DROP TABLE tidscan
RESULT:
	duckdb: None
