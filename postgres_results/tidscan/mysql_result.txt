
-----------
QUERY:
-- tests for tidscans

CREATE TABLE tidscan(id integer);
RESULT:
	[]

-----------
QUERY:


-- only insert a few rows, we don/* REPLACED */ ''t want to spill onto a second table page
INSERT INTO tidscan VALUES (1), (2), (3);
RESULT:
	[]

-----------
QUERY:


-- show ctids
SELECT ctid, * FROM tidscan;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '* FROM tidscan' at line 2")

-----------
QUERY:


-- ctid equality - implemented as tidscan
EXPLAIN (COSTS OFF)
SELECT ctid, * FROM tidscan WHERE ctid = '(0,1)';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'COSTS OFF)\nSELECT ctid, * FROM tidscan WHERE ctid = '(0,1)'' at line 2")

-----------
QUERY:

SELECT ctid, * FROM tidscan WHERE ctid = '(0,1)';
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '* FROM tidscan WHERE ctid = '(0,1)'' at line 1")

-----------
QUERY:


EXPLAIN (COSTS OFF)
SELECT ctid, * FROM tidscan WHERE '(0,1)' = ctid;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'COSTS OFF)\nSELECT ctid, * FROM tidscan WHERE '(0,1)' = ctid' at line 1")

-----------
QUERY:

SELECT ctid, * FROM tidscan WHERE '(0,1)' = ctid;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '* FROM tidscan WHERE '(0,1)' = ctid' at line 1")

-----------
QUERY:


-- OR/* REPLACED */ ''d clauses
EXPLAIN (COSTS OFF)
SELECT ctid, * FROM tidscan WHERE ctid = '(0,2)' OR '(0,1)' = ctid;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'COSTS OFF)\nSELECT ctid, * FROM tidscan WHERE ctid = '(0,2)' OR '(0,1)' = ctid' at line 2")

-----------
QUERY:

SELECT ctid, * FROM tidscan WHERE ctid = '(0,2)' OR '(0,1)' = ctid;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '* FROM tidscan WHERE ctid = '(0,2)' OR '(0,1)' = ctid' at line 1")

-----------
QUERY:


-- ctid = ScalarArrayOp - implemented as tidscan
EXPLAIN (COSTS OFF)
SELECT ctid, * FROM tidscan WHERE ctid = ANY(ARRAY['(0,1)', '(0,2)']::tid[]);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'COSTS OFF)\nSELECT ctid, * FROM tidscan WHERE ctid = ANY(ARRAY['(0,1)', '(0,2)']:' at line 2")

-----------
QUERY:

SELECT ctid, * FROM tidscan WHERE ctid = ANY(ARRAY['(0,1)', '(0,2)']::tid[]);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '* FROM tidscan WHERE ctid = ANY(ARRAY['(0,1)', '(0,2)']::tid[])' at line 1")

-----------
QUERY:


-- ctid != ScalarArrayOp - can/* REPLACED */ ''t be implemented as tidscan
EXPLAIN (COSTS OFF)
SELECT ctid, * FROM tidscan WHERE ctid != ANY(ARRAY['(0,1)', '(0,2)']::tid[]);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'COSTS OFF)\nSELECT ctid, * FROM tidscan WHERE ctid != ANY(ARRAY['(0,1)', '(0,2)']' at line 2")

-----------
QUERY:

SELECT ctid, * FROM tidscan WHERE ctid != ANY(ARRAY['(0,1)', '(0,2)']::tid[]);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '* FROM tidscan WHERE ctid != ANY(ARRAY['(0,1)', '(0,2)']::tid[])' at line 1")

-----------
QUERY:


-- tid equality extracted from sub-AND clauses
EXPLAIN (COSTS OFF)
SELECT ctid, * FROM tidscan
WHERE (id = 3 AND ctid IN ('(0,2)', '(0,3)')) OR (ctid = '(0,1)' AND id = 1);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'COSTS OFF)\nSELECT ctid, * FROM tidscan\nWHERE (id = 3 AND ctid IN ('(0,2)', '(0,3' at line 2")

-----------
QUERY:

SELECT ctid, * FROM tidscan
WHERE (id = 3 AND ctid IN ('(0,2)', '(0,3)')) OR (ctid = '(0,1)' AND id = 1);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '* FROM tidscan\nWHERE (id = 3 AND ctid IN ('(0,2)', '(0,3)')) OR (ctid = '(0,1)' ' at line 1")

-----------
QUERY:


-- nestloop-with-inner-tidscan joins on tid
SET enable_hashjoin TO off;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'TO off' at line 2")

-----------
QUERY:
  -- otherwise hash join might win
EXPLAIN (COSTS OFF)
SELECT t1.ctid, t1.*, t2.ctid, t2.*
FROM tidscan t1 JOIN tidscan t2 ON t1.ctid = t2.ctid WHERE t1.id = 1;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'COSTS OFF)\nSELECT t1.ctid, t1.*, t2.ctid, t2.*\nFROM tidscan t1 JOIN tidscan t2 O' at line 2")

-----------
QUERY:

SELECT t1.ctid, t1.*, t2.ctid, t2.*
FROM tidscan t1 JOIN tidscan t2 ON t1.ctid = t2.ctid WHERE t1.id = 1;
RESULT:
	ERROR - (1054, "Unknown column 't1.ctid' in 'field list'")

-----------
QUERY:

EXPLAIN (COSTS OFF)
SELECT t1.ctid, t1.*, t2.ctid, t2.*
FROM tidscan t1 LEFT JOIN tidscan t2 ON t1.ctid = t2.ctid WHERE t1.id = 1;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'COSTS OFF)\nSELECT t1.ctid, t1.*, t2.ctid, t2.*\nFROM tidscan t1 LEFT JOIN tidscan' at line 1")

-----------
QUERY:

SELECT t1.ctid, t1.*, t2.ctid, t2.*
FROM tidscan t1 LEFT JOIN tidscan t2 ON t1.ctid = t2.ctid WHERE t1.id = 1;
RESULT:
	ERROR - (1054, "Unknown column 't1.ctid' in 'field list'")

-----------
QUERY:

RESET enable_hashjoin;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'enable_hashjoin' at line 1")

-----------
QUERY:


-- exercise backward scan and rewind
BEGIN;
RESULT:
	[]

-----------
QUERY:

DECLARE c CURSOR FOR
SELECT ctid, * FROM tidscan WHERE ctid = ANY(ARRAY['(0,1)', '(0,2)']::tid[]);
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'DECLARE c CURSOR FOR\nSELECT ctid, * FROM tidscan WHERE ctid = ANY(ARRAY['(0,1)',' at line 1")

-----------
QUERY:

FETCH ALL FROM c;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'FETCH ALL FROM c' at line 1")

-----------
QUERY:

FETCH BACKWARD 1 FROM c;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'FETCH BACKWARD 1 FROM c' at line 1")

-----------
QUERY:

FETCH FIRST FROM c;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'FETCH FIRST FROM c' at line 1")

-----------
QUERY:

ROLLBACK;
RESULT:
	[]

-----------
QUERY:


-- tidscan via CURRENT OF
BEGIN;
RESULT:
	[]

-----------
QUERY:

DECLARE c CURSOR FOR SELECT ctid, * FROM tidscan;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'DECLARE c CURSOR FOR SELECT ctid, * FROM tidscan' at line 1")

-----------
QUERY:

FETCH NEXT FROM c;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'FETCH NEXT FROM c' at line 1")

-----------
QUERY:
 -- skip one row
FETCH NEXT FROM c;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'FETCH NEXT FROM c' at line 2")

-----------
QUERY:

-- perform update
EXPLAIN (ANALYZE, COSTS OFF, SUMMARY OFF, TIMING OFF)
UPDATE tidscan SET id = -id WHERE CURRENT OF c RETURNING *;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'ANALYZE, COSTS OFF, SUMMARY OFF, TIMING OFF)\nUPDATE tidscan SET id = -id WHERE C' at line 2")

-----------
QUERY:

FETCH NEXT FROM c;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'FETCH NEXT FROM c' at line 1")

-----------
QUERY:

-- perform update
EXPLAIN (ANALYZE, COSTS OFF, SUMMARY OFF, TIMING OFF)
UPDATE tidscan SET id = -id WHERE CURRENT OF c RETURNING *;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'ANALYZE, COSTS OFF, SUMMARY OFF, TIMING OFF)\nUPDATE tidscan SET id = -id WHERE C' at line 2")

-----------
QUERY:

SELECT * FROM tidscan;
RESULT:
	((1,), (2,), (3,))

-----------
QUERY:

-- position cursor past any rows
FETCH NEXT FROM c;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'FETCH NEXT FROM c' at line 2")

-----------
QUERY:

-- should error out
EXPLAIN (ANALYZE, COSTS OFF, SUMMARY OFF, TIMING OFF)
UPDATE tidscan SET id = -id WHERE CURRENT OF c RETURNING *;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'ANALYZE, COSTS OFF, SUMMARY OFF, TIMING OFF)\nUPDATE tidscan SET id = -id WHERE C' at line 2")

-----------
QUERY:

ROLLBACK;
RESULT:
	[]

-----------
QUERY:


-- bulk joins on CTID
-- (these plans don/* REPLACED */ ''t use TID scans, but this still seems like an
-- appropriate place for these tests)
EXPLAIN (COSTS OFF)
SELECT count(*) FROM tenk1 t1 JOIN tenk1 t2 ON t1.ctid = t2.ctid;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'COSTS OFF)\nSELECT count(*) FROM tenk1 t1 JOIN tenk1 t2 ON t1.ctid = t2.ctid' at line 4")

-----------
QUERY:

SELECT count(*) FROM tenk1 t1 JOIN tenk1 t2 ON t1.ctid = t2.ctid;
RESULT:
	ERROR - (1146, "Table 'test.tenk1' doesn't exist")

-----------
QUERY:

SET enable_hashjoin TO off;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'TO off' at line 1")

-----------
QUERY:

EXPLAIN (COSTS OFF)
SELECT count(*) FROM tenk1 t1 JOIN tenk1 t2 ON t1.ctid = t2.ctid;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'COSTS OFF)\nSELECT count(*) FROM tenk1 t1 JOIN tenk1 t2 ON t1.ctid = t2.ctid' at line 1")

-----------
QUERY:

SELECT count(*) FROM tenk1 t1 JOIN tenk1 t2 ON t1.ctid = t2.ctid;
RESULT:
	ERROR - (1146, "Table 'test.tenk1' doesn't exist")

-----------
QUERY:

RESET enable_hashjoin;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'enable_hashjoin' at line 1")

-----------
QUERY:


-- check predicate lock on CTID
BEGIN ISOLATION LEVEL SERIALIZABLE;
RESULT:
	ERROR - (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'ISOLATION LEVEL SERIALIZABLE' at line 2")

-----------
QUERY:

SELECT * FROM tidscan WHERE ctid = '(0,1)';
RESULT:
	ERROR - (1054, "Unknown column 'ctid' in 'where clause'")

-----------
QUERY:

-- locktype should be /* REPLACED */ ''tuple/* REPLACED */ ''
SELECT locktype, mode FROM pg_locks WHERE pid = pg_backend_pid() AND mode = 'SIReadLock';
RESULT:
	ERROR - (1146, "Table 'test.pg_locks' doesn't exist")

-----------
QUERY:

ROLLBACK;
RESULT:
	[]

-----------
QUERY:


DROP TABLE tidscan;
RESULT:
	[]
