
-----------
QUERY:
--
-- TIME
--

CREATE TABLE TIME_TBL (f1 time(2))
RESULT:
	duckdb: Parser Error: Type TIME does not support any modifiers!

-----------
QUERY:
INSERT INTO TIME_TBL VALUES ('00:00')
RESULT:
	duckdb: Catalog Error: Table with name TIME_TBL does not exist!
Did you mean "TEXT_TBL"?

-----------
QUERY:
INSERT INTO TIME_TBL VALUES ('01:00')
RESULT:
	duckdb: Catalog Error: Table with name TIME_TBL does not exist!
Did you mean "TEXT_TBL"?

-----------
QUERY:
-- as of 7.4, timezone spec should be accepted and ignored
INSERT INTO TIME_TBL VALUES ('02:03 PST')
RESULT:
	duckdb: Catalog Error: Table with name TIME_TBL does not exist!
Did you mean "TEXT_TBL"?

-----------
QUERY:
INSERT INTO TIME_TBL VALUES ('11:59 EDT')
RESULT:
	duckdb: Catalog Error: Table with name TIME_TBL does not exist!
Did you mean "TEXT_TBL"?

-----------
QUERY:
INSERT INTO TIME_TBL VALUES ('12:00')
RESULT:
	duckdb: Catalog Error: Table with name TIME_TBL does not exist!
Did you mean "TEXT_TBL"?

-----------
QUERY:
INSERT INTO TIME_TBL VALUES ('12:01')
RESULT:
	duckdb: Catalog Error: Table with name TIME_TBL does not exist!
Did you mean "TEXT_TBL"?

-----------
QUERY:
INSERT INTO TIME_TBL VALUES ('23:59')
RESULT:
	duckdb: Catalog Error: Table with name TIME_TBL does not exist!
Did you mean "TEXT_TBL"?

-----------
QUERY:
INSERT INTO TIME_TBL VALUES ('11:59:59.99 PM')
RESULT:
	duckdb: Catalog Error: Table with name TIME_TBL does not exist!
Did you mean "TEXT_TBL"?

-----------
QUERY:
INSERT INTO TIME_TBL VALUES ('2003-03-07 15:36:39 America/New_York')
RESULT:
	duckdb: Catalog Error: Table with name TIME_TBL does not exist!
Did you mean "TEXT_TBL"?

-----------
QUERY:
INSERT INTO TIME_TBL VALUES ('2003-07-07 15:36:39 America/New_York')
RESULT:
	duckdb: Catalog Error: Table with name TIME_TBL does not exist!
Did you mean "TEXT_TBL"?

-----------
QUERY:
-- this should fail (the timezone offset is not known)
INSERT INTO TIME_TBL VALUES ('15:36:39 America/New_York')
RESULT:
	duckdb: Catalog Error: Table with name TIME_TBL does not exist!
Did you mean "TEXT_TBL"?

-----------
QUERY:
SELECT f1 AS "Time" FROM TIME_TBL
RESULT:
	duckdb: Catalog Error: Table with name TIME_TBL does not exist!
Did you mean "TEXT_TBL"?

-----------
QUERY:
SELECT f1 AS "Three" FROM TIME_TBL WHERE f1 < '05:06:07'
RESULT:
	duckdb: Catalog Error: Table with name TIME_TBL does not exist!
Did you mean "TEXT_TBL"?

-----------
QUERY:
SELECT f1 AS "Five" FROM TIME_TBL WHERE f1 > '05:06:07'
RESULT:
	duckdb: Catalog Error: Table with name TIME_TBL does not exist!
Did you mean "TEXT_TBL"?

-----------
QUERY:
SELECT f1 AS "None" FROM TIME_TBL WHERE f1 < '00:00'
RESULT:
	duckdb: Catalog Error: Table with name TIME_TBL does not exist!
Did you mean "TEXT_TBL"?

-----------
QUERY:
SELECT f1 AS "Eight" FROM TIME_TBL WHERE f1 >= '00:00'
RESULT:
	duckdb: Catalog Error: Table with name TIME_TBL does not exist!
Did you mean "TEXT_TBL"?

-----------
QUERY:
-- Check edge cases
SELECT '23:59:59.999999'::time
RESULT:
	duckdb: [(datetime.time(23, 59, 59, 999999),)]

-----------
QUERY:
SELECT '23:59:59.9999999'::time
RESULT:
	duckdb: [(datetime.time(23, 59, 59, 999999),)]

-----------
QUERY:
-- rounds up
SELECT '23:59:60'::time
RESULT:
	duckdb: Conversion Error: time field value out of range: "23:59:60", expected format is ([YYYY-MM-DD ]HH:MM:SS[.MS])

-----------
QUERY:
-- rounds up
SELECT '24:00:00'::time
RESULT:
	duckdb: [('24:00:00',)]

-----------
QUERY:
-- allowed
SELECT '24:00:00.01'::time
RESULT:
	duckdb: Conversion Error: time field value out of range: "24:00:00.01", expected format is ([YYYY-MM-DD ]HH:MM:SS[.MS])

-----------
QUERY:
-- not allowed
SELECT '23:59:60.01'::time
RESULT:
	duckdb: Conversion Error: time field value out of range: "23:59:60.01", expected format is ([YYYY-MM-DD ]HH:MM:SS[.MS])

-----------
QUERY:
-- not allowed
SELECT '24:01:00'::time
RESULT:
	duckdb: Conversion Error: time field value out of range: "24:01:00", expected format is ([YYYY-MM-DD ]HH:MM:SS[.MS])

-----------
QUERY:
-- not allowed
SELECT '25:00:00'::time
RESULT:
	duckdb: Conversion Error: time field value out of range: "25:00:00", expected format is ([YYYY-MM-DD ]HH:MM:SS[.MS])

-----------
QUERY:
-- not allowed

-- Test non-error-throwing API
SELECT pg_input_is_valid('12:00:00', 'time')
RESULT:
	duckdb: Catalog Error: Scalar Function with name pg_input_is_valid does not exist!
Did you mean "json_valid"?

-----------
QUERY:
SELECT pg_input_is_valid('25:00:00', 'time')
RESULT:
	duckdb: Catalog Error: Scalar Function with name pg_input_is_valid does not exist!
Did you mean "json_valid"?

-----------
QUERY:
SELECT pg_input_is_valid('15:36:39 America/New_York', 'time')
RESULT:
	duckdb: Catalog Error: Scalar Function with name pg_input_is_valid does not exist!
Did you mean "json_valid"?

-----------
QUERY:
SELECT * FROM pg_input_error_info('25:00:00', 'time')
RESULT:
	duckdb: Catalog Error: Table Function with name pg_input_error_info does not exist!
Did you mean "pragma_storage_info"?

-----------
QUERY:
SELECT * FROM pg_input_error_info('15:36:39 America/New_York', 'time')
RESULT:
	duckdb: Catalog Error: Table Function with name pg_input_error_info does not exist!
Did you mean "pragma_storage_info"?

-----------
QUERY:
--
-- TIME simple math
--
-- We now make a distinction between time and intervals,
-- and adding two times together makes no sense at all.
-- Leave in one query to show that it is rejected,
-- and do the rest of the testing in horology.sql
-- where we do mixed-type arithmetic. - thomas 2000-12-02

SELECT f1 + time '00:01' AS "Illegal" FROM TIME_TBL
RESULT:
	duckdb: Catalog Error: Table with name TIME_TBL does not exist!
Did you mean "TEXT_TBL"?

-----------
QUERY:
--
-- test EXTRACT
--
SELECT EXTRACT(MICROSECOND FROM TIME '2020-05-26 13:30:25.575401')
RESULT:
	duckdb: [(25575401,)]

-----------
QUERY:
SELECT EXTRACT(MILLISECOND FROM TIME '2020-05-26 13:30:25.575401')
RESULT:
	duckdb: [(25575,)]

-----------
QUERY:
SELECT EXTRACT(SECOND      FROM TIME '2020-05-26 13:30:25.575401')
RESULT:
	duckdb: [(25,)]

-----------
QUERY:
SELECT EXTRACT(MINUTE      FROM TIME '2020-05-26 13:30:25.575401')
RESULT:
	duckdb: [(30,)]

-----------
QUERY:
SELECT EXTRACT(HOUR        FROM TIME '2020-05-26 13:30:25.575401')
RESULT:
	duckdb: [(13,)]

-----------
QUERY:
SELECT EXTRACT(DAY         FROM TIME '2020-05-26 13:30:25.575401')
RESULT:
	duckdb: Invalid Input Error: Attempting to execute an unsuccessful or closed pending query result
Error: Binder Error: No function matches the given name and argument types 'day(TIME)'. You might need to add explicit type casts.
	Candidate functions:
	day(DATE) -> BIGINT
	day(TIMESTAMP) -> BIGINT
	day(INTERVAL) -> BIGINT
	day(TIMESTAMP WITH TIME ZONE) -> BIGINT


-----------
QUERY:
-- error
SELECT EXTRACT(FORTNIGHT   FROM TIME '2020-05-26 13:30:25.575401')
RESULT:
	duckdb: Conversion Error: extract specifier "FORTNIGHT" not recognized

-----------
QUERY:
-- error
SELECT EXTRACT(TIMEZONE    FROM TIME '2020-05-26 13:30:25.575401')
RESULT:
	duckdb: [(0,)]

-----------
QUERY:
-- error
SELECT EXTRACT(EPOCH       FROM TIME '2020-05-26 13:30:25.575401')
RESULT:
	duckdb: [(48625.575401,)]

-----------
QUERY:
-- date_part implementation is mostly the same as extract, so only
-- test a few cases for additional coverage.
SELECT date_part('microsecond', TIME '2020-05-26 13:30:25.575401')
RESULT:
	duckdb: [(25575401,)]

-----------
QUERY:
SELECT date_part('millisecond', TIME '2020-05-26 13:30:25.575401')
RESULT:
	duckdb: [(25575,)]

-----------
QUERY:
SELECT date_part('second',      TIME '2020-05-26 13:30:25.575401')
RESULT:
	duckdb: [(25,)]

-----------
QUERY:
SELECT date_part('epoch',       TIME '2020-05-26 13:30:25.575401')
RESULT:
	duckdb: [(48625.575401,)]
