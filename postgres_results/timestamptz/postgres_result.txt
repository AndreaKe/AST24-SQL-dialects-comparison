
-----------
QUERY:
--
-- TIMESTAMPTZ
--

CREATE TABLE TIMESTAMPTZ_TBL (d1 timestamp(2) with time zone);
RESULT:
	postgres: []

-----------
QUERY:


-- Test shorthand input values
-- We can/* REPLACED */''t just /* REPLACED */''select/* REPLACED */'' the results since they aren/* REPLACED */''t constants /* REPLACED */, test for
-- equality instead.  We can do that by running the test inside a transaction
-- block, within which the value of /* REPLACED */''now/* REPLACED */'' shouldn/* REPLACED */''t change, and so these
-- related values shouldn/* REPLACED */''t either.

BEGIN;
RESULT:
	postgres: []

-----------
QUERY:


INSERT INTO TIMESTAMPTZ_TBL VALUES ('today');
RESULT:
	postgres: []

-----------
QUERY:

INSERT INTO TIMESTAMPTZ_TBL VALUES ('yesterday');
RESULT:
	postgres: []

-----------
QUERY:

INSERT INTO TIMESTAMPTZ_TBL VALUES ('tomorrow');
RESULT:
	postgres: []

-----------
QUERY:

INSERT INTO TIMESTAMPTZ_TBL VALUES ('tomorrow EST');
RESULT:
	postgres: []

-----------
QUERY:

INSERT INTO TIMESTAMPTZ_TBL VALUES ('tomorrow zulu');
RESULT:
	postgres: []

-----------
QUERY:


SELECT count(*) AS One FROM TIMESTAMPTZ_TBL WHERE d1 = timestamp with time zone 'today';
RESULT:
	postgres: [(1,)]

-----------
QUERY:

SELECT count(*) AS One FROM TIMESTAMPTZ_TBL WHERE d1 = timestamp with time zone 'tomorrow';
RESULT:
	postgres: [(1,)]

-----------
QUERY:

SELECT count(*) AS One FROM TIMESTAMPTZ_TBL WHERE d1 = timestamp with time zone 'yesterday';
RESULT:
	postgres: [(1,)]

-----------
QUERY:

SELECT count(*) AS One FROM TIMESTAMPTZ_TBL WHERE d1 = timestamp with time zone 'tomorrow EST';
RESULT:
	postgres: [(1,)]

-----------
QUERY:

SELECT count(*) AS One FROM TIMESTAMPTZ_TBL WHERE d1 = timestamp with time zone 'tomorrow zulu';
RESULT:
	postgres: [(1,)]

-----------
QUERY:


COMMIT;
RESULT:
	postgres: []

-----------
QUERY:


DELETE FROM TIMESTAMPTZ_TBL;
RESULT:
	postgres: []

-----------
QUERY:


-- Verify that /* REPLACED */''now/* REPLACED */'' *does* change over a reasonable interval such as 100 msec,
-- and that it doesn/* REPLACED */''t change over the same interval within a transaction block

INSERT INTO TIMESTAMPTZ_TBL VALUES ('now');
RESULT:
	postgres: []

-----------
QUERY:

SELECT pg_sleep(0.1);
RESULT:
	postgres: [('',)]

-----------
QUERY:


BEGIN;
RESULT:
	postgres: []

-----------
QUERY:

INSERT INTO TIMESTAMPTZ_TBL VALUES ('now');
RESULT:
	postgres: []

-----------
QUERY:

SELECT pg_sleep(0.1);
RESULT:
	postgres: [('',)]

-----------
QUERY:

INSERT INTO TIMESTAMPTZ_TBL VALUES ('now');
RESULT:
	postgres: []

-----------
QUERY:

SELECT pg_sleep(0.1);
RESULT:
	postgres: [('',)]

-----------
QUERY:

SELECT count(*) AS two FROM TIMESTAMPTZ_TBL WHERE d1 = timestamp(2) with time zone 'now';
RESULT:
	postgres: [(2,)]

-----------
QUERY:

SELECT count(d1) AS three, count(DISTINCT d1) AS two FROM TIMESTAMPTZ_TBL;
RESULT:
	postgres: [(3, 2)]

-----------
QUERY:

COMMIT;
RESULT:
	postgres: []

-----------
QUERY:


TRUNCATE TIMESTAMPTZ_TBL;
RESULT:
	postgres: []

-----------
QUERY:


-- Special values
INSERT INTO TIMESTAMPTZ_TBL VALUES ('-infinity');
RESULT:
	postgres: []

-----------
QUERY:

INSERT INTO TIMESTAMPTZ_TBL VALUES ('infinity');
RESULT:
	postgres: []

-----------
QUERY:

INSERT INTO TIMESTAMPTZ_TBL VALUES ('epoch');
RESULT:
	postgres: []

-----------
QUERY:


SELECT timestamptz 'infinity' = timestamptz '+infinity' AS t;
RESULT:
	postgres: [(True,)]

-----------
QUERY:


-- Postgres v6.0 standard output format
INSERT INTO TIMESTAMPTZ_TBL VALUES ('Mon Feb 10 17:32:01 1997 PST');
RESULT:
	postgres: []

-----------
QUERY:


-- Variations on Postgres v6.1 standard output format
INSERT INTO TIMESTAMPTZ_TBL VALUES ('Mon Feb 10 17:32:01.000001 1997 PST');
RESULT:
	postgres: []

-----------
QUERY:

INSERT INTO TIMESTAMPTZ_TBL VALUES ('Mon Feb 10 17:32:01.999999 1997 PST');
RESULT:
	postgres: []

-----------
QUERY:

INSERT INTO TIMESTAMPTZ_TBL VALUES ('Mon Feb 10 17:32:01.4 1997 PST');
RESULT:
	postgres: []

-----------
QUERY:

INSERT INTO TIMESTAMPTZ_TBL VALUES ('Mon Feb 10 17:32:01.5 1997 PST');
RESULT:
	postgres: []

-----------
QUERY:

INSERT INTO TIMESTAMPTZ_TBL VALUES ('Mon Feb 10 17:32:01.6 1997 PST');
RESULT:
	postgres: []

-----------
QUERY:


-- ISO 8601 format
INSERT INTO TIMESTAMPTZ_TBL VALUES ('1997-01-02');
RESULT:
	postgres: []

-----------
QUERY:

INSERT INTO TIMESTAMPTZ_TBL VALUES ('1997-01-02 03:04:05');
RESULT:
	postgres: []

-----------
QUERY:

INSERT INTO TIMESTAMPTZ_TBL VALUES ('1997-02-10 17:32:01-08');
RESULT:
	postgres: []

-----------
QUERY:

INSERT INTO TIMESTAMPTZ_TBL VALUES ('1997-02-10 17:32:01-0800');
RESULT:
	postgres: []

-----------
QUERY:

INSERT INTO TIMESTAMPTZ_TBL VALUES ('1997-02-10 17:32:01 -08:00');
RESULT:
	postgres: []

-----------
QUERY:

INSERT INTO TIMESTAMPTZ_TBL VALUES ('19970210 173201 -0800');
RESULT:
	postgres: []

-----------
QUERY:

INSERT INTO TIMESTAMPTZ_TBL VALUES ('1997-06-10 17:32:01 -07:00');
RESULT:
	postgres: []

-----------
QUERY:

INSERT INTO TIMESTAMPTZ_TBL VALUES ('2001-09-22T18:19:20');
RESULT:
	postgres: []

-----------
QUERY:


-- POSIX format (note that the timezone abbrev is just decoration here)
INSERT INTO TIMESTAMPTZ_TBL VALUES ('2000-03-15 08:14:01 GMT+8');
RESULT:
	postgres: []

-----------
QUERY:

INSERT INTO TIMESTAMPTZ_TBL VALUES ('2000-03-15 13:14:02 GMT-1');
RESULT:
	postgres: []

-----------
QUERY:

INSERT INTO TIMESTAMPTZ_TBL VALUES ('2000-03-15 12:14:03 GMT-2');
RESULT:
	postgres: []

-----------
QUERY:

INSERT INTO TIMESTAMPTZ_TBL VALUES ('2000-03-15 03:14:04 PST+8');
RESULT:
	postgres: []

-----------
QUERY:

INSERT INTO TIMESTAMPTZ_TBL VALUES ('2000-03-15 02:14:05 MST+7:00');
RESULT:
	postgres: []

-----------
QUERY:


-- Variations for acceptable input formats
INSERT INTO TIMESTAMPTZ_TBL VALUES ('Feb 10 17:32:01 1997 -0800');
RESULT:
	postgres: []

-----------
QUERY:

INSERT INTO TIMESTAMPTZ_TBL VALUES ('Feb 10 17:32:01 1997');
RESULT:
	postgres: []

-----------
QUERY:

INSERT INTO TIMESTAMPTZ_TBL VALUES ('Feb 10 5:32PM 1997');
RESULT:
	postgres: []

-----------
QUERY:

INSERT INTO TIMESTAMPTZ_TBL VALUES ('1997/02/10 17:32:01-0800');
RESULT:
	postgres: []

-----------
QUERY:

INSERT INTO TIMESTAMPTZ_TBL VALUES ('1997-02-10 17:32:01 PST');
RESULT:
	postgres: []

-----------
QUERY:

INSERT INTO TIMESTAMPTZ_TBL VALUES ('Feb-10-1997 17:32:01 PST');
RESULT:
	postgres: []

-----------
QUERY:

INSERT INTO TIMESTAMPTZ_TBL VALUES ('02-10-1997 17:32:01 PST');
RESULT:
	postgres: []

-----------
QUERY:

INSERT INTO TIMESTAMPTZ_TBL VALUES ('19970210 173201 PST');
RESULT:
	postgres: []

-----------
QUERY:

set datestyle to ymd;
RESULT:
	postgres: []

-----------
QUERY:

INSERT INTO TIMESTAMPTZ_TBL VALUES ('97FEB10 5:32:01PM UTC');
RESULT:
	postgres: []

-----------
QUERY:

INSERT INTO TIMESTAMPTZ_TBL VALUES ('97/02/10 17:32:01 UTC');
RESULT:
	postgres: []

-----------
QUERY:

reset datestyle;
RESULT:
	postgres: []

-----------
QUERY:

INSERT INTO TIMESTAMPTZ_TBL VALUES ('1997.041 17:32:01 UTC');
RESULT:
	postgres: []

-----------
QUERY:


-- timestamps at different timezones
INSERT INTO TIMESTAMPTZ_TBL VALUES ('19970210 173201 America/New_York');
RESULT:
	postgres: []

-----------
QUERY:

SELECT '19970210 173201' AT TIME ZONE 'America/New_York';
RESULT:
	postgres: [(datetime.datetime(1997, 2, 10, 11, 32, 1),)]

-----------
QUERY:

INSERT INTO TIMESTAMPTZ_TBL VALUES ('19970710 173201 America/New_York');
RESULT:
	postgres: []

-----------
QUERY:

SELECT '19970710 173201' AT TIME ZONE 'America/New_York';
RESULT:
	postgres: [(datetime.datetime(1997, 7, 10, 11, 32, 1),)]

-----------
QUERY:

INSERT INTO TIMESTAMPTZ_TBL VALUES ('19970710 173201 America/Does_not_exist');
RESULT:
	postgres: ERROR - time zone "america/does_not_exist" not recognized
LINE 2: INSERT INTO TIMESTAMPTZ_TBL VALUES ('19970710 173201 America...
                                            ^


-----------
QUERY:

SELECT '19970710 173201' AT TIME ZONE 'America/Does_not_exist';
RESULT:
	postgres: ERROR - time zone "America/Does_not_exist" not recognized


-----------
QUERY:


-- Daylight saving time for timestamps beyond 32-bit time_t range.
SELECT '20500710 173201 Europe/Helsinki'::timestamptz;
RESULT:
	postgres: [(datetime.datetime(2050, 7, 10, 16, 32, 1, tzinfo=datetime.timezone(datetime.timedelta(seconds=7200))),)]

-----------
QUERY:
 -- DST
SELECT '20500110 173201 Europe/Helsinki'::timestamptz;
RESULT:
	postgres: [(datetime.datetime(2050, 1, 10, 16, 32, 1, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),)]

-----------
QUERY:
 -- non-DST

SELECT '205000-07-10 17:32:01 Europe/Helsinki'::timestamptz;
RESULT:
	postgres: ERROR - year 205000 is out of range

-----------
QUERY:
 -- DST
SELECT '205000-01-10 17:32:01 Europe/Helsinki'::timestamptz;
RESULT:
	postgres: ERROR - year 205000 is out of range

-----------
QUERY:
 -- non-DST

-- Test non-error-throwing API
SELECT pg_input_is_valid('now', 'timestamptz');
RESULT:
	postgres: [(True,)]

-----------
QUERY:

SELECT pg_input_is_valid('garbage', 'timestamptz');
RESULT:
	postgres: [(False,)]

-----------
QUERY:

SELECT pg_input_is_valid('2001-01-01 00:00 Nehwon/Lankhmar', 'timestamptz');
RESULT:
	postgres: [(False,)]

-----------
QUERY:

SELECT * FROM pg_input_error_info('garbage', 'timestamptz');
RESULT:
	postgres: [('invalid input syntax for type timestamp with time zone: "garbage"', None, None, '22007')]

-----------
QUERY:

SELECT * FROM pg_input_error_info('2001-01-01 00:00 Nehwon/Lankhmar', 'timestamptz');
RESULT:
	postgres: [('time zone "nehwon/lankhmar" not recognized', None, None, '22023')]

-----------
QUERY:


-- Check date conversion and date arithmetic
INSERT INTO TIMESTAMPTZ_TBL VALUES ('1997-06-10 18:32:01 PDT');
RESULT:
	postgres: []

-----------
QUERY:


INSERT INTO TIMESTAMPTZ_TBL VALUES ('Feb 10 17:32:01 1997');
RESULT:
	postgres: []

-----------
QUERY:

INSERT INTO TIMESTAMPTZ_TBL VALUES ('Feb 11 17:32:01 1997');
RESULT:
	postgres: []

-----------
QUERY:

INSERT INTO TIMESTAMPTZ_TBL VALUES ('Feb 12 17:32:01 1997');
RESULT:
	postgres: []

-----------
QUERY:

INSERT INTO TIMESTAMPTZ_TBL VALUES ('Feb 13 17:32:01 1997');
RESULT:
	postgres: []

-----------
QUERY:

INSERT INTO TIMESTAMPTZ_TBL VALUES ('Feb 14 17:32:01 1997');
RESULT:
	postgres: []

-----------
QUERY:

INSERT INTO TIMESTAMPTZ_TBL VALUES ('Feb 15 17:32:01 1997');
RESULT:
	postgres: []

-----------
QUERY:

INSERT INTO TIMESTAMPTZ_TBL VALUES ('Feb 16 17:32:01 1997');
RESULT:
	postgres: []

-----------
QUERY:


INSERT INTO TIMESTAMPTZ_TBL VALUES ('Feb 16 17:32:01 0097 BC');
RESULT:
	postgres: []

-----------
QUERY:

INSERT INTO TIMESTAMPTZ_TBL VALUES ('Feb 16 17:32:01 0097');
RESULT:
	postgres: []

-----------
QUERY:

INSERT INTO TIMESTAMPTZ_TBL VALUES ('Feb 16 17:32:01 0597');
RESULT:
	postgres: []

-----------
QUERY:

INSERT INTO TIMESTAMPTZ_TBL VALUES ('Feb 16 17:32:01 1097');
RESULT:
	postgres: []

-----------
QUERY:

INSERT INTO TIMESTAMPTZ_TBL VALUES ('Feb 16 17:32:01 1697');
RESULT:
	postgres: []

-----------
QUERY:

INSERT INTO TIMESTAMPTZ_TBL VALUES ('Feb 16 17:32:01 1797');
RESULT:
	postgres: []

-----------
QUERY:

INSERT INTO TIMESTAMPTZ_TBL VALUES ('Feb 16 17:32:01 1897');
RESULT:
	postgres: []

-----------
QUERY:

INSERT INTO TIMESTAMPTZ_TBL VALUES ('Feb 16 17:32:01 1997');
RESULT:
	postgres: []

-----------
QUERY:

INSERT INTO TIMESTAMPTZ_TBL VALUES ('Feb 16 17:32:01 2097');
RESULT:
	postgres: []

-----------
QUERY:


INSERT INTO TIMESTAMPTZ_TBL VALUES ('Feb 28 17:32:01 1996');
RESULT:
	postgres: []

-----------
QUERY:

INSERT INTO TIMESTAMPTZ_TBL VALUES ('Feb 29 17:32:01 1996');
RESULT:
	postgres: []

-----------
QUERY:

INSERT INTO TIMESTAMPTZ_TBL VALUES ('Mar 01 17:32:01 1996');
RESULT:
	postgres: []

-----------
QUERY:

INSERT INTO TIMESTAMPTZ_TBL VALUES ('Dec 30 17:32:01 1996');
RESULT:
	postgres: []

-----------
QUERY:

INSERT INTO TIMESTAMPTZ_TBL VALUES ('Dec 31 17:32:01 1996');
RESULT:
	postgres: []

-----------
QUERY:

INSERT INTO TIMESTAMPTZ_TBL VALUES ('Jan 01 17:32:01 1997');
RESULT:
	postgres: []

-----------
QUERY:

INSERT INTO TIMESTAMPTZ_TBL VALUES ('Feb 28 17:32:01 1997');
RESULT:
	postgres: []

-----------
QUERY:

INSERT INTO TIMESTAMPTZ_TBL VALUES ('Feb 29 17:32:01 1997');
RESULT:
	postgres: ERROR - date/time field value out of range: "Feb 29 17:32:01 1997"
LINE 2: INSERT INTO TIMESTAMPTZ_TBL VALUES ('Feb 29 17:32:01 1997');
                                            ^


-----------
QUERY:

INSERT INTO TIMESTAMPTZ_TBL VALUES ('Mar 01 17:32:01 1997');
RESULT:
	postgres: []

-----------
QUERY:

INSERT INTO TIMESTAMPTZ_TBL VALUES ('Dec 30 17:32:01 1997');
RESULT:
	postgres: []

-----------
QUERY:

INSERT INTO TIMESTAMPTZ_TBL VALUES ('Dec 31 17:32:01 1997');
RESULT:
	postgres: []

-----------
QUERY:

INSERT INTO TIMESTAMPTZ_TBL VALUES ('Dec 31 17:32:01 1999');
RESULT:
	postgres: []

-----------
QUERY:

INSERT INTO TIMESTAMPTZ_TBL VALUES ('Jan 01 17:32:01 2000');
RESULT:
	postgres: []

-----------
QUERY:

INSERT INTO TIMESTAMPTZ_TBL VALUES ('Dec 31 17:32:01 2000');
RESULT:
	postgres: []

-----------
QUERY:

INSERT INTO TIMESTAMPTZ_TBL VALUES ('Jan 01 17:32:01 2001');
RESULT:
	postgres: []

-----------
QUERY:


-- Currently unsupported syntax and ranges
INSERT INTO TIMESTAMPTZ_TBL VALUES ('Feb 16 17:32:01 -0097');
RESULT:
	postgres: ERROR - time zone displacement out of range: "Feb 16 17:32:01 -0097"
LINE 4: INSERT INTO TIMESTAMPTZ_TBL VALUES ('Feb 16 17:32:01 -0097')...
                                            ^


-----------
QUERY:

INSERT INTO TIMESTAMPTZ_TBL VALUES ('Feb 16 17:32:01 5097 BC');
RESULT:
	postgres: ERROR - timestamp out of range: "Feb 16 17:32:01 5097 BC"
LINE 2: INSERT INTO TIMESTAMPTZ_TBL VALUES ('Feb 16 17:32:01 5097 BC...
                                            ^


-----------
QUERY:


-- Alternative field order that we/* REPLACED */''ve historically supported (sort of)
-- with regular and POSIXy timezone specs
SELECT 'Wed Jul 11 10:51:14 America/New_York 2001'::timestamptz;
RESULT:
	postgres: [(datetime.datetime(2001, 7, 11, 16, 51, 14, tzinfo=datetime.timezone(datetime.timedelta(seconds=7200))),)]

-----------
QUERY:

SELECT 'Wed Jul 11 10:51:14 GMT-4 2001'::timestamptz;
RESULT:
	postgres: [(datetime.datetime(2001, 7, 11, 8, 51, 14, tzinfo=datetime.timezone(datetime.timedelta(seconds=7200))),)]

-----------
QUERY:

SELECT 'Wed Jul 11 10:51:14 GMT+4 2001'::timestamptz;
RESULT:
	postgres: [(datetime.datetime(2001, 7, 11, 16, 51, 14, tzinfo=datetime.timezone(datetime.timedelta(seconds=7200))),)]

-----------
QUERY:

SELECT 'Wed Jul 11 10:51:14 PST-03:00 2001'::timestamptz;
RESULT:
	postgres: [(datetime.datetime(2001, 7, 11, 9, 51, 14, tzinfo=datetime.timezone(datetime.timedelta(seconds=7200))),)]

-----------
QUERY:

SELECT 'Wed Jul 11 10:51:14 PST+03:00 2001'::timestamptz;
RESULT:
	postgres: [(datetime.datetime(2001, 7, 11, 15, 51, 14, tzinfo=datetime.timezone(datetime.timedelta(seconds=7200))),)]

-----------
QUERY:


SELECT d1 FROM TIMESTAMPTZ_TBL;
RESULT:
	postgres: ERROR - year -97 is out of range

-----------
QUERY:


-- Check behavior at the boundaries of the timestamp range
SELECT '4714-11-24 00:00:00+00 BC'::timestamptz;
RESULT:
	postgres: ERROR - year -4714 is out of range

-----------
QUERY:

SELECT '4714-11-23 16:00:00-08 BC'::timestamptz;
RESULT:
	postgres: ERROR - year -4714 is out of range

-----------
QUERY:

SELECT 'Sun Nov 23 16:00:00 4714 PST BC'::timestamptz;
RESULT:
	postgres: ERROR - year -4714 is out of range

-----------
QUERY:

SELECT '4714-11-23 23:59:59+00 BC'::timestamptz;
RESULT:
	postgres: ERROR - timestamp out of range: "4714-11-23 23:59:59+00 BC"
LINE 2: SELECT '4714-11-23 23:59:59+00 BC'::timestamptz;
               ^


-----------
QUERY:
  -- out of range
SELECT '294276-12-31 23:59:59+00'::timestamptz;
RESULT:
	postgres: ERROR - year 294277 is out of range

-----------
QUERY:

SELECT '294276-12-31 15:59:59-08'::timestamptz;
RESULT:
	postgres: ERROR - year 294277 is out of range

-----------
QUERY:

SELECT '294277-01-01 00:00:00+00'::timestamptz;
RESULT:
	postgres: ERROR - timestamp out of range: "294277-01-01 00:00:00+00"
LINE 2: SELECT '294277-01-01 00:00:00+00'::timestamptz;
               ^


-----------
QUERY:
  -- out of range
SELECT '294277-12-31 16:00:00-08'::timestamptz;
RESULT:
	postgres: ERROR - timestamp out of range: "294277-12-31 16:00:00-08"
LINE 2: SELECT '294277-12-31 16:00:00-08'::timestamptz;
               ^


-----------
QUERY:
  -- out of range

-- Demonstrate functions and operators
SELECT d1 FROM TIMESTAMPTZ_TBL
   WHERE d1 > timestamp with time zone '1997-01-02';
RESULT:
	postgres: [(datetime.datetime(9999, 12, 31, 23, 59, 59, 999999, tzinfo=datetime.timezone.utc),), (datetime.datetime(1997, 2, 11, 2, 32, 1, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(1997, 2, 11, 2, 32, 1, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(1997, 2, 11, 2, 32, 2, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(1997, 2, 11, 2, 32, 1, 400000, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(1997, 2, 11, 2, 32, 1, 500000, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(1997, 2, 11, 2, 32, 1, 600000, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(1997, 1, 2, 3, 4, 5, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(1997, 2, 11, 2, 32, 1, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(1997, 2, 11, 2, 32, 1, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(1997, 2, 11, 2, 32, 1, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(1997, 2, 11, 2, 32, 1, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(1997, 6, 11, 2, 32, 1, tzinfo=datetime.timezone(datetime.timedelta(seconds=7200))),), (datetime.datetime(2001, 9, 22, 18, 19, 20, tzinfo=datetime.timezone(datetime.timedelta(seconds=7200))),), (datetime.datetime(2000, 3, 15, 17, 14, 1, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(2000, 3, 15, 13, 14, 2, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(2000, 3, 15, 11, 14, 3, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(2000, 3, 15, 12, 14, 4, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(2000, 3, 15, 10, 14, 5, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(1997, 2, 11, 2, 32, 1, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(1997, 2, 10, 17, 32, 1, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(1997, 2, 10, 17, 32, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(1997, 2, 11, 2, 32, 1, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(1997, 2, 11, 2, 32, 1, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(1997, 2, 11, 2, 32, 1, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(1997, 10, 3, 3, 32, 1, tzinfo=datetime.timezone(datetime.timedelta(seconds=7200))),), (datetime.datetime(1997, 2, 11, 2, 32, 1, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(1997, 2, 10, 18, 32, 1, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(1997, 2, 10, 18, 32, 1, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(1997, 2, 10, 18, 32, 1, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(1997, 2, 10, 23, 32, 1, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(1997, 7, 10, 23, 32, 1, tzinfo=datetime.timezone(datetime.timedelta(seconds=7200))),), (datetime.datetime(1997, 6, 11, 3, 32, 1, tzinfo=datetime.timezone(datetime.timedelta(seconds=7200))),), (datetime.datetime(1997, 2, 10, 17, 32, 1, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(1997, 2, 11, 17, 32, 1, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(1997, 2, 12, 17, 32, 1, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(1997, 2, 13, 17, 32, 1, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(1997, 2, 14, 17, 32, 1, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(1997, 2, 15, 17, 32, 1, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(1997, 2, 16, 17, 32, 1, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(1997, 2, 16, 17, 32, 1, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(2097, 2, 16, 17, 32, 1, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(1997, 2, 28, 17, 32, 1, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(1997, 3, 1, 17, 32, 1, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(1997, 12, 30, 17, 32, 1, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(1997, 12, 31, 17, 32, 1, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(1999, 12, 31, 17, 32, 1, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(2000, 1, 1, 17, 32, 1, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(2000, 12, 31, 17, 32, 1, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(2001, 1, 1, 17, 32, 1, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),)]

-----------
QUERY:


SELECT d1 FROM TIMESTAMPTZ_TBL
   WHERE d1 < timestamp with time zone '1997-01-02';
RESULT:
	postgres: ERROR - year -97 is out of range

-----------
QUERY:


SELECT d1 FROM TIMESTAMPTZ_TBL
   WHERE d1 = timestamp with time zone '1997-01-02';
RESULT:
	postgres: [(datetime.datetime(1997, 1, 2, 0, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),)]

-----------
QUERY:


SELECT d1 FROM TIMESTAMPTZ_TBL
   WHERE d1 != timestamp with time zone '1997-01-02';
RESULT:
	postgres: ERROR - year -97 is out of range

-----------
QUERY:


SELECT d1 FROM TIMESTAMPTZ_TBL
   WHERE d1 <= timestamp with time zone '1997-01-02';
RESULT:
	postgres: ERROR - year -97 is out of range

-----------
QUERY:


SELECT d1 FROM TIMESTAMPTZ_TBL
   WHERE d1 >= timestamp with time zone '1997-01-02';
RESULT:
	postgres: [(datetime.datetime(9999, 12, 31, 23, 59, 59, 999999, tzinfo=datetime.timezone.utc),), (datetime.datetime(1997, 2, 11, 2, 32, 1, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(1997, 2, 11, 2, 32, 1, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(1997, 2, 11, 2, 32, 2, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(1997, 2, 11, 2, 32, 1, 400000, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(1997, 2, 11, 2, 32, 1, 500000, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(1997, 2, 11, 2, 32, 1, 600000, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(1997, 1, 2, 0, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(1997, 1, 2, 3, 4, 5, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(1997, 2, 11, 2, 32, 1, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(1997, 2, 11, 2, 32, 1, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(1997, 2, 11, 2, 32, 1, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(1997, 2, 11, 2, 32, 1, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(1997, 6, 11, 2, 32, 1, tzinfo=datetime.timezone(datetime.timedelta(seconds=7200))),), (datetime.datetime(2001, 9, 22, 18, 19, 20, tzinfo=datetime.timezone(datetime.timedelta(seconds=7200))),), (datetime.datetime(2000, 3, 15, 17, 14, 1, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(2000, 3, 15, 13, 14, 2, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(2000, 3, 15, 11, 14, 3, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(2000, 3, 15, 12, 14, 4, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(2000, 3, 15, 10, 14, 5, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(1997, 2, 11, 2, 32, 1, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(1997, 2, 10, 17, 32, 1, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(1997, 2, 10, 17, 32, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(1997, 2, 11, 2, 32, 1, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(1997, 2, 11, 2, 32, 1, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(1997, 2, 11, 2, 32, 1, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(1997, 10, 3, 3, 32, 1, tzinfo=datetime.timezone(datetime.timedelta(seconds=7200))),), (datetime.datetime(1997, 2, 11, 2, 32, 1, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(1997, 2, 10, 18, 32, 1, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(1997, 2, 10, 18, 32, 1, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(1997, 2, 10, 18, 32, 1, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(1997, 2, 10, 23, 32, 1, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(1997, 7, 10, 23, 32, 1, tzinfo=datetime.timezone(datetime.timedelta(seconds=7200))),), (datetime.datetime(1997, 6, 11, 3, 32, 1, tzinfo=datetime.timezone(datetime.timedelta(seconds=7200))),), (datetime.datetime(1997, 2, 10, 17, 32, 1, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(1997, 2, 11, 17, 32, 1, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(1997, 2, 12, 17, 32, 1, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(1997, 2, 13, 17, 32, 1, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(1997, 2, 14, 17, 32, 1, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(1997, 2, 15, 17, 32, 1, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(1997, 2, 16, 17, 32, 1, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(1997, 2, 16, 17, 32, 1, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(2097, 2, 16, 17, 32, 1, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(1997, 2, 28, 17, 32, 1, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(1997, 3, 1, 17, 32, 1, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(1997, 12, 30, 17, 32, 1, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(1997, 12, 31, 17, 32, 1, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(1999, 12, 31, 17, 32, 1, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(2000, 1, 1, 17, 32, 1, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(2000, 12, 31, 17, 32, 1, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(2001, 1, 1, 17, 32, 1, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),)]

-----------
QUERY:


SELECT d1 - timestamp with time zone '1997-01-02' AS diff
   FROM TIMESTAMPTZ_TBL WHERE d1 BETWEEN '1902-01-01' AND '2038-01-01';
RESULT:
	postgres: [(datetime.timedelta(days=-9863, seconds=3600),), (datetime.timedelta(days=40, seconds=9121),), (datetime.timedelta(days=40, seconds=9121),), (datetime.timedelta(days=40, seconds=9122),), (datetime.timedelta(days=40, seconds=9121, microseconds=400000),), (datetime.timedelta(days=40, seconds=9121, microseconds=500000),), (datetime.timedelta(days=40, seconds=9121, microseconds=600000),), (datetime.timedelta(0),), (datetime.timedelta(seconds=11045),), (datetime.timedelta(days=40, seconds=9121),), (datetime.timedelta(days=40, seconds=9121),), (datetime.timedelta(days=40, seconds=9121),), (datetime.timedelta(days=40, seconds=9121),), (datetime.timedelta(days=160, seconds=5521),), (datetime.timedelta(days=1724, seconds=62360),), (datetime.timedelta(days=1168, seconds=62041),), (datetime.timedelta(days=1168, seconds=47642),), (datetime.timedelta(days=1168, seconds=40443),), (datetime.timedelta(days=1168, seconds=44044),), (datetime.timedelta(days=1168, seconds=36845),), (datetime.timedelta(days=40, seconds=9121),), (datetime.timedelta(days=39, seconds=63121),), (datetime.timedelta(days=39, seconds=63120),), (datetime.timedelta(days=40, seconds=9121),), (datetime.timedelta(days=40, seconds=9121),), (datetime.timedelta(days=40, seconds=9121),), (datetime.timedelta(days=274, seconds=9121),), (datetime.timedelta(days=40, seconds=9121),), (datetime.timedelta(days=39, seconds=66721),), (datetime.timedelta(days=39, seconds=66721),), (datetime.timedelta(days=39, seconds=66721),), (datetime.timedelta(days=39, seconds=84721),), (datetime.timedelta(days=189, seconds=81121),), (datetime.timedelta(days=160, seconds=9121),), (datetime.timedelta(days=39, seconds=63121),), (datetime.timedelta(days=40, seconds=63121),), (datetime.timedelta(days=41, seconds=63121),), (datetime.timedelta(days=42, seconds=63121),), (datetime.timedelta(days=43, seconds=63121),), (datetime.timedelta(days=44, seconds=63121),), (datetime.timedelta(days=45, seconds=63121),), (datetime.timedelta(days=45, seconds=63121),), (datetime.timedelta(days=-309, seconds=63121),), (datetime.timedelta(days=-308, seconds=63121),), (datetime.timedelta(days=-307, seconds=63121),), (datetime.timedelta(days=-3, seconds=63121),), (datetime.timedelta(days=-2, seconds=63121),), (datetime.timedelta(days=-1, seconds=63121),), (datetime.timedelta(days=57, seconds=63121),), (datetime.timedelta(days=58, seconds=63121),), (datetime.timedelta(days=362, seconds=63121),), (datetime.timedelta(days=363, seconds=63121),), (datetime.timedelta(days=1093, seconds=63121),), (datetime.timedelta(days=1094, seconds=63121),), (datetime.timedelta(days=1459, seconds=63121),), (datetime.timedelta(days=1460, seconds=63121),)]

-----------
QUERY:


SELECT date_trunc( 'week', timestamp with time zone '2004-02-29 15:44:17.71393' ) AS week_trunc;
RESULT:
	postgres: [(datetime.datetime(2004, 2, 23, 0, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),)]

-----------
QUERY:


SELECT date_trunc('day', timestamp with time zone '2001-02-16 20:38:40+00', 'Australia/Sydney') as sydney_trunc;
RESULT:
	postgres: [(datetime.datetime(2001, 2, 16, 14, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),)]

-----------
QUERY:
  -- zone name
SELECT date_trunc('day', timestamp with time zone '2001-02-16 20:38:40+00', 'GMT') as gmt_trunc;
RESULT:
	postgres: [(datetime.datetime(2001, 2, 16, 1, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),)]

-----------
QUERY:
  -- fixed-offset abbreviation
SELECT date_trunc('day', timestamp with time zone '2001-02-16 20:38:40+00', 'VET') as vet_trunc;
RESULT:
	postgres: [(datetime.datetime(2001, 2, 16, 5, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),)]

-----------
QUERY:
  -- variable-offset abbreviation

-- verify date_bin behaves the same as date_trunc for relevant intervals
SELECT
  str,
  interval,
  date_trunc(str, ts, 'Australia/Sydney') = date_bin(interval::interval, ts, timestamp with time zone '2001-01-01+11') AS equal
FROM (
  VALUES
  ('day', '1 d'),
  ('hour', '1 h'),
  ('minute', '1 m'),
  ('second', '1 s'),
  ('millisecond', '1 ms'),
  ('microsecond', '1 us')
) intervals (str, interval),
(VALUES (timestamptz '2020-02-29 15:44:17.71393+00')) ts (ts);
RESULT:
	postgres: [('day', '1 d', True), ('hour', '1 h', True), ('minute', '1 m', True), ('second', '1 s', True), ('millisecond', '1 ms', True), ('microsecond', '1 us', True)]

-----------
QUERY:


-- bin timestamps into arbitrary intervals
SELECT
  interval,
  ts,
  origin,
  date_bin(interval::interval, ts, origin)
FROM (
  VALUES
  ('15 days'),
  ('2 hours'),
  ('1 hour 30 minutes'),
  ('15 minutes'),
  ('10 seconds'),
  ('100 milliseconds'),
  ('250 microseconds')
) intervals (interval),
(VALUES (timestamptz '2020-02-11 15:44:17.71393')) ts (ts),
(VALUES (timestamptz '2001-01-01')) origin (origin);
RESULT:
	postgres: [('15 days', datetime.datetime(2020, 2, 11, 15, 44, 17, 713930, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))), datetime.datetime(2001, 1, 1, 0, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))), datetime.datetime(2020, 2, 6, 0, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600)))), ('2 hours', datetime.datetime(2020, 2, 11, 15, 44, 17, 713930, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))), datetime.datetime(2001, 1, 1, 0, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))), datetime.datetime(2020, 2, 11, 14, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600)))), ('1 hour 30 minutes', datetime.datetime(2020, 2, 11, 15, 44, 17, 713930, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))), datetime.datetime(2001, 1, 1, 0, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))), datetime.datetime(2020, 2, 11, 15, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600)))), ('15 minutes', datetime.datetime(2020, 2, 11, 15, 44, 17, 713930, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))), datetime.datetime(2001, 1, 1, 0, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))), datetime.datetime(2020, 2, 11, 15, 30, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600)))), ('10 seconds', datetime.datetime(2020, 2, 11, 15, 44, 17, 713930, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))), datetime.datetime(2001, 1, 1, 0, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))), datetime.datetime(2020, 2, 11, 15, 44, 10, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600)))), ('100 milliseconds', datetime.datetime(2020, 2, 11, 15, 44, 17, 713930, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))), datetime.datetime(2001, 1, 1, 0, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))), datetime.datetime(2020, 2, 11, 15, 44, 17, 700000, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600)))), ('250 microseconds', datetime.datetime(2020, 2, 11, 15, 44, 17, 713930, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))), datetime.datetime(2001, 1, 1, 0, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))), datetime.datetime(2020, 2, 11, 15, 44, 17, 713750, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))))]

-----------
QUERY:


-- shift bins using the origin parameter:
SELECT date_bin('5 min'::interval, timestamptz '2020-02-01 01:01:01+00', timestamptz '2020-02-01 00:02:30+00');
RESULT:
	postgres: [(datetime.datetime(2020, 2, 1, 1, 57, 30, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),)]

-----------
QUERY:


-- test roundoff edge case when source < origin
SELECT date_bin('30 minutes'::interval, timestamptz '2024-02-01 15:00:00', timestamptz '2024-02-01 17:00:00');
RESULT:
	postgres: [(datetime.datetime(2024, 2, 1, 15, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),)]

-----------
QUERY:


-- disallow intervals with months or years
SELECT date_bin('5 months'::interval, timestamp with time zone '2020-02-01 01:01:01+00', timestamp with time zone '2001-01-01+00');
RESULT:
	postgres: ERROR - timestamps cannot be binned into intervals containing months or years


-----------
QUERY:

SELECT date_bin('5 years'::interval,  timestamp with time zone '2020-02-01 01:01:01+00', timestamp with time zone '2001-01-01+00');
RESULT:
	postgres: ERROR - timestamps cannot be binned into intervals containing months or years


-----------
QUERY:


-- disallow zero intervals
SELECT date_bin('0 days'::interval, timestamp with time zone '1970-01-01 01:00:00+00' , timestamp with time zone '1970-01-01 00:00:00+00');
RESULT:
	postgres: ERROR - stride must be greater than zero


-----------
QUERY:


-- disallow negative intervals
SELECT date_bin('-2 days'::interval, timestamp with time zone '1970-01-01 01:00:00+00' , timestamp with time zone '1970-01-01 00:00:00+00');
RESULT:
	postgres: ERROR - stride must be greater than zero


-----------
QUERY:


-- test overflow cases
select date_bin('15 minutes'::interval, timestamptz '294276-12-30', timestamptz '4000-12-20 BC');
RESULT:
	postgres: ERROR - interval out of range


-----------
QUERY:

select date_bin('200000000 days'::interval, '2024-02-01'::timestamptz, '2024-01-01'::timestamptz);
RESULT:
	postgres: ERROR - interval out of range


-----------
QUERY:

select date_bin('365000 days'::interval, '4400-01-01 BC'::timestamptz, '4000-01-01 BC'::timestamptz);
RESULT:
	postgres: ERROR - timestamp out of range


-----------
QUERY:


-- Test casting within a BETWEEN qualifier
SELECT d1 - timestamp with time zone '1997-01-02' AS diff
  FROM TIMESTAMPTZ_TBL
  WHERE d1 BETWEEN timestamp with time zone '1902-01-01' AND timestamp with time zone '2038-01-01';
RESULT:
	postgres: [(datetime.timedelta(days=-9863, seconds=3600),), (datetime.timedelta(days=40, seconds=9121),), (datetime.timedelta(days=40, seconds=9121),), (datetime.timedelta(days=40, seconds=9122),), (datetime.timedelta(days=40, seconds=9121, microseconds=400000),), (datetime.timedelta(days=40, seconds=9121, microseconds=500000),), (datetime.timedelta(days=40, seconds=9121, microseconds=600000),), (datetime.timedelta(0),), (datetime.timedelta(seconds=11045),), (datetime.timedelta(days=40, seconds=9121),), (datetime.timedelta(days=40, seconds=9121),), (datetime.timedelta(days=40, seconds=9121),), (datetime.timedelta(days=40, seconds=9121),), (datetime.timedelta(days=160, seconds=5521),), (datetime.timedelta(days=1724, seconds=62360),), (datetime.timedelta(days=1168, seconds=62041),), (datetime.timedelta(days=1168, seconds=47642),), (datetime.timedelta(days=1168, seconds=40443),), (datetime.timedelta(days=1168, seconds=44044),), (datetime.timedelta(days=1168, seconds=36845),), (datetime.timedelta(days=40, seconds=9121),), (datetime.timedelta(days=39, seconds=63121),), (datetime.timedelta(days=39, seconds=63120),), (datetime.timedelta(days=40, seconds=9121),), (datetime.timedelta(days=40, seconds=9121),), (datetime.timedelta(days=40, seconds=9121),), (datetime.timedelta(days=274, seconds=9121),), (datetime.timedelta(days=40, seconds=9121),), (datetime.timedelta(days=39, seconds=66721),), (datetime.timedelta(days=39, seconds=66721),), (datetime.timedelta(days=39, seconds=66721),), (datetime.timedelta(days=39, seconds=84721),), (datetime.timedelta(days=189, seconds=81121),), (datetime.timedelta(days=160, seconds=9121),), (datetime.timedelta(days=39, seconds=63121),), (datetime.timedelta(days=40, seconds=63121),), (datetime.timedelta(days=41, seconds=63121),), (datetime.timedelta(days=42, seconds=63121),), (datetime.timedelta(days=43, seconds=63121),), (datetime.timedelta(days=44, seconds=63121),), (datetime.timedelta(days=45, seconds=63121),), (datetime.timedelta(days=45, seconds=63121),), (datetime.timedelta(days=-309, seconds=63121),), (datetime.timedelta(days=-308, seconds=63121),), (datetime.timedelta(days=-307, seconds=63121),), (datetime.timedelta(days=-3, seconds=63121),), (datetime.timedelta(days=-2, seconds=63121),), (datetime.timedelta(days=-1, seconds=63121),), (datetime.timedelta(days=57, seconds=63121),), (datetime.timedelta(days=58, seconds=63121),), (datetime.timedelta(days=362, seconds=63121),), (datetime.timedelta(days=363, seconds=63121),), (datetime.timedelta(days=1093, seconds=63121),), (datetime.timedelta(days=1094, seconds=63121),), (datetime.timedelta(days=1459, seconds=63121),), (datetime.timedelta(days=1460, seconds=63121),)]

-----------
QUERY:


-- DATE_PART (timestamptz_part)
SELECT d1 as timestamptz,
   date_part( 'year', d1) AS year, date_part( 'month', d1) AS month,
   date_part( 'day', d1) AS day, date_part( 'hour', d1) AS hour,
   date_part( 'minute', d1) AS minute, date_part( 'second', d1) AS second
   FROM TIMESTAMPTZ_TBL;
RESULT:
	postgres: ERROR - year -97 is out of range

-----------
QUERY:


SELECT d1 as timestamptz,
   date_part( 'quarter', d1) AS quarter, date_part( 'msec', d1) AS msec,
   date_part( 'usec', d1) AS usec
   FROM TIMESTAMPTZ_TBL;
RESULT:
	postgres: ERROR - year -97 is out of range

-----------
QUERY:


SELECT d1 as timestamptz,
   date_part( 'isoyear', d1) AS isoyear, date_part( 'week', d1) AS week,
   date_part( 'isodow', d1) AS isodow, date_part( 'dow', d1) AS dow,
   date_part( 'doy', d1) AS doy
   FROM TIMESTAMPTZ_TBL;
RESULT:
	postgres: ERROR - year -97 is out of range

-----------
QUERY:


SELECT d1 as timestamptz,
   date_part( 'decade', d1) AS decade,
   date_part( 'century', d1) AS century,
   date_part( 'millennium', d1) AS millennium,
   round(date_part( 'julian', d1)) AS julian,
   date_part( 'epoch', d1) AS epoch
   FROM TIMESTAMPTZ_TBL;
RESULT:
	postgres: ERROR - year -97 is out of range

-----------
QUERY:


SELECT d1 as timestamptz,
   date_part( 'timezone', d1) AS timezone,
   date_part( 'timezone_hour', d1) AS timezone_hour,
   date_part( 'timezone_minute', d1) AS timezone_minute
   FROM TIMESTAMPTZ_TBL;
RESULT:
	postgres: ERROR - year -97 is out of range

-----------
QUERY:


-- extract implementation is mostly the same as date_part, so only
-- test a few cases for additional coverage.
SELECT d1 as "timestamp",
   extract(microseconds from d1) AS microseconds,
   extract(milliseconds from d1) AS milliseconds,
   extract(seconds from d1) AS seconds,
   round(extract(julian from d1)) AS julian,
   extract(epoch from d1) AS epoch
   FROM TIMESTAMPTZ_TBL;
RESULT:
	postgres: ERROR - year -97 is out of range

-----------
QUERY:


-- value near upper bound uses special case in code
SELECT date_part('epoch', '294270-01-01 00:00:00+00'::timestamptz);
RESULT:
	postgres: [(9224097091200.0,)]

-----------
QUERY:

SELECT extract(epoch from '294270-01-01 00:00:00+00'::timestamptz);
RESULT:
	postgres: [(Decimal('9224097091200.000000'),)]

-----------
QUERY:

-- another internal overflow test case
SELECT extract(epoch from '5000-01-01 00:00:00+00'::timestamptz);
RESULT:
	postgres: [(Decimal('95617584000.000000'),)]

-----------
QUERY:


-- test edge-case overflow in timestamp subtraction
SELECT timestamptz '294276-12-31 23:59:59 UTC' - timestamptz '1999-12-23 19:59:04.224193 UTC' AS ok;
RESULT:
	postgres: [(datetime.timedelta(days=106751991, seconds=14454, microseconds=775807),)]

-----------
QUERY:

SELECT timestamptz '294276-12-31 23:59:59 UTC' - timestamptz '1999-12-23 19:59:04.224192 UTC' AS overflows;
RESULT:
	postgres: ERROR - interval out of range


-----------
QUERY:


-- TO_CHAR()
SELECT to_char(d1, 'DAY Day day DY Dy dy MONTH Month month RM MON Mon mon')
   FROM TIMESTAMPTZ_TBL;
RESULT:
	postgres: [(None,), (None,), ('THURSDAY  Thursday  thursday  THU Thu thu JANUARY   January   january   I    JAN Jan jan',), ('TUESDAY   Tuesday   tuesday   TUE Tue tue FEBRUARY  February  february  II   FEB Feb feb',), ('TUESDAY   Tuesday   tuesday   TUE Tue tue FEBRUARY  February  february  II   FEB Feb feb',), ('TUESDAY   Tuesday   tuesday   TUE Tue tue FEBRUARY  February  february  II   FEB Feb feb',), ('TUESDAY   Tuesday   tuesday   TUE Tue tue FEBRUARY  February  february  II   FEB Feb feb',), ('TUESDAY   Tuesday   tuesday   TUE Tue tue FEBRUARY  February  february  II   FEB Feb feb',), ('TUESDAY   Tuesday   tuesday   TUE Tue tue FEBRUARY  February  february  II   FEB Feb feb',), ('THURSDAY  Thursday  thursday  THU Thu thu JANUARY   January   january   I    JAN Jan jan',), ('THURSDAY  Thursday  thursday  THU Thu thu JANUARY   January   january   I    JAN Jan jan',), ('TUESDAY   Tuesday   tuesday   TUE Tue tue FEBRUARY  February  february  II   FEB Feb feb',), ('TUESDAY   Tuesday   tuesday   TUE Tue tue FEBRUARY  February  february  II   FEB Feb feb',), ('TUESDAY   Tuesday   tuesday   TUE Tue tue FEBRUARY  February  february  II   FEB Feb feb',), ('TUESDAY   Tuesday   tuesday   TUE Tue tue FEBRUARY  February  february  II   FEB Feb feb',), ('WEDNESDAY Wednesday wednesday WED Wed wed JUNE      June      june      VI   JUN Jun jun',), ('SATURDAY  Saturday  saturday  SAT Sat sat SEPTEMBER September september IX   SEP Sep sep',), ('WEDNESDAY Wednesday wednesday WED Wed wed MARCH     March     march     III  MAR Mar mar',), ('WEDNESDAY Wednesday wednesday WED Wed wed MARCH     March     march     III  MAR Mar mar',), ('WEDNESDAY Wednesday wednesday WED Wed wed MARCH     March     march     III  MAR Mar mar',), ('WEDNESDAY Wednesday wednesday WED Wed wed MARCH     March     march     III  MAR Mar mar',), ('WEDNESDAY Wednesday wednesday WED Wed wed MARCH     March     march     III  MAR Mar mar',), ('TUESDAY   Tuesday   tuesday   TUE Tue tue FEBRUARY  February  february  II   FEB Feb feb',), ('MONDAY    Monday    monday    MON Mon mon FEBRUARY  February  february  II   FEB Feb feb',), ('MONDAY    Monday    monday    MON Mon mon FEBRUARY  February  february  II   FEB Feb feb',), ('TUESDAY   Tuesday   tuesday   TUE Tue tue FEBRUARY  February  february  II   FEB Feb feb',), ('TUESDAY   Tuesday   tuesday   TUE Tue tue FEBRUARY  February  february  II   FEB Feb feb',), ('TUESDAY   Tuesday   tuesday   TUE Tue tue FEBRUARY  February  february  II   FEB Feb feb',), ('FRIDAY    Friday    friday    FRI Fri fri OCTOBER   October   october   X    OCT Oct oct',), ('TUESDAY   Tuesday   tuesday   TUE Tue tue FEBRUARY  February  february  II   FEB Feb feb',), ('MONDAY    Monday    monday    MON Mon mon FEBRUARY  February  february  II   FEB Feb feb',), ('MONDAY    Monday    monday    MON Mon mon FEBRUARY  February  february  II   FEB Feb feb',), ('MONDAY    Monday    monday    MON Mon mon FEBRUARY  February  february  II   FEB Feb feb',), ('MONDAY    Monday    monday    MON Mon mon FEBRUARY  February  february  II   FEB Feb feb',), ('THURSDAY  Thursday  thursday  THU Thu thu JULY      July      july      VII  JUL Jul jul',), ('WEDNESDAY Wednesday wednesday WED Wed wed JUNE      June      june      VI   JUN Jun jun',), ('MONDAY    Monday    monday    MON Mon mon FEBRUARY  February  february  II   FEB Feb feb',), ('TUESDAY   Tuesday   tuesday   TUE Tue tue FEBRUARY  February  february  II   FEB Feb feb',), ('WEDNESDAY Wednesday wednesday WED Wed wed FEBRUARY  February  february  II   FEB Feb feb',), ('THURSDAY  Thursday  thursday  THU Thu thu FEBRUARY  February  february  II   FEB Feb feb',), ('FRIDAY    Friday    friday    FRI Fri fri FEBRUARY  February  february  II   FEB Feb feb',), ('SATURDAY  Saturday  saturday  SAT Sat sat FEBRUARY  February  february  II   FEB Feb feb',), ('SUNDAY    Sunday    sunday    SUN Sun sun FEBRUARY  February  february  II   FEB Feb feb',), ('TUESDAY   Tuesday   tuesday   TUE Tue tue FEBRUARY  February  february  II   FEB Feb feb',), ('SATURDAY  Saturday  saturday  SAT Sat sat FEBRUARY  February  february  II   FEB Feb feb',), ('THURSDAY  Thursday  thursday  THU Thu thu FEBRUARY  February  february  II   FEB Feb feb',), ('TUESDAY   Tuesday   tuesday   TUE Tue tue FEBRUARY  February  february  II   FEB Feb feb',), ('SATURDAY  Saturday  saturday  SAT Sat sat FEBRUARY  February  february  II   FEB Feb feb',), ('THURSDAY  Thursday  thursday  THU Thu thu FEBRUARY  February  february  II   FEB Feb feb',), ('TUESDAY   Tuesday   tuesday   TUE Tue tue FEBRUARY  February  february  II   FEB Feb feb',), ('SUNDAY    Sunday    sunday    SUN Sun sun FEBRUARY  February  february  II   FEB Feb feb',), ('SATURDAY  Saturday  saturday  SAT Sat sat FEBRUARY  February  february  II   FEB Feb feb',), ('WEDNESDAY Wednesday wednesday WED Wed wed FEBRUARY  February  february  II   FEB Feb feb',), ('THURSDAY  Thursday  thursday  THU Thu thu FEBRUARY  February  february  II   FEB Feb feb',), ('FRIDAY    Friday    friday    FRI Fri fri MARCH     March     march     III  MAR Mar mar',), ('MONDAY    Monday    monday    MON Mon mon DECEMBER  December  december  XII  DEC Dec dec',), ('TUESDAY   Tuesday   tuesday   TUE Tue tue DECEMBER  December  december  XII  DEC Dec dec',), ('WEDNESDAY Wednesday wednesday WED Wed wed JANUARY   January   january   I    JAN Jan jan',), ('FRIDAY    Friday    friday    FRI Fri fri FEBRUARY  February  february  II   FEB Feb feb',), ('SATURDAY  Saturday  saturday  SAT Sat sat MARCH     March     march     III  MAR Mar mar',), ('TUESDAY   Tuesday   tuesday   TUE Tue tue DECEMBER  December  december  XII  DEC Dec dec',), ('WEDNESDAY Wednesday wednesday WED Wed wed DECEMBER  December  december  XII  DEC Dec dec',), ('FRIDAY    Friday    friday    FRI Fri fri DECEMBER  December  december  XII  DEC Dec dec',), ('SATURDAY  Saturday  saturday  SAT Sat sat JANUARY   January   january   I    JAN Jan jan',), ('SUNDAY    Sunday    sunday    SUN Sun sun DECEMBER  December  december  XII  DEC Dec dec',), ('MONDAY    Monday    monday    MON Mon mon JANUARY   January   january   I    JAN Jan jan',)]

-----------
QUERY:


SELECT to_char(d1, 'FMDAY FMDay FMday FMMONTH FMMonth FMmonth FMRM')
   FROM TIMESTAMPTZ_TBL;
RESULT:
	postgres: [(None,), (None,), ('THURSDAY Thursday thursday JANUARY January january I',), ('TUESDAY Tuesday tuesday FEBRUARY February february II',), ('TUESDAY Tuesday tuesday FEBRUARY February february II',), ('TUESDAY Tuesday tuesday FEBRUARY February february II',), ('TUESDAY Tuesday tuesday FEBRUARY February february II',), ('TUESDAY Tuesday tuesday FEBRUARY February february II',), ('TUESDAY Tuesday tuesday FEBRUARY February february II',), ('THURSDAY Thursday thursday JANUARY January january I',), ('THURSDAY Thursday thursday JANUARY January january I',), ('TUESDAY Tuesday tuesday FEBRUARY February february II',), ('TUESDAY Tuesday tuesday FEBRUARY February february II',), ('TUESDAY Tuesday tuesday FEBRUARY February february II',), ('TUESDAY Tuesday tuesday FEBRUARY February february II',), ('WEDNESDAY Wednesday wednesday JUNE June june VI',), ('SATURDAY Saturday saturday SEPTEMBER September september IX',), ('WEDNESDAY Wednesday wednesday MARCH March march III',), ('WEDNESDAY Wednesday wednesday MARCH March march III',), ('WEDNESDAY Wednesday wednesday MARCH March march III',), ('WEDNESDAY Wednesday wednesday MARCH March march III',), ('WEDNESDAY Wednesday wednesday MARCH March march III',), ('TUESDAY Tuesday tuesday FEBRUARY February february II',), ('MONDAY Monday monday FEBRUARY February february II',), ('MONDAY Monday monday FEBRUARY February february II',), ('TUESDAY Tuesday tuesday FEBRUARY February february II',), ('TUESDAY Tuesday tuesday FEBRUARY February february II',), ('TUESDAY Tuesday tuesday FEBRUARY February february II',), ('FRIDAY Friday friday OCTOBER October october X',), ('TUESDAY Tuesday tuesday FEBRUARY February february II',), ('MONDAY Monday monday FEBRUARY February february II',), ('MONDAY Monday monday FEBRUARY February february II',), ('MONDAY Monday monday FEBRUARY February february II',), ('MONDAY Monday monday FEBRUARY February february II',), ('THURSDAY Thursday thursday JULY July july VII',), ('WEDNESDAY Wednesday wednesday JUNE June june VI',), ('MONDAY Monday monday FEBRUARY February february II',), ('TUESDAY Tuesday tuesday FEBRUARY February february II',), ('WEDNESDAY Wednesday wednesday FEBRUARY February february II',), ('THURSDAY Thursday thursday FEBRUARY February february II',), ('FRIDAY Friday friday FEBRUARY February february II',), ('SATURDAY Saturday saturday FEBRUARY February february II',), ('SUNDAY Sunday sunday FEBRUARY February february II',), ('TUESDAY Tuesday tuesday FEBRUARY February february II',), ('SATURDAY Saturday saturday FEBRUARY February february II',), ('THURSDAY Thursday thursday FEBRUARY February february II',), ('TUESDAY Tuesday tuesday FEBRUARY February february II',), ('SATURDAY Saturday saturday FEBRUARY February february II',), ('THURSDAY Thursday thursday FEBRUARY February february II',), ('TUESDAY Tuesday tuesday FEBRUARY February february II',), ('SUNDAY Sunday sunday FEBRUARY February february II',), ('SATURDAY Saturday saturday FEBRUARY February february II',), ('WEDNESDAY Wednesday wednesday FEBRUARY February february II',), ('THURSDAY Thursday thursday FEBRUARY February february II',), ('FRIDAY Friday friday MARCH March march III',), ('MONDAY Monday monday DECEMBER December december XII',), ('TUESDAY Tuesday tuesday DECEMBER December december XII',), ('WEDNESDAY Wednesday wednesday JANUARY January january I',), ('FRIDAY Friday friday FEBRUARY February february II',), ('SATURDAY Saturday saturday MARCH March march III',), ('TUESDAY Tuesday tuesday DECEMBER December december XII',), ('WEDNESDAY Wednesday wednesday DECEMBER December december XII',), ('FRIDAY Friday friday DECEMBER December december XII',), ('SATURDAY Saturday saturday JANUARY January january I',), ('SUNDAY Sunday sunday DECEMBER December december XII',), ('MONDAY Monday monday JANUARY January january I',)]

-----------
QUERY:


SELECT to_char(d1, 'Y,YYY YYYY YYY YY Y CC Q MM WW DDD DD D J')
   FROM TIMESTAMPTZ_TBL;
RESULT:
	postgres: [(None,), (None,), ('1,970 1970 970 70 0 20 1 01 01 001 01 5 2440588',), ('1,997 1997 997 97 7 20 1 02 06 042 11 3 2450491',), ('1,997 1997 997 97 7 20 1 02 06 042 11 3 2450491',), ('1,997 1997 997 97 7 20 1 02 06 042 11 3 2450491',), ('1,997 1997 997 97 7 20 1 02 06 042 11 3 2450491',), ('1,997 1997 997 97 7 20 1 02 06 042 11 3 2450491',), ('1,997 1997 997 97 7 20 1 02 06 042 11 3 2450491',), ('1,997 1997 997 97 7 20 1 01 01 002 02 5 2450451',), ('1,997 1997 997 97 7 20 1 01 01 002 02 5 2450451',), ('1,997 1997 997 97 7 20 1 02 06 042 11 3 2450491',), ('1,997 1997 997 97 7 20 1 02 06 042 11 3 2450491',), ('1,997 1997 997 97 7 20 1 02 06 042 11 3 2450491',), ('1,997 1997 997 97 7 20 1 02 06 042 11 3 2450491',), ('1,997 1997 997 97 7 20 2 06 24 162 11 4 2450611',), ('2,001 2001 001 01 1 21 3 09 38 265 22 7 2452175',), ('2,000 2000 000 00 0 20 1 03 11 075 15 4 2451619',), ('2,000 2000 000 00 0 20 1 03 11 075 15 4 2451619',), ('2,000 2000 000 00 0 20 1 03 11 075 15 4 2451619',), ('2,000 2000 000 00 0 20 1 03 11 075 15 4 2451619',), ('2,000 2000 000 00 0 20 1 03 11 075 15 4 2451619',), ('1,997 1997 997 97 7 20 1 02 06 042 11 3 2450491',), ('1,997 1997 997 97 7 20 1 02 06 041 10 2 2450490',), ('1,997 1997 997 97 7 20 1 02 06 041 10 2 2450490',), ('1,997 1997 997 97 7 20 1 02 06 042 11 3 2450491',), ('1,997 1997 997 97 7 20 1 02 06 042 11 3 2450491',), ('1,997 1997 997 97 7 20 1 02 06 042 11 3 2450491',), ('1,997 1997 997 97 7 20 4 10 40 276 03 6 2450725',), ('1,997 1997 997 97 7 20 1 02 06 042 11 3 2450491',), ('1,997 1997 997 97 7 20 1 02 06 041 10 2 2450490',), ('1,997 1997 997 97 7 20 1 02 06 041 10 2 2450490',), ('1,997 1997 997 97 7 20 1 02 06 041 10 2 2450490',), ('1,997 1997 997 97 7 20 1 02 06 041 10 2 2450490',), ('1,997 1997 997 97 7 20 3 07 28 191 10 5 2450640',), ('1,997 1997 997 97 7 20 2 06 24 162 11 4 2450611',), ('1,997 1997 997 97 7 20 1 02 06 041 10 2 2450490',), ('1,997 1997 997 97 7 20 1 02 06 042 11 3 2450491',), ('1,997 1997 997 97 7 20 1 02 07 043 12 4 2450492',), ('1,997 1997 997 97 7 20 1 02 07 044 13 5 2450493',), ('1,997 1997 997 97 7 20 1 02 07 045 14 6 2450494',), ('1,997 1997 997 97 7 20 1 02 07 046 15 7 2450495',), ('1,997 1997 997 97 7 20 1 02 07 047 16 1 2450496',), ('0,097 0097 097 97 7 -01 1 02 07 047 16 3 1686042',), ('0,097 0097 097 97 7 01 1 02 07 047 16 7 1756536',), ('0,597 0597 597 97 7 06 1 02 07 047 16 5 1939157',), ('1,097 1097 097 97 7 11 1 02 07 047 16 3 2121778',), ('1,697 1697 697 97 7 17 1 02 07 047 16 7 2340924',), ('1,797 1797 797 97 7 18 1 02 07 047 16 5 2377448',), ('1,897 1897 897 97 7 19 1 02 07 047 16 3 2413972',), ('1,997 1997 997 97 7 20 1 02 07 047 16 1 2450496',), ('2,097 2097 097 97 7 21 1 02 07 047 16 7 2487021',), ('1,996 1996 996 96 6 20 1 02 09 059 28 4 2450142',), ('1,996 1996 996 96 6 20 1 02 09 060 29 5 2450143',), ('1,996 1996 996 96 6 20 1 03 09 061 01 6 2450144',), ('1,996 1996 996 96 6 20 4 12 53 365 30 2 2450448',), ('1,996 1996 996 96 6 20 4 12 53 366 31 3 2450449',), ('1,997 1997 997 97 7 20 1 01 01 001 01 4 2450450',), ('1,997 1997 997 97 7 20 1 02 09 059 28 6 2450508',), ('1,997 1997 997 97 7 20 1 03 09 060 01 7 2450509',), ('1,997 1997 997 97 7 20 4 12 52 364 30 3 2450813',), ('1,997 1997 997 97 7 20 4 12 53 365 31 4 2450814',), ('1,999 1999 999 99 9 20 4 12 53 365 31 6 2451544',), ('2,000 2000 000 00 0 20 1 01 01 001 01 7 2451545',), ('2,000 2000 000 00 0 20 4 12 53 366 31 1 2451910',), ('2,001 2001 001 01 1 21 1 01 01 001 01 2 2451911',)]

-----------
QUERY:


SELECT to_char(d1, 'FMY,YYY FMYYYY FMYYY FMYY FMY FMCC FMQ FMMM FMWW FMDDD FMDD FMD FMJ')
   FROM TIMESTAMPTZ_TBL;
RESULT:
	postgres: [(None,), (None,), ('1,970 1970 970 70 0 20 1 1 1 1 1 5 2440588',), ('1,997 1997 997 97 7 20 1 2 6 42 11 3 2450491',), ('1,997 1997 997 97 7 20 1 2 6 42 11 3 2450491',), ('1,997 1997 997 97 7 20 1 2 6 42 11 3 2450491',), ('1,997 1997 997 97 7 20 1 2 6 42 11 3 2450491',), ('1,997 1997 997 97 7 20 1 2 6 42 11 3 2450491',), ('1,997 1997 997 97 7 20 1 2 6 42 11 3 2450491',), ('1,997 1997 997 97 7 20 1 1 1 2 2 5 2450451',), ('1,997 1997 997 97 7 20 1 1 1 2 2 5 2450451',), ('1,997 1997 997 97 7 20 1 2 6 42 11 3 2450491',), ('1,997 1997 997 97 7 20 1 2 6 42 11 3 2450491',), ('1,997 1997 997 97 7 20 1 2 6 42 11 3 2450491',), ('1,997 1997 997 97 7 20 1 2 6 42 11 3 2450491',), ('1,997 1997 997 97 7 20 2 6 24 162 11 4 2450611',), ('2,001 2001 1 1 1 21 3 9 38 265 22 7 2452175',), ('2,000 2000 0 0 0 20 1 3 11 75 15 4 2451619',), ('2,000 2000 0 0 0 20 1 3 11 75 15 4 2451619',), ('2,000 2000 0 0 0 20 1 3 11 75 15 4 2451619',), ('2,000 2000 0 0 0 20 1 3 11 75 15 4 2451619',), ('2,000 2000 0 0 0 20 1 3 11 75 15 4 2451619',), ('1,997 1997 997 97 7 20 1 2 6 42 11 3 2450491',), ('1,997 1997 997 97 7 20 1 2 6 41 10 2 2450490',), ('1,997 1997 997 97 7 20 1 2 6 41 10 2 2450490',), ('1,997 1997 997 97 7 20 1 2 6 42 11 3 2450491',), ('1,997 1997 997 97 7 20 1 2 6 42 11 3 2450491',), ('1,997 1997 997 97 7 20 1 2 6 42 11 3 2450491',), ('1,997 1997 997 97 7 20 4 10 40 276 3 6 2450725',), ('1,997 1997 997 97 7 20 1 2 6 42 11 3 2450491',), ('1,997 1997 997 97 7 20 1 2 6 41 10 2 2450490',), ('1,997 1997 997 97 7 20 1 2 6 41 10 2 2450490',), ('1,997 1997 997 97 7 20 1 2 6 41 10 2 2450490',), ('1,997 1997 997 97 7 20 1 2 6 41 10 2 2450490',), ('1,997 1997 997 97 7 20 3 7 28 191 10 5 2450640',), ('1,997 1997 997 97 7 20 2 6 24 162 11 4 2450611',), ('1,997 1997 997 97 7 20 1 2 6 41 10 2 2450490',), ('1,997 1997 997 97 7 20 1 2 6 42 11 3 2450491',), ('1,997 1997 997 97 7 20 1 2 7 43 12 4 2450492',), ('1,997 1997 997 97 7 20 1 2 7 44 13 5 2450493',), ('1,997 1997 997 97 7 20 1 2 7 45 14 6 2450494',), ('1,997 1997 997 97 7 20 1 2 7 46 15 7 2450495',), ('1,997 1997 997 97 7 20 1 2 7 47 16 1 2450496',), ('0,097 97 97 97 7 -1 1 2 7 47 16 3 1686042',), ('0,097 97 97 97 7 1 1 2 7 47 16 7 1756536',), ('0,597 597 597 97 7 6 1 2 7 47 16 5 1939157',), ('1,097 1097 97 97 7 11 1 2 7 47 16 3 2121778',), ('1,697 1697 697 97 7 17 1 2 7 47 16 7 2340924',), ('1,797 1797 797 97 7 18 1 2 7 47 16 5 2377448',), ('1,897 1897 897 97 7 19 1 2 7 47 16 3 2413972',), ('1,997 1997 997 97 7 20 1 2 7 47 16 1 2450496',), ('2,097 2097 97 97 7 21 1 2 7 47 16 7 2487021',), ('1,996 1996 996 96 6 20 1 2 9 59 28 4 2450142',), ('1,996 1996 996 96 6 20 1 2 9 60 29 5 2450143',), ('1,996 1996 996 96 6 20 1 3 9 61 1 6 2450144',), ('1,996 1996 996 96 6 20 4 12 53 365 30 2 2450448',), ('1,996 1996 996 96 6 20 4 12 53 366 31 3 2450449',), ('1,997 1997 997 97 7 20 1 1 1 1 1 4 2450450',), ('1,997 1997 997 97 7 20 1 2 9 59 28 6 2450508',), ('1,997 1997 997 97 7 20 1 3 9 60 1 7 2450509',), ('1,997 1997 997 97 7 20 4 12 52 364 30 3 2450813',), ('1,997 1997 997 97 7 20 4 12 53 365 31 4 2450814',), ('1,999 1999 999 99 9 20 4 12 53 365 31 6 2451544',), ('2,000 2000 0 0 0 20 1 1 1 1 1 7 2451545',), ('2,000 2000 0 0 0 20 4 12 53 366 31 1 2451910',), ('2,001 2001 1 1 1 21 1 1 1 1 1 2 2451911',)]

-----------
QUERY:


SELECT to_char(d1, 'HH HH12 HH24 MI SS SSSS')
   FROM TIMESTAMPTZ_TBL;
RESULT:
	postgres: [(None,), (None,), ('01 01 01 00 00 3600',), ('02 02 02 32 01 9121',), ('02 02 02 32 01 9121',), ('02 02 02 32 02 9122',), ('02 02 02 32 01 9121',), ('02 02 02 32 01 9121',), ('02 02 02 32 01 9121',), ('12 12 00 00 00 0',), ('03 03 03 04 05 11045',), ('02 02 02 32 01 9121',), ('02 02 02 32 01 9121',), ('02 02 02 32 01 9121',), ('02 02 02 32 01 9121',), ('02 02 02 32 01 9121',), ('06 06 18 19 20 65960',), ('05 05 17 14 01 62041',), ('01 01 13 14 02 47642',), ('11 11 11 14 03 40443',), ('12 12 12 14 04 44044',), ('10 10 10 14 05 36845',), ('02 02 02 32 01 9121',), ('05 05 17 32 01 63121',), ('05 05 17 32 00 63120',), ('02 02 02 32 01 9121',), ('02 02 02 32 01 9121',), ('02 02 02 32 01 9121',), ('03 03 03 32 01 12721',), ('02 02 02 32 01 9121',), ('06 06 18 32 01 66721',), ('06 06 18 32 01 66721',), ('06 06 18 32 01 66721',), ('11 11 23 32 01 84721',), ('11 11 23 32 01 84721',), ('03 03 03 32 01 12721',), ('05 05 17 32 01 63121',), ('05 05 17 32 01 63121',), ('05 05 17 32 01 63121',), ('05 05 17 32 01 63121',), ('05 05 17 32 01 63121',), ('05 05 17 32 01 63121',), ('05 05 17 32 01 63121',), ('05 05 17 32 01 63121',), ('05 05 17 32 01 63121',), ('05 05 17 32 01 63121',), ('05 05 17 32 01 63121',), ('05 05 17 32 01 63121',), ('05 05 17 32 01 63121',), ('05 05 17 32 01 63121',), ('05 05 17 32 01 63121',), ('05 05 17 32 01 63121',), ('05 05 17 32 01 63121',), ('05 05 17 32 01 63121',), ('05 05 17 32 01 63121',), ('05 05 17 32 01 63121',), ('05 05 17 32 01 63121',), ('05 05 17 32 01 63121',), ('05 05 17 32 01 63121',), ('05 05 17 32 01 63121',), ('05 05 17 32 01 63121',), ('05 05 17 32 01 63121',), ('05 05 17 32 01 63121',), ('05 05 17 32 01 63121',), ('05 05 17 32 01 63121',), ('05 05 17 32 01 63121',)]

-----------
QUERY:


SELECT to_char(d1, E'"HH:MI:SS is" HH:MI:SS "\\"text between quote marks\\""')
   FROM TIMESTAMPTZ_TBL;
RESULT:
	postgres: [(None,), (None,), ('HH:MI:SS is 01:00:00 "text between quote marks"',), ('HH:MI:SS is 02:32:01 "text between quote marks"',), ('HH:MI:SS is 02:32:01 "text between quote marks"',), ('HH:MI:SS is 02:32:02 "text between quote marks"',), ('HH:MI:SS is 02:32:01 "text between quote marks"',), ('HH:MI:SS is 02:32:01 "text between quote marks"',), ('HH:MI:SS is 02:32:01 "text between quote marks"',), ('HH:MI:SS is 12:00:00 "text between quote marks"',), ('HH:MI:SS is 03:04:05 "text between quote marks"',), ('HH:MI:SS is 02:32:01 "text between quote marks"',), ('HH:MI:SS is 02:32:01 "text between quote marks"',), ('HH:MI:SS is 02:32:01 "text between quote marks"',), ('HH:MI:SS is 02:32:01 "text between quote marks"',), ('HH:MI:SS is 02:32:01 "text between quote marks"',), ('HH:MI:SS is 06:19:20 "text between quote marks"',), ('HH:MI:SS is 05:14:01 "text between quote marks"',), ('HH:MI:SS is 01:14:02 "text between quote marks"',), ('HH:MI:SS is 11:14:03 "text between quote marks"',), ('HH:MI:SS is 12:14:04 "text between quote marks"',), ('HH:MI:SS is 10:14:05 "text between quote marks"',), ('HH:MI:SS is 02:32:01 "text between quote marks"',), ('HH:MI:SS is 05:32:01 "text between quote marks"',), ('HH:MI:SS is 05:32:00 "text between quote marks"',), ('HH:MI:SS is 02:32:01 "text between quote marks"',), ('HH:MI:SS is 02:32:01 "text between quote marks"',), ('HH:MI:SS is 02:32:01 "text between quote marks"',), ('HH:MI:SS is 03:32:01 "text between quote marks"',), ('HH:MI:SS is 02:32:01 "text between quote marks"',), ('HH:MI:SS is 06:32:01 "text between quote marks"',), ('HH:MI:SS is 06:32:01 "text between quote marks"',), ('HH:MI:SS is 06:32:01 "text between quote marks"',), ('HH:MI:SS is 11:32:01 "text between quote marks"',), ('HH:MI:SS is 11:32:01 "text between quote marks"',), ('HH:MI:SS is 03:32:01 "text between quote marks"',), ('HH:MI:SS is 05:32:01 "text between quote marks"',), ('HH:MI:SS is 05:32:01 "text between quote marks"',), ('HH:MI:SS is 05:32:01 "text between quote marks"',), ('HH:MI:SS is 05:32:01 "text between quote marks"',), ('HH:MI:SS is 05:32:01 "text between quote marks"',), ('HH:MI:SS is 05:32:01 "text between quote marks"',), ('HH:MI:SS is 05:32:01 "text between quote marks"',), ('HH:MI:SS is 05:32:01 "text between quote marks"',), ('HH:MI:SS is 05:32:01 "text between quote marks"',), ('HH:MI:SS is 05:32:01 "text between quote marks"',), ('HH:MI:SS is 05:32:01 "text between quote marks"',), ('HH:MI:SS is 05:32:01 "text between quote marks"',), ('HH:MI:SS is 05:32:01 "text between quote marks"',), ('HH:MI:SS is 05:32:01 "text between quote marks"',), ('HH:MI:SS is 05:32:01 "text between quote marks"',), ('HH:MI:SS is 05:32:01 "text between quote marks"',), ('HH:MI:SS is 05:32:01 "text between quote marks"',), ('HH:MI:SS is 05:32:01 "text between quote marks"',), ('HH:MI:SS is 05:32:01 "text between quote marks"',), ('HH:MI:SS is 05:32:01 "text between quote marks"',), ('HH:MI:SS is 05:32:01 "text between quote marks"',), ('HH:MI:SS is 05:32:01 "text between quote marks"',), ('HH:MI:SS is 05:32:01 "text between quote marks"',), ('HH:MI:SS is 05:32:01 "text between quote marks"',), ('HH:MI:SS is 05:32:01 "text between quote marks"',), ('HH:MI:SS is 05:32:01 "text between quote marks"',), ('HH:MI:SS is 05:32:01 "text between quote marks"',), ('HH:MI:SS is 05:32:01 "text between quote marks"',), ('HH:MI:SS is 05:32:01 "text between quote marks"',), ('HH:MI:SS is 05:32:01 "text between quote marks"',)]

-----------
QUERY:


SELECT to_char(d1, 'HH24--text--MI--text--SS')
   FROM TIMESTAMPTZ_TBL;
RESULT:
	postgres: [(None,), (None,), ('01--text--00--text--00',), ('02--text--32--text--01',), ('02--text--32--text--01',), ('02--text--32--text--02',), ('02--text--32--text--01',), ('02--text--32--text--01',), ('02--text--32--text--01',), ('00--text--00--text--00',), ('03--text--04--text--05',), ('02--text--32--text--01',), ('02--text--32--text--01',), ('02--text--32--text--01',), ('02--text--32--text--01',), ('02--text--32--text--01',), ('18--text--19--text--20',), ('17--text--14--text--01',), ('13--text--14--text--02',), ('11--text--14--text--03',), ('12--text--14--text--04',), ('10--text--14--text--05',), ('02--text--32--text--01',), ('17--text--32--text--01',), ('17--text--32--text--00',), ('02--text--32--text--01',), ('02--text--32--text--01',), ('02--text--32--text--01',), ('03--text--32--text--01',), ('02--text--32--text--01',), ('18--text--32--text--01',), ('18--text--32--text--01',), ('18--text--32--text--01',), ('23--text--32--text--01',), ('23--text--32--text--01',), ('03--text--32--text--01',), ('17--text--32--text--01',), ('17--text--32--text--01',), ('17--text--32--text--01',), ('17--text--32--text--01',), ('17--text--32--text--01',), ('17--text--32--text--01',), ('17--text--32--text--01',), ('17--text--32--text--01',), ('17--text--32--text--01',), ('17--text--32--text--01',), ('17--text--32--text--01',), ('17--text--32--text--01',), ('17--text--32--text--01',), ('17--text--32--text--01',), ('17--text--32--text--01',), ('17--text--32--text--01',), ('17--text--32--text--01',), ('17--text--32--text--01',), ('17--text--32--text--01',), ('17--text--32--text--01',), ('17--text--32--text--01',), ('17--text--32--text--01',), ('17--text--32--text--01',), ('17--text--32--text--01',), ('17--text--32--text--01',), ('17--text--32--text--01',), ('17--text--32--text--01',), ('17--text--32--text--01',), ('17--text--32--text--01',), ('17--text--32--text--01',)]

-----------
QUERY:


SELECT to_char(d1, 'YYYYTH YYYYth Jth')
   FROM TIMESTAMPTZ_TBL;
RESULT:
	postgres: [(None,), (None,), ('1970TH 1970th 2440588th',), ('1997TH 1997th 2450491st',), ('1997TH 1997th 2450491st',), ('1997TH 1997th 2450491st',), ('1997TH 1997th 2450491st',), ('1997TH 1997th 2450491st',), ('1997TH 1997th 2450491st',), ('1997TH 1997th 2450451st',), ('1997TH 1997th 2450451st',), ('1997TH 1997th 2450491st',), ('1997TH 1997th 2450491st',), ('1997TH 1997th 2450491st',), ('1997TH 1997th 2450491st',), ('1997TH 1997th 2450611th',), ('2001ST 2001st 2452175th',), ('2000TH 2000th 2451619th',), ('2000TH 2000th 2451619th',), ('2000TH 2000th 2451619th',), ('2000TH 2000th 2451619th',), ('2000TH 2000th 2451619th',), ('1997TH 1997th 2450491st',), ('1997TH 1997th 2450490th',), ('1997TH 1997th 2450490th',), ('1997TH 1997th 2450491st',), ('1997TH 1997th 2450491st',), ('1997TH 1997th 2450491st',), ('1997TH 1997th 2450725th',), ('1997TH 1997th 2450491st',), ('1997TH 1997th 2450490th',), ('1997TH 1997th 2450490th',), ('1997TH 1997th 2450490th',), ('1997TH 1997th 2450490th',), ('1997TH 1997th 2450640th',), ('1997TH 1997th 2450611th',), ('1997TH 1997th 2450490th',), ('1997TH 1997th 2450491st',), ('1997TH 1997th 2450492nd',), ('1997TH 1997th 2450493rd',), ('1997TH 1997th 2450494th',), ('1997TH 1997th 2450495th',), ('1997TH 1997th 2450496th',), ('0097TH 0097th 1686042nd',), ('0097TH 0097th 1756536th',), ('0597TH 0597th 1939157th',), ('1097TH 1097th 2121778th',), ('1697TH 1697th 2340924th',), ('1797TH 1797th 2377448th',), ('1897TH 1897th 2413972nd',), ('1997TH 1997th 2450496th',), ('2097TH 2097th 2487021st',), ('1996TH 1996th 2450142nd',), ('1996TH 1996th 2450143rd',), ('1996TH 1996th 2450144th',), ('1996TH 1996th 2450448th',), ('1996TH 1996th 2450449th',), ('1997TH 1997th 2450450th',), ('1997TH 1997th 2450508th',), ('1997TH 1997th 2450509th',), ('1997TH 1997th 2450813th',), ('1997TH 1997th 2450814th',), ('1999TH 1999th 2451544th',), ('2000TH 2000th 2451545th',), ('2000TH 2000th 2451910th',), ('2001ST 2001st 2451911th',)]

-----------
QUERY:


SELECT to_char(d1, 'YYYY A.D. YYYY a.d. YYYY bc HH:MI:SS P.M. HH:MI:SS p.m. HH:MI:SS pm')
   FROM TIMESTAMPTZ_TBL;
RESULT:
	postgres: [(None,), (None,), ('1970 A.D. 1970 a.d. 1970 ad 01:00:00 A.M. 01:00:00 a.m. 01:00:00 am',), ('1997 A.D. 1997 a.d. 1997 ad 02:32:01 A.M. 02:32:01 a.m. 02:32:01 am',), ('1997 A.D. 1997 a.d. 1997 ad 02:32:01 A.M. 02:32:01 a.m. 02:32:01 am',), ('1997 A.D. 1997 a.d. 1997 ad 02:32:02 A.M. 02:32:02 a.m. 02:32:02 am',), ('1997 A.D. 1997 a.d. 1997 ad 02:32:01 A.M. 02:32:01 a.m. 02:32:01 am',), ('1997 A.D. 1997 a.d. 1997 ad 02:32:01 A.M. 02:32:01 a.m. 02:32:01 am',), ('1997 A.D. 1997 a.d. 1997 ad 02:32:01 A.M. 02:32:01 a.m. 02:32:01 am',), ('1997 A.D. 1997 a.d. 1997 ad 12:00:00 A.M. 12:00:00 a.m. 12:00:00 am',), ('1997 A.D. 1997 a.d. 1997 ad 03:04:05 A.M. 03:04:05 a.m. 03:04:05 am',), ('1997 A.D. 1997 a.d. 1997 ad 02:32:01 A.M. 02:32:01 a.m. 02:32:01 am',), ('1997 A.D. 1997 a.d. 1997 ad 02:32:01 A.M. 02:32:01 a.m. 02:32:01 am',), ('1997 A.D. 1997 a.d. 1997 ad 02:32:01 A.M. 02:32:01 a.m. 02:32:01 am',), ('1997 A.D. 1997 a.d. 1997 ad 02:32:01 A.M. 02:32:01 a.m. 02:32:01 am',), ('1997 A.D. 1997 a.d. 1997 ad 02:32:01 A.M. 02:32:01 a.m. 02:32:01 am',), ('2001 A.D. 2001 a.d. 2001 ad 06:19:20 P.M. 06:19:20 p.m. 06:19:20 pm',), ('2000 A.D. 2000 a.d. 2000 ad 05:14:01 P.M. 05:14:01 p.m. 05:14:01 pm',), ('2000 A.D. 2000 a.d. 2000 ad 01:14:02 P.M. 01:14:02 p.m. 01:14:02 pm',), ('2000 A.D. 2000 a.d. 2000 ad 11:14:03 A.M. 11:14:03 a.m. 11:14:03 am',), ('2000 A.D. 2000 a.d. 2000 ad 12:14:04 P.M. 12:14:04 p.m. 12:14:04 pm',), ('2000 A.D. 2000 a.d. 2000 ad 10:14:05 A.M. 10:14:05 a.m. 10:14:05 am',), ('1997 A.D. 1997 a.d. 1997 ad 02:32:01 A.M. 02:32:01 a.m. 02:32:01 am',), ('1997 A.D. 1997 a.d. 1997 ad 05:32:01 P.M. 05:32:01 p.m. 05:32:01 pm',), ('1997 A.D. 1997 a.d. 1997 ad 05:32:00 P.M. 05:32:00 p.m. 05:32:00 pm',), ('1997 A.D. 1997 a.d. 1997 ad 02:32:01 A.M. 02:32:01 a.m. 02:32:01 am',), ('1997 A.D. 1997 a.d. 1997 ad 02:32:01 A.M. 02:32:01 a.m. 02:32:01 am',), ('1997 A.D. 1997 a.d. 1997 ad 02:32:01 A.M. 02:32:01 a.m. 02:32:01 am',), ('1997 A.D. 1997 a.d. 1997 ad 03:32:01 A.M. 03:32:01 a.m. 03:32:01 am',), ('1997 A.D. 1997 a.d. 1997 ad 02:32:01 A.M. 02:32:01 a.m. 02:32:01 am',), ('1997 A.D. 1997 a.d. 1997 ad 06:32:01 P.M. 06:32:01 p.m. 06:32:01 pm',), ('1997 A.D. 1997 a.d. 1997 ad 06:32:01 P.M. 06:32:01 p.m. 06:32:01 pm',), ('1997 A.D. 1997 a.d. 1997 ad 06:32:01 P.M. 06:32:01 p.m. 06:32:01 pm',), ('1997 A.D. 1997 a.d. 1997 ad 11:32:01 P.M. 11:32:01 p.m. 11:32:01 pm',), ('1997 A.D. 1997 a.d. 1997 ad 11:32:01 P.M. 11:32:01 p.m. 11:32:01 pm',), ('1997 A.D. 1997 a.d. 1997 ad 03:32:01 A.M. 03:32:01 a.m. 03:32:01 am',), ('1997 A.D. 1997 a.d. 1997 ad 05:32:01 P.M. 05:32:01 p.m. 05:32:01 pm',), ('1997 A.D. 1997 a.d. 1997 ad 05:32:01 P.M. 05:32:01 p.m. 05:32:01 pm',), ('1997 A.D. 1997 a.d. 1997 ad 05:32:01 P.M. 05:32:01 p.m. 05:32:01 pm',), ('1997 A.D. 1997 a.d. 1997 ad 05:32:01 P.M. 05:32:01 p.m. 05:32:01 pm',), ('1997 A.D. 1997 a.d. 1997 ad 05:32:01 P.M. 05:32:01 p.m. 05:32:01 pm',), ('1997 A.D. 1997 a.d. 1997 ad 05:32:01 P.M. 05:32:01 p.m. 05:32:01 pm',), ('1997 A.D. 1997 a.d. 1997 ad 05:32:01 P.M. 05:32:01 p.m. 05:32:01 pm',), ('0097 B.C. 0097 b.c. 0097 bc 05:32:01 P.M. 05:32:01 p.m. 05:32:01 pm',), ('0097 A.D. 0097 a.d. 0097 ad 05:32:01 P.M. 05:32:01 p.m. 05:32:01 pm',), ('0597 A.D. 0597 a.d. 0597 ad 05:32:01 P.M. 05:32:01 p.m. 05:32:01 pm',), ('1097 A.D. 1097 a.d. 1097 ad 05:32:01 P.M. 05:32:01 p.m. 05:32:01 pm',), ('1697 A.D. 1697 a.d. 1697 ad 05:32:01 P.M. 05:32:01 p.m. 05:32:01 pm',), ('1797 A.D. 1797 a.d. 1797 ad 05:32:01 P.M. 05:32:01 p.m. 05:32:01 pm',), ('1897 A.D. 1897 a.d. 1897 ad 05:32:01 P.M. 05:32:01 p.m. 05:32:01 pm',), ('1997 A.D. 1997 a.d. 1997 ad 05:32:01 P.M. 05:32:01 p.m. 05:32:01 pm',), ('2097 A.D. 2097 a.d. 2097 ad 05:32:01 P.M. 05:32:01 p.m. 05:32:01 pm',), ('1996 A.D. 1996 a.d. 1996 ad 05:32:01 P.M. 05:32:01 p.m. 05:32:01 pm',), ('1996 A.D. 1996 a.d. 1996 ad 05:32:01 P.M. 05:32:01 p.m. 05:32:01 pm',), ('1996 A.D. 1996 a.d. 1996 ad 05:32:01 P.M. 05:32:01 p.m. 05:32:01 pm',), ('1996 A.D. 1996 a.d. 1996 ad 05:32:01 P.M. 05:32:01 p.m. 05:32:01 pm',), ('1996 A.D. 1996 a.d. 1996 ad 05:32:01 P.M. 05:32:01 p.m. 05:32:01 pm',), ('1997 A.D. 1997 a.d. 1997 ad 05:32:01 P.M. 05:32:01 p.m. 05:32:01 pm',), ('1997 A.D. 1997 a.d. 1997 ad 05:32:01 P.M. 05:32:01 p.m. 05:32:01 pm',), ('1997 A.D. 1997 a.d. 1997 ad 05:32:01 P.M. 05:32:01 p.m. 05:32:01 pm',), ('1997 A.D. 1997 a.d. 1997 ad 05:32:01 P.M. 05:32:01 p.m. 05:32:01 pm',), ('1997 A.D. 1997 a.d. 1997 ad 05:32:01 P.M. 05:32:01 p.m. 05:32:01 pm',), ('1999 A.D. 1999 a.d. 1999 ad 05:32:01 P.M. 05:32:01 p.m. 05:32:01 pm',), ('2000 A.D. 2000 a.d. 2000 ad 05:32:01 P.M. 05:32:01 p.m. 05:32:01 pm',), ('2000 A.D. 2000 a.d. 2000 ad 05:32:01 P.M. 05:32:01 p.m. 05:32:01 pm',), ('2001 A.D. 2001 a.d. 2001 ad 05:32:01 P.M. 05:32:01 p.m. 05:32:01 pm',)]

-----------
QUERY:


SELECT to_char(d1, 'IYYY IYY IY I IW IDDD ID')
   FROM TIMESTAMPTZ_TBL;
RESULT:
	postgres: [(None,), (None,), ('1970 970 70 0 01 004 4',), ('1997 997 97 7 07 044 2',), ('1997 997 97 7 07 044 2',), ('1997 997 97 7 07 044 2',), ('1997 997 97 7 07 044 2',), ('1997 997 97 7 07 044 2',), ('1997 997 97 7 07 044 2',), ('1997 997 97 7 01 004 4',), ('1997 997 97 7 01 004 4',), ('1997 997 97 7 07 044 2',), ('1997 997 97 7 07 044 2',), ('1997 997 97 7 07 044 2',), ('1997 997 97 7 07 044 2',), ('1997 997 97 7 24 164 3',), ('2001 001 01 1 38 265 6',), ('2000 000 00 0 11 073 3',), ('2000 000 00 0 11 073 3',), ('2000 000 00 0 11 073 3',), ('2000 000 00 0 11 073 3',), ('2000 000 00 0 11 073 3',), ('1997 997 97 7 07 044 2',), ('1997 997 97 7 07 043 1',), ('1997 997 97 7 07 043 1',), ('1997 997 97 7 07 044 2',), ('1997 997 97 7 07 044 2',), ('1997 997 97 7 07 044 2',), ('1997 997 97 7 40 278 5',), ('1997 997 97 7 07 044 2',), ('1997 997 97 7 07 043 1',), ('1997 997 97 7 07 043 1',), ('1997 997 97 7 07 043 1',), ('1997 997 97 7 07 043 1',), ('1997 997 97 7 28 193 4',), ('1997 997 97 7 24 164 3',), ('1997 997 97 7 07 043 1',), ('1997 997 97 7 07 044 2',), ('1997 997 97 7 07 045 3',), ('1997 997 97 7 07 046 4',), ('1997 997 97 7 07 047 5',), ('1997 997 97 7 07 048 6',), ('1997 997 97 7 07 049 7',), ('0097 097 97 7 07 044 2',), ('0097 097 97 7 07 048 6',), ('0597 597 97 7 07 046 4',), ('1097 097 97 7 07 044 2',), ('1697 697 97 7 07 048 6',), ('1797 797 97 7 07 046 4',), ('1897 897 97 7 07 044 2',), ('1997 997 97 7 07 049 7',), ('2097 097 97 7 07 048 6',), ('1996 996 96 6 09 059 3',), ('1996 996 96 6 09 060 4',), ('1996 996 96 6 09 061 5',), ('1997 997 97 7 01 001 1',), ('1997 997 97 7 01 002 2',), ('1997 997 97 7 01 003 3',), ('1997 997 97 7 09 061 5',), ('1997 997 97 7 09 062 6',), ('1998 998 98 8 01 002 2',), ('1998 998 98 8 01 003 3',), ('1999 999 99 9 52 362 5',), ('1999 999 99 9 52 363 6',), ('2000 000 00 0 52 364 7',), ('2001 001 01 1 01 001 1',)]

-----------
QUERY:


SELECT to_char(d1, 'FMIYYY FMIYY FMIY FMI FMIW FMIDDD FMID')
   FROM TIMESTAMPTZ_TBL;
RESULT:
	postgres: [(None,), (None,), ('1970 970 70 0 1 4 4',), ('1997 997 97 7 7 44 2',), ('1997 997 97 7 7 44 2',), ('1997 997 97 7 7 44 2',), ('1997 997 97 7 7 44 2',), ('1997 997 97 7 7 44 2',), ('1997 997 97 7 7 44 2',), ('1997 997 97 7 1 4 4',), ('1997 997 97 7 1 4 4',), ('1997 997 97 7 7 44 2',), ('1997 997 97 7 7 44 2',), ('1997 997 97 7 7 44 2',), ('1997 997 97 7 7 44 2',), ('1997 997 97 7 24 164 3',), ('2001 1 1 1 38 265 6',), ('2000 0 0 0 11 73 3',), ('2000 0 0 0 11 73 3',), ('2000 0 0 0 11 73 3',), ('2000 0 0 0 11 73 3',), ('2000 0 0 0 11 73 3',), ('1997 997 97 7 7 44 2',), ('1997 997 97 7 7 43 1',), ('1997 997 97 7 7 43 1',), ('1997 997 97 7 7 44 2',), ('1997 997 97 7 7 44 2',), ('1997 997 97 7 7 44 2',), ('1997 997 97 7 40 278 5',), ('1997 997 97 7 7 44 2',), ('1997 997 97 7 7 43 1',), ('1997 997 97 7 7 43 1',), ('1997 997 97 7 7 43 1',), ('1997 997 97 7 7 43 1',), ('1997 997 97 7 28 193 4',), ('1997 997 97 7 24 164 3',), ('1997 997 97 7 7 43 1',), ('1997 997 97 7 7 44 2',), ('1997 997 97 7 7 45 3',), ('1997 997 97 7 7 46 4',), ('1997 997 97 7 7 47 5',), ('1997 997 97 7 7 48 6',), ('1997 997 97 7 7 49 7',), ('97 97 97 7 7 44 2',), ('97 97 97 7 7 48 6',), ('597 597 97 7 7 46 4',), ('1097 97 97 7 7 44 2',), ('1697 697 97 7 7 48 6',), ('1797 797 97 7 7 46 4',), ('1897 897 97 7 7 44 2',), ('1997 997 97 7 7 49 7',), ('2097 97 97 7 7 48 6',), ('1996 996 96 6 9 59 3',), ('1996 996 96 6 9 60 4',), ('1996 996 96 6 9 61 5',), ('1997 997 97 7 1 1 1',), ('1997 997 97 7 1 2 2',), ('1997 997 97 7 1 3 3',), ('1997 997 97 7 9 61 5',), ('1997 997 97 7 9 62 6',), ('1998 998 98 8 1 2 2',), ('1998 998 98 8 1 3 3',), ('1999 999 99 9 52 362 5',), ('1999 999 99 9 52 363 6',), ('2000 0 0 0 52 364 7',), ('2001 1 1 1 1 1 1',)]

-----------
QUERY:


SELECT to_char(d, 'FF1 FF2 FF3 FF4 FF5 FF6  ff1 ff2 ff3 ff4 ff5 ff6  MS US')
   FROM (VALUES
       ('2018-11-02 12:34:56'::timestamptz),
       ('2018-11-02 12:34:56.78'),
       ('2018-11-02 12:34:56.78901'),
       ('2018-11-02 12:34:56.78901234')
   ) d(d);
RESULT:
	postgres: [('0 00 000 0000 00000 000000  0 00 000 0000 00000 000000  000 000000',), ('7 78 780 7800 78000 780000  7 78 780 7800 78000 780000  780 780000',), ('7 78 789 7890 78901 789010  7 78 789 7890 78901 789010  789 789010',), ('7 78 789 7890 78901 789012  7 78 789 7890 78901 789012  789 789012',)]

-----------
QUERY:


-- Check OF, TZH, TZM with various zone offsets, particularly fractional hours
SET timezone = '00:00';
RESULT:
	postgres: []

-----------
QUERY:

SELECT to_char(now(), 'OF') as "OF", to_char(now(), 'TZH:TZM') as "TZH:TZM";
RESULT:
	postgres: [('+00', '+00:00')]

-----------
QUERY:

SET timezone = '+02:00';
RESULT:
	postgres: []

-----------
QUERY:

SELECT to_char(now(), 'OF') as "OF", to_char(now(), 'TZH:TZM') as "TZH:TZM";
RESULT:
	postgres: [('-02', '-02:00')]

-----------
QUERY:

SET timezone = '-13:00';
RESULT:
	postgres: []

-----------
QUERY:

SELECT to_char(now(), 'OF') as "OF", to_char(now(), 'TZH:TZM') as "TZH:TZM";
RESULT:
	postgres: [('+13', '+13:00')]

-----------
QUERY:

SET timezone = '-00:30';
RESULT:
	postgres: []

-----------
QUERY:

SELECT to_char(now(), 'OF') as "OF", to_char(now(), 'TZH:TZM') as "TZH:TZM";
RESULT:
	postgres: [('+00:30', '+00:30')]

-----------
QUERY:

SET timezone = '00:30';
RESULT:
	postgres: []

-----------
QUERY:

SELECT to_char(now(), 'OF') as "OF", to_char(now(), 'TZH:TZM') as "TZH:TZM";
RESULT:
	postgres: [('-00:30', '-00:30')]

-----------
QUERY:

SET timezone = '-04:30';
RESULT:
	postgres: []

-----------
QUERY:

SELECT to_char(now(), 'OF') as "OF", to_char(now(), 'TZH:TZM') as "TZH:TZM";
RESULT:
	postgres: [('+04:30', '+04:30')]

-----------
QUERY:

SET timezone = '04:30';
RESULT:
	postgres: []

-----------
QUERY:

SELECT to_char(now(), 'OF') as "OF", to_char(now(), 'TZH:TZM') as "TZH:TZM";
RESULT:
	postgres: [('-04:30', '-04:30')]

-----------
QUERY:

SET timezone = '-04:15';
RESULT:
	postgres: []

-----------
QUERY:

SELECT to_char(now(), 'OF') as "OF", to_char(now(), 'TZH:TZM') as "TZH:TZM";
RESULT:
	postgres: [('+04:15', '+04:15')]

-----------
QUERY:

SET timezone = '04:15';
RESULT:
	postgres: []

-----------
QUERY:

SELECT to_char(now(), 'OF') as "OF", to_char(now(), 'TZH:TZM') as "TZH:TZM";
RESULT:
	postgres: [('-04:15', '-04:15')]

-----------
QUERY:

RESET timezone;
RESULT:
	postgres: []

-----------
QUERY:


-- Check of, tzh, tzm with various zone offsets.
SET timezone = '00:00';
RESULT:
	postgres: []

-----------
QUERY:

SELECT to_char(now(), 'of') as "Of", to_char(now(), 'tzh:tzm') as "tzh:tzm";
RESULT:
	postgres: [('+00', '+00:00')]

-----------
QUERY:

SET timezone = '+02:00';
RESULT:
	postgres: []

-----------
QUERY:

SELECT to_char(now(), 'of') as "of", to_char(now(), 'tzh:tzm') as "tzh:tzm";
RESULT:
	postgres: [('-02', '-02:00')]

-----------
QUERY:

SET timezone = '-13:00';
RESULT:
	postgres: []

-----------
QUERY:

SELECT to_char(now(), 'of') as "of", to_char(now(), 'tzh:tzm') as "tzh:tzm";
RESULT:
	postgres: [('+13', '+13:00')]

-----------
QUERY:

SET timezone = '-00:30';
RESULT:
	postgres: []

-----------
QUERY:

SELECT to_char(now(), 'of') as "of", to_char(now(), 'tzh:tzm') as "tzh:tzm";
RESULT:
	postgres: [('+00:30', '+00:30')]

-----------
QUERY:

SET timezone = '00:30';
RESULT:
	postgres: []

-----------
QUERY:

SELECT to_char(now(), 'of') as "of", to_char(now(), 'tzh:tzm') as "tzh:tzm";
RESULT:
	postgres: [('-00:30', '-00:30')]

-----------
QUERY:

SET timezone = '-04:30';
RESULT:
	postgres: []

-----------
QUERY:

SELECT to_char(now(), 'of') as "of", to_char(now(), 'tzh:tzm') as "tzh:tzm";
RESULT:
	postgres: [('+04:30', '+04:30')]

-----------
QUERY:

SET timezone = '04:30';
RESULT:
	postgres: []

-----------
QUERY:

SELECT to_char(now(), 'of') as "of", to_char(now(), 'tzh:tzm') as "tzh:tzm";
RESULT:
	postgres: [('-04:30', '-04:30')]

-----------
QUERY:

SET timezone = '-04:15';
RESULT:
	postgres: []

-----------
QUERY:

SELECT to_char(now(), 'of') as "of", to_char(now(), 'tzh:tzm') as "tzh:tzm";
RESULT:
	postgres: [('+04:15', '+04:15')]

-----------
QUERY:

SET timezone = '04:15';
RESULT:
	postgres: []

-----------
QUERY:

SELECT to_char(now(), 'of') as "of", to_char(now(), 'tzh:tzm') as "tzh:tzm";
RESULT:
	postgres: [('-04:15', '-04:15')]

-----------
QUERY:

RESET timezone;
RESULT:
	postgres: []

-----------
QUERY:



CREATE TABLE TIMESTAMPTZ_TST (a int , b timestamptz);
RESULT:
	postgres: []

-----------
QUERY:


-- Test year field value with len > 4
INSERT INTO TIMESTAMPTZ_TST VALUES(1, 'Sat Mar 12 23:58:48 1000 IST');
RESULT:
	postgres: []

-----------
QUERY:

INSERT INTO TIMESTAMPTZ_TST VALUES(2, 'Sat Mar 12 23:58:48 10000 IST');
RESULT:
	postgres: []

-----------
QUERY:

INSERT INTO TIMESTAMPTZ_TST VALUES(3, 'Sat Mar 12 23:58:48 100000 IST');
RESULT:
	postgres: []

-----------
QUERY:

INSERT INTO TIMESTAMPTZ_TST VALUES(3, '10000 Mar 12 23:58:48 IST');
RESULT:
	postgres: []

-----------
QUERY:

INSERT INTO TIMESTAMPTZ_TST VALUES(4, '100000312 23:58:48 IST');
RESULT:
	postgres: []

-----------
QUERY:

INSERT INTO TIMESTAMPTZ_TST VALUES(4, '1000000312 23:58:48 IST');
RESULT:
	postgres: []

-----------
QUERY:

--Verify data
SELECT * FROM TIMESTAMPTZ_TST ORDER BY a;
RESULT:
	postgres: ERROR - year 10000 is out of range

-----------
QUERY:

--Cleanup
DROP TABLE TIMESTAMPTZ_TST;
RESULT:
	postgres: []

-----------
QUERY:


-- test timestamptz constructors
set TimeZone to 'America/New_York';
RESULT:
	postgres: []

-----------
QUERY:


-- numeric timezone
SELECT make_timestamptz(1973, 07, 15, 08, 15, 55.33);
RESULT:
	postgres: [(datetime.datetime(1973, 7, 15, 8, 15, 55, 330000, tzinfo=datetime.timezone(datetime.timedelta(days=-1, seconds=72000))),)]

-----------
QUERY:

SELECT make_timestamptz(1973, 07, 15, 08, 15, 55.33, '+2');
RESULT:
	postgres: [(datetime.datetime(1973, 7, 15, 2, 15, 55, 330000, tzinfo=datetime.timezone(datetime.timedelta(days=-1, seconds=72000))),)]

-----------
QUERY:

SELECT make_timestamptz(1973, 07, 15, 08, 15, 55.33, '-2');
RESULT:
	postgres: [(datetime.datetime(1973, 7, 15, 6, 15, 55, 330000, tzinfo=datetime.timezone(datetime.timedelta(days=-1, seconds=72000))),)]

-----------
QUERY:

WITH tzs (tz) AS (VALUES
    ('+1'), ('+1:'), ('+1:0'), ('+100'), ('+1:00'), ('+01:00'),
    ('+10'), ('+1000'), ('+10:'), ('+10:0'), ('+10:00'), ('+10:00:'),
    ('+10:00:1'), ('+10:00:01'),
    ('+10:00:10'))
     SELECT make_timestamptz(2010, 2, 27, 3, 45, 00, tz), tz FROM tzs;
RESULT:
	postgres: [(datetime.datetime(2010, 2, 26, 21, 45, tzinfo=datetime.timezone(datetime.timedelta(days=-1, seconds=68400))), '+1'), (datetime.datetime(2010, 2, 26, 21, 45, tzinfo=datetime.timezone(datetime.timedelta(days=-1, seconds=68400))), '+1:'), (datetime.datetime(2010, 2, 26, 21, 45, tzinfo=datetime.timezone(datetime.timedelta(days=-1, seconds=68400))), '+1:0'), (datetime.datetime(2010, 2, 26, 21, 45, tzinfo=datetime.timezone(datetime.timedelta(days=-1, seconds=68400))), '+100'), (datetime.datetime(2010, 2, 26, 21, 45, tzinfo=datetime.timezone(datetime.timedelta(days=-1, seconds=68400))), '+1:00'), (datetime.datetime(2010, 2, 26, 21, 45, tzinfo=datetime.timezone(datetime.timedelta(days=-1, seconds=68400))), '+01:00'), (datetime.datetime(2010, 2, 26, 12, 45, tzinfo=datetime.timezone(datetime.timedelta(days=-1, seconds=68400))), '+10'), (datetime.datetime(2010, 2, 26, 12, 45, tzinfo=datetime.timezone(datetime.timedelta(days=-1, seconds=68400))), '+1000'), (datetime.datetime(2010, 2, 26, 12, 45, tzinfo=datetime.timezone(datetime.timedelta(days=-1, seconds=68400))), '+10:'), (datetime.datetime(2010, 2, 26, 12, 45, tzinfo=datetime.timezone(datetime.timedelta(days=-1, seconds=68400))), '+10:0'), (datetime.datetime(2010, 2, 26, 12, 45, tzinfo=datetime.timezone(datetime.timedelta(days=-1, seconds=68400))), '+10:00'), (datetime.datetime(2010, 2, 26, 12, 45, tzinfo=datetime.timezone(datetime.timedelta(days=-1, seconds=68400))), '+10:00:'), (datetime.datetime(2010, 2, 26, 12, 44, 59, tzinfo=datetime.timezone(datetime.timedelta(days=-1, seconds=68400))), '+10:00:1'), (datetime.datetime(2010, 2, 26, 12, 44, 59, tzinfo=datetime.timezone(datetime.timedelta(days=-1, seconds=68400))), '+10:00:01'), (datetime.datetime(2010, 2, 26, 12, 44, 50, tzinfo=datetime.timezone(datetime.timedelta(days=-1, seconds=68400))), '+10:00:10')]

-----------
QUERY:


-- these should fail
SELECT make_timestamptz(1973, 07, 15, 08, 15, 55.33, '2');
RESULT:
	postgres: ERROR - invalid input syntax for type numeric time zone: "2"
HINT:  Numeric time zones must have "-" or "+" as first character.


-----------
QUERY:

SELECT make_timestamptz(2014, 12, 10, 10, 10, 10, '+16');
RESULT:
	postgres: ERROR - numeric time zone "+16" out of range


-----------
QUERY:

SELECT make_timestamptz(2014, 12, 10, 10, 10, 10, '-16');
RESULT:
	postgres: ERROR - numeric time zone "-16" out of range


-----------
QUERY:


-- should be true
SELECT make_timestamptz(1973, 07, 15, 08, 15, 55.33, '+2') = '1973-07-15 08:15:55.33+02'::timestamptz;
RESULT:
	postgres: [(True,)]

-----------
QUERY:


-- full timezone names
SELECT make_timestamptz(2014, 12, 10, 0, 0, 0, 'Europe/Prague') = timestamptz '2014-12-10 00:00:00 Europe/Prague';
RESULT:
	postgres: [(True,)]

-----------
QUERY:

SELECT make_timestamptz(2014, 12, 10, 0, 0, 0, 'Europe/Prague') AT TIME ZONE 'UTC';
RESULT:
	postgres: [(datetime.datetime(2014, 12, 9, 23, 0),)]

-----------
QUERY:

SELECT make_timestamptz(1846, 12, 10, 0, 0, 0, 'Asia/Manila') AT TIME ZONE 'UTC';
RESULT:
	postgres: [(datetime.datetime(1846, 12, 9, 15, 56),)]

-----------
QUERY:

SELECT make_timestamptz(1881, 12, 10, 0, 0, 0, 'Europe/Paris') AT TIME ZONE 'UTC';
RESULT:
	postgres: [(datetime.datetime(1881, 12, 9, 23, 50, 39),)]

-----------
QUERY:

SELECT make_timestamptz(1910, 12, 24, 0, 0, 0, 'Nehwon/Lankhmar');
RESULT:
	postgres: ERROR - time zone "Nehwon/Lankhmar" not recognized


-----------
QUERY:


-- abbreviations
SELECT make_timestamptz(2008, 12, 10, 10, 10, 10, 'EST');
RESULT:
	postgres: [(datetime.datetime(2008, 12, 10, 10, 10, 10, tzinfo=datetime.timezone(datetime.timedelta(days=-1, seconds=68400))),)]

-----------
QUERY:

SELECT make_timestamptz(2008, 12, 10, 10, 10, 10, 'EDT');
RESULT:
	postgres: [(datetime.datetime(2008, 12, 10, 9, 10, 10, tzinfo=datetime.timezone(datetime.timedelta(days=-1, seconds=68400))),)]

-----------
QUERY:

SELECT make_timestamptz(2014, 12, 10, 10, 10, 10, 'PST8PDT');
RESULT:
	postgres: [(datetime.datetime(2014, 12, 10, 13, 10, 10, tzinfo=datetime.timezone(datetime.timedelta(days=-1, seconds=68400))),)]

-----------
QUERY:


RESET TimeZone;
RESULT:
	postgres: []

-----------
QUERY:


-- generate_series for timestamptz
select * from generate_series('2020-01-01 00:00'::timestamptz,
                              '2020-01-02 03:00'::timestamptz,
                              '1 hour'::interval);
RESULT:
	postgres: [(datetime.datetime(2020, 1, 1, 0, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(2020, 1, 1, 1, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(2020, 1, 1, 2, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(2020, 1, 1, 3, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(2020, 1, 1, 4, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(2020, 1, 1, 5, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(2020, 1, 1, 6, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(2020, 1, 1, 7, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(2020, 1, 1, 8, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(2020, 1, 1, 9, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(2020, 1, 1, 10, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(2020, 1, 1, 11, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(2020, 1, 1, 12, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(2020, 1, 1, 13, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(2020, 1, 1, 14, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(2020, 1, 1, 15, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(2020, 1, 1, 16, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(2020, 1, 1, 17, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(2020, 1, 1, 18, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(2020, 1, 1, 19, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(2020, 1, 1, 20, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(2020, 1, 1, 21, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(2020, 1, 1, 22, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(2020, 1, 1, 23, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(2020, 1, 2, 0, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(2020, 1, 2, 1, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(2020, 1, 2, 2, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(2020, 1, 2, 3, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),)]

-----------
QUERY:

-- the LIMIT should allow this to terminate in a reasonable amount of time
-- (but that unfortunately doesn/* REPLACED */''t work yet for SELECT * FROM ...)
select generate_series('2022-01-01 00:00'::timestamptz,
                       'infinity'::timestamptz,
                       '1 month'::interval) limit 10;
RESULT:
	postgres: [(datetime.datetime(2022, 1, 1, 0, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(2022, 2, 1, 0, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(2022, 3, 1, 0, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),), (datetime.datetime(2022, 4, 1, 0, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=7200))),), (datetime.datetime(2022, 5, 1, 0, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=7200))),), (datetime.datetime(2022, 6, 1, 0, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=7200))),), (datetime.datetime(2022, 7, 1, 0, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=7200))),), (datetime.datetime(2022, 8, 1, 0, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=7200))),), (datetime.datetime(2022, 9, 1, 0, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=7200))),), (datetime.datetime(2022, 10, 1, 0, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=7200))),)]

-----------
QUERY:

-- errors
select * from generate_series('2020-01-01 00:00'::timestamptz,
                              '2020-01-02 03:00'::timestamptz,
                              '0 hour'::interval);
RESULT:
	postgres: ERROR - step size cannot equal zero


-----------
QUERY:

select generate_series(timestamptz '1995-08-06 12:12:12', timestamptz '1996-08-06 12:12:12', interval 'infinity');
RESULT:
	postgres: ERROR - step size cannot be infinite


-----------
QUERY:

select generate_series(timestamptz '1995-08-06 12:12:12', timestamptz '1996-08-06 12:12:12', interval '-infinity');
RESULT:
	postgres: ERROR - step size cannot be infinite


-----------
QUERY:


-- Interval crossing time shift for Europe/Warsaw timezone (with DST)
SET TimeZone to 'UTC';
RESULT:
	postgres: []

-----------
QUERY:


SELECT date_add('2022-10-30 00:00:00+01'::timestamptz,
                '1 day'::interval);
RESULT:
	postgres: [(datetime.datetime(2022, 10, 30, 23, 0, tzinfo=datetime.timezone.utc),)]

-----------
QUERY:

SELECT date_add('2021-10-31 00:00:00+02'::timestamptz,
                '1 day'::interval,
                'Europe/Warsaw');
RESULT:
	postgres: [(datetime.datetime(2021, 10, 31, 23, 0, tzinfo=datetime.timezone.utc),)]

-----------
QUERY:

SELECT date_subtract('2022-10-30 00:00:00+01'::timestamptz,
                     '1 day'::interval);
RESULT:
	postgres: [(datetime.datetime(2022, 10, 28, 23, 0, tzinfo=datetime.timezone.utc),)]

-----------
QUERY:

SELECT date_subtract('2021-10-31 00:00:00+02'::timestamptz,
                     '1 day'::interval,
                     'Europe/Warsaw');
RESULT:
	postgres: [(datetime.datetime(2021, 10, 29, 22, 0, tzinfo=datetime.timezone.utc),)]

-----------
QUERY:

SELECT * FROM generate_series('2021-12-31 23:00:00+00'::timestamptz,
                              '2020-12-31 23:00:00+00'::timestamptz,
                              '-1 month'::interval,
                              'Europe/Warsaw');
RESULT:
	postgres: [(datetime.datetime(2021, 12, 31, 23, 0, tzinfo=datetime.timezone.utc),), (datetime.datetime(2021, 11, 30, 23, 0, tzinfo=datetime.timezone.utc),), (datetime.datetime(2021, 10, 31, 23, 0, tzinfo=datetime.timezone.utc),), (datetime.datetime(2021, 9, 30, 22, 0, tzinfo=datetime.timezone.utc),), (datetime.datetime(2021, 8, 31, 22, 0, tzinfo=datetime.timezone.utc),), (datetime.datetime(2021, 7, 31, 22, 0, tzinfo=datetime.timezone.utc),), (datetime.datetime(2021, 6, 30, 22, 0, tzinfo=datetime.timezone.utc),), (datetime.datetime(2021, 5, 31, 22, 0, tzinfo=datetime.timezone.utc),), (datetime.datetime(2021, 4, 30, 22, 0, tzinfo=datetime.timezone.utc),), (datetime.datetime(2021, 3, 31, 22, 0, tzinfo=datetime.timezone.utc),), (datetime.datetime(2021, 2, 28, 23, 0, tzinfo=datetime.timezone.utc),), (datetime.datetime(2021, 1, 31, 23, 0, tzinfo=datetime.timezone.utc),), (datetime.datetime(2020, 12, 31, 23, 0, tzinfo=datetime.timezone.utc),)]

-----------
QUERY:

RESET TimeZone;
RESULT:
	postgres: []

-----------
QUERY:


--
-- Test behavior with a dynamic (time-varying) timezone abbreviation.
-- These tests rely on the knowledge that MSK (Europe/Moscow standard time)
-- moved forwards in Mar 2011 and backwards again in Oct 2014.
--

SET TimeZone to 'UTC';
RESULT:
	postgres: []

-----------
QUERY:


SELECT '2011-03-27 00:00:00 Europe/Moscow'::timestamptz;
RESULT:
	postgres: [(datetime.datetime(2011, 3, 26, 21, 0, tzinfo=datetime.timezone.utc),)]

-----------
QUERY:

SELECT '2011-03-27 01:00:00 Europe/Moscow'::timestamptz;
RESULT:
	postgres: [(datetime.datetime(2011, 3, 26, 22, 0, tzinfo=datetime.timezone.utc),)]

-----------
QUERY:

SELECT '2011-03-27 01:59:59 Europe/Moscow'::timestamptz;
RESULT:
	postgres: [(datetime.datetime(2011, 3, 26, 22, 59, 59, tzinfo=datetime.timezone.utc),)]

-----------
QUERY:

SELECT '2011-03-27 02:00:00 Europe/Moscow'::timestamptz;
RESULT:
	postgres: [(datetime.datetime(2011, 3, 26, 23, 0, tzinfo=datetime.timezone.utc),)]

-----------
QUERY:

SELECT '2011-03-27 02:00:01 Europe/Moscow'::timestamptz;
RESULT:
	postgres: [(datetime.datetime(2011, 3, 26, 23, 0, 1, tzinfo=datetime.timezone.utc),)]

-----------
QUERY:

SELECT '2011-03-27 02:59:59 Europe/Moscow'::timestamptz;
RESULT:
	postgres: [(datetime.datetime(2011, 3, 26, 23, 59, 59, tzinfo=datetime.timezone.utc),)]

-----------
QUERY:

SELECT '2011-03-27 03:00:00 Europe/Moscow'::timestamptz;
RESULT:
	postgres: [(datetime.datetime(2011, 3, 26, 23, 0, tzinfo=datetime.timezone.utc),)]

-----------
QUERY:

SELECT '2011-03-27 03:00:01 Europe/Moscow'::timestamptz;
RESULT:
	postgres: [(datetime.datetime(2011, 3, 26, 23, 0, 1, tzinfo=datetime.timezone.utc),)]

-----------
QUERY:

SELECT '2011-03-27 04:00:00 Europe/Moscow'::timestamptz;
RESULT:
	postgres: [(datetime.datetime(2011, 3, 27, 0, 0, tzinfo=datetime.timezone.utc),)]

-----------
QUERY:


SELECT '2011-03-27 00:00:00 MSK'::timestamptz;
RESULT:
	postgres: [(datetime.datetime(2011, 3, 26, 21, 0, tzinfo=datetime.timezone.utc),)]

-----------
QUERY:

SELECT '2011-03-27 01:00:00 MSK'::timestamptz;
RESULT:
	postgres: [(datetime.datetime(2011, 3, 26, 22, 0, tzinfo=datetime.timezone.utc),)]

-----------
QUERY:

SELECT '2011-03-27 01:59:59 MSK'::timestamptz;
RESULT:
	postgres: [(datetime.datetime(2011, 3, 26, 22, 59, 59, tzinfo=datetime.timezone.utc),)]

-----------
QUERY:

SELECT '2011-03-27 02:00:00 MSK'::timestamptz;
RESULT:
	postgres: [(datetime.datetime(2011, 3, 26, 22, 0, tzinfo=datetime.timezone.utc),)]

-----------
QUERY:

SELECT '2011-03-27 02:00:01 MSK'::timestamptz;
RESULT:
	postgres: [(datetime.datetime(2011, 3, 26, 22, 0, 1, tzinfo=datetime.timezone.utc),)]

-----------
QUERY:

SELECT '2011-03-27 02:59:59 MSK'::timestamptz;
RESULT:
	postgres: [(datetime.datetime(2011, 3, 26, 22, 59, 59, tzinfo=datetime.timezone.utc),)]

-----------
QUERY:

SELECT '2011-03-27 03:00:00 MSK'::timestamptz;
RESULT:
	postgres: [(datetime.datetime(2011, 3, 26, 23, 0, tzinfo=datetime.timezone.utc),)]

-----------
QUERY:

SELECT '2011-03-27 03:00:01 MSK'::timestamptz;
RESULT:
	postgres: [(datetime.datetime(2011, 3, 26, 23, 0, 1, tzinfo=datetime.timezone.utc),)]

-----------
QUERY:

SELECT '2011-03-27 04:00:00 MSK'::timestamptz;
RESULT:
	postgres: [(datetime.datetime(2011, 3, 27, 0, 0, tzinfo=datetime.timezone.utc),)]

-----------
QUERY:


SELECT '2014-10-26 00:00:00 Europe/Moscow'::timestamptz;
RESULT:
	postgres: [(datetime.datetime(2014, 10, 25, 20, 0, tzinfo=datetime.timezone.utc),)]

-----------
QUERY:

SELECT '2014-10-26 00:59:59 Europe/Moscow'::timestamptz;
RESULT:
	postgres: [(datetime.datetime(2014, 10, 25, 20, 59, 59, tzinfo=datetime.timezone.utc),)]

-----------
QUERY:

SELECT '2014-10-26 01:00:00 Europe/Moscow'::timestamptz;
RESULT:
	postgres: [(datetime.datetime(2014, 10, 25, 22, 0, tzinfo=datetime.timezone.utc),)]

-----------
QUERY:

SELECT '2014-10-26 01:00:01 Europe/Moscow'::timestamptz;
RESULT:
	postgres: [(datetime.datetime(2014, 10, 25, 22, 0, 1, tzinfo=datetime.timezone.utc),)]

-----------
QUERY:

SELECT '2014-10-26 02:00:00 Europe/Moscow'::timestamptz;
RESULT:
	postgres: [(datetime.datetime(2014, 10, 25, 23, 0, tzinfo=datetime.timezone.utc),)]

-----------
QUERY:


SELECT '2014-10-26 00:00:00 MSK'::timestamptz;
RESULT:
	postgres: [(datetime.datetime(2014, 10, 25, 20, 0, tzinfo=datetime.timezone.utc),)]

-----------
QUERY:

SELECT '2014-10-26 00:59:59 MSK'::timestamptz;
RESULT:
	postgres: [(datetime.datetime(2014, 10, 25, 20, 59, 59, tzinfo=datetime.timezone.utc),)]

-----------
QUERY:

SELECT '2014-10-26 01:00:00 MSK'::timestamptz;
RESULT:
	postgres: [(datetime.datetime(2014, 10, 25, 22, 0, tzinfo=datetime.timezone.utc),)]

-----------
QUERY:

SELECT '2014-10-26 01:00:01 MSK'::timestamptz;
RESULT:
	postgres: [(datetime.datetime(2014, 10, 25, 22, 0, 1, tzinfo=datetime.timezone.utc),)]

-----------
QUERY:

SELECT '2014-10-26 02:00:00 MSK'::timestamptz;
RESULT:
	postgres: [(datetime.datetime(2014, 10, 25, 23, 0, tzinfo=datetime.timezone.utc),)]

-----------
QUERY:


SELECT '2011-03-27 00:00:00'::timestamp AT TIME ZONE 'Europe/Moscow';
RESULT:
	postgres: [(datetime.datetime(2011, 3, 26, 21, 0, tzinfo=datetime.timezone.utc),)]

-----------
QUERY:

SELECT '2011-03-27 01:00:00'::timestamp AT TIME ZONE 'Europe/Moscow';
RESULT:
	postgres: [(datetime.datetime(2011, 3, 26, 22, 0, tzinfo=datetime.timezone.utc),)]

-----------
QUERY:

SELECT '2011-03-27 01:59:59'::timestamp AT TIME ZONE 'Europe/Moscow';
RESULT:
	postgres: [(datetime.datetime(2011, 3, 26, 22, 59, 59, tzinfo=datetime.timezone.utc),)]

-----------
QUERY:

SELECT '2011-03-27 02:00:00'::timestamp AT TIME ZONE 'Europe/Moscow';
RESULT:
	postgres: [(datetime.datetime(2011, 3, 26, 23, 0, tzinfo=datetime.timezone.utc),)]

-----------
QUERY:

SELECT '2011-03-27 02:00:01'::timestamp AT TIME ZONE 'Europe/Moscow';
RESULT:
	postgres: [(datetime.datetime(2011, 3, 26, 23, 0, 1, tzinfo=datetime.timezone.utc),)]

-----------
QUERY:

SELECT '2011-03-27 02:59:59'::timestamp AT TIME ZONE 'Europe/Moscow';
RESULT:
	postgres: [(datetime.datetime(2011, 3, 26, 23, 59, 59, tzinfo=datetime.timezone.utc),)]

-----------
QUERY:

SELECT '2011-03-27 03:00:00'::timestamp AT TIME ZONE 'Europe/Moscow';
RESULT:
	postgres: [(datetime.datetime(2011, 3, 26, 23, 0, tzinfo=datetime.timezone.utc),)]

-----------
QUERY:

SELECT '2011-03-27 03:00:01'::timestamp AT TIME ZONE 'Europe/Moscow';
RESULT:
	postgres: [(datetime.datetime(2011, 3, 26, 23, 0, 1, tzinfo=datetime.timezone.utc),)]

-----------
QUERY:

SELECT '2011-03-27 04:00:00'::timestamp AT TIME ZONE 'Europe/Moscow';
RESULT:
	postgres: [(datetime.datetime(2011, 3, 27, 0, 0, tzinfo=datetime.timezone.utc),)]

-----------
QUERY:


SELECT '2011-03-27 00:00:00'::timestamp AT TIME ZONE 'MSK';
RESULT:
	postgres: [(datetime.datetime(2011, 3, 26, 21, 0, tzinfo=datetime.timezone.utc),)]

-----------
QUERY:

SELECT '2011-03-27 01:00:00'::timestamp AT TIME ZONE 'MSK';
RESULT:
	postgres: [(datetime.datetime(2011, 3, 26, 22, 0, tzinfo=datetime.timezone.utc),)]

-----------
QUERY:

SELECT '2011-03-27 01:59:59'::timestamp AT TIME ZONE 'MSK';
RESULT:
	postgres: [(datetime.datetime(2011, 3, 26, 22, 59, 59, tzinfo=datetime.timezone.utc),)]

-----------
QUERY:

SELECT '2011-03-27 02:00:00'::timestamp AT TIME ZONE 'MSK';
RESULT:
	postgres: [(datetime.datetime(2011, 3, 26, 22, 0, tzinfo=datetime.timezone.utc),)]

-----------
QUERY:

SELECT '2011-03-27 02:00:01'::timestamp AT TIME ZONE 'MSK';
RESULT:
	postgres: [(datetime.datetime(2011, 3, 26, 22, 0, 1, tzinfo=datetime.timezone.utc),)]

-----------
QUERY:

SELECT '2011-03-27 02:59:59'::timestamp AT TIME ZONE 'MSK';
RESULT:
	postgres: [(datetime.datetime(2011, 3, 26, 22, 59, 59, tzinfo=datetime.timezone.utc),)]

-----------
QUERY:

SELECT '2011-03-27 03:00:00'::timestamp AT TIME ZONE 'MSK';
RESULT:
	postgres: [(datetime.datetime(2011, 3, 26, 23, 0, tzinfo=datetime.timezone.utc),)]

-----------
QUERY:

SELECT '2011-03-27 03:00:01'::timestamp AT TIME ZONE 'MSK';
RESULT:
	postgres: [(datetime.datetime(2011, 3, 26, 23, 0, 1, tzinfo=datetime.timezone.utc),)]

-----------
QUERY:

SELECT '2011-03-27 04:00:00'::timestamp AT TIME ZONE 'MSK';
RESULT:
	postgres: [(datetime.datetime(2011, 3, 27, 0, 0, tzinfo=datetime.timezone.utc),)]

-----------
QUERY:


SELECT '2014-10-26 00:00:00'::timestamp AT TIME ZONE 'Europe/Moscow';
RESULT:
	postgres: [(datetime.datetime(2014, 10, 25, 20, 0, tzinfo=datetime.timezone.utc),)]

-----------
QUERY:

SELECT '2014-10-26 00:59:59'::timestamp AT TIME ZONE 'Europe/Moscow';
RESULT:
	postgres: [(datetime.datetime(2014, 10, 25, 20, 59, 59, tzinfo=datetime.timezone.utc),)]

-----------
QUERY:

SELECT '2014-10-26 01:00:00'::timestamp AT TIME ZONE 'Europe/Moscow';
RESULT:
	postgres: [(datetime.datetime(2014, 10, 25, 22, 0, tzinfo=datetime.timezone.utc),)]

-----------
QUERY:

SELECT '2014-10-26 01:00:01'::timestamp AT TIME ZONE 'Europe/Moscow';
RESULT:
	postgres: [(datetime.datetime(2014, 10, 25, 22, 0, 1, tzinfo=datetime.timezone.utc),)]

-----------
QUERY:

SELECT '2014-10-26 02:00:00'::timestamp AT TIME ZONE 'Europe/Moscow';
RESULT:
	postgres: [(datetime.datetime(2014, 10, 25, 23, 0, tzinfo=datetime.timezone.utc),)]

-----------
QUERY:


SELECT '2014-10-26 00:00:00'::timestamp AT TIME ZONE 'MSK';
RESULT:
	postgres: [(datetime.datetime(2014, 10, 25, 20, 0, tzinfo=datetime.timezone.utc),)]

-----------
QUERY:

SELECT '2014-10-26 00:59:59'::timestamp AT TIME ZONE 'MSK';
RESULT:
	postgres: [(datetime.datetime(2014, 10, 25, 20, 59, 59, tzinfo=datetime.timezone.utc),)]

-----------
QUERY:

SELECT '2014-10-26 01:00:00'::timestamp AT TIME ZONE 'MSK';
RESULT:
	postgres: [(datetime.datetime(2014, 10, 25, 22, 0, tzinfo=datetime.timezone.utc),)]

-----------
QUERY:

SELECT '2014-10-26 01:00:01'::timestamp AT TIME ZONE 'MSK';
RESULT:
	postgres: [(datetime.datetime(2014, 10, 25, 22, 0, 1, tzinfo=datetime.timezone.utc),)]

-----------
QUERY:

SELECT '2014-10-26 02:00:00'::timestamp AT TIME ZONE 'MSK';
RESULT:
	postgres: [(datetime.datetime(2014, 10, 25, 23, 0, tzinfo=datetime.timezone.utc),)]

-----------
QUERY:


SELECT make_timestamptz(2014, 10, 26, 0, 0, 0, 'MSK');
RESULT:
	postgres: [(datetime.datetime(2014, 10, 25, 20, 0, tzinfo=datetime.timezone.utc),)]

-----------
QUERY:

SELECT make_timestamptz(2014, 10, 26, 1, 0, 0, 'MSK');
RESULT:
	postgres: [(datetime.datetime(2014, 10, 25, 22, 0, tzinfo=datetime.timezone.utc),)]

-----------
QUERY:


SELECT to_timestamp(         0);
RESULT:
	postgres: [(datetime.datetime(1970, 1, 1, 0, 0, tzinfo=datetime.timezone.utc),)]

-----------
QUERY:
          -- 1970-01-01 00:00:00+00
SELECT to_timestamp( 946684800);
RESULT:
	postgres: [(datetime.datetime(2000, 1, 1, 0, 0, tzinfo=datetime.timezone.utc),)]

-----------
QUERY:
          -- 2000-01-01 00:00:00+00
SELECT to_timestamp(1262349296.7890123);
RESULT:
	postgres: [(datetime.datetime(2010, 1, 1, 12, 34, 56, 789012, tzinfo=datetime.timezone.utc),)]

-----------
QUERY:
  -- 2010-01-01 12:34:56.789012+00
-- edge cases
SELECT to_timestamp(-210866803200);
RESULT:
	postgres: ERROR - year -4714 is out of range

-----------
QUERY:
       --   4714-11-24 00:00:00+00 BC
-- upper limit varies between integer and float timestamps, so hard to test
-- nonfinite values
SELECT to_timestamp(' Infinity'::float);
RESULT:
	postgres: [(datetime.datetime(9999, 12, 31, 23, 59, 59, 999999, tzinfo=datetime.timezone.utc),)]

-----------
QUERY:

SELECT to_timestamp('-Infinity'::float);
RESULT:
	postgres: [(datetime.datetime(1, 1, 1, 0, 0, tzinfo=datetime.timezone.utc),)]

-----------
QUERY:

SELECT to_timestamp('NaN'::float);
RESULT:
	postgres: ERROR - timestamp cannot be NaN


-----------
QUERY:



SET TimeZone to 'Europe/Moscow';
RESULT:
	postgres: []

-----------
QUERY:


SELECT '2011-03-26 21:00:00 UTC'::timestamptz;
RESULT:
	postgres: [(datetime.datetime(2011, 3, 27, 0, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=10800))),)]

-----------
QUERY:

SELECT '2011-03-26 22:00:00 UTC'::timestamptz;
RESULT:
	postgres: [(datetime.datetime(2011, 3, 27, 1, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=10800))),)]

-----------
QUERY:

SELECT '2011-03-26 22:59:59 UTC'::timestamptz;
RESULT:
	postgres: [(datetime.datetime(2011, 3, 27, 1, 59, 59, tzinfo=datetime.timezone(datetime.timedelta(seconds=10800))),)]

-----------
QUERY:

SELECT '2011-03-26 23:00:00 UTC'::timestamptz;
RESULT:
	postgres: [(datetime.datetime(2011, 3, 27, 3, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=14400))),)]

-----------
QUERY:

SELECT '2011-03-26 23:00:01 UTC'::timestamptz;
RESULT:
	postgres: [(datetime.datetime(2011, 3, 27, 3, 0, 1, tzinfo=datetime.timezone(datetime.timedelta(seconds=14400))),)]

-----------
QUERY:

SELECT '2011-03-26 23:59:59 UTC'::timestamptz;
RESULT:
	postgres: [(datetime.datetime(2011, 3, 27, 3, 59, 59, tzinfo=datetime.timezone(datetime.timedelta(seconds=14400))),)]

-----------
QUERY:

SELECT '2011-03-27 00:00:00 UTC'::timestamptz;
RESULT:
	postgres: [(datetime.datetime(2011, 3, 27, 4, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=14400))),)]

-----------
QUERY:


SELECT '2014-10-25 21:00:00 UTC'::timestamptz;
RESULT:
	postgres: [(datetime.datetime(2014, 10, 26, 1, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=14400))),)]

-----------
QUERY:

SELECT '2014-10-25 21:59:59 UTC'::timestamptz;
RESULT:
	postgres: [(datetime.datetime(2014, 10, 26, 1, 59, 59, tzinfo=datetime.timezone(datetime.timedelta(seconds=14400))),)]

-----------
QUERY:

SELECT '2014-10-25 22:00:00 UTC'::timestamptz;
RESULT:
	postgres: [(datetime.datetime(2014, 10, 26, 1, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=10800))),)]

-----------
QUERY:

SELECT '2014-10-25 22:00:01 UTC'::timestamptz;
RESULT:
	postgres: [(datetime.datetime(2014, 10, 26, 1, 0, 1, tzinfo=datetime.timezone(datetime.timedelta(seconds=10800))),)]

-----------
QUERY:

SELECT '2014-10-25 23:00:00 UTC'::timestamptz;
RESULT:
	postgres: [(datetime.datetime(2014, 10, 26, 2, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=10800))),)]

-----------
QUERY:


RESET TimeZone;
RESULT:
	postgres: []

-----------
QUERY:


SELECT '2011-03-26 21:00:00 UTC'::timestamptz AT TIME ZONE 'Europe/Moscow';
RESULT:
	postgres: [(datetime.datetime(2011, 3, 27, 0, 0),)]

-----------
QUERY:

SELECT '2011-03-26 22:00:00 UTC'::timestamptz AT TIME ZONE 'Europe/Moscow';
RESULT:
	postgres: [(datetime.datetime(2011, 3, 27, 1, 0),)]

-----------
QUERY:

SELECT '2011-03-26 22:59:59 UTC'::timestamptz AT TIME ZONE 'Europe/Moscow';
RESULT:
	postgres: [(datetime.datetime(2011, 3, 27, 1, 59, 59),)]

-----------
QUERY:

SELECT '2011-03-26 23:00:00 UTC'::timestamptz AT TIME ZONE 'Europe/Moscow';
RESULT:
	postgres: [(datetime.datetime(2011, 3, 27, 3, 0),)]

-----------
QUERY:

SELECT '2011-03-26 23:00:01 UTC'::timestamptz AT TIME ZONE 'Europe/Moscow';
RESULT:
	postgres: [(datetime.datetime(2011, 3, 27, 3, 0, 1),)]

-----------
QUERY:

SELECT '2011-03-26 23:59:59 UTC'::timestamptz AT TIME ZONE 'Europe/Moscow';
RESULT:
	postgres: [(datetime.datetime(2011, 3, 27, 3, 59, 59),)]

-----------
QUERY:

SELECT '2011-03-27 00:00:00 UTC'::timestamptz AT TIME ZONE 'Europe/Moscow';
RESULT:
	postgres: [(datetime.datetime(2011, 3, 27, 4, 0),)]

-----------
QUERY:


SELECT '2014-10-25 21:00:00 UTC'::timestamptz AT TIME ZONE 'Europe/Moscow';
RESULT:
	postgres: [(datetime.datetime(2014, 10, 26, 1, 0),)]

-----------
QUERY:

SELECT '2014-10-25 21:59:59 UTC'::timestamptz AT TIME ZONE 'Europe/Moscow';
RESULT:
	postgres: [(datetime.datetime(2014, 10, 26, 1, 59, 59),)]

-----------
QUERY:

SELECT '2014-10-25 22:00:00 UTC'::timestamptz AT TIME ZONE 'Europe/Moscow';
RESULT:
	postgres: [(datetime.datetime(2014, 10, 26, 1, 0),)]

-----------
QUERY:

SELECT '2014-10-25 22:00:01 UTC'::timestamptz AT TIME ZONE 'Europe/Moscow';
RESULT:
	postgres: [(datetime.datetime(2014, 10, 26, 1, 0, 1),)]

-----------
QUERY:

SELECT '2014-10-25 23:00:00 UTC'::timestamptz AT TIME ZONE 'Europe/Moscow';
RESULT:
	postgres: [(datetime.datetime(2014, 10, 26, 2, 0),)]

-----------
QUERY:


SELECT '2011-03-26 21:00:00 UTC'::timestamptz AT TIME ZONE 'MSK';
RESULT:
	postgres: [(datetime.datetime(2011, 3, 27, 0, 0),)]

-----------
QUERY:

SELECT '2011-03-26 22:00:00 UTC'::timestamptz AT TIME ZONE 'MSK';
RESULT:
	postgres: [(datetime.datetime(2011, 3, 27, 1, 0),)]

-----------
QUERY:

SELECT '2011-03-26 22:59:59 UTC'::timestamptz AT TIME ZONE 'MSK';
RESULT:
	postgres: [(datetime.datetime(2011, 3, 27, 1, 59, 59),)]

-----------
QUERY:

SELECT '2011-03-26 23:00:00 UTC'::timestamptz AT TIME ZONE 'MSK';
RESULT:
	postgres: [(datetime.datetime(2011, 3, 27, 3, 0),)]

-----------
QUERY:

SELECT '2011-03-26 23:00:01 UTC'::timestamptz AT TIME ZONE 'MSK';
RESULT:
	postgres: [(datetime.datetime(2011, 3, 27, 3, 0, 1),)]

-----------
QUERY:

SELECT '2011-03-26 23:59:59 UTC'::timestamptz AT TIME ZONE 'MSK';
RESULT:
	postgres: [(datetime.datetime(2011, 3, 27, 3, 59, 59),)]

-----------
QUERY:

SELECT '2011-03-27 00:00:00 UTC'::timestamptz AT TIME ZONE 'MSK';
RESULT:
	postgres: [(datetime.datetime(2011, 3, 27, 4, 0),)]

-----------
QUERY:


SELECT '2014-10-25 21:00:00 UTC'::timestamptz AT TIME ZONE 'MSK';
RESULT:
	postgres: [(datetime.datetime(2014, 10, 26, 1, 0),)]

-----------
QUERY:

SELECT '2014-10-25 21:59:59 UTC'::timestamptz AT TIME ZONE 'MSK';
RESULT:
	postgres: [(datetime.datetime(2014, 10, 26, 1, 59, 59),)]

-----------
QUERY:

SELECT '2014-10-25 22:00:00 UTC'::timestamptz AT TIME ZONE 'MSK';
RESULT:
	postgres: [(datetime.datetime(2014, 10, 26, 1, 0),)]

-----------
QUERY:

SELECT '2014-10-25 22:00:01 UTC'::timestamptz AT TIME ZONE 'MSK';
RESULT:
	postgres: [(datetime.datetime(2014, 10, 26, 1, 0, 1),)]

-----------
QUERY:

SELECT '2014-10-25 23:00:00 UTC'::timestamptz AT TIME ZONE 'MSK';
RESULT:
	postgres: [(datetime.datetime(2014, 10, 26, 2, 0),)]

-----------
QUERY:


--
-- Test LOCAL time zone
--
BEGIN;
RESULT:
	postgres: []

-----------
QUERY:

SET LOCAL TIME ZONE 'Europe/Paris';
RESULT:
	postgres: []

-----------
QUERY:

VALUES (CAST('1978-07-07 19:38 America/New_York' AS TIMESTAMP WITH TIME ZONE) AT LOCAL);
RESULT:
	postgres: [(datetime.datetime(1978, 7, 8, 1, 38),)]

-----------
QUERY:

VALUES (TIMESTAMP '1978-07-07 19:38' AT LOCAL);
RESULT:
	postgres: [(datetime.datetime(1978, 7, 7, 19, 38, tzinfo=datetime.timezone(datetime.timedelta(seconds=7200))),)]

-----------
QUERY:

SET LOCAL TIME ZONE 'Australia/Sydney';
RESULT:
	postgres: []

-----------
QUERY:

VALUES (CAST('1978-07-07 19:38 America/New_York' AS TIMESTAMP WITH TIME ZONE) AT LOCAL);
RESULT:
	postgres: [(datetime.datetime(1978, 7, 8, 9, 38),)]

-----------
QUERY:

VALUES (TIMESTAMP '1978-07-07 19:38' AT LOCAL);
RESULT:
	postgres: [(datetime.datetime(1978, 7, 7, 19, 38, tzinfo=datetime.timezone(datetime.timedelta(seconds=36000))),)]

-----------
QUERY:

SET LOCAL TimeZone TO 'UTC';
RESULT:
	postgres: []

-----------
QUERY:

CREATE VIEW timestamp_local_view AS
  SELECT CAST('1978-07-07 19:38 America/New_York' AS TIMESTAMP WITH TIME ZONE) AT LOCAL AS ttz_at_local,
         timezone(CAST('1978-07-07 19:38 America/New_York' AS TIMESTAMP WITH TIME ZONE)) AS ttz_func,
         TIMESTAMP '1978-07-07 19:38' AT LOCAL AS t_at_local,
         timezone(TIMESTAMP '1978-07-07 19:38') AS t_func;
RESULT:
	postgres: []

-----------
QUERY:

SELECT pg_get_viewdef('timestamp_local_view', true);
RESULT:
	postgres: [(" SELECT ('1978-07-07 23:38:00+00'::timestamp with time zone AT LOCAL) AS ttz_at_local,\n    timezone('1978-07-07 23:38:00+00'::timestamp with time zone) AS ttz_func,\n    ('1978-07-07 19:38:00'::timestamp without time zone AT LOCAL) AS t_at_local,\n    timezone('1978-07-07 19:38:00'::timestamp without time zone) AS t_func;",)]

-----------
QUERY:

\x
TABLE timestamp_local_view;
RESULT:
	postgres: ERROR - syntax error at or near "\"
LINE 2: \x
        ^


-----------
QUERY:

\x
DROP VIEW timestamp_local_view;
RESULT:
	postgres: ERROR - syntax error at or near "\"
LINE 2: \x
        ^


-----------
QUERY:

COMMIT;
RESULT:
	postgres: []

-----------
QUERY:


--
-- Test that AT TIME ZONE isn/* REPLACED */''t misoptimized when using an index (bug #14504)
--
create temp table tmptz (f1 timestamptz primary key);
RESULT:
	postgres: []

-----------
QUERY:

insert into tmptz values ('2017-01-18 00:00+00');
RESULT:
	postgres: []

-----------
QUERY:

explain (costs off)
select * from tmptz where f1 at time zone 'utc' = '2017-01-18 00:00';
RESULT:
	postgres: [('Seq Scan on tmptz',), ("  Filter: ((f1 AT TIME ZONE 'utc'::text) = '2017-01-18 00:00:00'::timestamp without time zone)",)]

-----------
QUERY:

select * from tmptz where f1 at time zone 'utc' = '2017-01-18 00:00';
RESULT:
	postgres: [(datetime.datetime(2017, 1, 18, 1, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600))),)]

-----------
QUERY:


-- test arithmetic with infinite timestamps
SELECT timestamptz 'infinity' - timestamptz 'infinity';
RESULT:
	postgres: ERROR - interval out of range


-----------
QUERY:

SELECT timestamptz 'infinity' - timestamptz '-infinity';
RESULT:
	postgres: [(datetime.timedelta(0),)]

-----------
QUERY:

SELECT timestamptz '-infinity' - timestamptz 'infinity';
RESULT:
	postgres: [(datetime.timedelta(0),)]

-----------
QUERY:

SELECT timestamptz '-infinity' - timestamptz '-infinity';
RESULT:
	postgres: ERROR - interval out of range


-----------
QUERY:

SELECT timestamptz 'infinity' - timestamptz '1995-08-06 12:12:12';
RESULT:
	postgres: [(datetime.timedelta(0),)]

-----------
QUERY:

SELECT timestamptz '-infinity' - timestamptz '1995-08-06 12:12:12';
RESULT:
	postgres: [(datetime.timedelta(0),)]

-----------
QUERY:


-- test age() with infinite timestamps
SELECT age(timestamptz 'infinity');
RESULT:
	postgres: [(datetime.timedelta(0),)]

-----------
QUERY:

SELECT age(timestamptz '-infinity');
RESULT:
	postgres: [(datetime.timedelta(0),)]

-----------
QUERY:

SELECT age(timestamptz 'infinity', timestamptz 'infinity');
RESULT:
	postgres: ERROR - interval out of range


-----------
QUERY:

SELECT age(timestamptz 'infinity', timestamptz '-infinity');
RESULT:
	postgres: [(datetime.timedelta(0),)]

-----------
QUERY:

SELECT age(timestamptz '-infinity', timestamptz 'infinity');
RESULT:
	postgres: [(datetime.timedelta(0),)]

-----------
QUERY:

SELECT age(timestamptz '-infinity', timestamptz '-infinity');
RESULT:
	postgres: ERROR - interval out of range

