Guest DBMS identified: postgres
-----------
QUERY:
--
-- TRANSACTIONS
--

BEGIN;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:


CREATE TABLE xacttest (a smallint, b real);
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

INSERT INTO xacttest VALUES
  (56, 7.8),
  (100, 99.097),
  (0, 0.09561),
  (42, 324.78);
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

INSERT INTO xacttest (a, b) VALUES (777, 777.777);
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:


END;
RESULT: [duckdb: SAME, mysql: ERROR]

-----------
QUERY:


-- should retrieve one value--
SELECT a FROM xacttest WHERE a > 100;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:



BEGIN;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:


CREATE TABLE disappear (a int4);
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:


DELETE FROM xacttest;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:


-- should be empty
SELECT * FROM xacttest;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:


ABORT;
RESULT: [duckdb: SAME, mysql: ERROR]

-----------
QUERY:


-- should not exist
SELECT oid FROM pg_class WHERE relname = 'disappear';
RESULT: [duckdb: SAME, mysql: ERROR]

-----------
QUERY:


-- should have members again
SELECT * FROM xacttest;
RESULT: [duckdb: SAME, mysql: DIFFERENT]

-----------
QUERY:


-- Test that transaction characteristics cannot be reset.
BEGIN TRANSACTION ISOLATION LEVEL SERIALIZABLE;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SELECT COUNT(*) FROM xacttest;
RESULT: [duckdb: SAME, mysql: DIFFERENT]

-----------
QUERY:

RESET transaction_isolation;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:
 -- error
END;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:


BEGIN TRANSACTION READ ONLY;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SELECT COUNT(*) FROM xacttest;
RESULT: [duckdb: SAME, mysql: DIFFERENT]

-----------
QUERY:

RESET transaction_read_only;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:
 -- error
END;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:


BEGIN TRANSACTION DEFERRABLE;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SELECT COUNT(*) FROM xacttest;
RESULT: [duckdb: SAME, mysql: DIFFERENT]

-----------
QUERY:

RESET transaction_deferrable;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:
 -- error
END;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:


CREATE FUNCTION errfunc() RETURNS int LANGUAGE SQL AS 'SELECT 1'
SET transaction_read_only = on;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:
 -- error

-- Read-only tests

CREATE TABLE writetest (a int);
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

CREATE TEMPORARY TABLE temptest (a int);
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:


BEGIN;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE, READ ONLY, DEFERRABLE;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:
 -- ok
SELECT * FROM writetest;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:
 -- ok
SET TRANSACTION READ WRITE;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:
 --fail
COMMIT;
RESULT: [duckdb: SAME, mysql: ERROR]

-----------
QUERY:


BEGIN;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

SET TRANSACTION READ ONLY;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:
 -- ok
SET TRANSACTION READ WRITE;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:
 -- ok
SET TRANSACTION READ ONLY;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:
 -- ok
SELECT * FROM writetest;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:
 -- ok
SAVEPOINT x;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:

SET TRANSACTION READ ONLY;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:
 -- ok
SELECT * FROM writetest;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:
 -- ok
SET TRANSACTION READ ONLY;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:
 -- ok
SET TRANSACTION READ WRITE;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:
 --fail
COMMIT;
RESULT: [duckdb: SAME, mysql: ERROR]

-----------
QUERY:


BEGIN;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

SET TRANSACTION READ WRITE;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:
 -- ok
SAVEPOINT x;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:

SET TRANSACTION READ WRITE;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:
 -- ok
SET TRANSACTION READ ONLY;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:
 -- ok
SELECT * FROM writetest;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:
 -- ok
SET TRANSACTION READ ONLY;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:
 -- ok
SET TRANSACTION READ WRITE;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:
 --fail
COMMIT;
RESULT: [duckdb: SAME, mysql: ERROR]

-----------
QUERY:


BEGIN;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

SET TRANSACTION READ WRITE;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:
 -- ok
SAVEPOINT x;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:

SET TRANSACTION READ ONLY;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:
 -- ok
SELECT * FROM writetest;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:
 -- ok
ROLLBACK TO SAVEPOINT x;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:

SHOW transaction_read_only;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:
  -- off
SAVEPOINT y;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:

SET TRANSACTION READ ONLY;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:
 -- ok
SELECT * FROM writetest;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:
 -- ok
RELEASE SAVEPOINT y;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:

SHOW transaction_read_only;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:
  -- off
COMMIT;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:


SET SESSION CHARACTERISTICS AS TRANSACTION READ ONLY;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:


DROP TABLE writetest;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:
 -- fail
INSERT INTO writetest VALUES (1);
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:
 -- fail
SELECT * FROM writetest;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:
 -- ok
DELETE FROM temptest;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:
 -- ok
UPDATE temptest SET a = 0 FROM writetest WHERE temptest.a = 1 AND writetest.a = temptest.a;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:
 -- ok
PREPARE test AS UPDATE writetest SET a = 0;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:
 -- ok
EXECUTE test;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:
 -- fail
SELECT * FROM writetest, temptest;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:
 -- ok
CREATE TABLE test AS SELECT * FROM writetest;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:
 -- fail

START TRANSACTION READ WRITE;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:

DROP TABLE writetest;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:
 -- ok
COMMIT;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:


-- Subtransactions, basic tests
-- create & drop tables
SET SESSION CHARACTERISTICS AS TRANSACTION READ WRITE;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

CREATE TABLE trans_foobar (a int);
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

BEGIN;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

	CREATE TABLE trans_foo (a int);
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

	SAVEPOINT one;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:

		DROP TABLE trans_foo;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

		CREATE TABLE trans_bar (a int);
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

	ROLLBACK TO SAVEPOINT one;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

	RELEASE SAVEPOINT one;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

	SAVEPOINT two;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:

		CREATE TABLE trans_baz (a int);
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

	RELEASE SAVEPOINT two;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

	drop TABLE trans_foobar;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

	CREATE TABLE trans_barbaz (a int);
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

COMMIT;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

-- should exist: trans_barbaz, trans_baz, trans_foo
SELECT * FROM trans_foo;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:
		-- should be empty
SELECT * FROM trans_bar;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:
		-- shouldn/* REPLACED */ ''t exist
SELECT * FROM trans_barbaz;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:
	-- should be empty
SELECT * FROM trans_baz;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:
		-- should be empty

-- inserts
BEGIN;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

	INSERT INTO trans_foo VALUES (1);
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

	SAVEPOINT one;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:

		INSERT into trans_bar VALUES (1);
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

	ROLLBACK TO one;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:

	RELEASE SAVEPOINT one;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:

	SAVEPOINT two;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:

		INSERT into trans_barbaz VALUES (1);
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

	RELEASE two;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

	SAVEPOINT three;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:

		SAVEPOINT four;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:

			INSERT INTO trans_foo VALUES (2);
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

		RELEASE SAVEPOINT four;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:

	ROLLBACK TO SAVEPOINT three;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:

	RELEASE SAVEPOINT three;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:

	INSERT INTO trans_foo VALUES (3);
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

COMMIT;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

SELECT * FROM trans_foo;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:
		-- should have 1 and 3
SELECT * FROM trans_barbaz;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:
	-- should have 1

-- test whole-tree commit
BEGIN;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

	SAVEPOINT one;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:

		SELECT trans_foo;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

	ROLLBACK TO SAVEPOINT one;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:

	RELEASE SAVEPOINT one;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:

	SAVEPOINT two;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:

		CREATE TABLE savepoints (a int);
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

		SAVEPOINT three;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:

			INSERT INTO savepoints VALUES (1);
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

			SAVEPOINT four;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:

				INSERT INTO savepoints VALUES (2);
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

				SAVEPOINT five;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:

					INSERT INTO savepoints VALUES (3);
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

				ROLLBACK TO SAVEPOINT five;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:

COMMIT;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

COMMIT;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:
		-- should not be in a transaction block
SELECT * FROM savepoints;
RESULT: [duckdb: DIFFERENT, mysql: SAME]

-----------
QUERY:


-- test whole-tree rollback
BEGIN;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

	SAVEPOINT one;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:

		DELETE FROM savepoints WHERE a=1;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

	RELEASE SAVEPOINT one;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:

	SAVEPOINT two;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:

		DELETE FROM savepoints WHERE a=1;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

		SAVEPOINT three;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:

			DELETE FROM savepoints WHERE a=2;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

ROLLBACK;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

COMMIT;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:
		-- should not be in a transaction block

SELECT * FROM savepoints;
RESULT: [duckdb: DIFFERENT, mysql: SAME]

-----------
QUERY:


-- test whole-tree commit on an aborted subtransaction
BEGIN;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

	INSERT INTO savepoints VALUES (4);
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

	SAVEPOINT one;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:

		INSERT INTO savepoints VALUES (5);
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

		SELECT trans_foo;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

COMMIT;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

SELECT * FROM savepoints;
RESULT: [duckdb: DIFFERENT, mysql: DIFFERENT]

-----------
QUERY:


BEGIN;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

	INSERT INTO savepoints VALUES (6);
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

	SAVEPOINT one;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:

		INSERT INTO savepoints VALUES (7);
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

	RELEASE SAVEPOINT one;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:

	INSERT INTO savepoints VALUES (8);
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

COMMIT;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

-- rows 6 and 8 should have been created by the same xact
SELECT a.xmin = b.xmin FROM savepoints a, savepoints b WHERE a.a=6 AND b.a=8;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

-- rows 6 and 7 should have been created by different xacts
SELECT a.xmin = b.xmin FROM savepoints a, savepoints b WHERE a.a=6 AND b.a=7;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:


BEGIN;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

	INSERT INTO savepoints VALUES (9);
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

	SAVEPOINT one;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:

		INSERT INTO savepoints VALUES (10);
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

	ROLLBACK TO SAVEPOINT one;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:

		INSERT INTO savepoints VALUES (11);
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

COMMIT;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

SELECT a FROM savepoints WHERE a in (9, 10, 11);
RESULT: [duckdb: DIFFERENT, mysql: SAME]

-----------
QUERY:

-- rows 9 and 11 should have been created by different xacts
SELECT a.xmin = b.xmin FROM savepoints a, savepoints b WHERE a.a=9 AND b.a=11;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:


BEGIN;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

	INSERT INTO savepoints VALUES (12);
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

	SAVEPOINT one;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:

		INSERT INTO savepoints VALUES (13);
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

		SAVEPOINT two;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:

			INSERT INTO savepoints VALUES (14);
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

	ROLLBACK TO SAVEPOINT one;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:

		INSERT INTO savepoints VALUES (15);
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

		SAVEPOINT two;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:

			INSERT INTO savepoints VALUES (16);
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

			SAVEPOINT three;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:

				INSERT INTO savepoints VALUES (17);
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

COMMIT;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

SELECT a FROM savepoints WHERE a BETWEEN 12 AND 17;
RESULT: [duckdb: DIFFERENT, mysql: SAME]

-----------
QUERY:


BEGIN;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

	INSERT INTO savepoints VALUES (18);
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

	SAVEPOINT one;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:

		INSERT INTO savepoints VALUES (19);
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

		SAVEPOINT two;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:

			INSERT INTO savepoints VALUES (20);
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

	ROLLBACK TO SAVEPOINT one;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:

		INSERT INTO savepoints VALUES (21);
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

	ROLLBACK TO SAVEPOINT one;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:

		INSERT INTO savepoints VALUES (22);
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

COMMIT;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

SELECT a FROM savepoints WHERE a BETWEEN 18 AND 22;
RESULT: [duckdb: DIFFERENT, mysql: SAME]

-----------
QUERY:


DROP TABLE savepoints;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:


-- only in a transaction block:
SAVEPOINT one;
RESULT: [duckdb: SAME, mysql: ERROR]

-----------
QUERY:

ROLLBACK TO SAVEPOINT one;
RESULT: [duckdb: SAME, mysql: ERROR]

-----------
QUERY:

RELEASE SAVEPOINT one;
RESULT: [duckdb: SAME, mysql: ERROR]

-----------
QUERY:


-- Only /* REPLACED */ ''rollback to/* REPLACED */ '' allowed in aborted state
BEGIN;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

  SAVEPOINT one;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:

  SELECT 0/0;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

  SAVEPOINT two;
RESULT: [duckdb: SAME, mysql: ERROR]

-----------
QUERY:
    -- ignored till the end of ...
  RELEASE SAVEPOINT one;
RESULT: [duckdb: SAME, mysql: ERROR]

-----------
QUERY:
      -- ignored till the end of ...
  ROLLBACK TO SAVEPOINT one;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

  SELECT 1;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

COMMIT;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

SELECT 1;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:
			-- this should work

-- check non-transactional behavior of cursors
BEGIN;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

	DECLARE c CURSOR FOR SELECT unique2 FROM tenk1 ORDER BY unique2;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

	SAVEPOINT one;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:

		FETCH 10 FROM c;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

	ROLLBACK TO SAVEPOINT one;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:

		FETCH 10 FROM c;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

	RELEASE SAVEPOINT one;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:

	FETCH 10 FROM c;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

	CLOSE c;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

	DECLARE c CURSOR FOR SELECT unique2/0 FROM tenk1 ORDER BY unique2;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

	SAVEPOINT two;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:

		FETCH 10 FROM c;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

	ROLLBACK TO SAVEPOINT two;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:

	-- c is now dead to the world ...
		FETCH 10 FROM c;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

	ROLLBACK TO SAVEPOINT two;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:

	RELEASE SAVEPOINT two;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:

	FETCH 10 FROM c;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

COMMIT;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:


--
-- Check that /* REPLACED */ ''stable/* REPLACED */ '' functions are really stable.  They should not be
-- able to see the partial results of the calling query.  (Ideally we would
-- also check that they don/* REPLACED */ ''t see commits of concurrent transactions, but
-- that/* REPLACED */ ''s a mite hard to do within the limitations of pg_regress.)
--
select * from xacttest;
RESULT: [duckdb: SAME, mysql: DIFFERENT]

-----------
QUERY:


create or replace function max_xacttest() returns smallint language sql as
'select max(a) from xacttest' stable;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:


begin;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

update xacttest set a = max_xacttest() + 10 where a > 0;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

select * from xacttest;
RESULT: [duckdb: DIFFERENT, mysql: DIFFERENT]

-----------
QUERY:

rollback;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:


-- But a volatile function can see the partial results of the calling query
create or replace function max_xacttest() returns smallint language sql as
'select max(a) from xacttest' volatile;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:


begin;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

update xacttest set a = max_xacttest() + 10 where a > 0;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

select * from xacttest;
RESULT: [duckdb: DIFFERENT, mysql: DIFFERENT]

-----------
QUERY:

rollback;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:


-- Now the same test with plpgsql (since it depends on SPI which is different)
create or replace function max_xacttest() returns smallint language plpgsql as
'begin return max(a) from xacttest;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:
 end' stable;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:


begin;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

update xacttest set a = max_xacttest() + 10 where a > 0;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

select * from xacttest;
RESULT: [duckdb: DIFFERENT, mysql: DIFFERENT]

-----------
QUERY:

rollback;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:


create or replace function max_xacttest() returns smallint language plpgsql as
'begin return max(a) from xacttest;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:
 end' volatile;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:


begin;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

update xacttest set a = max_xacttest() + 10 where a > 0;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

select * from xacttest;
RESULT: [duckdb: DIFFERENT, mysql: DIFFERENT]

-----------
QUERY:

rollback;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:



-- test case for problems with dropping an open relation during abort
BEGIN;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

	savepoint x;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:

		CREATE TABLE koju (a INT UNIQUE);
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

		INSERT INTO koju VALUES (1);
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

		INSERT INTO koju VALUES (1);
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

	rollback to x;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:


	CREATE TABLE koju (a INT UNIQUE);
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

	INSERT INTO koju VALUES (1);
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

	INSERT INTO koju VALUES (1);
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

ROLLBACK;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:


DROP TABLE trans_foo;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

DROP TABLE trans_baz;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

DROP TABLE trans_barbaz;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:



-- test case for problems with revalidating an open relation during abort
create function inverse(int) returns float8 as
$$
begin
  analyze revalidate_bug;
  return 1::float8/$1;
exception
  when division_by_zero then return 0;
end$$ language plpgsql volatile;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:


create table revalidate_bug (c float8 unique);
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

insert into revalidate_bug values (1);
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

insert into revalidate_bug values (inverse(0));
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:


drop table revalidate_bug;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

drop function inverse(int);
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:



-- verify that cursors created during an aborted subtransaction are
-- closed, but that we do not rollback the effect of any FETCHs
-- performed in the aborted subtransaction
begin;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:


savepoint x;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:

create table trans_abc (a int);
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

insert into trans_abc values (5);
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

insert into trans_abc values (10);
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

declare foo cursor for select * from trans_abc;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

fetch from foo;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

rollback to x;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:


-- should fail
fetch from foo;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

commit;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:


begin;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:


create table trans_abc (a int);
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

insert into trans_abc values (5);
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

insert into trans_abc values (10);
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

insert into trans_abc values (15);
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

declare foo cursor for select * from trans_abc;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:


fetch from foo;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:


savepoint x;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:

fetch from foo;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

rollback to x;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:


fetch from foo;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:


abort;
RESULT: [duckdb: SAME, mysql: ERROR]

-----------
QUERY:



-- Test for proper cleanup after a failure in a cursor portal
-- that was created in an outer subtransaction
CREATE FUNCTION invert(x float8) RETURNS float8 LANGUAGE plpgsql AS
$$ begin return 1/x; end $$;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:


CREATE FUNCTION create_temp_tab() RETURNS text
LANGUAGE plpgsql AS $$
BEGIN
  CREATE TEMP TABLE new_table (f1 float8);
  -- case of interest is that we fail while holding an open
  -- relcache reference to new_table
  INSERT INTO new_table SELECT invert(0.0);
  RETURN 'foo';
END $$;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:


BEGIN;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

DECLARE ok CURSOR FOR SELECT * FROM int8_tbl;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

DECLARE ctt CURSOR FOR SELECT create_temp_tab();
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

FETCH ok;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SAVEPOINT s1;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:

FETCH ok;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:
  -- should work
FETCH ctt;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:
 -- error occurs here
ROLLBACK TO s1;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:

FETCH ok;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:
  -- should work
FETCH ctt;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:
 -- must be rejected
COMMIT;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:


DROP FUNCTION create_temp_tab();
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

DROP FUNCTION invert(x float8);
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:



-- Tests for AND CHAIN

CREATE TABLE trans_abc (a int);
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:


-- set nondefault value so we have something to override below
SET default_transaction_read_only = on;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:


START TRANSACTION ISOLATION LEVEL REPEATABLE READ, READ WRITE, DEFERRABLE;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SHOW transaction_isolation;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SHOW transaction_read_only;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SHOW transaction_deferrable;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

INSERT INTO trans_abc VALUES (1);
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

INSERT INTO trans_abc VALUES (2);
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

COMMIT AND CHAIN;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:
  -- TBLOCK_END
SHOW transaction_isolation;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SHOW transaction_read_only;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SHOW transaction_deferrable;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

INSERT INTO trans_abc VALUES ('error');
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

INSERT INTO trans_abc VALUES (3);
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:
  -- check it/* REPLACED */ ''s really aborted
COMMIT AND CHAIN;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:
  -- TBLOCK_ABORT_END
SHOW transaction_isolation;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SHOW transaction_read_only;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SHOW transaction_deferrable;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

INSERT INTO trans_abc VALUES (4);
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

COMMIT;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:


START TRANSACTION ISOLATION LEVEL REPEATABLE READ, READ WRITE, DEFERRABLE;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SHOW transaction_isolation;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SHOW transaction_read_only;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SHOW transaction_deferrable;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SAVEPOINT x;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:

INSERT INTO trans_abc VALUES ('error');
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

COMMIT AND CHAIN;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:
  -- TBLOCK_ABORT_PENDING
SHOW transaction_isolation;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SHOW transaction_read_only;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SHOW transaction_deferrable;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

INSERT INTO trans_abc VALUES (5);
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

COMMIT;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:


START TRANSACTION ISOLATION LEVEL REPEATABLE READ, READ WRITE, DEFERRABLE;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SHOW transaction_isolation;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SHOW transaction_read_only;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SHOW transaction_deferrable;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SAVEPOINT x;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:

COMMIT AND CHAIN;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:
  -- TBLOCK_SUBCOMMIT
SHOW transaction_isolation;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SHOW transaction_read_only;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SHOW transaction_deferrable;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

COMMIT;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:


START TRANSACTION ISOLATION LEVEL READ COMMITTED, READ WRITE, DEFERRABLE;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SHOW transaction_isolation;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SHOW transaction_read_only;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SHOW transaction_deferrable;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SAVEPOINT x;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:

COMMIT AND CHAIN;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:
  -- TBLOCK_SUBCOMMIT
SHOW transaction_isolation;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SHOW transaction_read_only;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SHOW transaction_deferrable;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

COMMIT;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:


-- different mix of options just for fun
START TRANSACTION ISOLATION LEVEL SERIALIZABLE, READ WRITE, NOT DEFERRABLE;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SHOW transaction_isolation;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SHOW transaction_read_only;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SHOW transaction_deferrable;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

INSERT INTO trans_abc VALUES (6);
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

ROLLBACK AND CHAIN;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:
  -- TBLOCK_ABORT_PENDING
SHOW transaction_isolation;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SHOW transaction_read_only;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SHOW transaction_deferrable;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

INSERT INTO trans_abc VALUES ('error');
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

ROLLBACK AND CHAIN;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:
  -- TBLOCK_ABORT_END
SHOW transaction_isolation;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SHOW transaction_read_only;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SHOW transaction_deferrable;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

ROLLBACK;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:


-- not allowed outside a transaction block
COMMIT AND CHAIN;
RESULT: [duckdb: SAME, mysql: ERROR]

-----------
QUERY:
  -- error
ROLLBACK AND CHAIN;
RESULT: [duckdb: SAME, mysql: ERROR]

-----------
QUERY:
  -- error

SELECT * FROM trans_abc ORDER BY 1;
RESULT: [duckdb: DIFFERENT, mysql: DIFFERENT]

-----------
QUERY:


RESET default_transaction_read_only;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:


DROP TABLE trans_abc;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:



-- Test assorted behaviors around the implicit transaction block created
-- when multiple SQL commands are sent in a single Query message.  These
-- tests rely on the fact that psql will not break SQL commands apart at a
-- backslash-quoted semicolon, but will send them as one Query.

create temp table i_table (f1 int);
RESULT: [duckdb: SAME, mysql: ERROR]

-----------
QUERY:


-- psql will show all results of a multi-statement Query
SELECT 1\;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:
 SELECT 2\;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:
 SELECT 3;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:


-- this implicitly commits:
insert into i_table values(1)\;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:
 select * from i_table;
RESULT: [duckdb: SAME, mysql: ERROR]

-----------
QUERY:

-- 1/0 error will cause rolling back the whole implicit transaction
insert into i_table values(2)\;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:
 select * from i_table\;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:
 select 1/0;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

select * from i_table;
RESULT: [duckdb: SAME, mysql: ERROR]

-----------
QUERY:


rollback;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:
  -- we are not in a transaction at this point

-- can use regular begin/commit/rollback within a single Query
begin\;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:
 insert into i_table values(3)\;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:
 commit;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:

rollback;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:
  -- we are not in a transaction at this point
begin\;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:
 insert into i_table values(4)\;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:
 rollback;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:

rollback;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:
  -- we are not in a transaction at this point

-- begin converts implicit transaction into a regular one that
-- can extend past the end of the Query
select 1\;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:
 begin\;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:
 insert into i_table values(5);
RESULT: [duckdb: SAME, mysql: ERROR]

-----------
QUERY:

commit;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:

select 1\;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:
 begin\;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:
 insert into i_table values(6);
RESULT: [duckdb: SAME, mysql: ERROR]

-----------
QUERY:

rollback;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:


-- commit in implicit-transaction state commits but issues a warning.
insert into i_table values(7)\;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:
 commit\;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:
 insert into i_table values(8)\;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:
 select 1/0;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

-- similarly, rollback aborts but issues a warning.
insert into i_table values(9)\;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:
 rollback\;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:
 select 2;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:


select * from i_table;
RESULT: [duckdb: SAME, mysql: ERROR]

-----------
QUERY:


rollback;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:
  -- we are not in a transaction at this point

-- implicit transaction block is still a transaction block, for e.g. VACUUM
SELECT 1\;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:
 VACUUM;
RESULT: [duckdb: SAME, mysql: ERROR]

-----------
QUERY:

SELECT 1\;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:
 COMMIT\;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:
 VACUUM;
RESULT: [duckdb: SAME, mysql: ERROR]

-----------
QUERY:


-- we disallow savepoint-related commands in implicit-transaction state
SELECT 1\;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:
 SAVEPOINT sp;
RESULT: [duckdb: SAME, mysql: ERROR]

-----------
QUERY:

SELECT 1\;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:
 COMMIT\;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:
 SAVEPOINT sp;
RESULT: [duckdb: SAME, mysql: ERROR]

-----------
QUERY:

ROLLBACK TO SAVEPOINT sp\;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:
 SELECT 2;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

SELECT 2\;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:
 RELEASE SAVEPOINT sp\;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:
 SELECT 3;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:


-- but this is OK, because the BEGIN converts it to a regular xact
SELECT 1\;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:
 BEGIN\;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:
 SAVEPOINT sp\;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:
 ROLLBACK TO SAVEPOINT sp\;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:
 COMMIT;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:



-- Tests for AND CHAIN in implicit transaction blocks

SET TRANSACTION READ ONLY\;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:
 COMMIT AND CHAIN;
RESULT: [duckdb: SAME, mysql: ERROR]

-----------
QUERY:
  -- error
SHOW transaction_read_only;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:


SET TRANSACTION READ ONLY\;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:
 ROLLBACK AND CHAIN;
RESULT: [duckdb: SAME, mysql: ERROR]

-----------
QUERY:
  -- error
SHOW transaction_read_only;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:


CREATE TABLE trans_abc (a int);
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:


-- COMMIT/ROLLBACK + COMMIT/ROLLBACK AND CHAIN
INSERT INTO trans_abc VALUES (7)\;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:
 COMMIT\;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:
 INSERT INTO trans_abc VALUES (8)\;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:
 COMMIT AND CHAIN;
RESULT: [duckdb: SAME, mysql: ERROR]

-----------
QUERY:
  -- 7 commit, 8 error
INSERT INTO trans_abc VALUES (9)\;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:
 ROLLBACK\;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:
 INSERT INTO trans_abc VALUES (10)\;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:
 ROLLBACK AND CHAIN;
RESULT: [duckdb: SAME, mysql: ERROR]

-----------
QUERY:
  -- 9 rollback, 10 error

-- COMMIT/ROLLBACK AND CHAIN + COMMIT/ROLLBACK
INSERT INTO trans_abc VALUES (11)\;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:
 COMMIT AND CHAIN\;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:
 INSERT INTO trans_abc VALUES (12)\;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:
 COMMIT;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:
  -- 11 error, 12 not reached
INSERT INTO trans_abc VALUES (13)\;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:
 ROLLBACK AND CHAIN\;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:
 INSERT INTO trans_abc VALUES (14)\;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:
 ROLLBACK;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:
  -- 13 error, 14 not reached

-- START TRANSACTION + COMMIT/ROLLBACK AND CHAIN
START TRANSACTION ISOLATION LEVEL REPEATABLE READ\;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:
 INSERT INTO trans_abc VALUES (15)\;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:
 COMMIT AND CHAIN;
RESULT: [duckdb: SAME, mysql: ERROR]

-----------
QUERY:
  -- 15 ok
SHOW transaction_isolation;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:
  -- transaction is active at this point
COMMIT;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:


START TRANSACTION ISOLATION LEVEL REPEATABLE READ\;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:
 INSERT INTO trans_abc VALUES (16)\;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:
 ROLLBACK AND CHAIN;
RESULT: [duckdb: SAME, mysql: ERROR]

-----------
QUERY:
  -- 16 ok
SHOW transaction_isolation;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:
  -- transaction is active at this point
ROLLBACK;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:


SET default_transaction_isolation = 'read committed';
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:


-- START TRANSACTION + COMMIT/ROLLBACK + COMMIT/ROLLBACK AND CHAIN
START TRANSACTION ISOLATION LEVEL REPEATABLE READ\;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:
 INSERT INTO trans_abc VALUES (17)\;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:
 COMMIT\;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:
 INSERT INTO trans_abc VALUES (18)\;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:
 COMMIT AND CHAIN;
RESULT: [duckdb: SAME, mysql: ERROR]

-----------
QUERY:
  -- 17 commit, 18 error
SHOW transaction_isolation;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:
  -- out of transaction block

START TRANSACTION ISOLATION LEVEL REPEATABLE READ\;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:
 INSERT INTO trans_abc VALUES (19)\;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:
 ROLLBACK\;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:
 INSERT INTO trans_abc VALUES (20)\;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:
 ROLLBACK AND CHAIN;
RESULT: [duckdb: SAME, mysql: ERROR]

-----------
QUERY:
  -- 19 rollback, 20 error
SHOW transaction_isolation;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:
  -- out of transaction block

RESET default_transaction_isolation;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:


SELECT * FROM trans_abc ORDER BY 1;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:


DROP TABLE trans_abc;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:


-- TRANSACTION SNAPSHOT
-- Incorrect identifier.
BEGIN TRANSACTION ISOLATION LEVEL REPEATABLE READ;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SET TRANSACTION SNAPSHOT 'Incorrect Identifier';
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

ROLLBACK;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:

-- Correct identifier, missing file.
BEGIN TRANSACTION ISOLATION LEVEL REPEATABLE READ;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SET TRANSACTION SNAPSHOT 'FFF-FFF-F';
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

ROLLBACK;
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:


-- Test for successful cleanup of an aborted transaction at session exit.
-- THIS MUST BE THE LAST TEST IN THIS FILE.

begin;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

select 1/0;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

rollback to X;
RESULT: [duckdb: SAME, mysql: SAME]
=========================================
Summary for test case transactions/test.sql of postgres
=========================================

=================
Results for duckdb
SAME: 248 queries, which is 50.41%
DIFFERENT: 11 queries, which is 2.24%
ERROR: 233 queries, which is 47.36%

=================
Results for mysql
SAME: 307 queries, which is 62.40%
DIFFERENT: 11 queries, which is 2.24%
ERROR: 174 queries, which is 35.37%
