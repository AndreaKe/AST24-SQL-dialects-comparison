
-----------
QUERY:
-- txid_snapshot data type and related functions
-- Note: these are backward-compatibility functions and types, and have been
-- replaced by new xid8-based variants.  See xid.sql.  The txid variants will
-- be removed in a future release.

-- i/o
select '12:13:'::txid_snapshot;
RESULT:
	[('12:13:',)]

-----------
QUERY:

select '12:18:14,16'::txid_snapshot;
RESULT:
	[('12:18:14,16',)]

-----------
QUERY:

select '12:16:14,14'::txid_snapshot;
RESULT:
	[('12:16:14',)]

-----------
QUERY:


-- errors
select '31:12:'::txid_snapshot;
RESULT:
	ERROR - invalid input syntax for type pg_snapshot: "31:12:"
LINE 4: select '31:12:'::txid_snapshot;
               ^


-----------
QUERY:

select '0:1:'::txid_snapshot;
RESULT:
	ERROR - invalid input syntax for type pg_snapshot: "0:1:"
LINE 2: select '0:1:'::txid_snapshot;
               ^


-----------
QUERY:

select '12:13:0'::txid_snapshot;
RESULT:
	ERROR - invalid input syntax for type pg_snapshot: "12:13:0"
LINE 2: select '12:13:0'::txid_snapshot;
               ^


-----------
QUERY:

select '12:16:14,13'::txid_snapshot;
RESULT:
	ERROR - invalid input syntax for type pg_snapshot: "12:16:14,13"
LINE 2: select '12:16:14,13'::txid_snapshot;
               ^


-----------
QUERY:


create temp table snapshot_test (
	nr	integer,
	snap	txid_snapshot
);
RESULT:
	[]

-----------
QUERY:


insert into snapshot_test values (1, '12:13:');
RESULT:
	[]

-----------
QUERY:

insert into snapshot_test values (2, '12:20:13,15,18');
RESULT:
	[]

-----------
QUERY:

insert into snapshot_test values (3, '100001:100009:100005,100007,100008');
RESULT:
	[]

-----------
QUERY:

insert into snapshot_test values (4, '100:150:101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131');
RESULT:
	[]

-----------
QUERY:

select snap from snapshot_test order by nr;
RESULT:
	[('12:13:',), ('12:20:13,15,18',), ('100001:100009:100005,100007,100008',), ('100:150:101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131',)]

-----------
QUERY:


select  txid_snapshot_xmin(snap),
	txid_snapshot_xmax(snap),
	txid_snapshot_xip(snap)
from snapshot_test order by nr;
RESULT:
	[(12, 20, 13), (12, 20, 15), (12, 20, 18), (100001, 100009, 100005), (100001, 100009, 100007), (100001, 100009, 100008), (100, 150, 101), (100, 150, 102), (100, 150, 103), (100, 150, 104), (100, 150, 105), (100, 150, 106), (100, 150, 107), (100, 150, 108), (100, 150, 109), (100, 150, 110), (100, 150, 111), (100, 150, 112), (100, 150, 113), (100, 150, 114), (100, 150, 115), (100, 150, 116), (100, 150, 117), (100, 150, 118), (100, 150, 119), (100, 150, 120), (100, 150, 121), (100, 150, 122), (100, 150, 123), (100, 150, 124), (100, 150, 125), (100, 150, 126), (100, 150, 127), (100, 150, 128), (100, 150, 129), (100, 150, 130), (100, 150, 131)]

-----------
QUERY:


select id, txid_visible_in_snapshot(id, snap)
from snapshot_test, generate_series(11, 21) id
where nr = 2;
RESULT:
	[(11, True), (12, True), (13, False), (14, True), (15, False), (16, True), (17, True), (18, False), (19, True), (20, False), (21, False)]

-----------
QUERY:


-- test bsearch
select id, txid_visible_in_snapshot(id, snap)
from snapshot_test, generate_series(90, 160) id
where nr = 4;
RESULT:
	[(90, True), (91, True), (92, True), (93, True), (94, True), (95, True), (96, True), (97, True), (98, True), (99, True), (100, True), (101, False), (102, False), (103, False), (104, False), (105, False), (106, False), (107, False), (108, False), (109, False), (110, False), (111, False), (112, False), (113, False), (114, False), (115, False), (116, False), (117, False), (118, False), (119, False), (120, False), (121, False), (122, False), (123, False), (124, False), (125, False), (126, False), (127, False), (128, False), (129, False), (130, False), (131, False), (132, True), (133, True), (134, True), (135, True), (136, True), (137, True), (138, True), (139, True), (140, True), (141, True), (142, True), (143, True), (144, True), (145, True), (146, True), (147, True), (148, True), (149, True), (150, False), (151, False), (152, False), (153, False), (154, False), (155, False), (156, False), (157, False), (158, False), (159, False), (160, False)]

-----------
QUERY:


-- test current values also
select txid_current() >= txid_snapshot_xmin(txid_current_snapshot());
RESULT:
	[(True,)]

-----------
QUERY:


-- we can/* REPLACED */''t assume current is always less than xmax, however

select txid_visible_in_snapshot(txid_current(), txid_current_snapshot());
RESULT:
	[(False,)]

-----------
QUERY:


-- test 64bitness

select txid_snapshot '1000100010001000:1000100010001100:1000100010001012,1000100010001013';
RESULT:
	[('1000100010001000:1000100010001100:1000100010001012,1000100010001013',)]

-----------
QUERY:

select txid_visible_in_snapshot('1000100010001012', '1000100010001000:1000100010001100:1000100010001012,1000100010001013');
RESULT:
	[(False,)]

-----------
QUERY:

select txid_visible_in_snapshot('1000100010001015', '1000100010001000:1000100010001100:1000100010001012,1000100010001013');
RESULT:
	[(True,)]

-----------
QUERY:


-- test 64bit overflow
SELECT txid_snapshot '1:9223372036854775807:3';
RESULT:
	[('1:9223372036854775807:3',)]

-----------
QUERY:

SELECT txid_snapshot '1:9223372036854775808:3';
RESULT:
	ERROR - invalid input syntax for type pg_snapshot: "1:9223372036854775808:3"
LINE 2: SELECT txid_snapshot '1:9223372036854775808:3';
                             ^


-----------
QUERY:


-- test txid_current_if_assigned
BEGIN;
RESULT:
	[]

-----------
QUERY:

SELECT txid_current_if_assigned() IS NULL;
RESULT:
	[(True,)]

-----------
QUERY:

SELECT txid_current() \gset
SELECT txid_current_if_assigned() IS NOT DISTINCT FROM BIGINT :'txid_current';
RESULT:
	ERROR - syntax error at or near "\"
LINE 2: SELECT txid_current() \gset
                              ^


-----------
QUERY:

COMMIT;
RESULT:
	[]

-----------
QUERY:


-- test xid status functions
BEGIN;
RESULT:
	[]

-----------
QUERY:

SELECT txid_current() AS committed \gset
COMMIT;
RESULT:
	ERROR - syntax error at or near "\"
LINE 2: SELECT txid_current() AS committed \gset
                                           ^


-----------
QUERY:


BEGIN;
RESULT:
	ERROR - current transaction is aborted, commands ignored until end of transaction block


-----------
QUERY:

SELECT txid_current() AS rolledback \gset
ROLLBACK;
RESULT:
	ERROR - syntax error at or near "\"
LINE 2: SELECT txid_current() AS rolledback \gset
                                            ^


-----------
QUERY:


BEGIN;
RESULT:
	ERROR - current transaction is aborted, commands ignored until end of transaction block


-----------
QUERY:

SELECT txid_current() AS inprogress \gset

SELECT txid_status(:committed) AS committed;
RESULT:
	ERROR - syntax error at or near "\"
LINE 2: SELECT txid_current() AS inprogress \gset
                                            ^


-----------
QUERY:

SELECT txid_status(:rolledback) AS rolledback;
RESULT:
	ERROR - syntax error at or near ":"
LINE 2: SELECT txid_status(:rolledback) AS rolledback;
                           ^


-----------
QUERY:

SELECT txid_status(:inprogress) AS inprogress;
RESULT:
	ERROR - syntax error at or near ":"
LINE 2: SELECT txid_status(:inprogress) AS inprogress;
                           ^


-----------
QUERY:

SELECT txid_status(1);
RESULT:
	ERROR - current transaction is aborted, commands ignored until end of transaction block


-----------
QUERY:
 -- BootstrapTransactionId is always committed
SELECT txid_status(2);
RESULT:
	ERROR - current transaction is aborted, commands ignored until end of transaction block


-----------
QUERY:
 -- FrozenTransactionId is always committed
SELECT txid_status(3);
RESULT:
	ERROR - current transaction is aborted, commands ignored until end of transaction block


-----------
QUERY:
 -- in regress testing FirstNormalTransactionId will always be behind oldestXmin

COMMIT;
RESULT:
	[]

-----------
QUERY:


BEGIN;
RESULT:
	[]

-----------
QUERY:

CREATE FUNCTION test_future_xid_status(bigint)
RETURNS void
LANGUAGE plpgsql
AS
$$
BEGIN
  PERFORM txid_status($1);
  RAISE EXCEPTION 'didn''t ERROR at xid in the future as expected';
EXCEPTION
  WHEN invalid_parameter_value THEN
    RAISE NOTICE 'Got expected error for xid in the future';
END;
$$;
RESULT:
	[]

-----------
QUERY:

SELECT test_future_xid_status(:inprogress + 10000);
RESULT:
	ERROR - syntax error at or near ":"
LINE 2: SELECT test_future_xid_status(:inprogress + 10000);
                                      ^


-----------
QUERY:

ROLLBACK;
RESULT:
	[]
