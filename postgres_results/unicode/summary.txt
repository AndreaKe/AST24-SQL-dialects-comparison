Guest DBMS identified: postgres
-----------
QUERY:
SELECT getdatabaseencoding() <> 'UTF8' AS skip_test \gset
\if :skip_test
\quit
\endif

SELECT U&'\0061\0308bc' <> U&'\00E4bc' COLLATE "C" AS sanity_check
RESULT: ['duckdb: SAME']

-----------
QUERY:
SELECT unicode_version() IS NOT NULL
RESULT: ['duckdb: ERROR']

-----------
QUERY:
SELECT unicode_assigned(U&'abc')
RESULT: ['duckdb: ERROR']

-----------
QUERY:
SELECT unicode_assigned(U&'abc\+10FFFF')
RESULT: ['duckdb: ERROR']

-----------
QUERY:
SELECT normalize('')
RESULT: ['duckdb: ERROR']

-----------
QUERY:
SELECT normalize(U&'\0061\0308\24D1c') = U&'\00E4\24D1c' COLLATE "C" AS test_default
RESULT: ['duckdb: ERROR']

-----------
QUERY:
SELECT normalize(U&'\0061\0308\24D1c', NFC) = U&'\00E4\24D1c' COLLATE "C" AS test_nfc
RESULT: ['duckdb: ERROR']

-----------
QUERY:
SELECT normalize(U&'\00E4bc', NFC) = U&'\00E4bc' COLLATE "C" AS test_nfc_idem
RESULT: ['duckdb: ERROR']

-----------
QUERY:
SELECT normalize(U&'\00E4\24D1c', NFD) = U&'\0061\0308\24D1c' COLLATE "C" AS test_nfd
RESULT: ['duckdb: ERROR']

-----------
QUERY:
SELECT normalize(U&'\0061\0308\24D1c', NFKC) = U&'\00E4bc' COLLATE "C" AS test_nfkc
RESULT: ['duckdb: ERROR']

-----------
QUERY:
SELECT normalize(U&'\00E4\24D1c', NFKD) = U&'\0061\0308bc' COLLATE "C" AS test_nfkd
RESULT: ['duckdb: ERROR']

-----------
QUERY:
SELECT "normalize"('abc', 'def')
RESULT: ['duckdb: SAME']

-----------
QUERY:
-- run-time error

SELECT U&'\00E4\24D1c' IS NORMALIZED AS test_default
RESULT: ['duckdb: ERROR']

-----------
QUERY:
SELECT U&'\00E4\24D1c' IS NFC NORMALIZED AS test_nfc
RESULT: ['duckdb: ERROR']

-----------
QUERY:
SELECT num, val,
    val IS NFC NORMALIZED AS NFC,
    val IS NFD NORMALIZED AS NFD,
    val IS NFKC NORMALIZED AS NFKC,
    val IS NFKD NORMALIZED AS NFKD
FROM
  (VALUES (1, U&'\00E4bc'),
          (2, U&'\0061\0308bc'),
          (3, U&'\00E4\24D1c'),
          (4, U&'\0061\0308\24D1c'),
          (5, '')) vals (num, val)
ORDER BY num
RESULT: ['duckdb: ERROR']

-----------
QUERY:
SELECT is_normalized('abc', 'def')
RESULT: ['duckdb: SAME']

-----------
QUERY:
-- run-time error
RESULT: ['duckdb: ERROR']
=========================================
Summary for test case unicode/test.sql of postgres
=========================================

=================
Results for duckdb
SAME: 3 queries, which is 17.65%
DIFFERENT: 0 queries, which is 0.00%
ERROR: 14 queries, which is 82.35%
Guest results are identical to expected results