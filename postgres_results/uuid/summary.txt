Guest DBMS identified: postgres
-----------
QUERY:
-- regression test for the uuid datatype
-- creating test tables
CREATE TABLE guid1
(
	guid_field UUID,
	text_field TEXT DEFAULT(now())
);
RESULT: [duckdb: SAME, mysql: ERROR]

-----------
QUERY:

CREATE TABLE guid2
(
	guid_field UUID,
	text_field TEXT DEFAULT(now())
);
RESULT: [duckdb: SAME, mysql: ERROR]

-----------
QUERY:


-- inserting invalid data tests
-- too long
INSERT INTO guid1(guid_field) VALUES('11111111-1111-1111-1111-111111111111F');
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

-- too short
INSERT INTO guid1(guid_field) VALUES('{11111111-1111-1111-1111-11111111111}');
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

-- valid data but invalid format
INSERT INTO guid1(guid_field) VALUES('111-11111-1111-1111-1111-111111111111');
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:

INSERT INTO guid1(guid_field) VALUES('{22222222-2222-2222-2222-222222222222 ');
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

-- invalid data
INSERT INTO guid1(guid_field) VALUES('11111111-1111-1111-G111-111111111111');
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

INSERT INTO guid1(guid_field) VALUES('11+11111-1111-1111-1111-111111111111');
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:


-- test non-error-throwing API
SELECT pg_input_is_valid('11', 'uuid');
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SELECT * FROM pg_input_error_info('11', 'uuid');
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:


--inserting three input formats
INSERT INTO guid1(guid_field) VALUES('11111111-1111-1111-1111-111111111111');
RESULT: [duckdb: SAME, mysql: ERROR]

-----------
QUERY:

INSERT INTO guid1(guid_field) VALUES('{22222222-2222-2222-2222-222222222222}');
RESULT: [duckdb: SAME, mysql: ERROR]

-----------
QUERY:

INSERT INTO guid1(guid_field) VALUES('3f3e3c3b3a3039383736353433a2313e');
RESULT: [duckdb: SAME, mysql: ERROR]

-----------
QUERY:


-- retrieving the inserted data
SELECT guid_field FROM guid1;
RESULT: [duckdb: DIFFERENT, mysql: ERROR]

-----------
QUERY:


-- ordering test
SELECT guid_field FROM guid1 ORDER BY guid_field ASC;
RESULT: [duckdb: DIFFERENT, mysql: ERROR]

-----------
QUERY:

SELECT guid_field FROM guid1 ORDER BY guid_field DESC;
RESULT: [duckdb: DIFFERENT, mysql: ERROR]

-----------
QUERY:


-- = operator test
SELECT COUNT(*) FROM guid1 WHERE guid_field = '3f3e3c3b-3a30-3938-3736-353433a2313e';
RESULT: [duckdb: SAME, mysql: ERROR]

-----------
QUERY:


-- <> operator test
SELECT COUNT(*) FROM guid1 WHERE guid_field <> '11111111111111111111111111111111';
RESULT: [duckdb: SAME, mysql: ERROR]

-----------
QUERY:


-- < operator test
SELECT COUNT(*) FROM guid1 WHERE guid_field < '22222222-2222-2222-2222-222222222222';
RESULT: [duckdb: DIFFERENT, mysql: ERROR]

-----------
QUERY:


-- <= operator test
SELECT COUNT(*) FROM guid1 WHERE guid_field <= '22222222-2222-2222-2222-222222222222';
RESULT: [duckdb: DIFFERENT, mysql: ERROR]

-----------
QUERY:


-- > operator test
SELECT COUNT(*) FROM guid1 WHERE guid_field > '22222222-2222-2222-2222-222222222222';
RESULT: [duckdb: SAME, mysql: ERROR]

-----------
QUERY:


-- >= operator test
SELECT COUNT(*) FROM guid1 WHERE guid_field >= '22222222-2222-2222-2222-222222222222';
RESULT: [duckdb: SAME, mysql: ERROR]

-----------
QUERY:


-- btree and hash index creation test
CREATE INDEX guid1_btree ON guid1 USING BTREE (guid_field);
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

CREATE INDEX guid1_hash  ON guid1 USING HASH  (guid_field);
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:


-- unique index test
CREATE UNIQUE INDEX guid1_unique_BTREE ON guid1 USING BTREE (guid_field);
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

-- should fail
INSERT INTO guid1(guid_field) VALUES('11111111-1111-1111-1111-111111111111');
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:


-- check to see whether the new indexes are actually there
SELECT count(*) FROM pg_class WHERE relkind='i' AND relname LIKE 'guid%';
RESULT: [duckdb: DIFFERENT, mysql: ERROR]

-----------
QUERY:


-- populating the test tables with additional records
INSERT INTO guid1(guid_field) VALUES('44444444-4444-4444-4444-444444444444');
RESULT: [duckdb: SAME, mysql: ERROR]

-----------
QUERY:

INSERT INTO guid2(guid_field) VALUES('11111111-1111-1111-1111-111111111111');
RESULT: [duckdb: SAME, mysql: ERROR]

-----------
QUERY:

INSERT INTO guid2(guid_field) VALUES('{22222222-2222-2222-2222-222222222222}');
RESULT: [duckdb: SAME, mysql: ERROR]

-----------
QUERY:

INSERT INTO guid2(guid_field) VALUES('3f3e3c3b3a3039383736353433a2313e');
RESULT: [duckdb: SAME, mysql: ERROR]

-----------
QUERY:


-- join test
SELECT COUNT(*) FROM guid1 g1 INNER JOIN guid2 g2 ON g1.guid_field = g2.guid_field;
RESULT: [duckdb: DIFFERENT, mysql: ERROR]

-----------
QUERY:

SELECT COUNT(*) FROM guid1 g1 LEFT JOIN guid2 g2 ON g1.guid_field = g2.guid_field WHERE g2.guid_field IS NULL;
RESULT: [duckdb: SAME, mysql: ERROR]

-----------
QUERY:


-- generation test
TRUNCATE guid1;
RESULT: [duckdb: SAME, mysql: ERROR]

-----------
QUERY:

INSERT INTO guid1 (guid_field) VALUES (gen_random_uuid());
RESULT: [duckdb: SAME, mysql: ERROR]

-----------
QUERY:

INSERT INTO guid1 (guid_field) VALUES (gen_random_uuid());
RESULT: [duckdb: SAME, mysql: ERROR]

-----------
QUERY:

SELECT count(DISTINCT guid_field) FROM guid1;
RESULT: [duckdb: SAME, mysql: ERROR]

-----------
QUERY:



-- extract functions

-- version
SELECT uuid_extract_version('11111111-1111-5111-8111-111111111111');
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:
  -- 5
SELECT uuid_extract_version(gen_random_uuid());
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:
  -- 4
SELECT uuid_extract_version('11111111-1111-1111-1111-111111111111');
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:
  -- null

-- timestamp
SELECT uuid_extract_timestamp('C232AB00-9414-11EC-B3C8-9F6BDECED846') = 'Tuesday, February 22, 2022 2:22:22.00 PM GMT+05:00';
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:
  -- RFC 4122bis test vector
SELECT uuid_extract_timestamp(gen_random_uuid());
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:
  -- null
SELECT uuid_extract_timestamp('11111111-1111-1111-1111-111111111111');
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:
  -- null


-- clean up
DROP TABLE guid1, guid2 CASCADE;
RESULT: [duckdb: ERROR, mysql: ERROR]
=========================================
Summary for test case uuid/test.sql of postgres
=========================================

=================
Results for duckdb
SAME: 23 queries, which is 52.27%
DIFFERENT: 7 queries, which is 15.91%
ERROR: 14 queries, which is 31.82%

=================
Results for mysql
SAME: 7 queries, which is 15.91%
DIFFERENT: 0 queries, which is 0.00%
ERROR: 37 queries, which is 84.09%
