
-----------
QUERY:
--
-- VARCHAR
--

--
-- Build a table for testing
-- (This temporarily hides the table created in test_setup.sql)
--

CREATE TEMP TABLE VARCHAR_TBL(f1 varchar(1));
RESULT:
	duckdb: []

-----------
QUERY:


INSERT INTO VARCHAR_TBL (f1) VALUES ('a');
RESULT:
	duckdb: []

-----------
QUERY:


INSERT INTO VARCHAR_TBL (f1) VALUES ('A');
RESULT:
	duckdb: []

-----------
QUERY:


-- any of the following three input formats are acceptable
INSERT INTO VARCHAR_TBL (f1) VALUES ('1');
RESULT:
	duckdb: []

-----------
QUERY:


INSERT INTO VARCHAR_TBL (f1) VALUES (2);
RESULT:
	duckdb: []

-----------
QUERY:


INSERT INTO VARCHAR_TBL (f1) VALUES ('3');
RESULT:
	duckdb: []

-----------
QUERY:


-- zero-length char
INSERT INTO VARCHAR_TBL (f1) VALUES ('');
RESULT:
	duckdb: []

-----------
QUERY:


-- try varchar/* REPLACED */''s of greater than 1 length
INSERT INTO VARCHAR_TBL (f1) VALUES ('cd');
RESULT:
	duckdb: []

-----------
QUERY:

INSERT INTO VARCHAR_TBL (f1) VALUES ('c     ');
RESULT:
	duckdb: []

-----------
QUERY:



SELECT * FROM VARCHAR_TBL;
RESULT:
	duckdb: [('a',), ('A',), ('1',), ('2',), ('3',), ('',), ('cd',), ('c     ',)]

-----------
QUERY:


SELECT c.*
   FROM VARCHAR_TBL c
   WHERE c.f1 <> 'a';
RESULT:
	duckdb: [('A',), ('1',), ('2',), ('3',), ('',), ('cd',), ('c     ',)]

-----------
QUERY:


SELECT c.*
   FROM VARCHAR_TBL c
   WHERE c.f1 = 'a';
RESULT:
	duckdb: [('a',)]

-----------
QUERY:


SELECT c.*
   FROM VARCHAR_TBL c
   WHERE c.f1 < 'a';
RESULT:
	duckdb: [('A',), ('1',), ('2',), ('3',), ('',)]

-----------
QUERY:


SELECT c.*
   FROM VARCHAR_TBL c
   WHERE c.f1 <= 'a';
RESULT:
	duckdb: [('a',), ('A',), ('1',), ('2',), ('3',), ('',)]

-----------
QUERY:


SELECT c.*
   FROM VARCHAR_TBL c
   WHERE c.f1 > 'a';
RESULT:
	duckdb: [('cd',), ('c     ',)]

-----------
QUERY:


SELECT c.*
   FROM VARCHAR_TBL c
   WHERE c.f1 >= 'a';
RESULT:
	duckdb: [('a',), ('cd',), ('c     ',)]

-----------
QUERY:


DROP TABLE VARCHAR_TBL;
RESULT:
	duckdb: []

-----------
QUERY:


--
-- Now test longer arrays of char
--
-- This varchar_tbl was already created and filled in test_setup.sql.
-- Here we just try to insert bad values.
--

INSERT INTO VARCHAR_TBL (f1) VALUES ('abcde');
RESULT:
	duckdb: []

-----------
QUERY:


SELECT * FROM VARCHAR_TBL;
RESULT:
	duckdb: [('a',), ('ab',), ('abcd',), ('abcd    ',), ('abcde',)]

-----------
QUERY:


-- Also try it with non-error-throwing API
SELECT pg_input_is_valid('abcd  ', 'varchar(4)');
RESULT:
	duckdb: ERROR - Catalog Error: Scalar Function with name pg_input_is_valid does not exist!
Did you mean "json_valid"?

-----------
QUERY:

SELECT pg_input_is_valid('abcde', 'varchar(4)');
RESULT:
	duckdb: ERROR - Catalog Error: Scalar Function with name pg_input_is_valid does not exist!
Did you mean "json_valid"?

-----------
QUERY:

SELECT * FROM pg_input_error_info('abcde', 'varchar(4)');
RESULT:
	duckdb: ERROR - Catalog Error: Table Function with name pg_input_error_info does not exist!
Did you mean "pragma_storage_info"?
