Guest DBMS identified: postgres
-----------
QUERY:
--
-- VARCHAR
--

--
-- Build a table for testing
-- (This temporarily hides the table created in test_setup.sql)
--

CREATE TEMP TABLE VARCHAR_TBL(f1 varchar(1));
RESULT: [duckdb: SAME, mysql: ERROR]

-----------
QUERY:


INSERT INTO VARCHAR_TBL (f1) VALUES ('a');
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:


INSERT INTO VARCHAR_TBL (f1) VALUES ('A');
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:


-- any of the following three input formats are acceptable
INSERT INTO VARCHAR_TBL (f1) VALUES ('1');
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:


INSERT INTO VARCHAR_TBL (f1) VALUES (2);
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:


INSERT INTO VARCHAR_TBL (f1) VALUES ('3');
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:


-- zero-length char
INSERT INTO VARCHAR_TBL (f1) VALUES ('');
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:


-- try varchar/* REPLACED */ ''s of greater than 1 length
INSERT INTO VARCHAR_TBL (f1) VALUES ('cd');
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

INSERT INTO VARCHAR_TBL (f1) VALUES ('c     ');
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:



SELECT * FROM VARCHAR_TBL;
RESULT: [duckdb: DIFFERENT, mysql: DIFFERENT]

-----------
QUERY:


SELECT c.*
   FROM VARCHAR_TBL c
   WHERE c.f1 <> 'a';
RESULT: [duckdb: DIFFERENT, mysql: DIFFERENT]

-----------
QUERY:


SELECT c.*
   FROM VARCHAR_TBL c
   WHERE c.f1 = 'a';
RESULT: [duckdb: SAME, mysql: DIFFERENT]

-----------
QUERY:


SELECT c.*
   FROM VARCHAR_TBL c
   WHERE c.f1 < 'a';
RESULT: [duckdb: SAME, mysql: DIFFERENT]

-----------
QUERY:


SELECT c.*
   FROM VARCHAR_TBL c
   WHERE c.f1 <= 'a';
RESULT: [duckdb: SAME, mysql: DIFFERENT]

-----------
QUERY:


SELECT c.*
   FROM VARCHAR_TBL c
   WHERE c.f1 > 'a';
RESULT: [duckdb: DIFFERENT, mysql: DIFFERENT]

-----------
QUERY:


SELECT c.*
   FROM VARCHAR_TBL c
   WHERE c.f1 >= 'a';
RESULT: [duckdb: DIFFERENT, mysql: DIFFERENT]

-----------
QUERY:


DROP TABLE VARCHAR_TBL;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:


--
-- Now test longer arrays of char
--
-- This varchar_tbl was already created and filled in test_setup.sql.
-- Here we just try to insert bad values.
--

INSERT INTO VARCHAR_TBL (f1) VALUES ('abcde');
RESULT: [duckdb: ERROR, mysql: SAME]

-----------
QUERY:


SELECT * FROM VARCHAR_TBL;
RESULT: [duckdb: DIFFERENT, mysql: ERROR]

-----------
QUERY:


-- Also try it with non-error-throwing API
SELECT pg_input_is_valid('abcd  ', 'varchar(4)');
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SELECT pg_input_is_valid('abcde', 'varchar(4)');
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SELECT * FROM pg_input_error_info('abcde', 'varchar(4)');
RESULT: [duckdb: ERROR, mysql: ERROR]


=========================================
Summary for test case varchar/test.sql of postgres
=========================================

=================
Results for duckdb
SAME: 12 queries, which is 54.55%
DIFFERENT: 5 queries, which is 22.73%
ERROR: 5 queries, which is 22.73%

=================
Results for mysql
SAME: 9 queries, which is 40.91%
DIFFERENT: 7 queries, which is 31.82%
ERROR: 6 queries, which is 27.27%
