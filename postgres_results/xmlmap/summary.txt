Guest DBMS identified: postgres
-----------
QUERY:
CREATE SCHEMA testxmlschema;
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:


CREATE TABLE testxmlschema.test1 (a int, b text);
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

INSERT INTO testxmlschema.test1 VALUES (1, 'one'), (2, 'two'), (-1, null);
RESULT: [duckdb: SAME, mysql: SAME]

-----------
QUERY:

CREATE DOMAIN testxmldomain AS varchar;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

CREATE TABLE testxmlschema.test2 (z int, y varchar(500), x char(6),
    w numeric(9,2), v smallint, u bigint, t real,
    s time, stz timetz, r timestamp, rtz timestamptz, q date,
    p xml, o testxmldomain, n bool, m bytea, aaa text);
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

ALTER TABLE testxmlschema.test2 DROP COLUMN aaa;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

INSERT INTO testxmlschema.test2 VALUES (55, 'abc', 'def',
    98.6, 2, 999, 0,
    '21:07', '21:11 +05', '2009-06-08 21:07:30', '2009-06-08 21:07:30 -07', '2009-06-08',
    NULL, 'ABC', true, 'XYZ');
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:


SELECT table_to_xml('testxmlschema.test1', false, false, '');
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SELECT table_to_xml('testxmlschema.test1', true, false, 'foo');
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SELECT table_to_xml('testxmlschema.test1', false, true, '');
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SELECT table_to_xml('testxmlschema.test1', true, true, '');
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SELECT table_to_xml('testxmlschema.test2', false, false, '');
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:


SELECT table_to_xmlschema('testxmlschema.test1', false, false, '');
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SELECT table_to_xmlschema('testxmlschema.test1', true, false, '');
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SELECT table_to_xmlschema('testxmlschema.test1', false, true, 'foo');
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SELECT table_to_xmlschema('testxmlschema.test1', true, true, '');
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SELECT table_to_xmlschema('testxmlschema.test2', false, false, '');
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:


SELECT table_to_xml_and_xmlschema('testxmlschema.test1', false, false, '');
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SELECT table_to_xml_and_xmlschema('testxmlschema.test1', true, false, '');
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SELECT table_to_xml_and_xmlschema('testxmlschema.test1', false, true, '');
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SELECT table_to_xml_and_xmlschema('testxmlschema.test1', true, true, 'foo');
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:


SELECT query_to_xml('SELECT * FROM testxmlschema.test1', false, false, '');
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SELECT query_to_xmlschema('SELECT * FROM testxmlschema.test1', false, false, '');
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SELECT query_to_xml_and_xmlschema('SELECT * FROM testxmlschema.test1', true, true, '');
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:


DECLARE xc CURSOR WITH HOLD FOR SELECT * FROM testxmlschema.test1 ORDER BY 1, 2;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SELECT cursor_to_xml('xc'::refcursor, 5, false, true, '');
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SELECT cursor_to_xmlschema('xc'::refcursor, false, true, '');
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

MOVE BACKWARD ALL IN xc;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SELECT cursor_to_xml('xc'::refcursor, 5, true, false, '');
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SELECT cursor_to_xmlschema('xc'::refcursor, true, false, '');
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:


SELECT schema_to_xml('testxmlschema', false, true, '');
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SELECT schema_to_xml('testxmlschema', true, false, '');
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SELECT schema_to_xmlschema('testxmlschema', false, true, '');
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SELECT schema_to_xmlschema('testxmlschema', true, false, '');
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SELECT schema_to_xml_and_xmlschema('testxmlschema', true, true, 'foo');
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:



-- test that domains are transformed like their base types

CREATE DOMAIN testboolxmldomain AS bool;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

CREATE DOMAIN testdatexmldomain AS date;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:


CREATE TABLE testxmlschema.test3
    AS SELECT true c1,
              true::testboolxmldomain c2,
              '2013-02-21'::date c3,
              '2013-02-21'::testdatexmldomain c4;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:


SELECT xmlforest(c1, c2, c3, c4) FROM testxmlschema.test3;
RESULT: [duckdb: ERROR, mysql: ERROR]

-----------
QUERY:

SELECT table_to_xml('testxmlschema.test3', true, true, '');
RESULT: [duckdb: ERROR, mysql: ERROR]
=========================================
Summary for test case xmlmap/test.sql of postgres
=========================================

=================
Results for duckdb
SAME: 3 queries, which is 7.50%
DIFFERENT: 0 queries, which is 0.00%
ERROR: 37 queries, which is 92.50%

=================
Results for mysql
SAME: 3 queries, which is 7.50%
DIFFERENT: 0 queries, which is 0.00%
ERROR: 37 queries, which is 92.50%
