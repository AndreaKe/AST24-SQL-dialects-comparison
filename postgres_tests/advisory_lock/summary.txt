Guest DBMS identified: postgres
-----------
QUERY:
--
-- ADVISORY LOCKS
--

SELECT oid AS datoid FROM pg_database WHERE datname = current_database() \gset

BEGIN
RESULT: []

-----------
QUERY:
SELECT
	pg_advisory_xact_lock(1), pg_advisory_xact_lock_shared(2),
	pg_advisory_xact_lock(1, 1), pg_advisory_xact_lock_shared(2, 2)
RESULT: []

-----------
QUERY:
SELECT locktype, classid, objid, objsubid, mode, granted
	FROM pg_locks WHERE locktype = 'advisory' AND database = :datoid
	ORDER BY classid, objid, objsubid
RESULT: []

-----------
QUERY:
-- pg_advisory_unlock_all() shouldn/* REPLACED */''t release xact locks
SELECT pg_advisory_unlock_all()
RESULT: []

-----------
QUERY:
SELECT count(*) FROM pg_locks WHERE locktype = 'advisory' AND database = :datoid
RESULT: []

-----------
QUERY:
-- can/* REPLACED */''t unlock xact locks
SELECT
	pg_advisory_unlock(1), pg_advisory_unlock_shared(2),
	pg_advisory_unlock(1, 1), pg_advisory_unlock_shared(2, 2)
RESULT: []

-----------
QUERY:
-- automatically release xact locks at commit
COMMIT
RESULT: []

-----------
QUERY:
SELECT count(*) FROM pg_locks WHERE locktype = 'advisory' AND database = :datoid
RESULT: []

-----------
QUERY:
BEGIN
RESULT: []

-----------
QUERY:
-- holding both session and xact locks on the same objects, xact first
SELECT
	pg_advisory_xact_lock(1), pg_advisory_xact_lock_shared(2),
	pg_advisory_xact_lock(1, 1), pg_advisory_xact_lock_shared(2, 2)
RESULT: []

-----------
QUERY:
SELECT locktype, classid, objid, objsubid, mode, granted
	FROM pg_locks WHERE locktype = 'advisory' AND database = :datoid
	ORDER BY classid, objid, objsubid
RESULT: []

-----------
QUERY:
SELECT
	pg_advisory_lock(1), pg_advisory_lock_shared(2),
	pg_advisory_lock(1, 1), pg_advisory_lock_shared(2, 2)
RESULT: []

-----------
QUERY:
ROLLBACK
RESULT: []

-----------
QUERY:
SELECT locktype, classid, objid, objsubid, mode, granted
	FROM pg_locks WHERE locktype = 'advisory' AND database = :datoid
	ORDER BY classid, objid, objsubid
RESULT: []

-----------
QUERY:
-- unlocking session locks
SELECT
	pg_advisory_unlock(1), pg_advisory_unlock(1),
	pg_advisory_unlock_shared(2), pg_advisory_unlock_shared(2),
	pg_advisory_unlock(1, 1), pg_advisory_unlock(1, 1),
	pg_advisory_unlock_shared(2, 2), pg_advisory_unlock_shared(2, 2)
RESULT: []

-----------
QUERY:
SELECT count(*) FROM pg_locks WHERE locktype = 'advisory' AND database = :datoid
RESULT: []

-----------
QUERY:
BEGIN
RESULT: []

-----------
QUERY:
-- holding both session and xact locks on the same objects, session first
SELECT
	pg_advisory_lock(1), pg_advisory_lock_shared(2),
	pg_advisory_lock(1, 1), pg_advisory_lock_shared(2, 2)
RESULT: []

-----------
QUERY:
SELECT locktype, classid, objid, objsubid, mode, granted
	FROM pg_locks WHERE locktype = 'advisory' AND database = :datoid
	ORDER BY classid, objid, objsubid
RESULT: []

-----------
QUERY:
SELECT
	pg_advisory_xact_lock(1), pg_advisory_xact_lock_shared(2),
	pg_advisory_xact_lock(1, 1), pg_advisory_xact_lock_shared(2, 2)
RESULT: []

-----------
QUERY:
ROLLBACK
RESULT: []

-----------
QUERY:
SELECT locktype, classid, objid, objsubid, mode, granted
	FROM pg_locks WHERE locktype = 'advisory' AND database = :datoid
	ORDER BY classid, objid, objsubid
RESULT: []

-----------
QUERY:
-- releasing all session locks
SELECT pg_advisory_unlock_all()
RESULT: []

-----------
QUERY:
SELECT count(*) FROM pg_locks WHERE locktype = 'advisory' AND database = :datoid
RESULT: []

-----------
QUERY:
BEGIN
RESULT: []

-----------
QUERY:
-- grabbing txn locks multiple times

SELECT
	pg_advisory_xact_lock(1), pg_advisory_xact_lock(1),
	pg_advisory_xact_lock_shared(2), pg_advisory_xact_lock_shared(2),
	pg_advisory_xact_lock(1, 1), pg_advisory_xact_lock(1, 1),
	pg_advisory_xact_lock_shared(2, 2), pg_advisory_xact_lock_shared(2, 2)
RESULT: []

-----------
QUERY:
SELECT locktype, classid, objid, objsubid, mode, granted
	FROM pg_locks WHERE locktype = 'advisory' AND database = :datoid
	ORDER BY classid, objid, objsubid
RESULT: []

-----------
QUERY:
COMMIT
RESULT: []

-----------
QUERY:
SELECT count(*) FROM pg_locks WHERE locktype = 'advisory' AND database = :datoid
RESULT: []

-----------
QUERY:
-- grabbing session locks multiple times

SELECT
	pg_advisory_lock(1), pg_advisory_lock(1),
	pg_advisory_lock_shared(2), pg_advisory_lock_shared(2),
	pg_advisory_lock(1, 1), pg_advisory_lock(1, 1),
	pg_advisory_lock_shared(2, 2), pg_advisory_lock_shared(2, 2)
RESULT: []

-----------
QUERY:
SELECT locktype, classid, objid, objsubid, mode, granted
	FROM pg_locks WHERE locktype = 'advisory' AND database = :datoid
	ORDER BY classid, objid, objsubid
RESULT: []

-----------
QUERY:
SELECT
	pg_advisory_unlock(1), pg_advisory_unlock(1),
	pg_advisory_unlock_shared(2), pg_advisory_unlock_shared(2),
	pg_advisory_unlock(1, 1), pg_advisory_unlock(1, 1),
	pg_advisory_unlock_shared(2, 2), pg_advisory_unlock_shared(2, 2)
RESULT: []

-----------
QUERY:
SELECT count(*) FROM pg_locks WHERE locktype = 'advisory' AND database = :datoid
RESULT: []

-----------
QUERY:
-- .. and releasing them all at once

SELECT
	pg_advisory_lock(1), pg_advisory_lock(1),
	pg_advisory_lock_shared(2), pg_advisory_lock_shared(2),
	pg_advisory_lock(1, 1), pg_advisory_lock(1, 1),
	pg_advisory_lock_shared(2, 2), pg_advisory_lock_shared(2, 2)
RESULT: []

-----------
QUERY:
SELECT locktype, classid, objid, objsubid, mode, granted
	FROM pg_locks WHERE locktype = 'advisory' AND database = :datoid
	ORDER BY classid, objid, objsubid
RESULT: []

-----------
QUERY:
SELECT pg_advisory_unlock_all()
RESULT: []

-----------
QUERY:
SELECT count(*) FROM pg_locks WHERE locktype = 'advisory' AND database = :datoid
RESULT: []
=========================================
Summary for test case advisory_lock/test.sql of postgres
=========================================
