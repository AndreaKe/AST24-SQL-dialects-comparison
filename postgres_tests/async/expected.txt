
-----------
QUERY:
--
-- ASYNC
--

--Should work. Send a valid message via a valid channel name
SELECT pg_notify('notify_async1','sample message1');
RESULT:
	postgres: [('',)]

-----------
QUERY:

SELECT pg_notify('notify_async1','');
RESULT:
	postgres: [('',)]

-----------
QUERY:

SELECT pg_notify('notify_async1',NULL);
RESULT:
	postgres: [('',)]

-----------
QUERY:


-- Should fail. Send a valid message via an invalid channel name
SELECT pg_notify('','sample message1');
RESULT:
	postgres: channel name cannot be empty


-----------
QUERY:

SELECT pg_notify(NULL,'sample message1');
RESULT:
	postgres: channel name cannot be empty


-----------
QUERY:

SELECT pg_notify('notify_async_channel_name_too_long______________________________','sample_message1');
RESULT:
	postgres: channel name too long


-----------
QUERY:


--Should work. Valid NOTIFY/LISTEN/UNLISTEN commands
NOTIFY notify_async2;
RESULT:
	postgres: None

-----------
QUERY:

LISTEN notify_async2;
RESULT:
	postgres: None

-----------
QUERY:

UNLISTEN notify_async2;
RESULT:
	postgres: None

-----------
QUERY:

UNLISTEN *;
RESULT:
	postgres: None

-----------
QUERY:


-- Should return zero while there are no pending notifications.
-- src/test/isolation/specs/async-notify.spec tests for actual usage.
SELECT pg_notification_queue_usage();
RESULT:
	postgres: [(0.0,)]
