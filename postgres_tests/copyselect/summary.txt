Guest DBMS identified: postgres
-----------
QUERY:
--
-- Test cases for COPY (select) TO
--
create table test1 (id serial, t text)
RESULT: []

-----------
QUERY:
insert into test1 (t) values ('a')
RESULT: []

-----------
QUERY:
insert into test1 (t) values ('b')
RESULT: []

-----------
QUERY:
insert into test1 (t) values ('c')
RESULT: []

-----------
QUERY:
insert into test1 (t) values ('d')
RESULT: []

-----------
QUERY:
insert into test1 (t) values ('e')
RESULT: []

-----------
QUERY:
create table test2 (id serial, t text)
RESULT: []

-----------
QUERY:
insert into test2 (t) values ('A')
RESULT: []

-----------
QUERY:
insert into test2 (t) values ('B')
RESULT: []

-----------
QUERY:
insert into test2 (t) values ('C')
RESULT: []

-----------
QUERY:
insert into test2 (t) values ('D')
RESULT: []

-----------
QUERY:
insert into test2 (t) values ('E')
RESULT: []

-----------
QUERY:
create view v_test1
as select 'v_'||t from test1
RESULT: []

-----------
QUERY:
--
-- Test COPY table TO
--
copy test1 to stdout
RESULT: []

-----------
QUERY:
--
-- This should fail
--
copy v_test1 to stdout
RESULT: []

-----------
QUERY:
--
-- Test COPY (select) TO
--
copy (select t from test1 where id=1) to stdout
RESULT: []

-----------
QUERY:
--
-- Test COPY (select for update) TO
--
copy (select t from test1 where id=3 for update) to stdout
RESULT: []

-----------
QUERY:
--
-- This should fail
--
copy (select t into temp test3 from test1 where id=3) to stdout
RESULT: []

-----------
QUERY:
--
-- This should fail
--
copy (select * from test1) from stdin
RESULT: []

-----------
QUERY:
--
-- This should fail
--
copy (select * from test1) (t,id) to stdout
RESULT: []

-----------
QUERY:
--
-- Test JOIN
--
copy (select * from test1 join test2 using (id)) to stdout
RESULT: []

-----------
QUERY:
--
-- Test UNION SELECT
--
copy (select t from test1 where id = 1 UNION select * from v_test1 ORDER BY 1) to stdout
RESULT: []

-----------
QUERY:
--
-- Test subselect
--
copy (select * from (select t from test1 where id = 1 UNION select * from v_test1 ORDER BY 1) t1) to stdout
RESULT: []

-----------
QUERY:
--
-- Test headers, CSV and quotes
--
copy (select t from test1 where id = 1) to stdout csv header force quote t
RESULT: []

-----------
QUERY:
--
-- Test psql builtins, plain table
--
\copy test1 to stdout
--
-- This should fail
--
\copy v_test1 to stdout
--
-- Test \copy (select ...)
--
\copy (select "id",'id','id""'||t,(id + 1)*id,t,"test1"."t" from test1 where id=3) to stdout
--
-- Drop everything
--
drop table test2
RESULT: []

-----------
QUERY:
drop view v_test1
RESULT: []

-----------
QUERY:
drop table test1
RESULT: []

-----------
QUERY:
-- psql handling of COPY in multi-command strings
copy (select 1) to stdout\
RESULT: []

-----------
QUERY:
select 1/0
RESULT: []

-----------
QUERY:
-- row, then error
select 1/0\
RESULT: []

-----------
QUERY:
copy (select 1) to stdout
RESULT: []

-----------
QUERY:
-- error only
copy (select 1) to stdout\
RESULT: []

-----------
QUERY:
copy (select 2) to stdout\
RESULT: []

-----------
QUERY:
select 3\
RESULT: []

-----------
QUERY:
select 4
RESULT: []

-----------
QUERY:
-- 1 2 3 4

create table test3 (c int)
RESULT: []

-----------
QUERY:
select 0\
RESULT: []

-----------
QUERY:
copy test3 from stdin\
RESULT: []

-----------
QUERY:
copy test3 from stdin\
RESULT: []

-----------
QUERY:
select 1
RESULT: []

-----------
QUERY:
-- 0 1
1
\.
2
\.
select * from test3
RESULT: []

-----------
QUERY:
drop table test3
RESULT: []
=========================================
Summary for test case copyselect/test.sql of postgres
=========================================
