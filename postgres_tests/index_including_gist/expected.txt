
-----------
QUERY:
/*
 * 1.1. test CREATE INDEX with buffered build
 */

-- Regular index with included columns
CREATE TABLE tbl_gist (c1 int, c2 int, c3 int, c4 box);
RESULT:
	postgres: None

-----------
QUERY:

-- size is chosen to exceed page size and trigger actual truncation
INSERT INTO tbl_gist SELECT x, 2*x, 3*x, box(point(x,x+1),point(2*x,2*x+1)) FROM generate_series(1,8000) AS x;
RESULT:
	postgres: None

-----------
QUERY:

CREATE INDEX tbl_gist_idx ON tbl_gist using gist (c4) INCLUDE (c1,c2,c3);
RESULT:
	postgres: None

-----------
QUERY:

SELECT pg_get_indexdef(i.indexrelid)
FROM pg_index i JOIN pg_class c ON i.indexrelid = c.oid
WHERE i.indrelid = 'tbl_gist'::regclass ORDER BY c.relname;
RESULT:
	postgres: [('CREATE INDEX tbl_gist_idx ON public.tbl_gist USING gist (c4) INCLUDE (c1, c2, c3)',)]

-----------
QUERY:

SELECT * FROM tbl_gist where c4 <@ box(point(1,1),point(10,10));
RESULT:
	postgres: [(1, 2, 3, '(2,3),(1,2)'), (2, 4, 6, '(4,5),(2,3)'), (3, 6, 9, '(6,7),(3,4)'), (4, 8, 12, '(8,9),(4,5)')]

-----------
QUERY:

SET enable_bitmapscan TO off;
RESULT:
	postgres: None

-----------
QUERY:

EXPLAIN  (costs off) SELECT * FROM tbl_gist where c4 <@ box(point(1,1),point(10,10));
RESULT:
	postgres: [('Index Only Scan using tbl_gist_idx on tbl_gist',), ("  Index Cond: (c4 <@ '(10,10),(1,1)'::box)",)]

-----------
QUERY:

SET enable_bitmapscan TO default;
RESULT:
	postgres: None

-----------
QUERY:

DROP TABLE tbl_gist;
RESULT:
	postgres: None

-----------
QUERY:


/*
 * 1.2. test CREATE INDEX with inserts
 */

-- Regular index with included columns
CREATE TABLE tbl_gist (c1 int, c2 int, c3 int, c4 box);
RESULT:
	postgres: None

-----------
QUERY:

-- size is chosen to exceed page size and trigger actual truncation
CREATE INDEX tbl_gist_idx ON tbl_gist using gist (c4) INCLUDE (c1,c2,c3);
RESULT:
	postgres: None

-----------
QUERY:

INSERT INTO tbl_gist SELECT x, 2*x, 3*x, box(point(x,x+1),point(2*x,2*x+1)) FROM generate_series(1,8000) AS x;
RESULT:
	postgres: None

-----------
QUERY:

SELECT pg_get_indexdef(i.indexrelid)
FROM pg_index i JOIN pg_class c ON i.indexrelid = c.oid
WHERE i.indrelid = 'tbl_gist'::regclass ORDER BY c.relname;
RESULT:
	postgres: [('CREATE INDEX tbl_gist_idx ON public.tbl_gist USING gist (c4) INCLUDE (c1, c2, c3)',)]

-----------
QUERY:

SELECT * FROM tbl_gist where c4 <@ box(point(1,1),point(10,10));
RESULT:
	postgres: [(1, 2, 3, '(2,3),(1,2)'), (2, 4, 6, '(4,5),(2,3)'), (3, 6, 9, '(6,7),(3,4)'), (4, 8, 12, '(8,9),(4,5)')]

-----------
QUERY:

SET enable_bitmapscan TO off;
RESULT:
	postgres: None

-----------
QUERY:

EXPLAIN  (costs off) SELECT * FROM tbl_gist where c4 <@ box(point(1,1),point(10,10));
RESULT:
	postgres: [('Index Only Scan using tbl_gist_idx on tbl_gist',), ("  Index Cond: (c4 <@ '(10,10),(1,1)'::box)",)]

-----------
QUERY:

SET enable_bitmapscan TO default;
RESULT:
	postgres: None

-----------
QUERY:

DROP TABLE tbl_gist;
RESULT:
	postgres: None

-----------
QUERY:


/*
 * 2. CREATE INDEX CONCURRENTLY
 */
CREATE TABLE tbl_gist (c1 int, c2 int, c3 int, c4 box);
RESULT:
	postgres: None

-----------
QUERY:

INSERT INTO tbl_gist SELECT x, 2*x, 3*x, box(point(x,x+1),point(2*x,2*x+1)) FROM generate_series(1,10) AS x;
RESULT:
	postgres: None

-----------
QUERY:

CREATE INDEX CONCURRENTLY tbl_gist_idx ON tbl_gist using gist (c4) INCLUDE (c1,c2,c3);
RESULT:
	postgres: None

-----------
QUERY:

SELECT indexdef FROM pg_indexes WHERE tablename = 'tbl_gist' ORDER BY indexname;
RESULT:
	postgres: [('CREATE INDEX tbl_gist_idx ON public.tbl_gist USING gist (c4) INCLUDE (c1, c2, c3)',)]

-----------
QUERY:

DROP TABLE tbl_gist;
RESULT:
	postgres: None

-----------
QUERY:



/*
 * 3. REINDEX
 */
CREATE TABLE tbl_gist (c1 int, c2 int, c3 int, c4 box);
RESULT:
	postgres: None

-----------
QUERY:

INSERT INTO tbl_gist SELECT x, 2*x, 3*x, box(point(x,x+1),point(2*x,2*x+1)) FROM generate_series(1,10) AS x;
RESULT:
	postgres: None

-----------
QUERY:

CREATE INDEX tbl_gist_idx ON tbl_gist using gist (c4) INCLUDE (c1,c3);
RESULT:
	postgres: None

-----------
QUERY:

SELECT indexdef FROM pg_indexes WHERE tablename = 'tbl_gist' ORDER BY indexname;
RESULT:
	postgres: [('CREATE INDEX tbl_gist_idx ON public.tbl_gist USING gist (c4) INCLUDE (c1, c3)',)]

-----------
QUERY:

REINDEX INDEX tbl_gist_idx;
RESULT:
	postgres: None

-----------
QUERY:

SELECT indexdef FROM pg_indexes WHERE tablename = 'tbl_gist' ORDER BY indexname;
RESULT:
	postgres: [('CREATE INDEX tbl_gist_idx ON public.tbl_gist USING gist (c4) INCLUDE (c1, c3)',)]

-----------
QUERY:

ALTER TABLE tbl_gist DROP COLUMN c1;
RESULT:
	postgres: None

-----------
QUERY:

SELECT indexdef FROM pg_indexes WHERE tablename = 'tbl_gist' ORDER BY indexname;
RESULT:
	postgres: []

-----------
QUERY:

DROP TABLE tbl_gist;
RESULT:
	postgres: None

-----------
QUERY:


/*
 * 4. Update, delete values in indexed table.
 */
CREATE TABLE tbl_gist (c1 int, c2 int, c3 int, c4 box);
RESULT:
	postgres: None

-----------
QUERY:

INSERT INTO tbl_gist SELECT x, 2*x, 3*x, box(point(x,x+1),point(2*x,2*x+1)) FROM generate_series(1,10) AS x;
RESULT:
	postgres: None

-----------
QUERY:

CREATE INDEX tbl_gist_idx ON tbl_gist using gist (c4) INCLUDE (c1,c3);
RESULT:
	postgres: None

-----------
QUERY:

UPDATE tbl_gist SET c1 = 100 WHERE c1 = 2;
RESULT:
	postgres: None

-----------
QUERY:

UPDATE tbl_gist SET c1 = 1 WHERE c1 = 3;
RESULT:
	postgres: None

-----------
QUERY:

DELETE FROM tbl_gist WHERE c1 = 5 OR c3 = 12;
RESULT:
	postgres: None

-----------
QUERY:

DROP TABLE tbl_gist;
RESULT:
	postgres: None

-----------
QUERY:


/*
 * 5. Alter column type.
 */
CREATE TABLE tbl_gist (c1 int, c2 int, c3 int, c4 box);
RESULT:
	postgres: None

-----------
QUERY:

INSERT INTO tbl_gist SELECT x, 2*x, 3*x, box(point(x,x+1),point(2*x,2*x+1)) FROM generate_series(1,10) AS x;
RESULT:
	postgres: None

-----------
QUERY:

CREATE INDEX tbl_gist_idx ON tbl_gist using gist (c4) INCLUDE (c1,c3);
RESULT:
	postgres: None

-----------
QUERY:

ALTER TABLE tbl_gist ALTER c1 TYPE bigint;
RESULT:
	postgres: None

-----------
QUERY:

ALTER TABLE tbl_gist ALTER c3 TYPE bigint;
RESULT:
	postgres: None

-----------
QUERY:

-- \d tbl_gist
DROP TABLE tbl_gist;
RESULT:
	postgres: None

-----------
QUERY:


/*
 * 6. EXCLUDE constraint.
 */
CREATE TABLE tbl_gist (c1 int, c2 int, c3 int, c4 box, EXCLUDE USING gist (c4 WITH &&) INCLUDE (c1, c2, c3));
RESULT:
	postgres: None

-----------
QUERY:

INSERT INTO tbl_gist SELECT x, 2*x, 3*x, box(point(x,x+1),point(2*x,2*x+1)) FROM generate_series(1,10) AS x;
RESULT:
	postgres: conflicting key value violates exclusion constraint "tbl_gist_c4_c1_c2_c3_excl"
DETAIL:  Key (c4)=((4,5),(2,3)) conflicts with existing key (c4)=((2,3),(1,2)).


-----------
QUERY:

INSERT INTO tbl_gist SELECT x, 2*x, 3*x, box(point(3*x,2*x),point(3*x+1,2*x+1)) FROM generate_series(1,10) AS x;
RESULT:
	postgres: None

-----------
QUERY:

EXPLAIN  (costs off) SELECT * FROM tbl_gist where c4 <@ box(point(1,1),point(10,10));
RESULT:
	postgres: [('Index Only Scan using tbl_gist_c4_c1_c2_c3_excl on tbl_gist',), ("  Index Cond: (c4 <@ '(10,10),(1,1)'::box)",)]

-----------
QUERY:

-- \d tbl_gist
DROP TABLE tbl_gist;
RESULT:
	postgres: None
