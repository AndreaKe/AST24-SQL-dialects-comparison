Guest DBMS identified: postgres
-----------
QUERY:
--
-- Tests for external toast datums
--

-- directory paths and dlsuffix are passed to us in environment variables
-- \getenv libdir '/home/keuscha/Documents/FS2024/AST/project/postgresql/src/test/regress'
-- \getenv dlsuffix '.so'

-- \set regresslib /* REPLACED */'/home/keuscha/Documents/FS2024/AST/project/postgresql/src/test/regress' '/regress' /* REPLACED */'.so'

CREATE FUNCTION make_tuple_indirect (record)
        RETURNS record
        AS /* REPLACED */'/home/keuscha/Documents/FS2024/AST/project/postgresql/src/test/regress/regress.so'
        LANGUAGE C STRICT
RESULT: []

-----------
QUERY:
-- Other compression algorithms may cause the compressed data to be stored
-- inline.  pglz guarantees that the data is externalized, so stick to it.
SET default_toast_compression = 'pglz'
RESULT: []

-----------
QUERY:
CREATE TABLE indtoasttest(descr text, cnt int DEFAULT 0, f1 text, f2 text)
RESULT: []

-----------
QUERY:
INSERT INTO indtoasttest(descr, f1, f2) VALUES('two-compressed', repeat('1234567890',1000), repeat('1234567890',1000))
RESULT: []

-----------
QUERY:
INSERT INTO indtoasttest(descr, f1, f2) VALUES('two-toasted', repeat('1234567890',30000), repeat('1234567890',50000))
RESULT: []

-----------
QUERY:
INSERT INTO indtoasttest(descr, f1, f2) VALUES('one-compressed,one-null', NULL, repeat('1234567890',1000))
RESULT: []

-----------
QUERY:
INSERT INTO indtoasttest(descr, f1, f2) VALUES('one-toasted,one-null', NULL, repeat('1234567890',50000))
RESULT: []

-----------
QUERY:
-- check whether indirect tuples works on the most basic level
SELECT descr, substring(make_tuple_indirect(indtoasttest)::text, 1, 200) FROM indtoasttest
RESULT: []

-----------
QUERY:
-- modification without changing varlenas
UPDATE indtoasttest SET cnt = cnt +1 RETURNING substring(indtoasttest::text, 1, 200)
RESULT: []

-----------
QUERY:
-- modification without modifying assigned value
UPDATE indtoasttest SET cnt = cnt +1, f1 = f1 RETURNING substring(indtoasttest::text, 1, 200)
RESULT: []

-----------
QUERY:
-- modification modifying, but effectively not changing
UPDATE indtoasttest SET cnt = cnt +1, f1 = f1||'' RETURNING substring(indtoasttest::text, 1, 200)
RESULT: []

-----------
QUERY:
UPDATE indtoasttest SET cnt = cnt +1, f1 = '-'||f1||'-' RETURNING substring(indtoasttest::text, 1, 200)
RESULT: []

-----------
QUERY:
SELECT substring(indtoasttest::text, 1, 200) FROM indtoasttest
RESULT: []

-----------
QUERY:
-- check we didn/* REPLACED */''t screw with main/toast tuple visibility
VACUUM FREEZE indtoasttest
RESULT: []

-----------
QUERY:
SELECT substring(indtoasttest::text, 1, 200) FROM indtoasttest
RESULT: []

-----------
QUERY:
-- now create a trigger that forces all Datums to be indirect ones
CREATE FUNCTION update_using_indirect()
        RETURNS trigger
        LANGUAGE plpgsql AS $$
BEGIN
    NEW := make_tuple_indirect(NEW);
    RETURN NEW;
END$$
RESULT: []

-----------
QUERY:
CREATE TRIGGER indtoasttest_update_indirect
        BEFORE INSERT OR UPDATE
        ON indtoasttest
        FOR EACH ROW
        EXECUTE PROCEDURE update_using_indirect()
RESULT: []

-----------
QUERY:
-- modification without changing varlenas
UPDATE indtoasttest SET cnt = cnt +1 RETURNING substring(indtoasttest::text, 1, 200)
RESULT: []

-----------
QUERY:
-- modification without modifying assigned value
UPDATE indtoasttest SET cnt = cnt +1, f1 = f1 RETURNING substring(indtoasttest::text, 1, 200)
RESULT: []

-----------
QUERY:
-- modification modifying, but effectively not changing
UPDATE indtoasttest SET cnt = cnt +1, f1 = f1||'' RETURNING substring(indtoasttest::text, 1, 200)
RESULT: []

-----------
QUERY:
UPDATE indtoasttest SET cnt = cnt +1, f1 = '-'||f1||'-' RETURNING substring(indtoasttest::text, 1, 200)
RESULT: []

-----------
QUERY:
INSERT INTO indtoasttest(descr, f1, f2) VALUES('one-toasted,one-null, via indirect', repeat('1234567890',30000), NULL)
RESULT: []

-----------
QUERY:
SELECT substring(indtoasttest::text, 1, 200) FROM indtoasttest
RESULT: []

-----------
QUERY:
-- check we didn/* REPLACED */''t screw with main/toast tuple visibility
VACUUM FREEZE indtoasttest
RESULT: []

-----------
QUERY:
SELECT substring(indtoasttest::text, 1, 200) FROM indtoasttest
RESULT: []

-----------
QUERY:
DROP TABLE indtoasttest
RESULT: []

-----------
QUERY:
DROP FUNCTION update_using_indirect()
RESULT: []

-----------
QUERY:
RESET default_toast_compression
RESULT: []
=========================================
Summary for test case indirect_toast/test.sql of postgres
=========================================
