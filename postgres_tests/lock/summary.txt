Guest DBMS identified: postgres
-----------
QUERY:
--
-- Test the LOCK statement
--

-- directory paths and dlsuffix are passed to us in environment variables
-- \getenv libdir '/home/keuscha/Documents/FS2024/AST/project/postgresql/src/test/regress'
-- \getenv dlsuffix '.so'

-- \set regresslib /* REPLACED */'/home/keuscha/Documents/FS2024/AST/project/postgresql/src/test/regress' '/regress' /* REPLACED */'.so'

-- Setup
CREATE SCHEMA lock_schema1
RESULT: []

-----------
QUERY:
SET search_path = lock_schema1
RESULT: []

-----------
QUERY:
CREATE TABLE lock_tbl1 (a BIGINT)
RESULT: []

-----------
QUERY:
CREATE TABLE lock_tbl1a (a BIGINT)
RESULT: []

-----------
QUERY:
CREATE VIEW lock_view1 AS SELECT * FROM lock_tbl1
RESULT: []

-----------
QUERY:
CREATE VIEW lock_view2(a,b) AS SELECT * FROM lock_tbl1, lock_tbl1a
RESULT: []

-----------
QUERY:
CREATE VIEW lock_view3 AS SELECT * from lock_view2
RESULT: []

-----------
QUERY:
CREATE VIEW lock_view4 AS SELECT (select a from lock_tbl1a limit 1) from lock_tbl1
RESULT: []

-----------
QUERY:
CREATE VIEW lock_view5 AS SELECT * from lock_tbl1 where a in (select * from lock_tbl1a)
RESULT: []

-----------
QUERY:
CREATE VIEW lock_view6 AS SELECT * from (select * from lock_tbl1) sub
RESULT: []

-----------
QUERY:
CREATE ROLE regress_rol_lock1
RESULT: []

-----------
QUERY:
ALTER ROLE regress_rol_lock1 SET search_path = lock_schema1
RESULT: []

-----------
QUERY:
GRANT USAGE ON SCHEMA lock_schema1 TO regress_rol_lock1
RESULT: []

-----------
QUERY:
-- Try all valid lock options /* REPLACED */, also try omitting the optional TABLE keyword.
BEGIN TRANSACTION
RESULT: []

-----------
QUERY:
LOCK TABLE lock_tbl1 IN ACCESS SHARE MODE
RESULT: []

-----------
QUERY:
LOCK lock_tbl1 IN ROW SHARE MODE
RESULT: []

-----------
QUERY:
LOCK TABLE lock_tbl1 IN ROW EXCLUSIVE MODE
RESULT: []

-----------
QUERY:
LOCK TABLE lock_tbl1 IN SHARE UPDATE EXCLUSIVE MODE
RESULT: []

-----------
QUERY:
LOCK TABLE lock_tbl1 IN SHARE MODE
RESULT: []

-----------
QUERY:
LOCK lock_tbl1 IN SHARE ROW EXCLUSIVE MODE
RESULT: []

-----------
QUERY:
LOCK TABLE lock_tbl1 IN EXCLUSIVE MODE
RESULT: []

-----------
QUERY:
LOCK TABLE lock_tbl1 IN ACCESS EXCLUSIVE MODE
RESULT: []

-----------
QUERY:
ROLLBACK
RESULT: []

-----------
QUERY:
-- Try using NOWAIT along with valid options.
BEGIN TRANSACTION
RESULT: []

-----------
QUERY:
LOCK TABLE lock_tbl1 IN ACCESS SHARE MODE NOWAIT
RESULT: []

-----------
QUERY:
LOCK TABLE lock_tbl1 IN ROW SHARE MODE NOWAIT
RESULT: []

-----------
QUERY:
LOCK TABLE lock_tbl1 IN ROW EXCLUSIVE MODE NOWAIT
RESULT: []

-----------
QUERY:
LOCK TABLE lock_tbl1 IN SHARE UPDATE EXCLUSIVE MODE NOWAIT
RESULT: []

-----------
QUERY:
LOCK TABLE lock_tbl1 IN SHARE MODE NOWAIT
RESULT: []

-----------
QUERY:
LOCK TABLE lock_tbl1 IN SHARE ROW EXCLUSIVE MODE NOWAIT
RESULT: []

-----------
QUERY:
LOCK TABLE lock_tbl1 IN EXCLUSIVE MODE NOWAIT
RESULT: []

-----------
QUERY:
LOCK TABLE lock_tbl1 IN ACCESS EXCLUSIVE MODE NOWAIT
RESULT: []

-----------
QUERY:
ROLLBACK
RESULT: []

-----------
QUERY:
-- Verify that we can lock views.
BEGIN TRANSACTION
RESULT: []

-----------
QUERY:
LOCK TABLE lock_view1 IN EXCLUSIVE MODE
RESULT: []

-----------
QUERY:
-- lock_view1 and lock_tbl1 are locked.
select relname from pg_locks l, pg_class c
 where l.relation = c.oid and relname like '%lock_%' and mode = 'ExclusiveLock'
 order by relname
RESULT: []

-----------
QUERY:
ROLLBACK
RESULT: []

-----------
QUERY:
BEGIN TRANSACTION
RESULT: []

-----------
QUERY:
LOCK TABLE lock_view2 IN EXCLUSIVE MODE
RESULT: []

-----------
QUERY:
-- lock_view1, lock_tbl1, and lock_tbl1a are locked.
select relname from pg_locks l, pg_class c
 where l.relation = c.oid and relname like '%lock_%' and mode = 'ExclusiveLock'
 order by relname
RESULT: []

-----------
QUERY:
ROLLBACK
RESULT: []

-----------
QUERY:
BEGIN TRANSACTION
RESULT: []

-----------
QUERY:
LOCK TABLE lock_view3 IN EXCLUSIVE MODE
RESULT: []

-----------
QUERY:
-- lock_view3, lock_view2, lock_tbl1, and lock_tbl1a are locked recursively.
select relname from pg_locks l, pg_class c
 where l.relation = c.oid and relname like '%lock_%' and mode = 'ExclusiveLock'
 order by relname
RESULT: []

-----------
QUERY:
ROLLBACK
RESULT: []

-----------
QUERY:
BEGIN TRANSACTION
RESULT: []

-----------
QUERY:
LOCK TABLE lock_view4 IN EXCLUSIVE MODE
RESULT: []

-----------
QUERY:
-- lock_view4, lock_tbl1, and lock_tbl1a are locked.
select relname from pg_locks l, pg_class c
 where l.relation = c.oid and relname like '%lock_%' and mode = 'ExclusiveLock'
 order by relname
RESULT: []

-----------
QUERY:
ROLLBACK
RESULT: []

-----------
QUERY:
BEGIN TRANSACTION
RESULT: []

-----------
QUERY:
LOCK TABLE lock_view5 IN EXCLUSIVE MODE
RESULT: []

-----------
QUERY:
-- lock_view5, lock_tbl1, and lock_tbl1a are locked.
select relname from pg_locks l, pg_class c
 where l.relation = c.oid and relname like '%lock_%' and mode = 'ExclusiveLock'
 order by relname
RESULT: []

-----------
QUERY:
ROLLBACK
RESULT: []

-----------
QUERY:
BEGIN TRANSACTION
RESULT: []

-----------
QUERY:
LOCK TABLE lock_view6 IN EXCLUSIVE MODE
RESULT: []

-----------
QUERY:
-- lock_view6 an lock_tbl1 are locked.
select relname from pg_locks l, pg_class c
 where l.relation = c.oid and relname like '%lock_%' and mode = 'ExclusiveLock'
 order by relname
RESULT: []

-----------
QUERY:
ROLLBACK
RESULT: []

-----------
QUERY:
-- Verify that we cope with infinite recursion in view definitions.
CREATE OR REPLACE VIEW lock_view2 AS SELECT * from lock_view3
RESULT: []

-----------
QUERY:
BEGIN TRANSACTION
RESULT: []

-----------
QUERY:
LOCK TABLE lock_view2 IN EXCLUSIVE MODE
RESULT: []

-----------
QUERY:
ROLLBACK
RESULT: []

-----------
QUERY:
CREATE VIEW lock_view7 AS SELECT * from lock_view2
RESULT: []

-----------
QUERY:
BEGIN TRANSACTION
RESULT: []

-----------
QUERY:
LOCK TABLE lock_view7 IN EXCLUSIVE MODE
RESULT: []

-----------
QUERY:
ROLLBACK
RESULT: []

-----------
QUERY:
-- Verify that we can lock a table with inheritance children.
CREATE TABLE lock_tbl2 (b BIGINT) INHERITS (lock_tbl1)
RESULT: []

-----------
QUERY:
CREATE TABLE lock_tbl3 () INHERITS (lock_tbl2)
RESULT: []

-----------
QUERY:
BEGIN TRANSACTION
RESULT: []

-----------
QUERY:
LOCK TABLE lock_tbl1 * IN ACCESS EXCLUSIVE MODE
RESULT: []

-----------
QUERY:
ROLLBACK
RESULT: []

-----------
QUERY:
-- Child tables are locked without granting explicit permission to do so as
-- long as we have permission to lock the parent.
GRANT UPDATE ON TABLE lock_tbl1 TO regress_rol_lock1
RESULT: []

-----------
QUERY:
SET ROLE regress_rol_lock1
RESULT: []

-----------
QUERY:
-- fail when child locked directly
BEGIN
RESULT: []

-----------
QUERY:
LOCK TABLE lock_tbl2
RESULT: []

-----------
QUERY:
ROLLBACK
RESULT: []

-----------
QUERY:
BEGIN
RESULT: []

-----------
QUERY:
LOCK TABLE lock_tbl1 * IN ACCESS EXCLUSIVE MODE
RESULT: []

-----------
QUERY:
ROLLBACK
RESULT: []

-----------
QUERY:
BEGIN
RESULT: []

-----------
QUERY:
LOCK TABLE ONLY lock_tbl1
RESULT: []

-----------
QUERY:
ROLLBACK
RESULT: []

-----------
QUERY:
RESET ROLE
RESULT: []

-----------
QUERY:
REVOKE UPDATE ON TABLE lock_tbl1 FROM regress_rol_lock1
RESULT: []

-----------
QUERY:
-- Tables referred to by views are locked without explicit permission to do so
-- as long as we have permission to lock the view itself.
SET ROLE regress_rol_lock1
RESULT: []

-----------
QUERY:
-- fail without permissions on the view
BEGIN
RESULT: []

-----------
QUERY:
LOCK TABLE lock_view1
RESULT: []

-----------
QUERY:
ROLLBACK
RESULT: []

-----------
QUERY:
RESET ROLE
RESULT: []

-----------
QUERY:
GRANT UPDATE ON TABLE lock_view1 TO regress_rol_lock1
RESULT: []

-----------
QUERY:
SET ROLE regress_rol_lock1
RESULT: []

-----------
QUERY:
BEGIN
RESULT: []

-----------
QUERY:
LOCK TABLE lock_view1 IN ACCESS EXCLUSIVE MODE
RESULT: []

-----------
QUERY:
-- lock_view1 and lock_tbl1 (plus children lock_tbl2 and lock_tbl3) are locked.
select relname from pg_locks l, pg_class c
 where l.relation = c.oid and relname like '%lock_%' and mode = 'AccessExclusiveLock'
 order by relname
RESULT: []

-----------
QUERY:
ROLLBACK
RESULT: []

-----------
QUERY:
RESET ROLE
RESULT: []

-----------
QUERY:
REVOKE UPDATE ON TABLE lock_view1 FROM regress_rol_lock1
RESULT: []

-----------
QUERY:
-- Tables referred to by security invoker views require explicit permission to
-- be locked.
CREATE VIEW lock_view8 WITH (security_invoker) AS SELECT * FROM lock_tbl1
RESULT: []

-----------
QUERY:
SET ROLE regress_rol_lock1
RESULT: []

-----------
QUERY:
-- fail without permissions on the view
BEGIN
RESULT: []

-----------
QUERY:
LOCK TABLE lock_view8
RESULT: []

-----------
QUERY:
ROLLBACK
RESULT: []

-----------
QUERY:
RESET ROLE
RESULT: []

-----------
QUERY:
GRANT UPDATE ON TABLE lock_view8 TO regress_rol_lock1
RESULT: []

-----------
QUERY:
SET ROLE regress_rol_lock1
RESULT: []

-----------
QUERY:
-- fail without permissions on the table referenced by the view
BEGIN
RESULT: []

-----------
QUERY:
LOCK TABLE lock_view8
RESULT: []

-----------
QUERY:
ROLLBACK
RESULT: []

-----------
QUERY:
RESET ROLE
RESULT: []

-----------
QUERY:
GRANT UPDATE ON TABLE lock_tbl1 TO regress_rol_lock1
RESULT: []

-----------
QUERY:
BEGIN
RESULT: []

-----------
QUERY:
LOCK TABLE lock_view8 IN ACCESS EXCLUSIVE MODE
RESULT: []

-----------
QUERY:
-- lock_view8 and lock_tbl1 (plus children lock_tbl2 and lock_tbl3) are locked.
select relname from pg_locks l, pg_class c
 where l.relation = c.oid and relname like '%lock_%' and mode = 'AccessExclusiveLock'
 order by relname
RESULT: []

-----------
QUERY:
ROLLBACK
RESULT: []

-----------
QUERY:
RESET ROLE
RESULT: []

-----------
QUERY:
REVOKE UPDATE ON TABLE lock_view8 FROM regress_rol_lock1
RESULT: []

-----------
QUERY:
--
-- Clean up
--
DROP VIEW lock_view8
RESULT: []

-----------
QUERY:
DROP VIEW lock_view7
RESULT: []

-----------
QUERY:
DROP VIEW lock_view6
RESULT: []

-----------
QUERY:
DROP VIEW lock_view5
RESULT: []

-----------
QUERY:
DROP VIEW lock_view4
RESULT: []

-----------
QUERY:
DROP VIEW lock_view3 CASCADE
RESULT: []

-----------
QUERY:
DROP VIEW lock_view1
RESULT: []

-----------
QUERY:
DROP TABLE lock_tbl3
RESULT: []

-----------
QUERY:
DROP TABLE lock_tbl2
RESULT: []

-----------
QUERY:
DROP TABLE lock_tbl1
RESULT: []

-----------
QUERY:
DROP TABLE lock_tbl1a
RESULT: []

-----------
QUERY:
DROP SCHEMA lock_schema1 CASCADE
RESULT: []

-----------
QUERY:
DROP ROLE regress_rol_lock1
RESULT: []

-----------
QUERY:
-- atomic ops tests
RESET search_path
RESULT: []

-----------
QUERY:
CREATE FUNCTION test_atomic_ops()
    RETURNS bool
    AS /* REPLACED */'/home/keuscha/Documents/FS2024/AST/project/postgresql/src/test/regress/regress.so'
    LANGUAGE C
RESULT: []

-----------
QUERY:
SELECT test_atomic_ops()
RESULT: []
=========================================
Summary for test case lock/test.sql of postgres
=========================================
