
-----------
QUERY:
--
-- NAME
-- all inputs are silently truncated at NAMEDATALEN-1 (63) characters
--

-- fixed-length by reference
SELECT name 'name string' = name 'name string' AS "True";
RESULT:
	postgres: [(True,)]

-----------
QUERY:


SELECT name 'name string' = name 'name string ' AS "False";
RESULT:
	postgres: [(False,)]

-----------
QUERY:


--
--
--

CREATE TABLE NAME_TBL(f1 name);
RESULT:
	postgres: None

-----------
QUERY:


INSERT INTO NAME_TBL(f1) VALUES ('1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890ABCDEFGHIJKLMNOPQR');
RESULT:
	postgres: None

-----------
QUERY:


INSERT INTO NAME_TBL(f1) VALUES ('1234567890abcdefghijklmnopqrstuvwxyz1234567890abcdefghijklmnopqr');
RESULT:
	postgres: None

-----------
QUERY:


INSERT INTO NAME_TBL(f1) VALUES ('asdfghjkl;
RESULT:
	postgres: unterminated quoted string at or near "'asdfghjkl;"
LINE 3: INSERT INTO NAME_TBL(f1) VALUES ('asdfghjkl;
                                         ^


-----------
QUERY:
');
RESULT:
	postgres: unterminated quoted string at or near "');"
LINE 1: ');
        ^


-----------
QUERY:


INSERT INTO NAME_TBL(f1) VALUES ('343f%2a');
RESULT:
	postgres: None

-----------
QUERY:


INSERT INTO NAME_TBL(f1) VALUES ('d34aaasdf');
RESULT:
	postgres: None

-----------
QUERY:


INSERT INTO NAME_TBL(f1) VALUES ('');
RESULT:
	postgres: None

-----------
QUERY:


INSERT INTO NAME_TBL(f1) VALUES ('1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZ');
RESULT:
	postgres: None

-----------
QUERY:



SELECT * FROM NAME_TBL;
RESULT:
	postgres: [('1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890ABCDEFGHIJKLMNOPQ',), ('1234567890abcdefghijklmnopqrstuvwxyz1234567890abcdefghijklmnopq',), ('343f%2a',), ('d34aaasdf',), ('',), ('1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890ABCDEFGHIJKLMNOPQ',)]

-----------
QUERY:


SELECT c.f1 FROM NAME_TBL c WHERE c.f1 <> '1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890ABCDEFGHIJKLMNOPQR';
RESULT:
	postgres: [('1234567890abcdefghijklmnopqrstuvwxyz1234567890abcdefghijklmnopq',), ('343f%2a',), ('d34aaasdf',), ('',)]

-----------
QUERY:


SELECT c.f1 FROM NAME_TBL c WHERE c.f1 = '1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890ABCDEFGHIJKLMNOPQR';
RESULT:
	postgres: [('1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890ABCDEFGHIJKLMNOPQ',), ('1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890ABCDEFGHIJKLMNOPQ',)]

-----------
QUERY:


SELECT c.f1 FROM NAME_TBL c WHERE c.f1 < '1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890ABCDEFGHIJKLMNOPQR';
RESULT:
	postgres: [('',)]

-----------
QUERY:


SELECT c.f1 FROM NAME_TBL c WHERE c.f1 <= '1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890ABCDEFGHIJKLMNOPQR';
RESULT:
	postgres: [('1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890ABCDEFGHIJKLMNOPQ',), ('',), ('1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890ABCDEFGHIJKLMNOPQ',)]

-----------
QUERY:


SELECT c.f1 FROM NAME_TBL c WHERE c.f1 > '1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890ABCDEFGHIJKLMNOPQR';
RESULT:
	postgres: [('1234567890abcdefghijklmnopqrstuvwxyz1234567890abcdefghijklmnopq',), ('343f%2a',), ('d34aaasdf',)]

-----------
QUERY:


SELECT c.f1 FROM NAME_TBL c WHERE c.f1 >= '1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890ABCDEFGHIJKLMNOPQR';
RESULT:
	postgres: [('1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890ABCDEFGHIJKLMNOPQ',), ('1234567890abcdefghijklmnopqrstuvwxyz1234567890abcdefghijklmnopq',), ('343f%2a',), ('d34aaasdf',), ('1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890ABCDEFGHIJKLMNOPQ',)]

-----------
QUERY:


SELECT c.f1 FROM NAME_TBL c WHERE c.f1 ~ '.*';
RESULT:
	postgres: [('1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890ABCDEFGHIJKLMNOPQ',), ('1234567890abcdefghijklmnopqrstuvwxyz1234567890abcdefghijklmnopq',), ('343f%2a',), ('d34aaasdf',), ('',), ('1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890ABCDEFGHIJKLMNOPQ',)]

-----------
QUERY:


SELECT c.f1 FROM NAME_TBL c WHERE c.f1 !~ '.*';
RESULT:
	postgres: []

-----------
QUERY:


SELECT c.f1 FROM NAME_TBL c WHERE c.f1 ~ '[0-9]';
RESULT:
	postgres: [('1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890ABCDEFGHIJKLMNOPQ',), ('1234567890abcdefghijklmnopqrstuvwxyz1234567890abcdefghijklmnopq',), ('343f%2a',), ('d34aaasdf',), ('1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890ABCDEFGHIJKLMNOPQ',)]

-----------
QUERY:


SELECT c.f1 FROM NAME_TBL c WHERE c.f1 ~ '.*asdf.*';
RESULT:
	postgres: [('d34aaasdf',)]

-----------
QUERY:


DROP TABLE NAME_TBL;
RESULT:
	postgres: None

-----------
QUERY:


DO $$
DECLARE r text[];
BEGIN
  r := parse_ident('Schemax.Tabley');
  RAISE NOTICE '%', format('%I.%I', r[1], r[2]);
  r := parse_ident('"SchemaX"."TableY"');
  RAISE NOTICE '%', format('%I.%I', r[1], r[2]);
END;
$$;
RESULT:
	postgres: None

-----------
QUERY:


SELECT parse_ident('foo.boo');
RESULT:
	postgres: [(['foo', 'boo'],)]

-----------
QUERY:

SELECT parse_ident('foo.boo[]');
RESULT:
	postgres: string is not a valid identifier: "foo.boo[]"


-----------
QUERY:
 -- should fail
SELECT parse_ident('foo.boo[]', strict => false);
RESULT:
	postgres: [(['foo', 'boo'],)]

-----------
QUERY:
 -- ok

-- should fail
SELECT parse_ident(' ');
RESULT:
	postgres: string is not a valid identifier: " "


-----------
QUERY:

SELECT parse_ident(' .aaa');
RESULT:
	postgres: string is not a valid identifier: " .aaa"
DETAIL:  No valid identifier before ".".


-----------
QUERY:

SELECT parse_ident(' aaa . ');
RESULT:
	postgres: string is not a valid identifier: " aaa . "
DETAIL:  No valid identifier after ".".


-----------
QUERY:

SELECT parse_ident('aaa.a%b');
RESULT:
	postgres: string is not a valid identifier: "aaa.a%b"


-----------
QUERY:

SELECT parse_ident(E'X\rXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX');
RESULT:
	postgres: string is not a valid identifier: "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"


-----------
QUERY:


SELECT length(a[1]), length(a[2]) from parse_ident('"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx".yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy') as a ;
RESULT:
	postgres: [(414, 289)]

-----------
QUERY:


SELECT parse_ident(' first . "  second  " ."   third   ". "  ' || repeat('x',66) || '"');
RESULT:
	postgres: [(['first', '  second  ', '   third   ', '  xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'],)]

-----------
QUERY:

SELECT parse_ident(' first . "  second  " ."   third   ". "  ' || repeat('x',66) || '"')::name[];
RESULT:
	postgres: [(['first', '  second  ', '   third   ', '  xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'],)]

-----------
QUERY:


SELECT parse_ident(E'"c".X XXXX\002XXXXXX');
RESULT:
	postgres: string is not a valid identifier: ""c".X XXXXXXXXXX"


-----------
QUERY:

SELECT parse_ident('1020');
RESULT:
	postgres: string is not a valid identifier: "1020"


-----------
QUERY:

SELECT parse_ident('10.20');
RESULT:
	postgres: string is not a valid identifier: "10.20"


-----------
QUERY:

SELECT parse_ident('.');
RESULT:
	postgres: string is not a valid identifier: "."
DETAIL:  No valid identifier before ".".


-----------
QUERY:

SELECT parse_ident('.1020');
RESULT:
	postgres: string is not a valid identifier: ".1020"
DETAIL:  No valid identifier before ".".


-----------
QUERY:

SELECT parse_ident('xxx.1020');
RESULT:
	postgres: string is not a valid identifier: "xxx.1020"
DETAIL:  No valid identifier after ".".

