Guest DBMS identified: postgres
-----------
QUERY:
--
-- NUMEROLOGY
-- Test various combinations of numeric types and functions.
--


--
-- numeric literals
--

SELECT 0b100101
RESULT: []

-----------
QUERY:
SELECT 0o273
RESULT: []

-----------
QUERY:
SELECT 0x42F
RESULT: []

-----------
QUERY:
-- cases near int4 overflow
SELECT 0b1111111111111111111111111111111
RESULT: []

-----------
QUERY:
SELECT 0b10000000000000000000000000000000
RESULT: []

-----------
QUERY:
SELECT 0o17777777777
RESULT: []

-----------
QUERY:
SELECT 0o20000000000
RESULT: []

-----------
QUERY:
SELECT 0x7FFFFFFF
RESULT: []

-----------
QUERY:
SELECT 0x80000000
RESULT: []

-----------
QUERY:
SELECT -0b10000000000000000000000000000000
RESULT: []

-----------
QUERY:
SELECT -0b10000000000000000000000000000001
RESULT: []

-----------
QUERY:
SELECT -0o20000000000
RESULT: []

-----------
QUERY:
SELECT -0o20000000001
RESULT: []

-----------
QUERY:
SELECT -0x80000000
RESULT: []

-----------
QUERY:
SELECT -0x80000001
RESULT: []

-----------
QUERY:
-- cases near int8 overflow
SELECT 0b111111111111111111111111111111111111111111111111111111111111111
RESULT: []

-----------
QUERY:
SELECT 0b1000000000000000000000000000000000000000000000000000000000000000
RESULT: []

-----------
QUERY:
SELECT 0o777777777777777777777
RESULT: []

-----------
QUERY:
SELECT 0o1000000000000000000000
RESULT: []

-----------
QUERY:
SELECT 0x7FFFFFFFFFFFFFFF
RESULT: []

-----------
QUERY:
SELECT 0x8000000000000000
RESULT: []

-----------
QUERY:
SELECT -0b1000000000000000000000000000000000000000000000000000000000000000
RESULT: []

-----------
QUERY:
SELECT -0b1000000000000000000000000000000000000000000000000000000000000001
RESULT: []

-----------
QUERY:
SELECT -0o1000000000000000000000
RESULT: []

-----------
QUERY:
SELECT -0o1000000000000000000001
RESULT: []

-----------
QUERY:
SELECT -0x8000000000000000
RESULT: []

-----------
QUERY:
SELECT -0x8000000000000001
RESULT: []

-----------
QUERY:
-- error cases
SELECT 123abc
RESULT: []

-----------
QUERY:
SELECT 0x0o
RESULT: []

-----------
QUERY:
SELECT 0.a
RESULT: []

-----------
QUERY:
SELECT 0.0a
RESULT: []

-----------
QUERY:
SELECT .0a
RESULT: []

-----------
QUERY:
SELECT 0.0e1a
RESULT: []

-----------
QUERY:
SELECT 0.0e
RESULT: []

-----------
QUERY:
SELECT 0.0e+a
RESULT: []

-----------
QUERY:
PREPARE p1 AS SELECT $1a
RESULT: []

-----------
QUERY:
SELECT 0b
RESULT: []

-----------
QUERY:
SELECT 1b
RESULT: []

-----------
QUERY:
SELECT 0b0x
RESULT: []

-----------
QUERY:
SELECT 0o
RESULT: []

-----------
QUERY:
SELECT 1o
RESULT: []

-----------
QUERY:
SELECT 0o0x
RESULT: []

-----------
QUERY:
SELECT 0x
RESULT: []

-----------
QUERY:
SELECT 1x
RESULT: []

-----------
QUERY:
SELECT 0x0y
RESULT: []

-----------
QUERY:
-- underscores
SELECT 1_000_000
RESULT: []

-----------
QUERY:
SELECT 1_2_3
RESULT: []

-----------
QUERY:
SELECT 0x1EEE_FFFF
RESULT: []

-----------
QUERY:
SELECT 0o2_73
RESULT: []

-----------
QUERY:
SELECT 0b_10_0101
RESULT: []

-----------
QUERY:
SELECT 1_000.000_005
RESULT: []

-----------
QUERY:
SELECT 1_000.
RESULT: []

-----------
QUERY:
SELECT .000_005
RESULT: []

-----------
QUERY:
SELECT 1_000.5e0_1
RESULT: []

-----------
QUERY:
-- error cases
SELECT _100
RESULT: []

-----------
QUERY:
SELECT 100_
RESULT: []

-----------
QUERY:
SELECT 100__000
RESULT: []

-----------
QUERY:
SELECT _1_000.5
RESULT: []

-----------
QUERY:
SELECT 1_000_.5
RESULT: []

-----------
QUERY:
SELECT 1_000._5
RESULT: []

-----------
QUERY:
SELECT 1_000.5_
RESULT: []

-----------
QUERY:
SELECT 1_000.5e_1
RESULT: []

-----------
QUERY:
--
-- Test implicit type conversions
-- This fails for Postgres v6.1 (and earlier?)
--  so let/* REPLACED */''s try explicit conversions for now - tgl 97/05/07
--

CREATE TABLE TEMP_FLOAT (f1 FLOAT8)
RESULT: []

-----------
QUERY:
INSERT INTO TEMP_FLOAT (f1)
  SELECT float8(f1) FROM INT4_TBL
RESULT: []

-----------
QUERY:
INSERT INTO TEMP_FLOAT (f1)
  SELECT float8(f1) FROM INT2_TBL
RESULT: []

-----------
QUERY:
SELECT f1 FROM TEMP_FLOAT
  ORDER BY f1
RESULT: []

-----------
QUERY:
-- int4

CREATE TABLE TEMP_INT4 (f1 INT4)
RESULT: []

-----------
QUERY:
INSERT INTO TEMP_INT4 (f1)
  SELECT int4(f1) FROM FLOAT8_TBL
  WHERE (f1 > -2147483647) AND (f1 < 2147483647)
RESULT: []

-----------
QUERY:
INSERT INTO TEMP_INT4 (f1)
  SELECT int4(f1) FROM INT2_TBL
RESULT: []

-----------
QUERY:
SELECT f1 FROM TEMP_INT4
  ORDER BY f1
RESULT: []

-----------
QUERY:
-- int2

CREATE TABLE TEMP_INT2 (f1 INT2)
RESULT: []

-----------
QUERY:
INSERT INTO TEMP_INT2 (f1)
  SELECT int2(f1) FROM FLOAT8_TBL
  WHERE (f1 >= -32767) AND (f1 <= 32767)
RESULT: []

-----------
QUERY:
INSERT INTO TEMP_INT2 (f1)
  SELECT int2(f1) FROM INT4_TBL
  WHERE (f1 >= -32767) AND (f1 <= 32767)
RESULT: []

-----------
QUERY:
SELECT f1 FROM TEMP_INT2
  ORDER BY f1
RESULT: []

-----------
QUERY:
--
-- Group-by combinations
--

CREATE TABLE TEMP_GROUP (f1 INT4, f2 INT4, f3 FLOAT8)
RESULT: []

-----------
QUERY:
INSERT INTO TEMP_GROUP
  SELECT 1, (- i.f1), (- f.f1)
  FROM INT4_TBL i, FLOAT8_TBL f
RESULT: []

-----------
QUERY:
INSERT INTO TEMP_GROUP
  SELECT 2, i.f1, f.f1
  FROM INT4_TBL i, FLOAT8_TBL f
RESULT: []

-----------
QUERY:
SELECT DISTINCT f1 AS two FROM TEMP_GROUP ORDER BY 1
RESULT: []

-----------
QUERY:
SELECT f1 AS two, max(f3) AS max_float, min(f3) as min_float
  FROM TEMP_GROUP
  GROUP BY f1
  ORDER BY two, max_float, min_float
RESULT: []

-----------
QUERY:
-- GROUP BY a result column name is not legal per SQL92, but we accept it
-- anyway (if the name is not the name of any column exposed by FROM).
SELECT f1 AS two, max(f3) AS max_float, min(f3) AS min_float
  FROM TEMP_GROUP
  GROUP BY two
  ORDER BY two, max_float, min_float
RESULT: []

-----------
QUERY:
SELECT f1 AS two, (max(f3) + 1) AS max_plus_1, (min(f3) - 1) AS min_minus_1
  FROM TEMP_GROUP
  GROUP BY f1
  ORDER BY two, min_minus_1
RESULT: []

-----------
QUERY:
SELECT f1 AS two,
       max(f2) + min(f2) AS max_plus_min,
       min(f3) - 1 AS min_minus_1
  FROM TEMP_GROUP
  GROUP BY f1
  ORDER BY two, min_minus_1
RESULT: []

-----------
QUERY:
DROP TABLE TEMP_INT2
RESULT: []

-----------
QUERY:
DROP TABLE TEMP_INT4
RESULT: []

-----------
QUERY:
DROP TABLE TEMP_FLOAT
RESULT: []

-----------
QUERY:
DROP TABLE TEMP_GROUP
RESULT: []
=========================================
Summary for test case numerology/test.sql of postgres
=========================================
