
-----------
QUERY:
--
-- OID
--

CREATE TABLE OID_TBL(f1 oid);
RESULT:
	postgres: None

-----------
QUERY:


INSERT INTO OID_TBL(f1) VALUES ('1234');
RESULT:
	postgres: None

-----------
QUERY:

INSERT INTO OID_TBL(f1) VALUES ('1235');
RESULT:
	postgres: None

-----------
QUERY:

INSERT INTO OID_TBL(f1) VALUES ('987');
RESULT:
	postgres: None

-----------
QUERY:

INSERT INTO OID_TBL(f1) VALUES ('-1040');
RESULT:
	postgres: None

-----------
QUERY:

INSERT INTO OID_TBL(f1) VALUES ('99999999');
RESULT:
	postgres: None

-----------
QUERY:

INSERT INTO OID_TBL(f1) VALUES ('5     ');
RESULT:
	postgres: None

-----------
QUERY:

INSERT INTO OID_TBL(f1) VALUES ('   10  ');
RESULT:
	postgres: None

-----------
QUERY:

-- leading/trailing hard tab is also allowed
INSERT INTO OID_TBL(f1) VALUES ('	  15 	  ');
RESULT:
	postgres: None

-----------
QUERY:


-- bad inputs
INSERT INTO OID_TBL(f1) VALUES ('');
RESULT:
	postgres: invalid input syntax for type oid: ""
LINE 4: INSERT INTO OID_TBL(f1) VALUES ('');
                                        ^


-----------
QUERY:

INSERT INTO OID_TBL(f1) VALUES ('    ');
RESULT:
	postgres: invalid input syntax for type oid: "    "
LINE 2: INSERT INTO OID_TBL(f1) VALUES ('    ');
                                        ^


-----------
QUERY:

INSERT INTO OID_TBL(f1) VALUES ('asdfasd');
RESULT:
	postgres: invalid input syntax for type oid: "asdfasd"
LINE 2: INSERT INTO OID_TBL(f1) VALUES ('asdfasd');
                                        ^


-----------
QUERY:

INSERT INTO OID_TBL(f1) VALUES ('99asdfasd');
RESULT:
	postgres: invalid input syntax for type oid: "99asdfasd"
LINE 2: INSERT INTO OID_TBL(f1) VALUES ('99asdfasd');
                                        ^


-----------
QUERY:

INSERT INTO OID_TBL(f1) VALUES ('5    d');
RESULT:
	postgres: invalid input syntax for type oid: "5    d"
LINE 2: INSERT INTO OID_TBL(f1) VALUES ('5    d');
                                        ^


-----------
QUERY:

INSERT INTO OID_TBL(f1) VALUES ('    5d');
RESULT:
	postgres: invalid input syntax for type oid: "    5d"
LINE 2: INSERT INTO OID_TBL(f1) VALUES ('    5d');
                                        ^


-----------
QUERY:

INSERT INTO OID_TBL(f1) VALUES ('5    5');
RESULT:
	postgres: invalid input syntax for type oid: "5    5"
LINE 2: INSERT INTO OID_TBL(f1) VALUES ('5    5');
                                        ^


-----------
QUERY:

INSERT INTO OID_TBL(f1) VALUES (' - 500');
RESULT:
	postgres: invalid input syntax for type oid: " - 500"
LINE 2: INSERT INTO OID_TBL(f1) VALUES (' - 500');
                                        ^


-----------
QUERY:

INSERT INTO OID_TBL(f1) VALUES ('32958209582039852935');
RESULT:
	postgres: value "32958209582039852935" is out of range for type oid
LINE 2: INSERT INTO OID_TBL(f1) VALUES ('32958209582039852935');
                                        ^


-----------
QUERY:

INSERT INTO OID_TBL(f1) VALUES ('-23582358720398502385');
RESULT:
	postgres: value "-23582358720398502385" is out of range for type oid
LINE 2: INSERT INTO OID_TBL(f1) VALUES ('-23582358720398502385');
                                        ^


-----------
QUERY:


SELECT * FROM OID_TBL;
RESULT:
	postgres: [(1234,), (1235,), (987,), (4294966256,), (99999999,), (5,), (10,), (15,)]

-----------
QUERY:


-- Also try it with non-error-throwing API
SELECT pg_input_is_valid('1234', 'oid');
RESULT:
	postgres: [(True,)]

-----------
QUERY:

SELECT pg_input_is_valid('01XYZ', 'oid');
RESULT:
	postgres: [(False,)]

-----------
QUERY:

SELECT * FROM pg_input_error_info('01XYZ', 'oid');
RESULT:
	postgres: [('invalid input syntax for type oid: "01XYZ"', None, None, '22P02')]

-----------
QUERY:

SELECT pg_input_is_valid('9999999999', 'oid');
RESULT:
	postgres: [(False,)]

-----------
QUERY:

SELECT * FROM pg_input_error_info('9999999999', 'oid');
RESULT:
	postgres: [('value "9999999999" is out of range for type oid', None, None, '22003')]

-----------
QUERY:


-- While we/* REPLACED */''re here, check oidvector as well
SELECT pg_input_is_valid(' 1 2  4 ', 'oidvector');
RESULT:
	postgres: [(True,)]

-----------
QUERY:

SELECT pg_input_is_valid('01 01XYZ', 'oidvector');
RESULT:
	postgres: [(False,)]

-----------
QUERY:

SELECT * FROM pg_input_error_info('01 01XYZ', 'oidvector');
RESULT:
	postgres: [('invalid input syntax for type oid: "XYZ"', None, None, '22P02')]

-----------
QUERY:

SELECT pg_input_is_valid('01 9999999999', 'oidvector');
RESULT:
	postgres: [(False,)]

-----------
QUERY:

SELECT * FROM pg_input_error_info('01 9999999999', 'oidvector');
RESULT:
	postgres: [('value "9999999999" is out of range for type oid', None, None, '22003')]

-----------
QUERY:


SELECT o.* FROM OID_TBL o WHERE o.f1 = 1234;
RESULT:
	postgres: [(1234,)]

-----------
QUERY:


SELECT o.* FROM OID_TBL o WHERE o.f1 <> '1234';
RESULT:
	postgres: [(1235,), (987,), (4294966256,), (99999999,), (5,), (10,), (15,)]

-----------
QUERY:


SELECT o.* FROM OID_TBL o WHERE o.f1 <= '1234';
RESULT:
	postgres: [(1234,), (987,), (5,), (10,), (15,)]

-----------
QUERY:


SELECT o.* FROM OID_TBL o WHERE o.f1 < '1234';
RESULT:
	postgres: [(987,), (5,), (10,), (15,)]

-----------
QUERY:


SELECT o.* FROM OID_TBL o WHERE o.f1 >= '1234';
RESULT:
	postgres: [(1234,), (1235,), (4294966256,), (99999999,)]

-----------
QUERY:


SELECT o.* FROM OID_TBL o WHERE o.f1 > '1234';
RESULT:
	postgres: [(1235,), (4294966256,), (99999999,)]

-----------
QUERY:


DROP TABLE OID_TBL;
RESULT:
	postgres: None
