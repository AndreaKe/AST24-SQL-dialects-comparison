
-----------
QUERY:
--
-- Verify system catalog foreign key relationships
--
DO $doblock$
declare
  fk record;
RESULT:
	postgres: ERROR - unterminated dollar-quoted string at or near "$doblock$
declare
  fk record;"
LINE 4: DO $doblock$
           ^


-----------
QUERY:

  nkeys integer;
RESULT:
	postgres: ERROR - syntax error at or near "nkeys"
LINE 2:   nkeys integer;
          ^


-----------
QUERY:

  cmd text;
RESULT:
	postgres: ERROR - syntax error at or near "cmd"
LINE 2:   cmd text;
          ^


-----------
QUERY:

  err record;
RESULT:
	postgres: ERROR - syntax error at or near "err"
LINE 2:   err record;
          ^


-----------
QUERY:

begin
  for fk in select * from pg_get_catalog_foreign_keys()
  loop
    raise notice 'checking % % => % %',
      fk.fktable, fk.fkcols, fk.pktable, fk.pkcols;
RESULT:
	postgres: ERROR - syntax error at or near "for"
LINE 3:   for fk in select * from pg_get_catalog_foreign_keys()
          ^


-----------
QUERY:

    nkeys := array_length(fk.fkcols, 1);
RESULT:
	postgres: ERROR - syntax error at or near "nkeys"
LINE 2:     nkeys := array_length(fk.fkcols, 1);
            ^


-----------
QUERY:

    cmd := 'SELECT ctid';
RESULT:
	postgres: ERROR - syntax error at or near "cmd"
LINE 2:     cmd := 'SELECT ctid';
            ^


-----------
QUERY:

    for i in 1 .. nkeys loop
      cmd := cmd || ', ' || quote_ident(fk.fkcols[i]);
RESULT:
	postgres: ERROR - syntax error at or near "for"
LINE 2:     for i in 1 .. nkeys loop
            ^


-----------
QUERY:

    end loop;
RESULT:
	postgres: ERROR - syntax error at or near "loop"
LINE 2:     end loop;
                ^


-----------
QUERY:

    if fk.is_array then
      cmd := cmd || ' FROM (SELECT ctid';
RESULT:
	postgres: ERROR - syntax error at or near "if"
LINE 2:     if fk.is_array then
            ^


-----------
QUERY:

      for i in 1 .. nkeys-1 loop
        cmd := cmd || ', ' || quote_ident(fk.fkcols[i]);
RESULT:
	postgres: ERROR - syntax error at or near "for"
LINE 2:       for i in 1 .. nkeys-1 loop
              ^


-----------
QUERY:

      end loop;
RESULT:
	postgres: ERROR - syntax error at or near "loop"
LINE 2:       end loop;
                  ^


-----------
QUERY:

      cmd := cmd || ', unnest(' || quote_ident(fk.fkcols[nkeys]);
RESULT:
	postgres: ERROR - syntax error at or near "cmd"
LINE 2:       cmd := cmd || ', unnest(' || quote_ident(fk.fkcols[nke...
              ^


-----------
QUERY:

      cmd := cmd || ') as ' || quote_ident(fk.fkcols[nkeys]);
RESULT:
	postgres: ERROR - syntax error at or near "cmd"
LINE 2:       cmd := cmd || ') as ' || quote_ident(fk.fkcols[nkeys])...
              ^


-----------
QUERY:

      cmd := cmd || ' FROM ' || fk.fktable::text || ') fk WHERE ';
RESULT:
	postgres: ERROR - syntax error at or near "cmd"
LINE 2:       cmd := cmd || ' FROM ' || fk.fktable::text || ') fk WH...
              ^


-----------
QUERY:

    else
      cmd := cmd || ' FROM ' || fk.fktable::text || ' fk WHERE ';
RESULT:
	postgres: ERROR - syntax error at or near "else"
LINE 2:     else
            ^


-----------
QUERY:

    end if;
RESULT:
	postgres: ERROR - syntax error at or near "if"
LINE 2:     end if;
                ^


-----------
QUERY:

    if fk.is_opt then
      for i in 1 .. nkeys loop
        cmd := cmd || quote_ident(fk.fkcols[i]) || ' != 0 AND ';
RESULT:
	postgres: ERROR - syntax error at or near "if"
LINE 2:     if fk.is_opt then
            ^


-----------
QUERY:

      end loop;
RESULT:
	postgres: ERROR - syntax error at or near "loop"
LINE 2:       end loop;
                  ^


-----------
QUERY:

    end if;
RESULT:
	postgres: ERROR - syntax error at or near "if"
LINE 2:     end if;
                ^


-----------
QUERY:

    cmd := cmd || 'NOT EXISTS(SELECT 1 FROM ' || fk.pktable::text || ' pk WHERE ';
RESULT:
	postgres: ERROR - syntax error at or near "cmd"
LINE 2:     cmd := cmd || 'NOT EXISTS(SELECT 1 FROM ' || fk.pktable:...
            ^


-----------
QUERY:

    for i in 1 .. nkeys loop
      if i > 1 then cmd := cmd || ' AND ';
RESULT:
	postgres: ERROR - syntax error at or near "for"
LINE 2:     for i in 1 .. nkeys loop
            ^


-----------
QUERY:
 end if;
RESULT:
	postgres: ERROR - syntax error at or near "if"
LINE 1:  end if;
             ^


-----------
QUERY:

      cmd := cmd || 'pk.' || quote_ident(fk.pkcols[i]);
RESULT:
	postgres: ERROR - syntax error at or near "cmd"
LINE 2:       cmd := cmd || 'pk.' || quote_ident(fk.pkcols[i]);
              ^


-----------
QUERY:

      cmd := cmd || ' = fk.' || quote_ident(fk.fkcols[i]);
RESULT:
	postgres: ERROR - syntax error at or near "cmd"
LINE 2:       cmd := cmd || ' = fk.' || quote_ident(fk.fkcols[i]);
              ^


-----------
QUERY:

    end loop;
RESULT:
	postgres: ERROR - syntax error at or near "loop"
LINE 2:     end loop;
                ^


-----------
QUERY:

    cmd := cmd || ')';
RESULT:
	postgres: ERROR - syntax error at or near "cmd"
LINE 2:     cmd := cmd || ')';
            ^


-----------
QUERY:

    -- raise notice /* REPLACED */''cmd = %/* REPLACED */'', cmd /* REPLACED */,
    for err in execute cmd loop
      raise warning 'FK VIOLATION IN %(%): %', fk.fktable, fk.fkcols, err;
RESULT:
	postgres: ERROR - syntax error at or near "for"
LINE 3:     for err in execute cmd loop
            ^


-----------
QUERY:

    end loop;
RESULT:
	postgres: ERROR - syntax error at or near "loop"
LINE 2:     end loop;
                ^


-----------
QUERY:

  end loop;
RESULT:
	postgres: ERROR - syntax error at or near "loop"
LINE 2:   end loop;
              ^


-----------
QUERY:

end
$doblock$;
RESULT:
	postgres: ERROR - unterminated dollar-quoted string at or near "$doblock$;"
LINE 3: $doblock$;
        ^

