
-----------
QUERY:
--
-- Test INSERT/UPDATE/DELETE RETURNING
--

-- Simple cases

CREATE TEMP TABLE foo (f1 serial, f2 text, f3 int default 42);
RESULT:
	[]

-----------
QUERY:


INSERT INTO foo (f2,f3)
  VALUES ('test', DEFAULT), ('More', 11), (upper('more'), 7+9)
  RETURNING *, f1+f3 AS sum;
RESULT:
	[(1, 'test', 42, 43), (2, 'More', 11, 13), (3, 'MORE', 16, 19)]

-----------
QUERY:


SELECT * FROM foo;
RESULT:
	[(1, 'test', 42), (2, 'More', 11), (3, 'MORE', 16)]

-----------
QUERY:


UPDATE foo SET f2 = lower(f2), f3 = DEFAULT RETURNING foo.*, f1+f3 AS sum13;
RESULT:
	[(1, 'test', 42, 43), (2, 'more', 42, 44), (3, 'more', 42, 45)]

-----------
QUERY:


SELECT * FROM foo;
RESULT:
	[(1, 'test', 42), (2, 'more', 42), (3, 'more', 42)]

-----------
QUERY:


DELETE FROM foo WHERE f1 > 2 RETURNING f3, f2, f1, least(f1,f3);
RESULT:
	[(42, 'more', 3, 3)]

-----------
QUERY:


SELECT * FROM foo;
RESULT:
	[(1, 'test', 42), (2, 'more', 42)]

-----------
QUERY:


-- Subplans and initplans in the RETURNING list

INSERT INTO foo SELECT f1+10, f2, f3+99 FROM foo
  RETURNING *, f1+112 IN (SELECT q1 FROM int8_tbl) AS subplan,
    EXISTS(SELECT * FROM int4_tbl) AS initplan;
RESULT:
	[(11, 'test', 141, True, True), (12, 'more', 141, False, True)]

-----------
QUERY:


UPDATE foo SET f3 = f3 * 2
  WHERE f1 > 10
  RETURNING *, f1+112 IN (SELECT q1 FROM int8_tbl) AS subplan,
    EXISTS(SELECT * FROM int4_tbl) AS initplan;
RESULT:
	[(11, 'test', 282, True, True), (12, 'more', 282, False, True)]

-----------
QUERY:


DELETE FROM foo
  WHERE f1 > 10
  RETURNING *, f1+112 IN (SELECT q1 FROM int8_tbl) AS subplan,
    EXISTS(SELECT * FROM int4_tbl) AS initplan;
RESULT:
	[(11, 'test', 282, True, True), (12, 'more', 282, False, True)]

-----------
QUERY:


-- Joins

UPDATE foo SET f3 = f3*2
  FROM int4_tbl i
  WHERE foo.f1 + 123455 = i.f1
  RETURNING foo.*, i.f1 as "i.f1";
RESULT:
	[(1, 'test', 84, 123456)]

-----------
QUERY:


SELECT * FROM foo;
RESULT:
	[(2, 'more', 42), (1, 'test', 84)]

-----------
QUERY:


DELETE FROM foo
  USING int4_tbl i
  WHERE foo.f1 + 123455 = i.f1
  RETURNING foo.*, i.f1 as "i.f1";
RESULT:
	[(1, 'test', 84, 123456)]

-----------
QUERY:


SELECT * FROM foo;
RESULT:
	[(2, 'more', 42)]

-----------
QUERY:


-- Check inheritance cases

CREATE TEMP TABLE foochild (fc int) INHERITS (foo);
RESULT:
	[]

-----------
QUERY:


INSERT INTO foochild VALUES(123,'child',999,-123);
RESULT:
	[]

-----------
QUERY:


ALTER TABLE foo ADD COLUMN f4 int8 DEFAULT 99;
RESULT:
	[]

-----------
QUERY:


SELECT * FROM foo;
RESULT:
	[(2, 'more', 42, 99), (123, 'child', 999, 99)]

-----------
QUERY:

SELECT * FROM foochild;
RESULT:
	[(123, 'child', 999, -123, 99)]

-----------
QUERY:


UPDATE foo SET f4 = f4 + f3 WHERE f4 = 99 RETURNING *;
RESULT:
	[(2, 'more', 42, 141), (123, 'child', 999, 1098)]

-----------
QUERY:


SELECT * FROM foo;
RESULT:
	[(2, 'more', 42, 141), (123, 'child', 999, 1098)]

-----------
QUERY:

SELECT * FROM foochild;
RESULT:
	[(123, 'child', 999, -123, 1098)]

-----------
QUERY:


UPDATE foo SET f3 = f3*2
  FROM int8_tbl i
  WHERE foo.f1 = i.q2
  RETURNING *;
RESULT:
	[(123, 'child', 1998, 1098, 4567890123456789, 123)]

-----------
QUERY:


SELECT * FROM foo;
RESULT:
	[(2, 'more', 42, 141), (123, 'child', 1998, 1098)]

-----------
QUERY:

SELECT * FROM foochild;
RESULT:
	[(123, 'child', 1998, -123, 1098)]

-----------
QUERY:


DELETE FROM foo
  USING int8_tbl i
  WHERE foo.f1 = i.q2
  RETURNING *;
RESULT:
	[(123, 'child', 1998, 1098, 4567890123456789, 123)]

-----------
QUERY:


SELECT * FROM foo;
RESULT:
	[(2, 'more', 42, 141)]

-----------
QUERY:

SELECT * FROM foochild;
RESULT:
	[]

-----------
QUERY:


DROP TABLE foochild;
RESULT:
	[]

-----------
QUERY:


-- Rules and views

CREATE TEMP VIEW voo AS SELECT f1, f2 FROM foo;
RESULT:
	[]

-----------
QUERY:


CREATE RULE voo_i AS ON INSERT TO voo DO INSTEAD
  INSERT INTO foo VALUES(new.*, 57);
RESULT:
	[]

-----------
QUERY:


INSERT INTO voo VALUES(11,'zit');
RESULT:
	[]

-----------
QUERY:

-- fails:
INSERT INTO voo VALUES(12,'zoo') RETURNING *, f1*2;
RESULT:
	ERROR - cannot perform INSERT RETURNING on relation "voo"
HINT:  You need an unconditional ON INSERT DO INSTEAD rule with a RETURNING clause.


-----------
QUERY:


-- fails, incompatible list:
CREATE OR REPLACE RULE voo_i AS ON INSERT TO voo DO INSTEAD
  INSERT INTO foo VALUES(new.*, 57) RETURNING *;
RESULT:
	ERROR - RETURNING list has too many entries


-----------
QUERY:


CREATE OR REPLACE RULE voo_i AS ON INSERT TO voo DO INSTEAD
  INSERT INTO foo VALUES(new.*, 57) RETURNING f1, f2;
RESULT:
	[]

-----------
QUERY:


-- should still work
INSERT INTO voo VALUES(13,'zit2');
RESULT:
	[]

-----------
QUERY:

-- works now
INSERT INTO voo VALUES(14,'zoo2') RETURNING *;
RESULT:
	[(14, 'zoo2')]

-----------
QUERY:


SELECT * FROM foo;
RESULT:
	[(2, 'more', 42, 141), (11, 'zit', 57, 99), (13, 'zit2', 57, 99), (14, 'zoo2', 57, 99)]

-----------
QUERY:

SELECT * FROM voo;
RESULT:
	[(2, 'more'), (11, 'zit'), (13, 'zit2'), (14, 'zoo2')]

-----------
QUERY:


CREATE OR REPLACE RULE voo_u AS ON UPDATE TO voo DO INSTEAD
  UPDATE foo SET f1 = new.f1, f2 = new.f2 WHERE f1 = old.f1
  RETURNING f1, f2;
RESULT:
	[]

-----------
QUERY:


update voo set f1 = f1 + 1 where f2 = 'zoo2';
RESULT:
	[]

-----------
QUERY:

update voo set f1 = f1 + 1 where f2 = 'zoo2' RETURNING *, f1*2;
RESULT:
	[(16, 'zoo2', 32)]

-----------
QUERY:


SELECT * FROM foo;
RESULT:
	[(2, 'more', 42, 141), (11, 'zit', 57, 99), (13, 'zit2', 57, 99), (16, 'zoo2', 57, 99)]

-----------
QUERY:

SELECT * FROM voo;
RESULT:
	[(2, 'more'), (11, 'zit'), (13, 'zit2'), (16, 'zoo2')]

-----------
QUERY:


CREATE OR REPLACE RULE voo_d AS ON DELETE TO voo DO INSTEAD
  DELETE FROM foo WHERE f1 = old.f1
  RETURNING f1, f2;
RESULT:
	[]

-----------
QUERY:


DELETE FROM foo WHERE f1 = 13;
RESULT:
	[]

-----------
QUERY:

DELETE FROM foo WHERE f2 = 'zit' RETURNING *;
RESULT:
	[(11, 'zit', 57, 99)]

-----------
QUERY:


SELECT * FROM foo;
RESULT:
	[(2, 'more', 42, 141), (16, 'zoo2', 57, 99)]

-----------
QUERY:

SELECT * FROM voo;
RESULT:
	[(2, 'more'), (16, 'zoo2')]

-----------
QUERY:


-- Try a join case

CREATE TEMP TABLE joinme (f2j text, other int);
RESULT:
	[]

-----------
QUERY:

INSERT INTO joinme VALUES('more', 12345);
RESULT:
	[]

-----------
QUERY:

INSERT INTO joinme VALUES('zoo2', 54321);
RESULT:
	[]

-----------
QUERY:

INSERT INTO joinme VALUES('other', 0);
RESULT:
	[]

-----------
QUERY:


CREATE TEMP VIEW joinview AS
  SELECT foo.*, other FROM foo JOIN joinme ON (f2 = f2j);
RESULT:
	[]

-----------
QUERY:


SELECT * FROM joinview;
RESULT:
	[(2, 'more', 42, 141, 12345), (16, 'zoo2', 57, 99, 54321)]

-----------
QUERY:


CREATE RULE joinview_u AS ON UPDATE TO joinview DO INSTEAD
  UPDATE foo SET f1 = new.f1, f3 = new.f3
    FROM joinme WHERE f2 = f2j AND f2 = old.f2
    RETURNING foo.*, other;
RESULT:
	[]

-----------
QUERY:


UPDATE joinview SET f1 = f1 + 1 WHERE f3 = 57 RETURNING *, other + 1;
RESULT:
	[(17, 'zoo2', 57, 99, 54321, 54322)]

-----------
QUERY:


SELECT * FROM joinview;
RESULT:
	[(2, 'more', 42, 141, 12345), (17, 'zoo2', 57, 99, 54321)]

-----------
QUERY:

SELECT * FROM foo;
RESULT:
	[(2, 'more', 42, 141), (17, 'zoo2', 57, 99)]

-----------
QUERY:

SELECT * FROM voo;
RESULT:
	[(2, 'more'), (17, 'zoo2')]

-----------
QUERY:


-- Check aliased target relation
INSERT INTO foo AS bar DEFAULT VALUES RETURNING *;
RESULT:
	[(4, None, 42, 99)]

-----------
QUERY:
 -- ok
INSERT INTO foo AS bar DEFAULT VALUES RETURNING foo.*;
RESULT:
	ERROR - invalid reference to FROM-clause entry for table "foo"
LINE 2: INSERT INTO foo AS bar DEFAULT VALUES RETURNING foo.*;
                                                        ^
HINT:  Perhaps you meant to reference the table alias "bar".


-----------
QUERY:
 -- fails, wrong name
INSERT INTO foo AS bar DEFAULT VALUES RETURNING bar.*;
RESULT:
	[(5, None, 42, 99)]

-----------
QUERY:
 -- ok
INSERT INTO foo AS bar DEFAULT VALUES RETURNING bar.f3;
RESULT:
	[(42,)]
