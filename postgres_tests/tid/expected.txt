
-----------
QUERY:
-- basic tests for the TID data type

SELECT
  '(0,0)'::tid as tid00,
  '(0,1)'::tid as tid01,
  '(-1,0)'::tid as tidm10,
  '(4294967295,65535)'::tid as tidmax;
RESULT:
	postgres: [('(0,0)', '(0,1)', '(4294967295,0)', '(4294967295,65535)')]

-----------
QUERY:


SELECT '(4294967296,1)'::tid;
RESULT:
	postgres: ERROR - invalid input syntax for type tid: "(4294967296,1)"
LINE 3: SELECT '(4294967296,1)'::tid;
               ^


-----------
QUERY:
  -- error
SELECT '(1,65536)'::tid;
RESULT:
	postgres: ERROR - invalid input syntax for type tid: "(1,65536)"
LINE 2: SELECT '(1,65536)'::tid;
               ^


-----------
QUERY:
  -- error

-- Also try it with non-error-throwing API
SELECT pg_input_is_valid('(0)', 'tid');
RESULT:
	postgres: [(False,)]

-----------
QUERY:

SELECT * FROM pg_input_error_info('(0)', 'tid');
RESULT:
	postgres: [('invalid input syntax for type tid: "(0)"', None, None, '22P02')]

-----------
QUERY:

SELECT pg_input_is_valid('(0,-1)', 'tid');
RESULT:
	postgres: [(False,)]

-----------
QUERY:

SELECT * FROM pg_input_error_info('(0,-1)', 'tid');
RESULT:
	postgres: [('invalid input syntax for type tid: "(0,-1)"', None, None, '22P02')]

-----------
QUERY:



-- tests for functions related to TID handling

CREATE TABLE tid_tab (a int);
RESULT:
	postgres: None

-----------
QUERY:


-- min() and max() for TIDs
INSERT INTO tid_tab VALUES (1), (2);
RESULT:
	postgres: None

-----------
QUERY:

SELECT min(ctid) FROM tid_tab;
RESULT:
	postgres: [('(0,1)',)]

-----------
QUERY:

SELECT max(ctid) FROM tid_tab;
RESULT:
	postgres: [('(0,2)',)]

-----------
QUERY:

TRUNCATE tid_tab;
RESULT:
	postgres: None

-----------
QUERY:


-- Tests for currtid2() with various relation kinds

-- Materialized view
CREATE MATERIALIZED VIEW tid_matview AS SELECT a FROM tid_tab;
RESULT:
	postgres: None

-----------
QUERY:

SELECT currtid2('tid_matview'::text, '(0,1)'::tid);
RESULT:
	postgres: ERROR - tid (0, 1) is not valid for relation "tid_matview"


-----------
QUERY:
 -- fails
INSERT INTO tid_tab VALUES (1);
RESULT:
	postgres: None

-----------
QUERY:

REFRESH MATERIALIZED VIEW tid_matview;
RESULT:
	postgres: None

-----------
QUERY:

SELECT currtid2('tid_matview'::text, '(0,1)'::tid);
RESULT:
	postgres: [('(0,1)',)]

-----------
QUERY:
 -- ok
DROP MATERIALIZED VIEW tid_matview;
RESULT:
	postgres: None

-----------
QUERY:

TRUNCATE tid_tab;
RESULT:
	postgres: None

-----------
QUERY:


-- Sequence
CREATE SEQUENCE tid_seq;
RESULT:
	postgres: None

-----------
QUERY:

SELECT currtid2('tid_seq'::text, '(0,1)'::tid);
RESULT:
	postgres: [('(0,1)',)]

-----------
QUERY:
 -- ok
DROP SEQUENCE tid_seq;
RESULT:
	postgres: None

-----------
QUERY:


-- Index, fails with incorrect relation type
CREATE INDEX tid_ind ON tid_tab(a);
RESULT:
	postgres: None

-----------
QUERY:

SELECT currtid2('tid_ind'::text, '(0,1)'::tid);
RESULT:
	postgres: ERROR - cannot open relation "tid_ind"
DETAIL:  This operation is not supported for indexes.


-----------
QUERY:
 -- fails
DROP INDEX tid_ind;
RESULT:
	postgres: None

-----------
QUERY:


-- Partitioned table, no storage
CREATE TABLE tid_part (a int) PARTITION BY RANGE (a);
RESULT:
	postgres: None

-----------
QUERY:

SELECT currtid2('tid_part'::text, '(0,1)'::tid);
RESULT:
	postgres: ERROR - cannot look at latest visible tid for relation "public.tid_part"


-----------
QUERY:
 -- fails
DROP TABLE tid_part;
RESULT:
	postgres: None

-----------
QUERY:


-- Views
-- ctid not defined in the view
CREATE VIEW tid_view_no_ctid AS SELECT a FROM tid_tab;
RESULT:
	postgres: None

-----------
QUERY:

SELECT currtid2('tid_view_no_ctid'::text, '(0,1)'::tid);
RESULT:
	postgres: ERROR - currtid cannot handle views with no CTID


-----------
QUERY:
 -- fails
DROP VIEW tid_view_no_ctid;
RESULT:
	postgres: None

-----------
QUERY:

-- ctid fetched directly from the source table.
CREATE VIEW tid_view_with_ctid AS SELECT ctid, a FROM tid_tab;
RESULT:
	postgres: None

-----------
QUERY:

SELECT currtid2('tid_view_with_ctid'::text, '(0,1)'::tid);
RESULT:
	postgres: ERROR - tid (0, 1) is not valid for relation "tid_tab"


-----------
QUERY:
 -- fails
INSERT INTO tid_tab VALUES (1);
RESULT:
	postgres: None

-----------
QUERY:

SELECT currtid2('tid_view_with_ctid'::text, '(0,1)'::tid);
RESULT:
	postgres: [('(0,1)',)]

-----------
QUERY:
 -- ok
DROP VIEW tid_view_with_ctid;
RESULT:
	postgres: None

-----------
QUERY:

TRUNCATE tid_tab;
RESULT:
	postgres: None

-----------
QUERY:

-- ctid attribute with incorrect data type
CREATE VIEW tid_view_fake_ctid AS SELECT 1 AS ctid, 2 AS a;
RESULT:
	postgres: None

-----------
QUERY:

SELECT currtid2('tid_view_fake_ctid'::text, '(0,1)'::tid);
RESULT:
	postgres: ERROR - ctid isn't of type TID


-----------
QUERY:
 -- fails
DROP VIEW tid_view_fake_ctid;
RESULT:
	postgres: None

-----------
QUERY:


DROP TABLE tid_tab CASCADE;
RESULT:
	postgres: None
