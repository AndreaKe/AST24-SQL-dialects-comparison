Guest DBMS identified: postgres
-----------
QUERY:
--
-- TRANSACTIONS
--

BEGIN
RESULT: []

-----------
QUERY:
CREATE TABLE xacttest (a smallint, b real)
RESULT: []

-----------
QUERY:
INSERT INTO xacttest VALUES
  (56, 7.8),
  (100, 99.097),
  (0, 0.09561),
  (42, 324.78)
RESULT: []

-----------
QUERY:
INSERT INTO xacttest (a, b) VALUES (777, 777.777)
RESULT: []

-----------
QUERY:
END
RESULT: []

-----------
QUERY:
-- should retrieve one value--
SELECT a FROM xacttest WHERE a > 100
RESULT: []

-----------
QUERY:
BEGIN
RESULT: []

-----------
QUERY:
CREATE TABLE disappear (a int4)
RESULT: []

-----------
QUERY:
DELETE FROM xacttest
RESULT: []

-----------
QUERY:
-- should be empty
SELECT * FROM xacttest
RESULT: []

-----------
QUERY:
ABORT
RESULT: []

-----------
QUERY:
-- should not exist
SELECT oid FROM pg_class WHERE relname = 'disappear'
RESULT: []

-----------
QUERY:
-- should have members again
SELECT * FROM xacttest
RESULT: []

-----------
QUERY:
-- Test that transaction characteristics cannot be reset.
BEGIN TRANSACTION ISOLATION LEVEL SERIALIZABLE
RESULT: []

-----------
QUERY:
SELECT COUNT(*) FROM xacttest
RESULT: []

-----------
QUERY:
RESET transaction_isolation
RESULT: []

-----------
QUERY:
-- error
END
RESULT: []

-----------
QUERY:
BEGIN TRANSACTION READ ONLY
RESULT: []

-----------
QUERY:
SELECT COUNT(*) FROM xacttest
RESULT: []

-----------
QUERY:
RESET transaction_read_only
RESULT: []

-----------
QUERY:
-- error
END
RESULT: []

-----------
QUERY:
BEGIN TRANSACTION DEFERRABLE
RESULT: []

-----------
QUERY:
SELECT COUNT(*) FROM xacttest
RESULT: []

-----------
QUERY:
RESET transaction_deferrable
RESULT: []

-----------
QUERY:
-- error
END
RESULT: []

-----------
QUERY:
CREATE FUNCTION errfunc() RETURNS int LANGUAGE SQL AS 'SELECT 1'
SET transaction_read_only = on
RESULT: []

-----------
QUERY:
-- error

-- Read-only tests

CREATE TABLE writetest (a int)
RESULT: []

-----------
QUERY:
CREATE TEMPORARY TABLE temptest (a int)
RESULT: []

-----------
QUERY:
BEGIN
RESULT: []

-----------
QUERY:
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE, READ ONLY, DEFERRABLE
RESULT: []

-----------
QUERY:
-- ok
SELECT * FROM writetest
RESULT: []

-----------
QUERY:
-- ok
SET TRANSACTION READ WRITE
RESULT: []

-----------
QUERY:
--fail
COMMIT
RESULT: []

-----------
QUERY:
BEGIN
RESULT: []

-----------
QUERY:
SET TRANSACTION READ ONLY
RESULT: []

-----------
QUERY:
-- ok
SET TRANSACTION READ WRITE
RESULT: []

-----------
QUERY:
-- ok
SET TRANSACTION READ ONLY
RESULT: []

-----------
QUERY:
-- ok
SELECT * FROM writetest
RESULT: []

-----------
QUERY:
-- ok
SAVEPOINT x
RESULT: []

-----------
QUERY:
SET TRANSACTION READ ONLY
RESULT: []

-----------
QUERY:
-- ok
SELECT * FROM writetest
RESULT: []

-----------
QUERY:
-- ok
SET TRANSACTION READ ONLY
RESULT: []

-----------
QUERY:
-- ok
SET TRANSACTION READ WRITE
RESULT: []

-----------
QUERY:
--fail
COMMIT
RESULT: []

-----------
QUERY:
BEGIN
RESULT: []

-----------
QUERY:
SET TRANSACTION READ WRITE
RESULT: []

-----------
QUERY:
-- ok
SAVEPOINT x
RESULT: []

-----------
QUERY:
SET TRANSACTION READ WRITE
RESULT: []

-----------
QUERY:
-- ok
SET TRANSACTION READ ONLY
RESULT: []

-----------
QUERY:
-- ok
SELECT * FROM writetest
RESULT: []

-----------
QUERY:
-- ok
SET TRANSACTION READ ONLY
RESULT: []

-----------
QUERY:
-- ok
SET TRANSACTION READ WRITE
RESULT: []

-----------
QUERY:
--fail
COMMIT
RESULT: []

-----------
QUERY:
BEGIN
RESULT: []

-----------
QUERY:
SET TRANSACTION READ WRITE
RESULT: []

-----------
QUERY:
-- ok
SAVEPOINT x
RESULT: []

-----------
QUERY:
SET TRANSACTION READ ONLY
RESULT: []

-----------
QUERY:
-- ok
SELECT * FROM writetest
RESULT: []

-----------
QUERY:
-- ok
ROLLBACK TO SAVEPOINT x
RESULT: []

-----------
QUERY:
SHOW transaction_read_only
RESULT: []

-----------
QUERY:
-- off
SAVEPOINT y
RESULT: []

-----------
QUERY:
SET TRANSACTION READ ONLY
RESULT: []

-----------
QUERY:
-- ok
SELECT * FROM writetest
RESULT: []

-----------
QUERY:
-- ok
RELEASE SAVEPOINT y
RESULT: []

-----------
QUERY:
SHOW transaction_read_only
RESULT: []

-----------
QUERY:
-- off
COMMIT
RESULT: []

-----------
QUERY:
SET SESSION CHARACTERISTICS AS TRANSACTION READ ONLY
RESULT: []

-----------
QUERY:
DROP TABLE writetest
RESULT: []

-----------
QUERY:
-- fail
INSERT INTO writetest VALUES (1)
RESULT: []

-----------
QUERY:
-- fail
SELECT * FROM writetest
RESULT: []

-----------
QUERY:
-- ok
DELETE FROM temptest
RESULT: []

-----------
QUERY:
-- ok
UPDATE temptest SET a = 0 FROM writetest WHERE temptest.a = 1 AND writetest.a = temptest.a
RESULT: []

-----------
QUERY:
-- ok
PREPARE test AS UPDATE writetest SET a = 0
RESULT: []

-----------
QUERY:
-- ok
EXECUTE test
RESULT: []

-----------
QUERY:
-- fail
SELECT * FROM writetest, temptest
RESULT: []

-----------
QUERY:
-- ok
CREATE TABLE test AS SELECT * FROM writetest
RESULT: []

-----------
QUERY:
-- fail

START TRANSACTION READ WRITE
RESULT: []

-----------
QUERY:
DROP TABLE writetest
RESULT: []

-----------
QUERY:
-- ok
COMMIT
RESULT: []

-----------
QUERY:
-- Subtransactions, basic tests
-- create & drop tables
SET SESSION CHARACTERISTICS AS TRANSACTION READ WRITE
RESULT: []

-----------
QUERY:
CREATE TABLE trans_foobar (a int)
RESULT: []

-----------
QUERY:
BEGIN
RESULT: []

-----------
QUERY:
CREATE TABLE trans_foo (a int)
RESULT: []

-----------
QUERY:
SAVEPOINT one
RESULT: []

-----------
QUERY:
DROP TABLE trans_foo
RESULT: []

-----------
QUERY:
CREATE TABLE trans_bar (a int)
RESULT: []

-----------
QUERY:
ROLLBACK TO SAVEPOINT one
RESULT: []

-----------
QUERY:
RELEASE SAVEPOINT one
RESULT: []

-----------
QUERY:
SAVEPOINT two
RESULT: []

-----------
QUERY:
CREATE TABLE trans_baz (a int)
RESULT: []

-----------
QUERY:
RELEASE SAVEPOINT two
RESULT: []

-----------
QUERY:
drop TABLE trans_foobar
RESULT: []

-----------
QUERY:
CREATE TABLE trans_barbaz (a int)
RESULT: []

-----------
QUERY:
COMMIT
RESULT: []

-----------
QUERY:
-- should exist: trans_barbaz, trans_baz, trans_foo
SELECT * FROM trans_foo
RESULT: []

-----------
QUERY:
-- should be empty
SELECT * FROM trans_bar
RESULT: []

-----------
QUERY:
-- shouldn/* REPLACED */''t exist
SELECT * FROM trans_barbaz
RESULT: []

-----------
QUERY:
-- should be empty
SELECT * FROM trans_baz
RESULT: []

-----------
QUERY:
-- should be empty

-- inserts
BEGIN
RESULT: []

-----------
QUERY:
INSERT INTO trans_foo VALUES (1)
RESULT: []

-----------
QUERY:
SAVEPOINT one
RESULT: []

-----------
QUERY:
INSERT into trans_bar VALUES (1)
RESULT: []

-----------
QUERY:
ROLLBACK TO one
RESULT: []

-----------
QUERY:
RELEASE SAVEPOINT one
RESULT: []

-----------
QUERY:
SAVEPOINT two
RESULT: []

-----------
QUERY:
INSERT into trans_barbaz VALUES (1)
RESULT: []

-----------
QUERY:
RELEASE two
RESULT: []

-----------
QUERY:
SAVEPOINT three
RESULT: []

-----------
QUERY:
SAVEPOINT four
RESULT: []

-----------
QUERY:
INSERT INTO trans_foo VALUES (2)
RESULT: []

-----------
QUERY:
RELEASE SAVEPOINT four
RESULT: []

-----------
QUERY:
ROLLBACK TO SAVEPOINT three
RESULT: []

-----------
QUERY:
RELEASE SAVEPOINT three
RESULT: []

-----------
QUERY:
INSERT INTO trans_foo VALUES (3)
RESULT: []

-----------
QUERY:
COMMIT
RESULT: []

-----------
QUERY:
SELECT * FROM trans_foo
RESULT: []

-----------
QUERY:
-- should have 1 and 3
SELECT * FROM trans_barbaz
RESULT: []

-----------
QUERY:
-- should have 1

-- test whole-tree commit
BEGIN
RESULT: []

-----------
QUERY:
SAVEPOINT one
RESULT: []

-----------
QUERY:
SELECT trans_foo
RESULT: []

-----------
QUERY:
ROLLBACK TO SAVEPOINT one
RESULT: []

-----------
QUERY:
RELEASE SAVEPOINT one
RESULT: []

-----------
QUERY:
SAVEPOINT two
RESULT: []

-----------
QUERY:
CREATE TABLE savepoints (a int)
RESULT: []

-----------
QUERY:
SAVEPOINT three
RESULT: []

-----------
QUERY:
INSERT INTO savepoints VALUES (1)
RESULT: []

-----------
QUERY:
SAVEPOINT four
RESULT: []

-----------
QUERY:
INSERT INTO savepoints VALUES (2)
RESULT: []

-----------
QUERY:
SAVEPOINT five
RESULT: []

-----------
QUERY:
INSERT INTO savepoints VALUES (3)
RESULT: []

-----------
QUERY:
ROLLBACK TO SAVEPOINT five
RESULT: []

-----------
QUERY:
COMMIT
RESULT: []

-----------
QUERY:
COMMIT
RESULT: []

-----------
QUERY:
-- should not be in a transaction block
SELECT * FROM savepoints
RESULT: []

-----------
QUERY:
-- test whole-tree rollback
BEGIN
RESULT: []

-----------
QUERY:
SAVEPOINT one
RESULT: []

-----------
QUERY:
DELETE FROM savepoints WHERE a=1
RESULT: []

-----------
QUERY:
RELEASE SAVEPOINT one
RESULT: []

-----------
QUERY:
SAVEPOINT two
RESULT: []

-----------
QUERY:
DELETE FROM savepoints WHERE a=1
RESULT: []

-----------
QUERY:
SAVEPOINT three
RESULT: []

-----------
QUERY:
DELETE FROM savepoints WHERE a=2
RESULT: []

-----------
QUERY:
ROLLBACK
RESULT: []

-----------
QUERY:
COMMIT
RESULT: []

-----------
QUERY:
-- should not be in a transaction block

SELECT * FROM savepoints
RESULT: []

-----------
QUERY:
-- test whole-tree commit on an aborted subtransaction
BEGIN
RESULT: []

-----------
QUERY:
INSERT INTO savepoints VALUES (4)
RESULT: []

-----------
QUERY:
SAVEPOINT one
RESULT: []

-----------
QUERY:
INSERT INTO savepoints VALUES (5)
RESULT: []

-----------
QUERY:
SELECT trans_foo
RESULT: []

-----------
QUERY:
COMMIT
RESULT: []

-----------
QUERY:
SELECT * FROM savepoints
RESULT: []

-----------
QUERY:
BEGIN
RESULT: []

-----------
QUERY:
INSERT INTO savepoints VALUES (6)
RESULT: []

-----------
QUERY:
SAVEPOINT one
RESULT: []

-----------
QUERY:
INSERT INTO savepoints VALUES (7)
RESULT: []

-----------
QUERY:
RELEASE SAVEPOINT one
RESULT: []

-----------
QUERY:
INSERT INTO savepoints VALUES (8)
RESULT: []

-----------
QUERY:
COMMIT
RESULT: []

-----------
QUERY:
-- rows 6 and 8 should have been created by the same xact
SELECT a.xmin = b.xmin FROM savepoints a, savepoints b WHERE a.a=6 AND b.a=8
RESULT: []

-----------
QUERY:
-- rows 6 and 7 should have been created by different xacts
SELECT a.xmin = b.xmin FROM savepoints a, savepoints b WHERE a.a=6 AND b.a=7
RESULT: []

-----------
QUERY:
BEGIN
RESULT: []

-----------
QUERY:
INSERT INTO savepoints VALUES (9)
RESULT: []

-----------
QUERY:
SAVEPOINT one
RESULT: []

-----------
QUERY:
INSERT INTO savepoints VALUES (10)
RESULT: []

-----------
QUERY:
ROLLBACK TO SAVEPOINT one
RESULT: []

-----------
QUERY:
INSERT INTO savepoints VALUES (11)
RESULT: []

-----------
QUERY:
COMMIT
RESULT: []

-----------
QUERY:
SELECT a FROM savepoints WHERE a in (9, 10, 11)
RESULT: []

-----------
QUERY:
-- rows 9 and 11 should have been created by different xacts
SELECT a.xmin = b.xmin FROM savepoints a, savepoints b WHERE a.a=9 AND b.a=11
RESULT: []

-----------
QUERY:
BEGIN
RESULT: []

-----------
QUERY:
INSERT INTO savepoints VALUES (12)
RESULT: []

-----------
QUERY:
SAVEPOINT one
RESULT: []

-----------
QUERY:
INSERT INTO savepoints VALUES (13)
RESULT: []

-----------
QUERY:
SAVEPOINT two
RESULT: []

-----------
QUERY:
INSERT INTO savepoints VALUES (14)
RESULT: []

-----------
QUERY:
ROLLBACK TO SAVEPOINT one
RESULT: []

-----------
QUERY:
INSERT INTO savepoints VALUES (15)
RESULT: []

-----------
QUERY:
SAVEPOINT two
RESULT: []

-----------
QUERY:
INSERT INTO savepoints VALUES (16)
RESULT: []

-----------
QUERY:
SAVEPOINT three
RESULT: []

-----------
QUERY:
INSERT INTO savepoints VALUES (17)
RESULT: []

-----------
QUERY:
COMMIT
RESULT: []

-----------
QUERY:
SELECT a FROM savepoints WHERE a BETWEEN 12 AND 17
RESULT: []

-----------
QUERY:
BEGIN
RESULT: []

-----------
QUERY:
INSERT INTO savepoints VALUES (18)
RESULT: []

-----------
QUERY:
SAVEPOINT one
RESULT: []

-----------
QUERY:
INSERT INTO savepoints VALUES (19)
RESULT: []

-----------
QUERY:
SAVEPOINT two
RESULT: []

-----------
QUERY:
INSERT INTO savepoints VALUES (20)
RESULT: []

-----------
QUERY:
ROLLBACK TO SAVEPOINT one
RESULT: []

-----------
QUERY:
INSERT INTO savepoints VALUES (21)
RESULT: []

-----------
QUERY:
ROLLBACK TO SAVEPOINT one
RESULT: []

-----------
QUERY:
INSERT INTO savepoints VALUES (22)
RESULT: []

-----------
QUERY:
COMMIT
RESULT: []

-----------
QUERY:
SELECT a FROM savepoints WHERE a BETWEEN 18 AND 22
RESULT: []

-----------
QUERY:
DROP TABLE savepoints
RESULT: []

-----------
QUERY:
-- only in a transaction block:
SAVEPOINT one
RESULT: []

-----------
QUERY:
ROLLBACK TO SAVEPOINT one
RESULT: []

-----------
QUERY:
RELEASE SAVEPOINT one
RESULT: []

-----------
QUERY:
-- Only /* REPLACED */''rollback to/* REPLACED */'' allowed in aborted state
BEGIN
RESULT: []

-----------
QUERY:
SAVEPOINT one
RESULT: []

-----------
QUERY:
SELECT 0/0
RESULT: []

-----------
QUERY:
SAVEPOINT two
RESULT: []

-----------
QUERY:
-- ignored till the end of ...
  RELEASE SAVEPOINT one
RESULT: []

-----------
QUERY:
-- ignored till the end of ...
  ROLLBACK TO SAVEPOINT one
RESULT: []

-----------
QUERY:
SELECT 1
RESULT: []

-----------
QUERY:
COMMIT
RESULT: []

-----------
QUERY:
SELECT 1
RESULT: []

-----------
QUERY:
-- this should work

-- check non-transactional behavior of cursors
BEGIN
RESULT: []

-----------
QUERY:
DECLARE c CURSOR FOR SELECT unique2 FROM tenk1 ORDER BY unique2
RESULT: []

-----------
QUERY:
SAVEPOINT one
RESULT: []

-----------
QUERY:
FETCH 10 FROM c
RESULT: []

-----------
QUERY:
ROLLBACK TO SAVEPOINT one
RESULT: []

-----------
QUERY:
FETCH 10 FROM c
RESULT: []

-----------
QUERY:
RELEASE SAVEPOINT one
RESULT: []

-----------
QUERY:
FETCH 10 FROM c
RESULT: []

-----------
QUERY:
CLOSE c
RESULT: []

-----------
QUERY:
DECLARE c CURSOR FOR SELECT unique2/0 FROM tenk1 ORDER BY unique2
RESULT: []

-----------
QUERY:
SAVEPOINT two
RESULT: []

-----------
QUERY:
FETCH 10 FROM c
RESULT: []

-----------
QUERY:
ROLLBACK TO SAVEPOINT two
RESULT: []

-----------
QUERY:
-- c is now dead to the world ...
		FETCH 10 FROM c
RESULT: []

-----------
QUERY:
ROLLBACK TO SAVEPOINT two
RESULT: []

-----------
QUERY:
RELEASE SAVEPOINT two
RESULT: []

-----------
QUERY:
FETCH 10 FROM c
RESULT: []

-----------
QUERY:
COMMIT
RESULT: []

-----------
QUERY:
--
-- Check that /* REPLACED */''stable/* REPLACED */'' functions are really stable.  They should not be
-- able to see the partial results of the calling query.  (Ideally we would
-- also check that they don/* REPLACED */''t see commits of concurrent transactions, but
-- that/* REPLACED */''s a mite hard to do within the limitations of pg_regress.)
--
select * from xacttest
RESULT: []

-----------
QUERY:
create or replace function max_xacttest() returns smallint language sql as
'select max(a) from xacttest' stable
RESULT: []

-----------
QUERY:
begin
RESULT: []

-----------
QUERY:
update xacttest set a = max_xacttest() + 10 where a > 0
RESULT: []

-----------
QUERY:
select * from xacttest
RESULT: []

-----------
QUERY:
rollback
RESULT: []

-----------
QUERY:
-- But a volatile function can see the partial results of the calling query
create or replace function max_xacttest() returns smallint language sql as
'select max(a) from xacttest' volatile
RESULT: []

-----------
QUERY:
begin
RESULT: []

-----------
QUERY:
update xacttest set a = max_xacttest() + 10 where a > 0
RESULT: []

-----------
QUERY:
select * from xacttest
RESULT: []

-----------
QUERY:
rollback
RESULT: []

-----------
QUERY:
-- Now the same test with plpgsql (since it depends on SPI which is different)
create or replace function max_xacttest() returns smallint language plpgsql as
'begin return max(a) from xacttest
RESULT: []

-----------
QUERY:
end' stable
RESULT: []

-----------
QUERY:
begin
RESULT: []

-----------
QUERY:
update xacttest set a = max_xacttest() + 10 where a > 0
RESULT: []

-----------
QUERY:
select * from xacttest
RESULT: []

-----------
QUERY:
rollback
RESULT: []

-----------
QUERY:
create or replace function max_xacttest() returns smallint language plpgsql as
'begin return max(a) from xacttest
RESULT: []

-----------
QUERY:
end' volatile
RESULT: []

-----------
QUERY:
begin
RESULT: []

-----------
QUERY:
update xacttest set a = max_xacttest() + 10 where a > 0
RESULT: []

-----------
QUERY:
select * from xacttest
RESULT: []

-----------
QUERY:
rollback
RESULT: []

-----------
QUERY:
-- test case for problems with dropping an open relation during abort
BEGIN
RESULT: []

-----------
QUERY:
savepoint x
RESULT: []

-----------
QUERY:
CREATE TABLE koju (a INT UNIQUE)
RESULT: []

-----------
QUERY:
INSERT INTO koju VALUES (1)
RESULT: []

-----------
QUERY:
INSERT INTO koju VALUES (1)
RESULT: []

-----------
QUERY:
rollback to x
RESULT: []

-----------
QUERY:
CREATE TABLE koju (a INT UNIQUE)
RESULT: []

-----------
QUERY:
INSERT INTO koju VALUES (1)
RESULT: []

-----------
QUERY:
INSERT INTO koju VALUES (1)
RESULT: []

-----------
QUERY:
ROLLBACK
RESULT: []

-----------
QUERY:
DROP TABLE trans_foo
RESULT: []

-----------
QUERY:
DROP TABLE trans_baz
RESULT: []

-----------
QUERY:
DROP TABLE trans_barbaz
RESULT: []

-----------
QUERY:
-- test case for problems with revalidating an open relation during abort
create function inverse(int) returns float8 as
$$
begin
  analyze revalidate_bug;
  return 1::float8/$1;
exception
  when division_by_zero then return 0;
end$$ language plpgsql volatile
RESULT: []

-----------
QUERY:
create table revalidate_bug (c float8 unique)
RESULT: []

-----------
QUERY:
insert into revalidate_bug values (1)
RESULT: []

-----------
QUERY:
insert into revalidate_bug values (inverse(0))
RESULT: []

-----------
QUERY:
drop table revalidate_bug
RESULT: []

-----------
QUERY:
drop function inverse(int)
RESULT: []

-----------
QUERY:
-- verify that cursors created during an aborted subtransaction are
-- closed, but that we do not rollback the effect of any FETCHs
-- performed in the aborted subtransaction
begin
RESULT: []

-----------
QUERY:
savepoint x
RESULT: []

-----------
QUERY:
create table trans_abc (a int)
RESULT: []

-----------
QUERY:
insert into trans_abc values (5)
RESULT: []

-----------
QUERY:
insert into trans_abc values (10)
RESULT: []

-----------
QUERY:
declare foo cursor for select * from trans_abc
RESULT: []

-----------
QUERY:
fetch from foo
RESULT: []

-----------
QUERY:
rollback to x
RESULT: []

-----------
QUERY:
-- should fail
fetch from foo
RESULT: []

-----------
QUERY:
commit
RESULT: []

-----------
QUERY:
begin
RESULT: []

-----------
QUERY:
create table trans_abc (a int)
RESULT: []

-----------
QUERY:
insert into trans_abc values (5)
RESULT: []

-----------
QUERY:
insert into trans_abc values (10)
RESULT: []

-----------
QUERY:
insert into trans_abc values (15)
RESULT: []

-----------
QUERY:
declare foo cursor for select * from trans_abc
RESULT: []

-----------
QUERY:
fetch from foo
RESULT: []

-----------
QUERY:
savepoint x
RESULT: []

-----------
QUERY:
fetch from foo
RESULT: []

-----------
QUERY:
rollback to x
RESULT: []

-----------
QUERY:
fetch from foo
RESULT: []

-----------
QUERY:
abort
RESULT: []

-----------
QUERY:
-- Test for proper cleanup after a failure in a cursor portal
-- that was created in an outer subtransaction
CREATE FUNCTION invert(x float8) RETURNS float8 LANGUAGE plpgsql AS
$$ begin return 1/x; end $$
RESULT: []

-----------
QUERY:
CREATE FUNCTION create_temp_tab() RETURNS text
LANGUAGE plpgsql AS $$
BEGIN
  CREATE TEMP TABLE new_table (f1 float8);
  -- case of interest is that we fail while holding an open
  -- relcache reference to new_table
  INSERT INTO new_table SELECT invert(0.0);
  RETURN 'foo';
END $$
RESULT: []

-----------
QUERY:
BEGIN
RESULT: []

-----------
QUERY:
DECLARE ok CURSOR FOR SELECT * FROM int8_tbl
RESULT: []

-----------
QUERY:
DECLARE ctt CURSOR FOR SELECT create_temp_tab()
RESULT: []

-----------
QUERY:
FETCH ok
RESULT: []

-----------
QUERY:
SAVEPOINT s1
RESULT: []

-----------
QUERY:
FETCH ok
RESULT: []

-----------
QUERY:
-- should work
FETCH ctt
RESULT: []

-----------
QUERY:
-- error occurs here
ROLLBACK TO s1
RESULT: []

-----------
QUERY:
FETCH ok
RESULT: []

-----------
QUERY:
-- should work
FETCH ctt
RESULT: []

-----------
QUERY:
-- must be rejected
COMMIT
RESULT: []

-----------
QUERY:
DROP FUNCTION create_temp_tab()
RESULT: []

-----------
QUERY:
DROP FUNCTION invert(x float8)
RESULT: []

-----------
QUERY:
-- Tests for AND CHAIN

CREATE TABLE trans_abc (a int)
RESULT: []

-----------
QUERY:
-- set nondefault value so we have something to override below
SET default_transaction_read_only = on
RESULT: []

-----------
QUERY:
START TRANSACTION ISOLATION LEVEL REPEATABLE READ, READ WRITE, DEFERRABLE
RESULT: []

-----------
QUERY:
SHOW transaction_isolation
RESULT: []

-----------
QUERY:
SHOW transaction_read_only
RESULT: []

-----------
QUERY:
SHOW transaction_deferrable
RESULT: []

-----------
QUERY:
INSERT INTO trans_abc VALUES (1)
RESULT: []

-----------
QUERY:
INSERT INTO trans_abc VALUES (2)
RESULT: []

-----------
QUERY:
COMMIT AND CHAIN
RESULT: []

-----------
QUERY:
-- TBLOCK_END
SHOW transaction_isolation
RESULT: []

-----------
QUERY:
SHOW transaction_read_only
RESULT: []

-----------
QUERY:
SHOW transaction_deferrable
RESULT: []

-----------
QUERY:
INSERT INTO trans_abc VALUES ('error')
RESULT: []

-----------
QUERY:
INSERT INTO trans_abc VALUES (3)
RESULT: []

-----------
QUERY:
-- check it/* REPLACED */''s really aborted
COMMIT AND CHAIN
RESULT: []

-----------
QUERY:
-- TBLOCK_ABORT_END
SHOW transaction_isolation
RESULT: []

-----------
QUERY:
SHOW transaction_read_only
RESULT: []

-----------
QUERY:
SHOW transaction_deferrable
RESULT: []

-----------
QUERY:
INSERT INTO trans_abc VALUES (4)
RESULT: []

-----------
QUERY:
COMMIT
RESULT: []

-----------
QUERY:
START TRANSACTION ISOLATION LEVEL REPEATABLE READ, READ WRITE, DEFERRABLE
RESULT: []

-----------
QUERY:
SHOW transaction_isolation
RESULT: []

-----------
QUERY:
SHOW transaction_read_only
RESULT: []

-----------
QUERY:
SHOW transaction_deferrable
RESULT: []

-----------
QUERY:
SAVEPOINT x
RESULT: []

-----------
QUERY:
INSERT INTO trans_abc VALUES ('error')
RESULT: []

-----------
QUERY:
COMMIT AND CHAIN
RESULT: []

-----------
QUERY:
-- TBLOCK_ABORT_PENDING
SHOW transaction_isolation
RESULT: []

-----------
QUERY:
SHOW transaction_read_only
RESULT: []

-----------
QUERY:
SHOW transaction_deferrable
RESULT: []

-----------
QUERY:
INSERT INTO trans_abc VALUES (5)
RESULT: []

-----------
QUERY:
COMMIT
RESULT: []

-----------
QUERY:
START TRANSACTION ISOLATION LEVEL REPEATABLE READ, READ WRITE, DEFERRABLE
RESULT: []

-----------
QUERY:
SHOW transaction_isolation
RESULT: []

-----------
QUERY:
SHOW transaction_read_only
RESULT: []

-----------
QUERY:
SHOW transaction_deferrable
RESULT: []

-----------
QUERY:
SAVEPOINT x
RESULT: []

-----------
QUERY:
COMMIT AND CHAIN
RESULT: []

-----------
QUERY:
-- TBLOCK_SUBCOMMIT
SHOW transaction_isolation
RESULT: []

-----------
QUERY:
SHOW transaction_read_only
RESULT: []

-----------
QUERY:
SHOW transaction_deferrable
RESULT: []

-----------
QUERY:
COMMIT
RESULT: []

-----------
QUERY:
START TRANSACTION ISOLATION LEVEL READ COMMITTED, READ WRITE, DEFERRABLE
RESULT: []

-----------
QUERY:
SHOW transaction_isolation
RESULT: []

-----------
QUERY:
SHOW transaction_read_only
RESULT: []

-----------
QUERY:
SHOW transaction_deferrable
RESULT: []

-----------
QUERY:
SAVEPOINT x
RESULT: []

-----------
QUERY:
COMMIT AND CHAIN
RESULT: []

-----------
QUERY:
-- TBLOCK_SUBCOMMIT
SHOW transaction_isolation
RESULT: []

-----------
QUERY:
SHOW transaction_read_only
RESULT: []

-----------
QUERY:
SHOW transaction_deferrable
RESULT: []

-----------
QUERY:
COMMIT
RESULT: []

-----------
QUERY:
-- different mix of options just for fun
START TRANSACTION ISOLATION LEVEL SERIALIZABLE, READ WRITE, NOT DEFERRABLE
RESULT: []

-----------
QUERY:
SHOW transaction_isolation
RESULT: []

-----------
QUERY:
SHOW transaction_read_only
RESULT: []

-----------
QUERY:
SHOW transaction_deferrable
RESULT: []

-----------
QUERY:
INSERT INTO trans_abc VALUES (6)
RESULT: []

-----------
QUERY:
ROLLBACK AND CHAIN
RESULT: []

-----------
QUERY:
-- TBLOCK_ABORT_PENDING
SHOW transaction_isolation
RESULT: []

-----------
QUERY:
SHOW transaction_read_only
RESULT: []

-----------
QUERY:
SHOW transaction_deferrable
RESULT: []

-----------
QUERY:
INSERT INTO trans_abc VALUES ('error')
RESULT: []

-----------
QUERY:
ROLLBACK AND CHAIN
RESULT: []

-----------
QUERY:
-- TBLOCK_ABORT_END
SHOW transaction_isolation
RESULT: []

-----------
QUERY:
SHOW transaction_read_only
RESULT: []

-----------
QUERY:
SHOW transaction_deferrable
RESULT: []

-----------
QUERY:
ROLLBACK
RESULT: []

-----------
QUERY:
-- not allowed outside a transaction block
COMMIT AND CHAIN
RESULT: []

-----------
QUERY:
-- error
ROLLBACK AND CHAIN
RESULT: []

-----------
QUERY:
-- error

SELECT * FROM trans_abc ORDER BY 1
RESULT: []

-----------
QUERY:
RESET default_transaction_read_only
RESULT: []

-----------
QUERY:
DROP TABLE trans_abc
RESULT: []

-----------
QUERY:
-- Test assorted behaviors around the implicit transaction block created
-- when multiple SQL commands are sent in a single Query message.  These
-- tests rely on the fact that psql will not break SQL commands apart at a
-- backslash-quoted semicolon, but will send them as one Query.

create temp table i_table (f1 int)
RESULT: []

-----------
QUERY:
-- psql will show all results of a multi-statement Query
SELECT 1\
RESULT: []

-----------
QUERY:
SELECT 2\
RESULT: []

-----------
QUERY:
SELECT 3
RESULT: []

-----------
QUERY:
-- this implicitly commits:
insert into i_table values(1)\
RESULT: []

-----------
QUERY:
select * from i_table
RESULT: []

-----------
QUERY:
-- 1/0 error will cause rolling back the whole implicit transaction
insert into i_table values(2)\
RESULT: []

-----------
QUERY:
select * from i_table\
RESULT: []

-----------
QUERY:
select 1/0
RESULT: []

-----------
QUERY:
select * from i_table
RESULT: []

-----------
QUERY:
rollback
RESULT: []

-----------
QUERY:
-- we are not in a transaction at this point

-- can use regular begin/commit/rollback within a single Query
begin\
RESULT: []

-----------
QUERY:
insert into i_table values(3)\
RESULT: []

-----------
QUERY:
commit
RESULT: []

-----------
QUERY:
rollback
RESULT: []

-----------
QUERY:
-- we are not in a transaction at this point
begin\
RESULT: []

-----------
QUERY:
insert into i_table values(4)\
RESULT: []

-----------
QUERY:
rollback
RESULT: []

-----------
QUERY:
rollback
RESULT: []

-----------
QUERY:
-- we are not in a transaction at this point

-- begin converts implicit transaction into a regular one that
-- can extend past the end of the Query
select 1\
RESULT: []

-----------
QUERY:
begin\
RESULT: []

-----------
QUERY:
insert into i_table values(5)
RESULT: []

-----------
QUERY:
commit
RESULT: []

-----------
QUERY:
select 1\
RESULT: []

-----------
QUERY:
begin\
RESULT: []

-----------
QUERY:
insert into i_table values(6)
RESULT: []

-----------
QUERY:
rollback
RESULT: []

-----------
QUERY:
-- commit in implicit-transaction state commits but issues a warning.
insert into i_table values(7)\
RESULT: []

-----------
QUERY:
commit\
RESULT: []

-----------
QUERY:
insert into i_table values(8)\
RESULT: []

-----------
QUERY:
select 1/0
RESULT: []

-----------
QUERY:
-- similarly, rollback aborts but issues a warning.
insert into i_table values(9)\
RESULT: []

-----------
QUERY:
rollback\
RESULT: []

-----------
QUERY:
select 2
RESULT: []

-----------
QUERY:
select * from i_table
RESULT: []

-----------
QUERY:
rollback
RESULT: []

-----------
QUERY:
-- we are not in a transaction at this point

-- implicit transaction block is still a transaction block, for e.g. VACUUM
SELECT 1\
RESULT: []

-----------
QUERY:
VACUUM
RESULT: []

-----------
QUERY:
SELECT 1\
RESULT: []

-----------
QUERY:
COMMIT\
RESULT: []

-----------
QUERY:
VACUUM
RESULT: []

-----------
QUERY:
-- we disallow savepoint-related commands in implicit-transaction state
SELECT 1\
RESULT: []

-----------
QUERY:
SAVEPOINT sp
RESULT: []

-----------
QUERY:
SELECT 1\
RESULT: []

-----------
QUERY:
COMMIT\
RESULT: []

-----------
QUERY:
SAVEPOINT sp
RESULT: []

-----------
QUERY:
ROLLBACK TO SAVEPOINT sp\
RESULT: []

-----------
QUERY:
SELECT 2
RESULT: []

-----------
QUERY:
SELECT 2\
RESULT: []

-----------
QUERY:
RELEASE SAVEPOINT sp\
RESULT: []

-----------
QUERY:
SELECT 3
RESULT: []

-----------
QUERY:
-- but this is OK, because the BEGIN converts it to a regular xact
SELECT 1\
RESULT: []

-----------
QUERY:
BEGIN\
RESULT: []

-----------
QUERY:
SAVEPOINT sp\
RESULT: []

-----------
QUERY:
ROLLBACK TO SAVEPOINT sp\
RESULT: []

-----------
QUERY:
COMMIT
RESULT: []

-----------
QUERY:
-- Tests for AND CHAIN in implicit transaction blocks

SET TRANSACTION READ ONLY\
RESULT: []

-----------
QUERY:
COMMIT AND CHAIN
RESULT: []

-----------
QUERY:
-- error
SHOW transaction_read_only
RESULT: []

-----------
QUERY:
SET TRANSACTION READ ONLY\
RESULT: []

-----------
QUERY:
ROLLBACK AND CHAIN
RESULT: []

-----------
QUERY:
-- error
SHOW transaction_read_only
RESULT: []

-----------
QUERY:
CREATE TABLE trans_abc (a int)
RESULT: []

-----------
QUERY:
-- COMMIT/ROLLBACK + COMMIT/ROLLBACK AND CHAIN
INSERT INTO trans_abc VALUES (7)\
RESULT: []

-----------
QUERY:
COMMIT\
RESULT: []

-----------
QUERY:
INSERT INTO trans_abc VALUES (8)\
RESULT: []

-----------
QUERY:
COMMIT AND CHAIN
RESULT: []

-----------
QUERY:
-- 7 commit, 8 error
INSERT INTO trans_abc VALUES (9)\
RESULT: []

-----------
QUERY:
ROLLBACK\
RESULT: []

-----------
QUERY:
INSERT INTO trans_abc VALUES (10)\
RESULT: []

-----------
QUERY:
ROLLBACK AND CHAIN
RESULT: []

-----------
QUERY:
-- 9 rollback, 10 error

-- COMMIT/ROLLBACK AND CHAIN + COMMIT/ROLLBACK
INSERT INTO trans_abc VALUES (11)\
RESULT: []

-----------
QUERY:
COMMIT AND CHAIN\
RESULT: []

-----------
QUERY:
INSERT INTO trans_abc VALUES (12)\
RESULT: []

-----------
QUERY:
COMMIT
RESULT: []

-----------
QUERY:
-- 11 error, 12 not reached
INSERT INTO trans_abc VALUES (13)\
RESULT: []

-----------
QUERY:
ROLLBACK AND CHAIN\
RESULT: []

-----------
QUERY:
INSERT INTO trans_abc VALUES (14)\
RESULT: []

-----------
QUERY:
ROLLBACK
RESULT: []

-----------
QUERY:
-- 13 error, 14 not reached

-- START TRANSACTION + COMMIT/ROLLBACK AND CHAIN
START TRANSACTION ISOLATION LEVEL REPEATABLE READ\
RESULT: []

-----------
QUERY:
INSERT INTO trans_abc VALUES (15)\
RESULT: []

-----------
QUERY:
COMMIT AND CHAIN
RESULT: []

-----------
QUERY:
-- 15 ok
SHOW transaction_isolation
RESULT: []

-----------
QUERY:
-- transaction is active at this point
COMMIT
RESULT: []

-----------
QUERY:
START TRANSACTION ISOLATION LEVEL REPEATABLE READ\
RESULT: []

-----------
QUERY:
INSERT INTO trans_abc VALUES (16)\
RESULT: []

-----------
QUERY:
ROLLBACK AND CHAIN
RESULT: []

-----------
QUERY:
-- 16 ok
SHOW transaction_isolation
RESULT: []

-----------
QUERY:
-- transaction is active at this point
ROLLBACK
RESULT: []

-----------
QUERY:
SET default_transaction_isolation = 'read committed'
RESULT: []

-----------
QUERY:
-- START TRANSACTION + COMMIT/ROLLBACK + COMMIT/ROLLBACK AND CHAIN
START TRANSACTION ISOLATION LEVEL REPEATABLE READ\
RESULT: []

-----------
QUERY:
INSERT INTO trans_abc VALUES (17)\
RESULT: []

-----------
QUERY:
COMMIT\
RESULT: []

-----------
QUERY:
INSERT INTO trans_abc VALUES (18)\
RESULT: []

-----------
QUERY:
COMMIT AND CHAIN
RESULT: []

-----------
QUERY:
-- 17 commit, 18 error
SHOW transaction_isolation
RESULT: []

-----------
QUERY:
-- out of transaction block

START TRANSACTION ISOLATION LEVEL REPEATABLE READ\
RESULT: []

-----------
QUERY:
INSERT INTO trans_abc VALUES (19)\
RESULT: []

-----------
QUERY:
ROLLBACK\
RESULT: []

-----------
QUERY:
INSERT INTO trans_abc VALUES (20)\
RESULT: []

-----------
QUERY:
ROLLBACK AND CHAIN
RESULT: []

-----------
QUERY:
-- 19 rollback, 20 error
SHOW transaction_isolation
RESULT: []

-----------
QUERY:
-- out of transaction block

RESET default_transaction_isolation
RESULT: []

-----------
QUERY:
SELECT * FROM trans_abc ORDER BY 1
RESULT: []

-----------
QUERY:
DROP TABLE trans_abc
RESULT: []

-----------
QUERY:
-- TRANSACTION SNAPSHOT
-- Incorrect identifier.
BEGIN TRANSACTION ISOLATION LEVEL REPEATABLE READ
RESULT: []

-----------
QUERY:
SET TRANSACTION SNAPSHOT 'Incorrect Identifier'
RESULT: []

-----------
QUERY:
ROLLBACK
RESULT: []

-----------
QUERY:
-- Correct identifier, missing file.
BEGIN TRANSACTION ISOLATION LEVEL REPEATABLE READ
RESULT: []

-----------
QUERY:
SET TRANSACTION SNAPSHOT 'FFF-FFF-F'
RESULT: []

-----------
QUERY:
ROLLBACK
RESULT: []

-----------
QUERY:
-- Test for successful cleanup of an aborted transaction at session exit.
-- THIS MUST BE THE LAST TEST IN THIS FILE.

begin
RESULT: []

-----------
QUERY:
select 1/0
RESULT: []

-----------
QUERY:
rollback to X
RESULT: []

-----------
QUERY:
-- DO NOT ADD ANYTHING HERE.
RESULT: []
=========================================
Summary for test case transactions/test.sql of postgres
=========================================
